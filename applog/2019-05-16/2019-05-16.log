2019-05-16 09:08:02 -Starting BootdoApplication on PC-201905091110 with PID 26868 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 09:08:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 09:08:02 -The following profiles are active: dev
2019-05-16 09:08:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 09:08:03 CST 2019]; root of context hierarchy
2019-05-16 09:08:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 09:08:09 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$29ba5b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:08:09 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f4f4d460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:08:11 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:08:11 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:08:11 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:08:11 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 09:08:11 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 09:08:11 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:08:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:08:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:08:12 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:08:13 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 09:08:13 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 09:08:13 -Starting service [Tomcat]
2019-05-16 09:08:13 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 09:08:13 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 09:08:14 -Initializing Spring embedded WebApplicationContext
2019-05-16 09:08:14 -Root WebApplicationContext: initialization completed in 10780 ms
2019-05-16 09:08:14 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 09:08:14 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 09:08:14 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 09:08:14 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 09:08:14 -Filter xssFilter was not registered (disabled)
2019-05-16 09:08:14 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 09:08:14 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 09:08:14 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 09:08:14 -Servlet dispatcherServlet mapped to [/]
2019-05-16 09:08:23 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 09:08:03 CST 2019]; root of context hierarchy
2019-05-16 09:08:24 -Using default implementation for ThreadExecutor
2019-05-16 09:08:24 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 09:08:24 -Quartz Scheduler v.2.2.1 created.
2019-05-16 09:08:24 -RAMJobStore initialized.
2019-05-16 09:08:24 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 09:08:24 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 09:08:24 -Quartz scheduler version: 2.2.1
2019-05-16 09:08:24 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25214797
2019-05-16 09:08:25 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 09:08:25 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 09:08:28 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 09:08:28 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:08:28 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:08:28 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 09:08:28 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 09:08:28 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 09:08:28 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:08:28 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 09:08:28 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:08:28 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 09:08:28 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 09:08:28 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:08:28 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 09:08:28 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 09:08:28 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 09:08:28 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 09:08:28 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:08:28 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 09:08:28 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:08:28 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 09:08:28 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-16 09:08:28 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 09:08:28 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 09:08:28 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 09:08:28 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 09:08:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 09:08:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 09:08:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 09:08:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 09:08:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 09:08:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 09:08:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 09:08:28 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 09:08:28 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 09:08:28 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 09:08:28 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 09:08:28 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 09:08:28 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 09:08:28 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 09:08:28 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 09:08:28 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 09:08:28 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 09:08:28 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 09:08:28 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 09:08:28 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 09:08:28 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 09:08:28 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 09:08:28 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 09:08:28 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 09:08:28 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 09:08:28 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 09:08:28 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 09:08:28 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 09:08:28 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 09:08:28 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 09:08:28 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 09:08:28 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 09:08:28 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 09:08:28 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 09:08:28 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 09:08:28 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 09:08:28 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 09:08:28 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 09:08:28 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 09:08:28 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 09:08:28 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 09:08:28 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 09:08:28 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 09:08:28 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 09:08:28 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 09:08:28 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 09:08:28 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 09:08:28 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 09:08:28 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 09:08:28 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 09:08:28 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 09:08:28 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 09:08:28 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 09:08:28 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 09:08:28 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 09:08:28 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 09:08:28 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 09:08:28 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 09:08:28 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 09:08:28 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 09:08:28 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 09:08:28 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 09:08:28 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 09:08:28 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 09:08:28 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 09:08:28 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 09:08:28 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 09:08:28 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 09:08:28 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 09:08:28 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 09:08:28 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 09:08:28 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 09:08:28 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 09:08:28 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 09:08:28 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 09:08:28 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 09:08:28 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 09:08:28 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 09:08:28 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 09:08:28 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 09:08:28 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 09:08:28 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 09:08:28 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 09:08:28 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 09:08:28 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 09:08:28 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 09:08:28 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 09:08:28 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 09:08:28 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 09:08:28 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 09:08:28 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 09:08:28 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 09:08:28 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 09:08:28 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 09:08:28 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 09:08:28 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 09:08:28 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 09:08:28 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 09:08:28 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 09:08:28 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 09:08:28 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 09:08:28 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 09:08:28 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 09:08:28 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 09:08:28 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 09:08:28 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 09:08:28 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 09:08:28 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 09:08:28 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 09:08:28 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 09:08:28 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 09:08:28 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 09:08:28 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 09:08:28 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 09:08:28 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 09:08:28 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:08:28 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 09:08:28 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 09:08:28 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:08:28 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 09:08:28 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:08:28 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 09:08:28 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 09:08:28 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 09:08:28 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 09:08:28 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 09:08:28 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 09:08:29 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 09:08:29 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 09:08:29 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 09:08:30 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 09:08:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 09:08:03 CST 2019]; root of context hierarchy
2019-05-16 09:08:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 09:08:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 09:08:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 09:08:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 09:08:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 09:08:33 -Registering beans for JMX exposure on startup
2019-05-16 09:08:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 09:08:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 09:08:33 -Starting beans in phase 2147483647
2019-05-16 09:08:33 -Context refreshed
2019-05-16 09:08:33 -Found 1 custom documentation plugin(s)
2019-05-16 09:08:33 -Scanning for api listing references
2019-05-16 09:08:34 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 09:08:34 -Generating unique operation named: removeUsingPOST_1
2019-05-16 09:08:34 -Generating unique operation named: addUsingGET_1
2019-05-16 09:08:34 -Generating unique operation named: editUsingGET_1
2019-05-16 09:08:34 -Generating unique operation named: listUsingGET_1
2019-05-16 09:08:34 -Generating unique operation named: removeUsingPOST_2
2019-05-16 09:08:34 -Generating unique operation named: removeUsingPOST_3
2019-05-16 09:08:34 -Generating unique operation named: saveUsingPOST_1
2019-05-16 09:08:34 -Generating unique operation named: updateUsingGET_1
2019-05-16 09:08:34 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 09:08:34 -Generating unique operation named: updateUsingPOST_1
2019-05-16 09:08:34 -Generating unique operation named: updateUsingPUT_1
2019-05-16 09:08:34 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 09:08:34 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 09:08:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 09:08:34 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 09:08:34 -Generating unique operation named: addUsingGET_2
2019-05-16 09:08:34 -Generating unique operation named: editUsingGET_2
2019-05-16 09:08:34 -Generating unique operation named: listUsingGET_2
2019-05-16 09:08:34 -Generating unique operation named: removeUsingPOST_4
2019-05-16 09:08:34 -Generating unique operation named: removeUsingPOST_5
2019-05-16 09:08:34 -Generating unique operation named: saveUsingPOST_2
2019-05-16 09:08:34 -Generating unique operation named: updateUsingPOST_2
2019-05-16 09:08:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 09:08:34 -Generating unique operation named: addUsingGET_3
2019-05-16 09:08:34 -Generating unique operation named: editUsingGET_3
2019-05-16 09:08:34 -Generating unique operation named: listUsingGET_3
2019-05-16 09:08:34 -Generating unique operation named: removeUsingPOST_6
2019-05-16 09:08:34 -Generating unique operation named: removeUsingPOST_7
2019-05-16 09:08:34 -Generating unique operation named: saveUsingPOST_3
2019-05-16 09:08:34 -Generating unique operation named: updateUsingGET_2
2019-05-16 09:08:34 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 09:08:34 -Generating unique operation named: updateUsingPOST_3
2019-05-16 09:08:34 -Generating unique operation named: updateUsingPUT_2
2019-05-16 09:08:34 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 09:08:34 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 09:08:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 09:08:34 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 09:08:34 -Generating unique operation named: addUsingGET_4
2019-05-16 09:08:34 -Generating unique operation named: editUsingGET_4
2019-05-16 09:08:34 -Generating unique operation named: listUsingGET_4
2019-05-16 09:08:34 -Generating unique operation named: removeUsingPOST_8
2019-05-16 09:08:34 -Generating unique operation named: removeUsingPOST_9
2019-05-16 09:08:34 -Generating unique operation named: saveUsingPOST_4
2019-05-16 09:08:34 -Generating unique operation named: updateUsingGET_3
2019-05-16 09:08:34 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 09:08:34 -Generating unique operation named: updateUsingPOST_4
2019-05-16 09:08:34 -Generating unique operation named: updateUsingPUT_3
2019-05-16 09:08:34 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 09:08:34 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 09:08:34 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 09:08:34 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 09:08:34 -Generating unique operation named: ElecUsingGET_1
2019-05-16 09:08:35 -Generating unique operation named: addUsingGET_5
2019-05-16 09:08:35 -Generating unique operation named: editUsingGET_5
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_5
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_10
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_11
2019-05-16 09:08:35 -Generating unique operation named: saveUsingPOST_5
2019-05-16 09:08:35 -Generating unique operation named: updateUsingGET_4
2019-05-16 09:08:35 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPOST_5
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPUT_4
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 09:08:35 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 09:08:35 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 09:08:35 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 09:08:35 -Generating unique operation named: editUsingGET_6
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_6
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPOST_6
2019-05-16 09:08:35 -Generating unique operation named: addUsingGET_6
2019-05-16 09:08:35 -Generating unique operation named: editUsingGET_7
2019-05-16 09:08:35 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_7
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_12
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_13
2019-05-16 09:08:35 -Generating unique operation named: saveUsingPOST_6
2019-05-16 09:08:35 -Generating unique operation named: updateUsingGET_5
2019-05-16 09:08:35 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPOST_7
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPUT_5
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 09:08:35 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 09:08:35 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 09:08:35 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 09:08:35 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 09:08:35 -Generating unique operation named: addUsingGET_7
2019-05-16 09:08:35 -Generating unique operation named: editUsingGET_8
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_8
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_14
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_15
2019-05-16 09:08:35 -Generating unique operation named: saveUsingPOST_7
2019-05-16 09:08:35 -Generating unique operation named: updateUsingGET_6
2019-05-16 09:08:35 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPOST_8
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPUT_6
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 09:08:35 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 09:08:35 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 09:08:35 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 09:08:35 -Generating unique operation named: addUsingGET_8
2019-05-16 09:08:35 -Generating unique operation named: editUsingGET_9
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_9
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_16
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_17
2019-05-16 09:08:35 -Generating unique operation named: saveUsingPOST_8
2019-05-16 09:08:35 -Generating unique operation named: updateUsingGET_7
2019-05-16 09:08:35 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPOST_9
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPUT_7
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 09:08:35 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 09:08:35 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 09:08:35 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 09:08:35 -Generating unique operation named: addUsingGET_9
2019-05-16 09:08:35 -Generating unique operation named: editUsingGET_10
2019-05-16 09:08:35 -Generating unique operation named: infoUsingGET_1
2019-05-16 09:08:35 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 09:08:35 -Generating unique operation named: infoUsingPOST_1
2019-05-16 09:08:35 -Generating unique operation named: infoUsingPUT_1
2019-05-16 09:08:35 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 09:08:35 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 09:08:35 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 09:08:35 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_10
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_18
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_19
2019-05-16 09:08:35 -Generating unique operation named: saveUsingPOST_9
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPOST_10
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_11
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_20
2019-05-16 09:08:35 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 09:08:35 -Generating unique operation named: addUsingGET_10
2019-05-16 09:08:35 -Generating unique operation named: editUsingGET_11
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_12
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_21
2019-05-16 09:08:35 -Generating unique operation named: saveUsingPOST_10
2019-05-16 09:08:35 -Generating unique operation named: treeUsingGET_1
2019-05-16 09:08:35 -Generating unique operation named: treeUsingGET_2
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPOST_11
2019-05-16 09:08:35 -Generating unique operation named: addUsingGET_11
2019-05-16 09:08:35 -Generating unique operation named: editUsingGET_12
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_13
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_22
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_23
2019-05-16 09:08:35 -Generating unique operation named: saveUsingPOST_11
2019-05-16 09:08:35 -Generating unique operation named: updateUsingGET_8
2019-05-16 09:08:35 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPOST_12
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPUT_8
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 09:08:35 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 09:08:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 09:08:35 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 09:08:35 -Generating unique operation named: addUsingGET_12
2019-05-16 09:08:35 -Generating unique operation named: editUsingGET_13
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_14
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_24
2019-05-16 09:08:35 -Generating unique operation named: removeUsingPOST_25
2019-05-16 09:08:35 -Generating unique operation named: saveUsingPOST_12
2019-05-16 09:08:35 -Generating unique operation named: updateUsingGET_9
2019-05-16 09:08:35 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPOST_13
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPUT_9
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 09:08:35 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 09:08:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 09:08:35 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 09:08:35 -Generating unique operation named: addUsingGET_13
2019-05-16 09:08:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 09:08:35 -Generating unique operation named: editUsingGET_14
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_15
2019-05-16 09:08:35 -Generating unique operation named: saveUsingPOST_13
2019-05-16 09:08:35 -Generating unique operation named: saveUsingPOST_14
2019-05-16 09:08:35 -Generating unique operation named: updateUsingPOST_14
2019-05-16 09:08:35 -Generating unique operation named: listUsingGET_16
2019-05-16 09:08:35 -Generating unique operation named: listUsingHEAD_1
2019-05-16 09:08:35 -Generating unique operation named: listUsingPOST_1
2019-05-16 09:08:35 -Generating unique operation named: listUsingPUT_1
2019-05-16 09:08:36 -Generating unique operation named: listUsingPATCH_1
2019-05-16 09:08:36 -Generating unique operation named: listUsingDELETE_1
2019-05-16 09:08:36 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 09:08:36 -Generating unique operation named: listUsingTRACE_1
2019-05-16 09:08:36 -Generating unique operation named: countDDUsingGET_1
2019-05-16 09:08:36 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 09:08:36 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-16 09:08:36 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-16 09:08:36 -Generating unique operation named: addUsingGET_14
2019-05-16 09:08:36 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 09:08:36 -Generating unique operation named: editUsingGET_15
2019-05-16 09:08:36 -Generating unique operation named: listUsingGET_17
2019-05-16 09:08:36 -Generating unique operation named: removeUsingPOST_26
2019-05-16 09:08:36 -Generating unique operation named: saveUsingPOST_15
2019-05-16 09:08:36 -Generating unique operation named: treeUsingGET_3
2019-05-16 09:08:36 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 09:08:36 -Generating unique operation named: updateUsingPOST_15
2019-05-16 09:08:36 -Generating unique operation named: addUsingGET_15
2019-05-16 09:08:36 -Generating unique operation named: editUsingGET_16
2019-05-16 09:08:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 09:08:36 -Generating unique operation named: listUsingGET_18
2019-05-16 09:08:36 -Generating unique operation named: removeUsingPOST_27
2019-05-16 09:08:36 -Generating unique operation named: removeUsingPOST_28
2019-05-16 09:08:36 -Generating unique operation named: saveUsingPOST_16
2019-05-16 09:08:36 -Generating unique operation named: updateUsingGET_10
2019-05-16 09:08:36 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 09:08:36 -Generating unique operation named: updateUsingPOST_16
2019-05-16 09:08:36 -Generating unique operation named: updateUsingPUT_10
2019-05-16 09:08:36 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 09:08:36 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 09:08:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 09:08:36 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 09:08:36 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 09:08:36 -Generating unique operation named: addUsingGET_16
2019-05-16 09:08:36 -Generating unique operation named: editUsingGET_17
2019-05-16 09:08:36 -Generating unique operation named: listUsingGET_19
2019-05-16 09:08:36 -Generating unique operation named: removeUsingPOST_29
2019-05-16 09:08:36 -Generating unique operation named: removeUsingPOST_30
2019-05-16 09:08:36 -Generating unique operation named: saveUsingPOST_17
2019-05-16 09:08:36 -Generating unique operation named: updateUsingGET_11
2019-05-16 09:08:36 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 09:08:36 -Generating unique operation named: updateUsingPOST_17
2019-05-16 09:08:36 -Generating unique operation named: updateUsingPUT_11
2019-05-16 09:08:36 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 09:08:36 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 09:08:36 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 09:08:36 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 09:08:36 -Generating unique operation named: addUsingGET_17
2019-05-16 09:08:36 -Generating unique operation named: editUsingGET_18
2019-05-16 09:08:36 -Generating unique operation named: listUsingGET_20
2019-05-16 09:08:36 -Generating unique operation named: removeUsingPOST_31
2019-05-16 09:08:36 -Generating unique operation named: removeUsingPOST_32
2019-05-16 09:08:36 -Generating unique operation named: saveUsingPOST_18
2019-05-16 09:08:36 -Generating unique operation named: updateUsingGET_12
2019-05-16 09:08:36 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 09:08:36 -Generating unique operation named: updateUsingPOST_18
2019-05-16 09:08:36 -Generating unique operation named: updateUsingPUT_12
2019-05-16 09:08:36 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 09:08:36 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 09:08:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 09:08:36 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 09:08:36 -Starting Quartz Scheduler now
2019-05-16 09:08:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 09:08:36 -Starting...
2019-05-16 09:08:36 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 09:08:36 -Started.
2019-05-16 09:08:36 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 09:08:36 -Using a shared selector for servlet write/read
2019-05-16 09:08:36 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 09:08:36 -Started BootdoApplication in 35.017 seconds (JVM running for 35.736)
2019-05-16 09:08:36 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 09:08:37 -==> Parameters: 
2019-05-16 09:08:37 -<==      Total: 1
2019-05-16 09:09:01 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 09:09:01 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 09:09:01 -FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
2019-05-16 09:09:01 -Enabling session validation scheduler...
2019-05-16 09:09:01 -请求地址 : http://localhost:8081/login;JSESSIONID=ddce72d6-d00d-4f35-ae0c-315a3e40c5e3
2019-05-16 09:09:01 -HTTP METHOD : GET
2019-05-16 09:09:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 09:09:01 -参数 : [{}]
2019-05-16 09:09:01 -耗时 : 4
2019-05-16 09:09:01 -返回值 : login
2019-05-16 09:09:04 -请求地址 : http://localhost:8081/getVerify
2019-05-16 09:09:04 -HTTP METHOD : GET
2019-05-16 09:09:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 09:09:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1a989c90, org.apache.shiro.web.servlet.ShiroHttpServletResponse@47371a1d]
2019-05-16 09:09:12 -9936
2019-05-16 09:09:13 -耗时 : 9386
2019-05-16 09:09:13 -返回值 : null
2019-05-16 09:09:18 -请求地址 : http://localhost:8081/login
2019-05-16 09:09:18 -HTTP METHOD : POST
2019-05-16 09:09:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 09:09:18 -参数 : [admin, 111111, 9936, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2995494a]
2019-05-16 09:09:18 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 09:09:18 -==> Parameters: admin(String)
2019-05-16 09:09:18 -<==      Total: 1
2019-05-16 09:09:18 -耗时 : 159
2019-05-16 09:09:18 -返回值 : {msg=操作成功, code=0}
2019-05-16 09:09:18 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 09:09:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 09:09:18 -==> Parameters: 1(Long), admin(String), 登录(String), 159(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 09:09:18.93(Timestamp)
2019-05-16 09:09:19 -<==    Updates: 1
2019-05-16 09:09:19 -请求地址 : http://localhost:8081/index
2019-05-16 09:09:19 -HTTP METHOD : GET
2019-05-16 09:09:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 09:09:19 -参数 : [{}]
2019-05-16 09:09:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 09:09:19 -==> Parameters: 1(Long)
2019-05-16 09:09:19 -<==      Total: 49
2019-05-16 09:09:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 09:09:19 -==> Parameters: 138(Long)
2019-05-16 09:09:19 -<==      Total: 1
2019-05-16 09:09:19 -耗时 : 174
2019-05-16 09:09:19 -返回值 : index_v1
2019-05-16 09:09:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 09:09:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 175(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 09:09:19.452(Timestamp)
2019-05-16 09:09:19 -<==    Updates: 1
2019-05-16 09:09:19 -请求地址 : http://localhost:8081/main
2019-05-16 09:09:19 -HTTP METHOD : GET
2019-05-16 09:09:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 09:09:19 -参数 : []
2019-05-16 09:09:19 -耗时 : 1
2019-05-16 09:09:19 -返回值 : main
2019-05-16 09:09:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 09:09:20 -HTTP METHOD : GET
2019-05-16 09:09:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 09:09:20 -参数 : []
2019-05-16 09:09:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 09:09:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 09:09:20 -<==      Total: 0
2019-05-16 09:09:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 09:09:20 -==> Parameters: 1(Long), 0(String)
2019-05-16 09:09:20 -<==      Total: 1
2019-05-16 09:09:20 -耗时 : 43
2019-05-16 09:09:20 -返回值 : com.bootdo.common.utils.PageUtils@7bf08d0a
2019-05-16 09:09:21 -请求地址 : http://localhost:8081/main
2019-05-16 09:09:21 -HTTP METHOD : GET
2019-05-16 09:09:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 09:09:21 -参数 : []
2019-05-16 09:09:21 -耗时 : 1
2019-05-16 09:09:21 -返回值 : main
2019-05-16 09:09:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 09:09:25 -==> Parameters: 1(Long)
2019-05-16 09:09:25 -<==      Total: 93
2019-05-16 09:09:25 -请求地址 : http://localhost:8081/charts/countYY
2019-05-16 09:09:25 -HTTP METHOD : GET
2019-05-16 09:09:25 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-16 09:09:25 -参数 : []
2019-05-16 09:09:25 -耗时 : 0
2019-05-16 09:09:25 -返回值 : charts/countYY
2019-05-16 09:09:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 09:09:26 -HTTP METHOD : GET
2019-05-16 09:09:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 09:09:26 -参数 : [userType]
2019-05-16 09:09:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 09:09:26 -==> Parameters: userType(String)
2019-05-16 09:09:26 -<==      Total: 4
2019-05-16 09:09:26 -耗时 : 27
2019-05-16 09:09:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 09:09:27 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 09:09:27 -HTTP METHOD : GET
2019-05-16 09:09:27 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 09:09:27 -参数 : []
2019-05-16 09:09:27 -耗时 : 17
2019-05-16 09:09:27 -返回值 : charts/tableElecYY
2019-05-16 09:09:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 09:09:27 -HTTP METHOD : GET
2019-05-16 09:09:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 09:09:27 -参数 : [userType]
2019-05-16 09:09:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 09:09:27 -==> Parameters: userType(String)
2019-05-16 09:09:27 -<==      Total: 4
2019-05-16 09:09:27 -耗时 : 7
2019-05-16 09:09:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 09:09:28 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-16 09:09:28 -HTTP METHOD : GET
2019-05-16 09:09:28 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 09:09:28 -参数 : []
2019-05-16 09:09:28 -耗时 : 10
2019-05-16 09:09:28 -返回值 : charts/tableWaterYY
2019-05-16 09:09:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 09:09:28 -HTTP METHOD : GET
2019-05-16 09:09:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 09:09:28 -参数 : [userType]
2019-05-16 09:09:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 09:09:28 -==> Parameters: userType(String)
2019-05-16 09:09:28 -<==      Total: 4
2019-05-16 09:09:28 -耗时 : 5
2019-05-16 09:09:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 09:09:29 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-16 09:09:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 09:09:55 -HTTP METHOD : GET
2019-05-16 09:09:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 09:09:55 -参数 : []
2019-05-16 09:09:55 -耗时 : 1
2019-05-16 09:09:55 -返回值 : system/dept/deptTree
2019-05-16 09:09:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 09:09:56 -HTTP METHOD : GET
2019-05-16 09:09:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 09:09:56 -参数 : []
2019-05-16 09:09:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 09:09:56 -==> Parameters: 
2019-05-16 09:09:56 -<==      Total: 3
2019-05-16 09:09:56 -耗时 : 21
2019-05-16 09:09:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 09:09:57 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-16 09:09:57 -HTTP METHOD : POST
2019-05-16 09:09:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 09:09:57 -参数 : [com.bootdo.water.vo.WaterVo@77c24ed1, com.bootdo.moneyLog.vo.WaterLogVo@1f554c41]
2019-05-16 09:09:57 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 09:09:57 -<==      Total: 1
2019-05-16 09:09:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 09:09:57 -<==      Total: 1
2019-05-16 09:09:57 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 09:09:57 -<==      Total: 1
2019-05-16 09:09:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 09:09:57 -<==      Total: 1
2019-05-16 09:09:57 -==>  Preparing: select COUNT(*),ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:09:57 -<==      Total: 1
2019-05-16 09:09:57 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:09:57 -<==      Total: 1
2019-05-16 09:09:57 -==>  Preparing: select COUNT(*) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:09:57 -<==      Total: 1
2019-05-16 09:09:57 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:09:57 -<==      Total: 1
2019-05-16 09:09:57 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*),ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*),ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*),ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:09:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:09:58 -<==      Total: 1
2019-05-16 09:09:58 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-16 09:09:58 -==> Parameters: 
2019-05-16 09:09:58 -<==      Total: 2
2019-05-16 09:09:58 -耗时 : 196
2019-05-16 09:09:58 -返回值 : {S3TotalhuNew=0, S1WaterCostYYCount =1, S2PreWaterCountYYOld=0, S1OweWaterCountYYNew=0, S2PreWaterCountYYNew=0, S1OweWaterSumYYNew=0, type=2, S3PreWaterSumYYNew=0, TotalPreyuNew=26, MWaterLogYYSum=151, S1OweWaterCountYYOld=1, S1OweWaterSumYYOld=-10, TotalCostyu=40, S3PreWaterSumYYOld=0, MPreWaterCountYYOld=1, S2WaterCostYYCount =0, S1WaterPrice=10, S1TotalyuOld=-10, TotalPreyuOld=6, S2WaterLogYYCount=1, S3TotalhuOld=0, MPreWaterCountYYNew=2, TotalOwehuNew=1, MWaterCostYYCount =5, S2WaterLogYYSum=60, TotalCosthu=6, S1WaterLogYYCount=2, S3WaterLogYYSum=60, S2OweWaterSumYYOld=0, TotalLogyu=172, MPreWaterSumYYOld=6, S2TotalhuNew=0, MTotalyuOld=6, MPreWaterSumYYNew=25, MWaterPrice=6, S3PreWaterCountYYNew=0, MTotalhuNew=3, MTotalyuNew=16, TotalLoghu=4, S3PreWaterCountYYOld=0, S2TotalhuOld=0, S2TotalyuOld=0, S2OweWaterSumYYNew=0, TotalOweyuOld=-10, S3OweWaterCountYYOld=0, S2TotalyuNew=0, S3WaterLogYYCount=1, S1TotalhuNew=1, MTotalhuOld=1, S3WaterCostYYSum =0, S3OweWaterSumYYOld=0, S1TotalhuOld=1, S2PreWaterSumYYNew=0, TotalPrehuNew=3, MOweWaterSumYYNew=-9, S3OweWaterSumYYNew=0, S2PreWaterSumYYOld=0, TotalOweyuNew=-9, S3TotalyuOld=0, MWaterLogYYCount=2, S3OweWaterCountYYNew=0, S3TotalyuNew=0, TotalPrehuOld=1, S3WaterCostYYCount =0, S1PreWaterCountYYNew=1, S1WaterLogYYSum=21, TotalOwehuOld=1, PriceTotal=16, S2OweWaterCountYYNew=0, S1PreWaterCountYYOld=0, S1WaterCostYYSum =10, MOweWaterSumYYOld=0, S1TotalyuNew=1, MOweWaterCountYYNew=1, MOweWaterCountYYOld=0, S1PreWaterSumYYNew=1, TotalAllhuNew=4, TotalAllyuNew=17, S2WaterCostYYSum =0, TotalAllhuOld=2, S2OweWaterCountYYOld=0, MWaterCostYYSum =30, S1PreWaterSumYYOld=0, TotalAllyuOld=-4}
2019-05-16 09:22:06 -Starting BootdoApplication on PC-201905091110 with PID 13280 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 09:22:06 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 09:22:06 -The following profiles are active: dev
2019-05-16 09:22:06 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 09:22:06 CST 2019]; root of context hierarchy
2019-05-16 09:22:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 09:22:10 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71fd8325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:22:10 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6456b1cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:22:11 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:22:11 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:22:11 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:22:11 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 09:22:11 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 09:22:11 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:22:11 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:22:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:22:12 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 09:22:12 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 09:22:12 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 09:22:12 -Starting service [Tomcat]
2019-05-16 09:22:12 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 09:22:12 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 09:22:13 -Initializing Spring embedded WebApplicationContext
2019-05-16 09:22:13 -Root WebApplicationContext: initialization completed in 6549 ms
2019-05-16 09:22:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 09:22:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 09:22:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 09:22:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 09:22:13 -Filter xssFilter was not registered (disabled)
2019-05-16 09:22:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 09:22:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 09:22:13 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 09:22:13 -Servlet dispatcherServlet mapped to [/]
2019-05-16 09:22:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 09:22:06 CST 2019]; root of context hierarchy
2019-05-16 09:22:20 -Using default implementation for ThreadExecutor
2019-05-16 09:22:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 09:22:20 -Quartz Scheduler v.2.2.1 created.
2019-05-16 09:22:20 -RAMJobStore initialized.
2019-05-16 09:22:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 09:22:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 09:22:20 -Quartz scheduler version: 2.2.1
2019-05-16 09:22:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25e8e59
2019-05-16 09:22:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 09:22:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 09:22:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 09:22:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:22:23 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:22:23 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 09:22:23 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 09:22:23 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 09:22:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 09:22:23 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:22:23 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 09:22:23 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:22:23 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 09:22:23 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:22:23 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 09:22:23 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 09:22:23 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 09:22:23 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 09:22:23 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:22:23 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 09:22:23 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 09:22:23 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 09:22:23 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 09:22:23 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-16 09:22:23 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 09:22:23 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 09:22:23 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 09:22:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 09:22:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 09:22:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 09:22:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 09:22:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 09:22:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 09:22:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 09:22:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 09:22:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 09:22:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 09:22:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 09:22:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 09:22:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 09:22:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 09:22:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 09:22:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 09:22:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 09:22:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 09:22:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 09:22:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 09:22:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 09:22:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 09:22:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 09:22:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 09:22:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 09:22:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 09:22:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 09:22:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 09:22:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 09:22:23 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 09:22:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 09:22:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 09:22:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 09:22:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 09:22:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 09:22:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 09:22:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 09:22:23 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 09:22:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 09:22:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 09:22:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 09:22:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 09:22:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 09:22:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 09:22:23 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 09:22:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 09:22:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 09:22:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 09:22:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 09:22:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 09:22:23 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 09:22:23 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 09:22:23 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 09:22:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 09:22:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 09:22:23 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 09:22:23 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 09:22:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 09:22:23 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 09:22:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 09:22:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 09:22:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 09:22:23 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 09:22:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 09:22:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 09:22:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 09:22:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 09:22:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 09:22:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 09:22:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 09:22:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 09:22:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 09:22:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 09:22:23 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 09:22:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 09:22:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 09:22:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 09:22:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 09:22:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 09:22:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 09:22:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 09:22:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 09:22:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 09:22:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 09:22:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 09:22:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 09:22:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 09:22:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 09:22:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 09:22:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 09:22:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 09:22:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 09:22:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 09:22:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 09:22:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 09:22:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 09:22:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 09:22:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 09:22:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 09:22:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 09:22:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 09:22:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 09:22:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 09:22:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 09:22:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 09:22:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 09:22:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 09:22:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 09:22:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 09:22:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 09:22:23 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 09:22:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 09:22:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 09:22:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 09:22:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 09:22:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 09:22:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 09:22:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 09:22:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 09:22:23 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 09:22:23 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 09:22:23 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 09:22:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 09:22:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 09:22:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 09:22:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 09:22:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 09:22:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 09:22:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 09:22:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 09:22:24 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 09:22:06 CST 2019]; root of context hierarchy
2019-05-16 09:22:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 09:22:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 09:22:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 09:22:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 09:22:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 09:22:26 -Registering beans for JMX exposure on startup
2019-05-16 09:22:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 09:22:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 09:22:26 -Starting beans in phase 2147483647
2019-05-16 09:22:26 -Context refreshed
2019-05-16 09:22:26 -Found 1 custom documentation plugin(s)
2019-05-16 09:22:26 -Scanning for api listing references
2019-05-16 09:22:27 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 09:22:27 -Generating unique operation named: removeUsingPOST_1
2019-05-16 09:22:27 -Generating unique operation named: addUsingGET_1
2019-05-16 09:22:27 -Generating unique operation named: editUsingGET_1
2019-05-16 09:22:27 -Generating unique operation named: listUsingGET_1
2019-05-16 09:22:27 -Generating unique operation named: removeUsingPOST_2
2019-05-16 09:22:27 -Generating unique operation named: removeUsingPOST_3
2019-05-16 09:22:27 -Generating unique operation named: saveUsingPOST_1
2019-05-16 09:22:27 -Generating unique operation named: updateUsingGET_1
2019-05-16 09:22:27 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPOST_1
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPUT_1
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 09:22:27 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 09:22:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 09:22:27 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 09:22:27 -Generating unique operation named: addUsingGET_2
2019-05-16 09:22:27 -Generating unique operation named: editUsingGET_2
2019-05-16 09:22:27 -Generating unique operation named: listUsingGET_2
2019-05-16 09:22:27 -Generating unique operation named: removeUsingPOST_4
2019-05-16 09:22:27 -Generating unique operation named: removeUsingPOST_5
2019-05-16 09:22:27 -Generating unique operation named: saveUsingPOST_2
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPOST_2
2019-05-16 09:22:27 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 09:22:27 -Generating unique operation named: addUsingGET_3
2019-05-16 09:22:27 -Generating unique operation named: editUsingGET_3
2019-05-16 09:22:27 -Generating unique operation named: listUsingGET_3
2019-05-16 09:22:27 -Generating unique operation named: removeUsingPOST_6
2019-05-16 09:22:27 -Generating unique operation named: removeUsingPOST_7
2019-05-16 09:22:27 -Generating unique operation named: saveUsingPOST_3
2019-05-16 09:22:27 -Generating unique operation named: updateUsingGET_2
2019-05-16 09:22:27 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPOST_3
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPUT_2
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 09:22:27 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 09:22:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 09:22:27 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 09:22:27 -Generating unique operation named: addUsingGET_4
2019-05-16 09:22:27 -Generating unique operation named: editUsingGET_4
2019-05-16 09:22:27 -Generating unique operation named: listUsingGET_4
2019-05-16 09:22:27 -Generating unique operation named: removeUsingPOST_8
2019-05-16 09:22:27 -Generating unique operation named: removeUsingPOST_9
2019-05-16 09:22:27 -Generating unique operation named: saveUsingPOST_4
2019-05-16 09:22:27 -Generating unique operation named: updateUsingGET_3
2019-05-16 09:22:27 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPOST_4
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPUT_3
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 09:22:27 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 09:22:27 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 09:22:27 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 09:22:27 -Generating unique operation named: ElecUsingGET_1
2019-05-16 09:22:27 -Generating unique operation named: addUsingGET_5
2019-05-16 09:22:27 -Generating unique operation named: editUsingGET_5
2019-05-16 09:22:27 -Generating unique operation named: listUsingGET_5
2019-05-16 09:22:27 -Generating unique operation named: removeUsingPOST_10
2019-05-16 09:22:27 -Generating unique operation named: removeUsingPOST_11
2019-05-16 09:22:27 -Generating unique operation named: saveUsingPOST_5
2019-05-16 09:22:27 -Generating unique operation named: updateUsingGET_4
2019-05-16 09:22:27 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPOST_5
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPUT_4
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 09:22:27 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 09:22:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 09:22:27 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 09:22:27 -Generating unique operation named: editUsingGET_6
2019-05-16 09:22:27 -Generating unique operation named: listUsingGET_6
2019-05-16 09:22:27 -Generating unique operation named: updateUsingPOST_6
2019-05-16 09:22:27 -Generating unique operation named: addUsingGET_6
2019-05-16 09:22:27 -Generating unique operation named: editUsingGET_7
2019-05-16 09:22:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_7
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_12
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_13
2019-05-16 09:22:28 -Generating unique operation named: saveUsingPOST_6
2019-05-16 09:22:28 -Generating unique operation named: updateUsingGET_5
2019-05-16 09:22:28 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPOST_7
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPUT_5
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 09:22:28 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 09:22:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 09:22:28 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 09:22:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 09:22:28 -Generating unique operation named: addUsingGET_7
2019-05-16 09:22:28 -Generating unique operation named: editUsingGET_8
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_8
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_14
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_15
2019-05-16 09:22:28 -Generating unique operation named: saveUsingPOST_7
2019-05-16 09:22:28 -Generating unique operation named: updateUsingGET_6
2019-05-16 09:22:28 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPOST_8
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPUT_6
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 09:22:28 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 09:22:28 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 09:22:28 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 09:22:28 -Generating unique operation named: addUsingGET_8
2019-05-16 09:22:28 -Generating unique operation named: editUsingGET_9
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_9
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_16
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_17
2019-05-16 09:22:28 -Generating unique operation named: saveUsingPOST_8
2019-05-16 09:22:28 -Generating unique operation named: updateUsingGET_7
2019-05-16 09:22:28 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPOST_9
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPUT_7
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 09:22:28 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 09:22:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 09:22:28 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 09:22:28 -Generating unique operation named: addUsingGET_9
2019-05-16 09:22:28 -Generating unique operation named: editUsingGET_10
2019-05-16 09:22:28 -Generating unique operation named: infoUsingGET_1
2019-05-16 09:22:28 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 09:22:28 -Generating unique operation named: infoUsingPOST_1
2019-05-16 09:22:28 -Generating unique operation named: infoUsingPUT_1
2019-05-16 09:22:28 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 09:22:28 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 09:22:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 09:22:28 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_10
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_18
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_19
2019-05-16 09:22:28 -Generating unique operation named: saveUsingPOST_9
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPOST_10
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_11
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_20
2019-05-16 09:22:28 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 09:22:28 -Generating unique operation named: addUsingGET_10
2019-05-16 09:22:28 -Generating unique operation named: editUsingGET_11
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_12
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_21
2019-05-16 09:22:28 -Generating unique operation named: saveUsingPOST_10
2019-05-16 09:22:28 -Generating unique operation named: treeUsingGET_1
2019-05-16 09:22:28 -Generating unique operation named: treeUsingGET_2
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPOST_11
2019-05-16 09:22:28 -Generating unique operation named: addUsingGET_11
2019-05-16 09:22:28 -Generating unique operation named: editUsingGET_12
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_13
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_22
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_23
2019-05-16 09:22:28 -Generating unique operation named: saveUsingPOST_11
2019-05-16 09:22:28 -Generating unique operation named: updateUsingGET_8
2019-05-16 09:22:28 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPOST_12
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPUT_8
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 09:22:28 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 09:22:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 09:22:28 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 09:22:28 -Generating unique operation named: addUsingGET_12
2019-05-16 09:22:28 -Generating unique operation named: editUsingGET_13
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_14
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_24
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_25
2019-05-16 09:22:28 -Generating unique operation named: saveUsingPOST_12
2019-05-16 09:22:28 -Generating unique operation named: updateUsingGET_9
2019-05-16 09:22:28 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPOST_13
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPUT_9
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 09:22:28 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 09:22:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 09:22:28 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 09:22:28 -Generating unique operation named: addUsingGET_13
2019-05-16 09:22:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 09:22:28 -Generating unique operation named: editUsingGET_14
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_15
2019-05-16 09:22:28 -Generating unique operation named: saveUsingPOST_13
2019-05-16 09:22:28 -Generating unique operation named: saveUsingPOST_14
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPOST_14
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_16
2019-05-16 09:22:28 -Generating unique operation named: listUsingHEAD_1
2019-05-16 09:22:28 -Generating unique operation named: listUsingPOST_1
2019-05-16 09:22:28 -Generating unique operation named: listUsingPUT_1
2019-05-16 09:22:28 -Generating unique operation named: listUsingPATCH_1
2019-05-16 09:22:28 -Generating unique operation named: listUsingDELETE_1
2019-05-16 09:22:28 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 09:22:28 -Generating unique operation named: listUsingTRACE_1
2019-05-16 09:22:28 -Generating unique operation named: countDDUsingGET_1
2019-05-16 09:22:28 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 09:22:28 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-16 09:22:28 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-16 09:22:28 -Generating unique operation named: addUsingGET_14
2019-05-16 09:22:28 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 09:22:28 -Generating unique operation named: editUsingGET_15
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_17
2019-05-16 09:22:28 -Generating unique operation named: removeUsingPOST_26
2019-05-16 09:22:28 -Generating unique operation named: saveUsingPOST_15
2019-05-16 09:22:28 -Generating unique operation named: treeUsingGET_3
2019-05-16 09:22:28 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 09:22:28 -Generating unique operation named: updateUsingPOST_15
2019-05-16 09:22:28 -Generating unique operation named: addUsingGET_15
2019-05-16 09:22:28 -Generating unique operation named: editUsingGET_16
2019-05-16 09:22:28 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 09:22:28 -Generating unique operation named: listUsingGET_18
2019-05-16 09:22:29 -Generating unique operation named: removeUsingPOST_27
2019-05-16 09:22:29 -Generating unique operation named: removeUsingPOST_28
2019-05-16 09:22:29 -Generating unique operation named: saveUsingPOST_16
2019-05-16 09:22:29 -Generating unique operation named: updateUsingGET_10
2019-05-16 09:22:29 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 09:22:29 -Generating unique operation named: updateUsingPOST_16
2019-05-16 09:22:29 -Generating unique operation named: updateUsingPUT_10
2019-05-16 09:22:29 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 09:22:29 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 09:22:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 09:22:29 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 09:22:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 09:22:29 -Generating unique operation named: addUsingGET_16
2019-05-16 09:22:29 -Generating unique operation named: editUsingGET_17
2019-05-16 09:22:29 -Generating unique operation named: listUsingGET_19
2019-05-16 09:22:29 -Generating unique operation named: removeUsingPOST_29
2019-05-16 09:22:29 -Generating unique operation named: removeUsingPOST_30
2019-05-16 09:22:29 -Generating unique operation named: saveUsingPOST_17
2019-05-16 09:22:29 -Generating unique operation named: updateUsingGET_11
2019-05-16 09:22:29 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 09:22:29 -Generating unique operation named: updateUsingPOST_17
2019-05-16 09:22:29 -Generating unique operation named: updateUsingPUT_11
2019-05-16 09:22:29 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 09:22:29 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 09:22:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 09:22:29 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 09:22:29 -Generating unique operation named: addUsingGET_17
2019-05-16 09:22:29 -Generating unique operation named: editUsingGET_18
2019-05-16 09:22:29 -Generating unique operation named: listUsingGET_20
2019-05-16 09:22:29 -Generating unique operation named: removeUsingPOST_31
2019-05-16 09:22:29 -Generating unique operation named: removeUsingPOST_32
2019-05-16 09:22:29 -Generating unique operation named: saveUsingPOST_18
2019-05-16 09:22:29 -Generating unique operation named: updateUsingGET_12
2019-05-16 09:22:29 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 09:22:29 -Generating unique operation named: updateUsingPOST_18
2019-05-16 09:22:29 -Generating unique operation named: updateUsingPUT_12
2019-05-16 09:22:29 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 09:22:29 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 09:22:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 09:22:29 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 09:22:29 -Starting Quartz Scheduler now
2019-05-16 09:22:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 09:22:29 -Starting...
2019-05-16 09:22:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 09:22:29 -Started.
2019-05-16 09:22:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 09:22:29 -Using a shared selector for servlet write/read
2019-05-16 09:22:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 09:22:29 -Started BootdoApplication in 24.182 seconds (JVM running for 24.866)
2019-05-16 09:22:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 09:22:29 -==> Parameters: 
2019-05-16 09:22:29 -<==      Total: 1
2019-05-16 09:22:35 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 09:22:35 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 09:22:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 96 ms
2019-05-16 09:22:35 -Enabling session validation scheduler...
2019-05-16 09:22:35 -请求地址 : http://localhost:8081/login;JSESSIONID=ef2acd3b-2855-42c6-882f-8b252c5fbf3d
2019-05-16 09:22:35 -HTTP METHOD : GET
2019-05-16 09:22:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 09:22:35 -参数 : [{}]
2019-05-16 09:22:35 -耗时 : 3
2019-05-16 09:22:35 -返回值 : login
2019-05-16 09:22:37 -请求地址 : http://localhost:8081/getVerify
2019-05-16 09:22:37 -HTTP METHOD : GET
2019-05-16 09:22:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 09:22:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@496d3b22, org.apache.shiro.web.servlet.ShiroHttpServletResponse@c6fbc6b]
2019-05-16 09:22:37 -6698
2019-05-16 09:22:37 -耗时 : 376
2019-05-16 09:22:37 -返回值 : null
2019-05-16 09:22:37 -请求地址 : http://localhost:8081/login
2019-05-16 09:22:37 -HTTP METHOD : GET
2019-05-16 09:22:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 09:22:37 -参数 : [{}]
2019-05-16 09:22:37 -耗时 : 0
2019-05-16 09:22:37 -返回值 : login
2019-05-16 09:22:41 -请求地址 : http://localhost:8081/login
2019-05-16 09:22:41 -HTTP METHOD : POST
2019-05-16 09:22:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 09:22:41 -参数 : [admin, 111111, 6698, org.apache.shiro.web.servlet.ShiroHttpServletRequest@24195d70]
2019-05-16 09:22:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 09:22:42 -==> Parameters: admin(String)
2019-05-16 09:22:42 -<==      Total: 1
2019-05-16 09:22:42 -耗时 : 94
2019-05-16 09:22:42 -返回值 : {msg=操作成功, code=0}
2019-05-16 09:22:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 09:22:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 09:22:42 -==> Parameters: 1(Long), admin(String), 登录(String), 95(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 09:22:42.128(Timestamp)
2019-05-16 09:22:42 -请求地址 : http://localhost:8081/index
2019-05-16 09:22:42 -HTTP METHOD : GET
2019-05-16 09:22:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 09:22:42 -参数 : [{}]
2019-05-16 09:22:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 09:22:42 -==> Parameters: 1(Long)
2019-05-16 09:22:42 -<==      Total: 49
2019-05-16 09:22:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 09:22:42 -==> Parameters: 138(Long)
2019-05-16 09:22:42 -<==      Total: 1
2019-05-16 09:22:42 -耗时 : 152
2019-05-16 09:22:42 -返回值 : index_v1
2019-05-16 09:22:42 -<==    Updates: 1
2019-05-16 09:22:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 09:22:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 153(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 09:22:42.391(Timestamp)
2019-05-16 09:22:42 -<==    Updates: 1
2019-05-16 09:22:42 -请求地址 : http://localhost:8081/main
2019-05-16 09:22:42 -HTTP METHOD : GET
2019-05-16 09:22:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 09:22:42 -参数 : []
2019-05-16 09:22:42 -耗时 : 0
2019-05-16 09:22:42 -返回值 : main
2019-05-16 09:22:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 09:22:42 -HTTP METHOD : GET
2019-05-16 09:22:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 09:22:42 -参数 : []
2019-05-16 09:22:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 09:22:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 09:22:42 -<==      Total: 0
2019-05-16 09:22:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 09:22:42 -==> Parameters: 1(Long), 0(String)
2019-05-16 09:22:42 -<==      Total: 1
2019-05-16 09:22:42 -耗时 : 34
2019-05-16 09:22:42 -返回值 : com.bootdo.common.utils.PageUtils@1d418699
2019-05-16 09:22:42 -请求地址 : http://localhost:8081/main
2019-05-16 09:22:42 -HTTP METHOD : GET
2019-05-16 09:22:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 09:22:42 -参数 : []
2019-05-16 09:22:42 -耗时 : 0
2019-05-16 09:22:42 -返回值 : main
2019-05-16 09:22:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 09:22:49 -==> Parameters: 1(Long)
2019-05-16 09:22:49 -<==      Total: 93
2019-05-16 09:22:49 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 09:22:49 -HTTP METHOD : GET
2019-05-16 09:22:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 09:22:49 -参数 : []
2019-05-16 09:22:49 -耗时 : 7
2019-05-16 09:22:49 -返回值 : charts/tableElecYY
2019-05-16 09:22:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 09:22:49 -HTTP METHOD : GET
2019-05-16 09:22:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 09:22:49 -参数 : [userType]
2019-05-16 09:22:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 09:22:49 -==> Parameters: userType(String)
2019-05-16 09:22:49 -<==      Total: 4
2019-05-16 09:22:49 -耗时 : 23
2019-05-16 09:22:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 09:22:50 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-16 09:22:50 -HTTP METHOD : GET
2019-05-16 09:22:50 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 09:22:50 -参数 : []
2019-05-16 09:22:50 -耗时 : 9
2019-05-16 09:22:50 -返回值 : charts/tableWaterYY
2019-05-16 09:22:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 09:22:50 -HTTP METHOD : GET
2019-05-16 09:22:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 09:22:50 -参数 : [userType]
2019-05-16 09:22:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 09:22:50 -==> Parameters: userType(String)
2019-05-16 09:22:50 -<==      Total: 4
2019-05-16 09:22:50 -耗时 : 7
2019-05-16 09:22:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 09:22:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 09:22:54 -HTTP METHOD : GET
2019-05-16 09:22:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 09:22:54 -参数 : []
2019-05-16 09:22:54 -耗时 : 1
2019-05-16 09:22:54 -返回值 : system/dept/deptTree
2019-05-16 09:22:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 09:22:54 -HTTP METHOD : GET
2019-05-16 09:22:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 09:22:54 -参数 : []
2019-05-16 09:22:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 09:22:54 -==> Parameters: 
2019-05-16 09:22:54 -<==      Total: 3
2019-05-16 09:22:54 -耗时 : 74
2019-05-16 09:22:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 09:22:57 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-16 09:22:57 -HTTP METHOD : POST
2019-05-16 09:22:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 09:22:57 -参数 : [com.bootdo.water.vo.WaterVo@576115ff, com.bootdo.moneyLog.vo.WaterLogVo@740b03ed]
2019-05-16 09:22:57 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` LIKE CONCAT('%',?,'%') and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-16 09:22:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 09:22:57 -<==      Total: 1
2019-05-16 09:22:57 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-16 09:22:57 -==> Parameters: 
2019-05-16 09:22:57 -<==      Total: 2
2019-05-16 09:22:57 -耗时 : 227
2019-05-16 09:22:57 -返回值 : {S3TotalhuNew=0, S1WaterCostYYCount =1, S2PreWaterCountYYOld=0, S1OweWaterCountYYNew=0, S2PreWaterCountYYNew=0, S1OweWaterSumYYNew=0, type=2, S3PreWaterSumYYNew=0, TotalPreyuNew=26, MWaterLogYYSum=151, S1OweWaterCountYYOld=1, S1OweWaterSumYYOld=-10, TotalCostyu=40, S3PreWaterSumYYOld=0, MPreWaterCountYYOld=1, S2WaterCostYYCount =0, S1WaterPrice=10, S1TotalyuOld=-10, TotalPreyuOld=6, S2WaterLogYYCount=1, S3TotalhuOld=0, MPreWaterCountYYNew=2, TotalOwehuNew=1, MWaterCostYYCount =5, S2WaterLogYYSum=60, TotalCosthu=6, S1WaterLogYYCount=2, S3WaterLogYYSum=60, S2OweWaterSumYYOld=0, TotalLogyu=172, MPreWaterSumYYOld=6, S2TotalhuNew=0, MTotalyuOld=6, MPreWaterSumYYNew=25, MWaterPrice=6, S3PreWaterCountYYNew=0, MTotalhuNew=3, MTotalyuNew=16, TotalLoghu=4, S3PreWaterCountYYOld=0, S2TotalhuOld=0, S2TotalyuOld=0, S2OweWaterSumYYNew=0, TotalOweyuOld=-10, S3OweWaterCountYYOld=0, S2TotalyuNew=0, S3WaterLogYYCount=1, S1TotalhuNew=1, MTotalhuOld=1, S3WaterCostYYSum =0, S3OweWaterSumYYOld=0, S1TotalhuOld=1, S2PreWaterSumYYNew=0, TotalPrehuNew=3, MOweWaterSumYYNew=-9, S3OweWaterSumYYNew=0, S2PreWaterSumYYOld=0, TotalOweyuNew=-9, S3TotalyuOld=0, MWaterLogYYCount=2, S3OweWaterCountYYNew=0, S3TotalyuNew=0, TotalPrehuOld=1, S3WaterCostYYCount =0, S1PreWaterCountYYNew=1, S1WaterLogYYSum=21, TotalOwehuOld=1, PriceTotal=16, S2OweWaterCountYYNew=0, S1PreWaterCountYYOld=0, S1WaterCostYYSum =10, MOweWaterSumYYOld=0, S1TotalyuNew=1, MOweWaterCountYYNew=1, MOweWaterCountYYOld=0, S1PreWaterSumYYNew=1, TotalAllhuNew=4, TotalAllyuNew=17, S2WaterCostYYSum =0, TotalAllhuOld=2, S2OweWaterCountYYOld=0, MWaterCostYYSum =30, S1PreWaterSumYYOld=0, TotalAllyuOld=-4}
2019-05-16 09:23:24 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 10]
2019-05-16 09:53:24 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 443]
2019-05-16 10:06:35 -请求地址 : http://localhost:8081/login;JSESSIONID=7d9ef164-5000-49f2-a070-b06dc5ff96a5
2019-05-16 10:06:35 -HTTP METHOD : GET
2019-05-16 10:06:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 10:06:35 -参数 : [{}]
2019-05-16 10:06:35 -耗时 : 2
2019-05-16 10:06:35 -返回值 : login
2019-05-16 10:06:35 -请求地址 : http://localhost:8081/login;JSESSIONID=7d9ef164-5000-49f2-a070-b06dc5ff96a5
2019-05-16 10:06:35 -HTTP METHOD : GET
2019-05-16 10:06:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 10:06:35 -参数 : [{}]
2019-05-16 10:06:35 -耗时 : 1
2019-05-16 10:06:35 -返回值 : login
2019-05-16 10:06:35 -请求地址 : http://localhost:8081/getVerify
2019-05-16 10:06:35 -HTTP METHOD : GET
2019-05-16 10:06:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 10:06:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6d768257, org.apache.shiro.web.servlet.ShiroHttpServletResponse@bbbbff5]
2019-05-16 10:06:35 -7311
2019-05-16 10:06:35 -耗时 : 21
2019-05-16 10:06:35 -返回值 : null
2019-05-16 10:06:36 -请求地址 : http://localhost:8081/getVerify
2019-05-16 10:06:36 -HTTP METHOD : GET
2019-05-16 10:06:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 10:06:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2bdd03f2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3008bae]
2019-05-16 10:06:36 -1386
2019-05-16 10:06:36 -耗时 : 14
2019-05-16 10:06:36 -返回值 : null
2019-05-16 10:06:41 -请求地址 : http://localhost:8081/login
2019-05-16 10:06:41 -HTTP METHOD : POST
2019-05-16 10:06:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 10:06:41 -参数 : [admin, 111111, 186, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5dd48305]
2019-05-16 10:06:41 -耗时 : 1
2019-05-16 10:06:41 -返回值 : {msg=请输入正确的验证码, code=500}
2019-05-16 10:06:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:06:41 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 2(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 10:06:41.178(Timestamp)
2019-05-16 10:06:41 -<==    Updates: 1
2019-05-16 10:06:44 -请求地址 : http://localhost:8081/login;JSESSIONID=7d9ef164-5000-49f2-a070-b06dc5ff96a5
2019-05-16 10:06:44 -HTTP METHOD : GET
2019-05-16 10:06:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 10:06:44 -参数 : [{}]
2019-05-16 10:06:44 -耗时 : 1
2019-05-16 10:06:44 -返回值 : login
2019-05-16 10:06:44 -请求地址 : http://localhost:8081/getVerify
2019-05-16 10:06:44 -HTTP METHOD : GET
2019-05-16 10:06:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 10:06:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@26d72af4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@702b2445]
2019-05-16 10:06:44 -6305
2019-05-16 10:06:44 -耗时 : 13
2019-05-16 10:06:44 -返回值 : null
2019-05-16 10:06:44 -请求地址 : http://localhost:8081/login
2019-05-16 10:06:44 -HTTP METHOD : GET
2019-05-16 10:06:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 10:06:44 -参数 : [{}]
2019-05-16 10:06:44 -耗时 : 0
2019-05-16 10:06:44 -返回值 : login
2019-05-16 10:06:50 -请求地址 : http://localhost:8081/login
2019-05-16 10:06:50 -HTTP METHOD : POST
2019-05-16 10:06:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 10:06:50 -参数 : [admin, 111111, 6305, org.apache.shiro.web.servlet.ShiroHttpServletRequest@214ff004]
2019-05-16 10:06:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 10:06:50 -==> Parameters: admin(String)
2019-05-16 10:06:50 -<==      Total: 1
2019-05-16 10:06:50 -耗时 : 18
2019-05-16 10:06:50 -返回值 : {msg=操作成功, code=0}
2019-05-16 10:06:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:06:50 -==> Parameters: 1(Long), admin(String), 登录(String), 19(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 10:06:50.057(Timestamp)
2019-05-16 10:06:50 -请求地址 : http://localhost:8081/index
2019-05-16 10:06:50 -HTTP METHOD : GET
2019-05-16 10:06:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 10:06:50 -参数 : [{}]
2019-05-16 10:06:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 10:06:50 -==> Parameters: 1(Long)
2019-05-16 10:06:50 -<==      Total: 49
2019-05-16 10:06:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 10:06:50 -==> Parameters: 138(Long)
2019-05-16 10:06:50 -<==      Total: 1
2019-05-16 10:06:50 -耗时 : 32
2019-05-16 10:06:50 -返回值 : index_v1
2019-05-16 10:06:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:06:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 10:06:50.112(Timestamp)
2019-05-16 10:06:50 -<==    Updates: 1
2019-05-16 10:06:50 -<==    Updates: 1
2019-05-16 10:06:50 -请求地址 : http://localhost:8081/main
2019-05-16 10:06:50 -HTTP METHOD : GET
2019-05-16 10:06:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:06:50 -参数 : []
2019-05-16 10:06:50 -耗时 : 0
2019-05-16 10:06:50 -返回值 : main
2019-05-16 10:06:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 10:06:50 -HTTP METHOD : GET
2019-05-16 10:06:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 10:06:50 -参数 : []
2019-05-16 10:06:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 10:06:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 10:06:50 -<==      Total: 0
2019-05-16 10:06:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 10:06:50 -==> Parameters: 1(Long), 0(String)
2019-05-16 10:06:50 -<==      Total: 1
2019-05-16 10:06:50 -耗时 : 10
2019-05-16 10:06:50 -返回值 : com.bootdo.common.utils.PageUtils@362e244e
2019-05-16 10:06:50 -请求地址 : http://localhost:8081/main
2019-05-16 10:06:50 -HTTP METHOD : GET
2019-05-16 10:06:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:06:50 -参数 : []
2019-05-16 10:06:50 -耗时 : 1
2019-05-16 10:06:50 -返回值 : main
2019-05-16 10:06:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 10:06:56 -==> Parameters: 1(Long)
2019-05-16 10:06:56 -<==      Total: 93
2019-05-16 10:06:56 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 10:06:56 -HTTP METHOD : GET
2019-05-16 10:06:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 10:06:56 -参数 : []
2019-05-16 10:06:56 -耗时 : 1
2019-05-16 10:06:56 -返回值 : charts/tableElecYY
2019-05-16 10:06:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:06:56 -HTTP METHOD : GET
2019-05-16 10:06:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:06:56 -参数 : [userType]
2019-05-16 10:06:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:06:56 -==> Parameters: userType(String)
2019-05-16 10:06:56 -<==      Total: 4
2019-05-16 10:06:56 -耗时 : 6
2019-05-16 10:06:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:06:57 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-16 10:06:57 -HTTP METHOD : GET
2019-05-16 10:06:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:06:57 -参数 : []
2019-05-16 10:06:57 -耗时 : 16
2019-05-16 10:06:57 -返回值 : charts/tableHeatYY
2019-05-16 10:06:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:06:57 -HTTP METHOD : GET
2019-05-16 10:06:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:06:57 -参数 : [userType]
2019-05-16 10:06:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:06:57 -==> Parameters: userType(String)
2019-05-16 10:06:57 -<==      Total: 4
2019-05-16 10:06:57 -耗时 : 10
2019-05-16 10:06:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:21:45 -Starting BootdoApplication on PC-201905091110 with PID 23336 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 10:21:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 10:21:45 -The following profiles are active: dev
2019-05-16 10:21:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 10:21:45 CST 2019]; root of context hierarchy
2019-05-16 10:21:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 10:21:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e01c8274] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:21:50 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d275b11b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:21:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:21:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:21:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:21:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 10:21:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 10:21:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:21:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:21:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:21:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:21:51 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 10:21:51 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 10:21:52 -Starting service [Tomcat]
2019-05-16 10:21:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 10:21:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 10:21:52 -Initializing Spring embedded WebApplicationContext
2019-05-16 10:21:52 -Root WebApplicationContext: initialization completed in 6463 ms
2019-05-16 10:21:52 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 10:21:52 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 10:21:52 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 10:21:52 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 10:21:52 -Filter xssFilter was not registered (disabled)
2019-05-16 10:21:52 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 10:21:52 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 10:21:52 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 10:21:52 -Servlet dispatcherServlet mapped to [/]
2019-05-16 10:21:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 10:21:45 CST 2019]; root of context hierarchy
2019-05-16 10:21:59 -Using default implementation for ThreadExecutor
2019-05-16 10:21:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 10:21:59 -Quartz Scheduler v.2.2.1 created.
2019-05-16 10:21:59 -RAMJobStore initialized.
2019-05-16 10:21:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 10:21:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 10:21:59 -Quartz scheduler version: 2.2.1
2019-05-16 10:21:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3a0896b3
2019-05-16 10:22:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 10:22:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 10:22:02 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 10:22:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:22:02 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 10:22:02 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:22:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 10:22:02 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 10:22:02 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 10:22:02 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:22:02 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:22:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 10:22:02 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 10:22:02 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:22:02 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 10:22:02 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 10:22:02 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 10:22:02 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 10:22:02 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:22:02 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 10:22:02 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:22:02 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 10:22:02 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 10:22:02 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-16 10:22:02 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 10:22:02 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 10:22:02 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 10:22:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 10:22:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 10:22:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 10:22:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 10:22:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 10:22:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 10:22:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 10:22:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 10:22:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 10:22:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 10:22:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 10:22:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 10:22:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 10:22:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 10:22:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 10:22:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 10:22:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 10:22:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 10:22:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 10:22:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 10:22:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 10:22:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 10:22:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 10:22:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 10:22:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:22:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 10:22:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:22:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 10:22:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:22:02 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:22:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 10:22:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 10:22:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 10:22:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 10:22:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 10:22:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 10:22:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 10:22:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 10:22:02 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 10:22:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 10:22:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 10:22:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 10:22:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 10:22:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 10:22:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 10:22:02 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 10:22:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 10:22:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 10:22:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 10:22:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 10:22:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 10:22:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 10:22:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 10:22:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 10:22:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 10:22:02 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 10:22:02 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 10:22:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 10:22:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 10:22:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 10:22:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 10:22:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 10:22:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 10:22:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 10:22:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 10:22:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 10:22:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 10:22:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 10:22:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 10:22:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 10:22:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 10:22:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 10:22:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 10:22:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 10:22:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 10:22:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 10:22:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 10:22:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 10:22:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 10:22:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 10:22:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 10:22:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 10:22:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 10:22:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 10:22:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 10:22:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 10:22:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 10:22:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 10:22:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 10:22:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 10:22:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 10:22:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 10:22:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 10:22:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 10:22:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 10:22:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 10:22:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 10:22:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 10:22:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 10:22:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 10:22:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 10:22:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 10:22:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 10:22:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 10:22:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 10:22:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 10:22:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 10:22:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 10:22:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 10:22:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 10:22:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 10:22:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 10:22:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 10:22:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 10:22:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:22:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 10:22:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:22:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 10:22:02 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 10:22:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 10:22:02 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 10:22:02 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:22:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 10:22:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 10:22:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 10:22:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 10:22:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 10:22:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 10:22:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 10:22:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:22:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 10:21:45 CST 2019]; root of context hierarchy
2019-05-16 10:22:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:22:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:22:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:22:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 10:22:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 10:22:06 -Registering beans for JMX exposure on startup
2019-05-16 10:22:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 10:22:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 10:22:06 -Starting beans in phase 2147483647
2019-05-16 10:22:06 -Context refreshed
2019-05-16 10:22:06 -Found 1 custom documentation plugin(s)
2019-05-16 10:22:06 -Scanning for api listing references
2019-05-16 10:22:06 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 10:22:06 -Generating unique operation named: removeUsingPOST_1
2019-05-16 10:22:06 -Generating unique operation named: addUsingGET_1
2019-05-16 10:22:06 -Generating unique operation named: editUsingGET_1
2019-05-16 10:22:07 -Generating unique operation named: listUsingGET_1
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_2
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_3
2019-05-16 10:22:07 -Generating unique operation named: saveUsingPOST_1
2019-05-16 10:22:07 -Generating unique operation named: updateUsingGET_1
2019-05-16 10:22:07 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPOST_1
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPUT_1
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 10:22:07 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 10:22:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 10:22:07 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 10:22:07 -Generating unique operation named: addUsingGET_2
2019-05-16 10:22:07 -Generating unique operation named: editUsingGET_2
2019-05-16 10:22:07 -Generating unique operation named: listUsingGET_2
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_4
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_5
2019-05-16 10:22:07 -Generating unique operation named: saveUsingPOST_2
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPOST_2
2019-05-16 10:22:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 10:22:07 -Generating unique operation named: addUsingGET_3
2019-05-16 10:22:07 -Generating unique operation named: editUsingGET_3
2019-05-16 10:22:07 -Generating unique operation named: listUsingGET_3
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_6
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_7
2019-05-16 10:22:07 -Generating unique operation named: saveUsingPOST_3
2019-05-16 10:22:07 -Generating unique operation named: updateUsingGET_2
2019-05-16 10:22:07 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPOST_3
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPUT_2
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 10:22:07 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 10:22:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 10:22:07 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 10:22:07 -Generating unique operation named: addUsingGET_4
2019-05-16 10:22:07 -Generating unique operation named: editUsingGET_4
2019-05-16 10:22:07 -Generating unique operation named: listUsingGET_4
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_8
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_9
2019-05-16 10:22:07 -Generating unique operation named: saveUsingPOST_4
2019-05-16 10:22:07 -Generating unique operation named: updateUsingGET_3
2019-05-16 10:22:07 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPOST_4
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPUT_3
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 10:22:07 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 10:22:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 10:22:07 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 10:22:07 -Generating unique operation named: ElecUsingGET_1
2019-05-16 10:22:07 -Generating unique operation named: addUsingGET_5
2019-05-16 10:22:07 -Generating unique operation named: editUsingGET_5
2019-05-16 10:22:07 -Generating unique operation named: listUsingGET_5
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_10
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_11
2019-05-16 10:22:07 -Generating unique operation named: saveUsingPOST_5
2019-05-16 10:22:07 -Generating unique operation named: updateUsingGET_4
2019-05-16 10:22:07 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPOST_5
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPUT_4
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 10:22:07 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 10:22:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 10:22:07 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 10:22:07 -Generating unique operation named: editUsingGET_6
2019-05-16 10:22:07 -Generating unique operation named: listUsingGET_6
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPOST_6
2019-05-16 10:22:07 -Generating unique operation named: addUsingGET_6
2019-05-16 10:22:07 -Generating unique operation named: editUsingGET_7
2019-05-16 10:22:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 10:22:07 -Generating unique operation named: listUsingGET_7
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_12
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_13
2019-05-16 10:22:07 -Generating unique operation named: saveUsingPOST_6
2019-05-16 10:22:07 -Generating unique operation named: updateUsingGET_5
2019-05-16 10:22:07 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPOST_7
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPUT_5
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 10:22:07 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 10:22:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 10:22:07 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 10:22:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 10:22:07 -Generating unique operation named: addUsingGET_7
2019-05-16 10:22:07 -Generating unique operation named: editUsingGET_8
2019-05-16 10:22:07 -Generating unique operation named: listUsingGET_8
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_14
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_15
2019-05-16 10:22:07 -Generating unique operation named: saveUsingPOST_7
2019-05-16 10:22:07 -Generating unique operation named: updateUsingGET_6
2019-05-16 10:22:07 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPOST_8
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPUT_6
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 10:22:07 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 10:22:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 10:22:07 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 10:22:07 -Generating unique operation named: addUsingGET_8
2019-05-16 10:22:07 -Generating unique operation named: editUsingGET_9
2019-05-16 10:22:07 -Generating unique operation named: listUsingGET_9
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_16
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_17
2019-05-16 10:22:07 -Generating unique operation named: saveUsingPOST_8
2019-05-16 10:22:07 -Generating unique operation named: updateUsingGET_7
2019-05-16 10:22:07 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPOST_9
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPUT_7
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 10:22:07 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 10:22:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 10:22:07 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 10:22:07 -Generating unique operation named: addUsingGET_9
2019-05-16 10:22:07 -Generating unique operation named: editUsingGET_10
2019-05-16 10:22:07 -Generating unique operation named: infoUsingGET_1
2019-05-16 10:22:07 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 10:22:07 -Generating unique operation named: infoUsingPOST_1
2019-05-16 10:22:07 -Generating unique operation named: infoUsingPUT_1
2019-05-16 10:22:07 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 10:22:07 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 10:22:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 10:22:07 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 10:22:07 -Generating unique operation named: listUsingGET_10
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_18
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_19
2019-05-16 10:22:07 -Generating unique operation named: saveUsingPOST_9
2019-05-16 10:22:07 -Generating unique operation named: updateUsingPOST_10
2019-05-16 10:22:07 -Generating unique operation named: listUsingGET_11
2019-05-16 10:22:07 -Generating unique operation named: removeUsingPOST_20
2019-05-16 10:22:07 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 10:22:07 -Generating unique operation named: addUsingGET_10
2019-05-16 10:22:07 -Generating unique operation named: editUsingGET_11
2019-05-16 10:22:08 -Generating unique operation named: listUsingGET_12
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_21
2019-05-16 10:22:08 -Generating unique operation named: saveUsingPOST_10
2019-05-16 10:22:08 -Generating unique operation named: treeUsingGET_1
2019-05-16 10:22:08 -Generating unique operation named: treeUsingGET_2
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPOST_11
2019-05-16 10:22:08 -Generating unique operation named: addUsingGET_11
2019-05-16 10:22:08 -Generating unique operation named: editUsingGET_12
2019-05-16 10:22:08 -Generating unique operation named: listUsingGET_13
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_22
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_23
2019-05-16 10:22:08 -Generating unique operation named: saveUsingPOST_11
2019-05-16 10:22:08 -Generating unique operation named: updateUsingGET_8
2019-05-16 10:22:08 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPOST_12
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPUT_8
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 10:22:08 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 10:22:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 10:22:08 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 10:22:08 -Generating unique operation named: addUsingGET_12
2019-05-16 10:22:08 -Generating unique operation named: editUsingGET_13
2019-05-16 10:22:08 -Generating unique operation named: listUsingGET_14
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_24
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_25
2019-05-16 10:22:08 -Generating unique operation named: saveUsingPOST_12
2019-05-16 10:22:08 -Generating unique operation named: updateUsingGET_9
2019-05-16 10:22:08 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPOST_13
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPUT_9
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 10:22:08 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 10:22:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 10:22:08 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 10:22:08 -Generating unique operation named: addUsingGET_13
2019-05-16 10:22:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 10:22:08 -Generating unique operation named: editUsingGET_14
2019-05-16 10:22:08 -Generating unique operation named: listUsingGET_15
2019-05-16 10:22:08 -Generating unique operation named: saveUsingPOST_13
2019-05-16 10:22:08 -Generating unique operation named: saveUsingPOST_14
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPOST_14
2019-05-16 10:22:08 -Generating unique operation named: listUsingGET_16
2019-05-16 10:22:08 -Generating unique operation named: listUsingHEAD_1
2019-05-16 10:22:08 -Generating unique operation named: listUsingPOST_1
2019-05-16 10:22:08 -Generating unique operation named: listUsingPUT_1
2019-05-16 10:22:08 -Generating unique operation named: listUsingPATCH_1
2019-05-16 10:22:08 -Generating unique operation named: listUsingDELETE_1
2019-05-16 10:22:08 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 10:22:08 -Generating unique operation named: listUsingTRACE_1
2019-05-16 10:22:08 -Generating unique operation named: countDDUsingGET_1
2019-05-16 10:22:08 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 10:22:08 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-16 10:22:08 -Generating unique operation named: addUsingGET_14
2019-05-16 10:22:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 10:22:08 -Generating unique operation named: editUsingGET_15
2019-05-16 10:22:08 -Generating unique operation named: listUsingGET_17
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_26
2019-05-16 10:22:08 -Generating unique operation named: saveUsingPOST_15
2019-05-16 10:22:08 -Generating unique operation named: treeUsingGET_3
2019-05-16 10:22:08 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPOST_15
2019-05-16 10:22:08 -Generating unique operation named: addUsingGET_15
2019-05-16 10:22:08 -Generating unique operation named: editUsingGET_16
2019-05-16 10:22:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 10:22:08 -Generating unique operation named: listUsingGET_18
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_27
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_28
2019-05-16 10:22:08 -Generating unique operation named: saveUsingPOST_16
2019-05-16 10:22:08 -Generating unique operation named: updateUsingGET_10
2019-05-16 10:22:08 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPOST_16
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPUT_10
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 10:22:08 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 10:22:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 10:22:08 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 10:22:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 10:22:08 -Generating unique operation named: addUsingGET_16
2019-05-16 10:22:08 -Generating unique operation named: editUsingGET_17
2019-05-16 10:22:08 -Generating unique operation named: listUsingGET_19
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_29
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_30
2019-05-16 10:22:08 -Generating unique operation named: saveUsingPOST_17
2019-05-16 10:22:08 -Generating unique operation named: updateUsingGET_11
2019-05-16 10:22:08 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPOST_17
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPUT_11
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 10:22:08 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 10:22:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 10:22:08 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 10:22:08 -Generating unique operation named: addUsingGET_17
2019-05-16 10:22:08 -Generating unique operation named: editUsingGET_18
2019-05-16 10:22:08 -Generating unique operation named: listUsingGET_20
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_31
2019-05-16 10:22:08 -Generating unique operation named: removeUsingPOST_32
2019-05-16 10:22:08 -Generating unique operation named: saveUsingPOST_18
2019-05-16 10:22:08 -Generating unique operation named: updateUsingGET_12
2019-05-16 10:22:08 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPOST_18
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPUT_12
2019-05-16 10:22:08 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 10:22:08 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 10:22:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 10:22:08 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 10:22:08 -Starting Quartz Scheduler now
2019-05-16 10:22:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 10:22:08 -Starting...
2019-05-16 10:22:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 10:22:08 -Started.
2019-05-16 10:22:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 10:22:08 -Using a shared selector for servlet write/read
2019-05-16 10:22:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 10:22:08 -Started BootdoApplication in 24.302 seconds (JVM running for 25.067)
2019-05-16 10:22:08 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 10:22:09 -==> Parameters: 
2019-05-16 10:22:09 -<==      Total: 1
2019-05-16 10:22:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 10:22:20 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 10:22:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2019-05-16 10:22:20 -Enabling session validation scheduler...
2019-05-16 10:22:20 -请求地址 : http://localhost:8081/login;JSESSIONID=e6783804-9ca4-4041-b89a-b0dad22ec4f8
2019-05-16 10:22:20 -HTTP METHOD : GET
2019-05-16 10:22:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 10:22:20 -参数 : [{}]
2019-05-16 10:22:20 -耗时 : 4
2019-05-16 10:22:20 -返回值 : login
2019-05-16 10:22:21 -请求地址 : http://localhost:8081/getVerify
2019-05-16 10:22:21 -HTTP METHOD : GET
2019-05-16 10:22:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 10:22:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3e6be1f9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3a5472ec]
2019-05-16 10:22:22 -0493
2019-05-16 10:22:22 -耗时 : 585
2019-05-16 10:22:22 -返回值 : null
2019-05-16 10:22:29 -请求地址 : http://localhost:8081/login
2019-05-16 10:22:29 -HTTP METHOD : POST
2019-05-16 10:22:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 10:22:29 -参数 : [admin, 111111, 0493, org.apache.shiro.web.servlet.ShiroHttpServletRequest@c798478]
2019-05-16 10:22:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 10:22:29 -==> Parameters: admin(String)
2019-05-16 10:22:29 -<==      Total: 1
2019-05-16 10:22:29 -耗时 : 100
2019-05-16 10:22:29 -返回值 : {msg=操作成功, code=0}
2019-05-16 10:22:29 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 10:22:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:22:29 -==> Parameters: 1(Long), admin(String), 登录(String), 101(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 10:22:29.963(Timestamp)
2019-05-16 10:22:30 -请求地址 : http://localhost:8081/index
2019-05-16 10:22:30 -HTTP METHOD : GET
2019-05-16 10:22:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 10:22:30 -参数 : [{}]
2019-05-16 10:22:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 10:22:30 -<==    Updates: 1
2019-05-16 10:22:30 -==> Parameters: 1(Long)
2019-05-16 10:22:30 -<==      Total: 49
2019-05-16 10:22:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 10:22:30 -==> Parameters: 138(Long)
2019-05-16 10:22:30 -<==      Total: 1
2019-05-16 10:22:30 -耗时 : 148
2019-05-16 10:22:30 -返回值 : index_v1
2019-05-16 10:22:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:22:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 148(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 10:22:30.224(Timestamp)
2019-05-16 10:22:30 -<==    Updates: 1
2019-05-16 10:22:30 -请求地址 : http://localhost:8081/main
2019-05-16 10:22:30 -HTTP METHOD : GET
2019-05-16 10:22:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:22:30 -参数 : []
2019-05-16 10:22:30 -耗时 : 0
2019-05-16 10:22:30 -返回值 : main
2019-05-16 10:22:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 10:22:30 -HTTP METHOD : GET
2019-05-16 10:22:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 10:22:30 -参数 : []
2019-05-16 10:22:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 10:22:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 10:22:30 -<==      Total: 0
2019-05-16 10:22:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 10:22:30 -==> Parameters: 1(Long), 0(String)
2019-05-16 10:22:30 -<==      Total: 1
2019-05-16 10:22:30 -耗时 : 43
2019-05-16 10:22:30 -返回值 : com.bootdo.common.utils.PageUtils@b603712
2019-05-16 10:22:30 -请求地址 : http://localhost:8081/main
2019-05-16 10:22:30 -HTTP METHOD : GET
2019-05-16 10:22:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:22:30 -参数 : []
2019-05-16 10:22:30 -耗时 : 0
2019-05-16 10:22:30 -返回值 : main
2019-05-16 10:22:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 10:22:34 -==> Parameters: 1(Long)
2019-05-16 10:22:34 -<==      Total: 93
2019-05-16 10:22:34 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 10:22:34 -HTTP METHOD : GET
2019-05-16 10:22:34 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 10:22:34 -参数 : []
2019-05-16 10:22:34 -耗时 : 10
2019-05-16 10:22:34 -返回值 : charts/tableElecYY
2019-05-16 10:22:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:22:34 -HTTP METHOD : GET
2019-05-16 10:22:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:22:34 -参数 : [userType]
2019-05-16 10:22:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:22:34 -==> Parameters: userType(String)
2019-05-16 10:22:35 -<==      Total: 4
2019-05-16 10:22:35 -耗时 : 41
2019-05-16 10:22:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:22:35 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-16 10:22:35 -HTTP METHOD : GET
2019-05-16 10:22:35 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 10:22:35 -参数 : []
2019-05-16 10:22:35 -耗时 : 8
2019-05-16 10:22:35 -返回值 : charts/tableWaterYY
2019-05-16 10:22:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:22:35 -HTTP METHOD : GET
2019-05-16 10:22:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:22:35 -参数 : [userType]
2019-05-16 10:22:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:22:35 -==> Parameters: userType(String)
2019-05-16 10:22:35 -<==      Total: 4
2019-05-16 10:22:35 -耗时 : 6
2019-05-16 10:22:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:22:36 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-16 10:22:36 -HTTP METHOD : GET
2019-05-16 10:22:36 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:22:36 -参数 : []
2019-05-16 10:22:36 -耗时 : 5
2019-05-16 10:22:36 -返回值 : charts/tableHeatYY
2019-05-16 10:22:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:22:36 -HTTP METHOD : GET
2019-05-16 10:22:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:22:36 -参数 : [userType]
2019-05-16 10:22:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:22:36 -==> Parameters: userType(String)
2019-05-16 10:22:36 -<==      Total: 4
2019-05-16 10:22:36 -耗时 : 5
2019-05-16 10:22:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:22:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:22:43 -HTTP METHOD : GET
2019-05-16 10:22:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:22:43 -参数 : []
2019-05-16 10:22:43 -耗时 : 2
2019-05-16 10:22:43 -返回值 : system/dept/deptTree
2019-05-16 10:22:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:22:43 -HTTP METHOD : GET
2019-05-16 10:22:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:22:43 -参数 : []
2019-05-16 10:22:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:22:43 -==> Parameters: 
2019-05-16 10:22:43 -<==      Total: 3
2019-05-16 10:22:43 -耗时 : 19
2019-05-16 10:22:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:22:44 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-16 10:22:44 -HTTP METHOD : POST
2019-05-16 10:22:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:22:44 -参数 : [com.bootdo.heat.vo.HeatVo@69651905, com.bootdo.moneyLog.vo.HeatLogVo@244c3fdd]
2019-05-16 10:22:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:22:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatYY/tableHeatYY(String), java.lang.NumberFormatException: null(String), null, 2019-05-16 10:22:44.993(Timestamp)
2019-05-16 10:22:45 -null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(tableHeatYYController.java:58)
	at com.bootdo.charts.controller.tableHeatYYController$$FastClassBySpringCGLIB$$a9eba87d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatYYController$$EnhancerBySpringCGLIB$$f27eb5e.tableHeatYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-16 10:22:45 -<==    Updates: 1
2019-05-16 10:22:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:22:50 -HTTP METHOD : GET
2019-05-16 10:22:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:22:50 -参数 : []
2019-05-16 10:22:50 -耗时 : 1
2019-05-16 10:22:50 -返回值 : system/dept/deptTree
2019-05-16 10:22:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:22:50 -HTTP METHOD : GET
2019-05-16 10:22:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:22:50 -参数 : []
2019-05-16 10:22:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:22:50 -==> Parameters: 
2019-05-16 10:22:50 -<==      Total: 3
2019-05-16 10:22:50 -耗时 : 3
2019-05-16 10:22:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:22:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:22:56 -HTTP METHOD : GET
2019-05-16 10:22:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:22:56 -参数 : []
2019-05-16 10:22:56 -耗时 : 2
2019-05-16 10:22:56 -返回值 : system/dept/deptTree
2019-05-16 10:22:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:22:56 -HTTP METHOD : GET
2019-05-16 10:22:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:22:56 -参数 : []
2019-05-16 10:22:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:22:56 -==> Parameters: 
2019-05-16 10:22:56 -<==      Total: 3
2019-05-16 10:22:56 -耗时 : 5
2019-05-16 10:22:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:22:58 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-16 10:22:58 -HTTP METHOD : POST
2019-05-16 10:22:58 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:22:58 -参数 : [com.bootdo.heat.vo.HeatVo@7a3f25f2, com.bootdo.moneyLog.vo.HeatLogVo@749abdb]
2019-05-16 10:22:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:22:58 -null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(tableHeatYYController.java:58)
	at com.bootdo.charts.controller.tableHeatYYController$$FastClassBySpringCGLIB$$a9eba87d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatYYController$$EnhancerBySpringCGLIB$$f27eb5e.tableHeatYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-16 10:22:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatYY/tableHeatYY(String), java.lang.NumberFormatException: null(String), null, 2019-05-16 10:22:58.82(Timestamp)
2019-05-16 10:22:58 -<==    Updates: 1
2019-05-16 10:23:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-05-16 10:26:37 -请求地址 : http://localhost:8081/index
2019-05-16 10:26:37 -HTTP METHOD : GET
2019-05-16 10:26:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 10:26:37 -参数 : [{}]
2019-05-16 10:26:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 10:26:37 -==> Parameters: 1(Long)
2019-05-16 10:26:37 -<==      Total: 49
2019-05-16 10:26:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 10:26:37 -==> Parameters: 138(Long)
2019-05-16 10:26:37 -<==      Total: 1
2019-05-16 10:26:37 -耗时 : 21
2019-05-16 10:26:37 -返回值 : index_v1
2019-05-16 10:26:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:26:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 10:26:37.352(Timestamp)
2019-05-16 10:26:37 -<==    Updates: 1
2019-05-16 10:26:37 -请求地址 : http://localhost:8081/main
2019-05-16 10:26:37 -HTTP METHOD : GET
2019-05-16 10:26:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:26:37 -参数 : []
2019-05-16 10:26:37 -耗时 : 0
2019-05-16 10:26:37 -返回值 : main
2019-05-16 10:26:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 10:26:37 -HTTP METHOD : GET
2019-05-16 10:26:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 10:26:37 -参数 : []
2019-05-16 10:26:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 10:26:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 10:26:37 -<==      Total: 0
2019-05-16 10:26:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 10:26:37 -==> Parameters: 1(Long), 0(String)
2019-05-16 10:26:37 -<==      Total: 1
2019-05-16 10:26:37 -耗时 : 15
2019-05-16 10:26:37 -返回值 : com.bootdo.common.utils.PageUtils@2e432bcf
2019-05-16 10:26:37 -请求地址 : http://localhost:8081/main
2019-05-16 10:26:37 -HTTP METHOD : GET
2019-05-16 10:26:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:26:37 -参数 : []
2019-05-16 10:26:37 -耗时 : 0
2019-05-16 10:26:37 -返回值 : main
2019-05-16 10:26:41 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 10:26:41 -HTTP METHOD : GET
2019-05-16 10:26:41 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 10:26:41 -参数 : []
2019-05-16 10:26:41 -耗时 : 0
2019-05-16 10:26:41 -返回值 : charts/tableElecYY
2019-05-16 10:26:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:26:41 -HTTP METHOD : GET
2019-05-16 10:26:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:26:41 -参数 : [userType]
2019-05-16 10:26:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:26:41 -==> Parameters: userType(String)
2019-05-16 10:26:41 -<==      Total: 4
2019-05-16 10:26:41 -耗时 : 8
2019-05-16 10:26:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:26:41 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-16 10:26:41 -HTTP METHOD : GET
2019-05-16 10:26:41 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 10:26:41 -参数 : []
2019-05-16 10:26:41 -耗时 : 1
2019-05-16 10:26:41 -返回值 : charts/tableWaterYY
2019-05-16 10:26:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:26:42 -HTTP METHOD : GET
2019-05-16 10:26:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:26:42 -参数 : [userType]
2019-05-16 10:26:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:26:42 -==> Parameters: userType(String)
2019-05-16 10:26:42 -<==      Total: 4
2019-05-16 10:26:42 -耗时 : 6
2019-05-16 10:26:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:26:42 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-16 10:26:42 -HTTP METHOD : GET
2019-05-16 10:26:42 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:26:42 -参数 : []
2019-05-16 10:26:42 -耗时 : 0
2019-05-16 10:26:42 -返回值 : charts/tableHeatYY
2019-05-16 10:26:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:26:42 -HTTP METHOD : GET
2019-05-16 10:26:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:26:42 -参数 : [userType]
2019-05-16 10:26:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:26:42 -==> Parameters: userType(String)
2019-05-16 10:26:42 -<==      Total: 4
2019-05-16 10:26:42 -耗时 : 5
2019-05-16 10:26:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:26:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:26:46 -HTTP METHOD : GET
2019-05-16 10:26:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:26:46 -参数 : []
2019-05-16 10:26:46 -耗时 : 1
2019-05-16 10:26:46 -返回值 : system/dept/deptTree
2019-05-16 10:26:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:26:46 -HTTP METHOD : GET
2019-05-16 10:26:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:26:46 -参数 : []
2019-05-16 10:26:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:26:46 -==> Parameters: 
2019-05-16 10:26:46 -<==      Total: 3
2019-05-16 10:26:46 -耗时 : 4
2019-05-16 10:26:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:26:48 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-16 10:26:48 -HTTP METHOD : POST
2019-05-16 10:26:48 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:26:48 -参数 : [com.bootdo.heat.vo.HeatVo@504b7e25, com.bootdo.moneyLog.vo.HeatLogVo@610e1cf7]
2019-05-16 10:26:48 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:26:48 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:26:48 -<==      Total: 1
2019-05-16 10:26:48 -==>  Preparing: select m_heat,g1_heat,g2_heat,g3_heat,heat_org from heat_price 
2019-05-16 10:26:48 -==> Parameters: 
2019-05-16 10:26:48 -{conn-10002, pstmt-20024} execute error. select m_heat,g1_heat,g2_heat,g3_heat,heat_org from heat_price
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'g1_heat' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.HeatPrice(Unknown Source)
	at com.bootdo.heat.service.impl.HeatServiceImpl.HeatPrice(HeatServiceImpl.java:265)
	at com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(tableHeatYYController.java:418)
	at com.bootdo.charts.controller.tableHeatYYController$$FastClassBySpringCGLIB$$a9eba87d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatYYController$$EnhancerBySpringCGLIB$$f27eb5e.tableHeatYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-16 10:26:48 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-05-16 10:26:48 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-05-16 10:26:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:26:48 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatYY/tableHeatYY(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'g1_heat' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\heat\HeatMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select m_heat,g1_heat,g2_heat,g3_heat,heat_org from heat_price
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'g1_heat' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'g1_heat' in 'field list'(String), null, 2019-05-16 10:26:48.438(Timestamp)
2019-05-16 10:26:48 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'g1_heat' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\heat\HeatMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select m_heat,g1_heat,g2_heat,g3_heat,heat_org from heat_price
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'g1_heat' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'g1_heat' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'g1_heat' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\heat\HeatMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select m_heat,g1_heat,g2_heat,g3_heat,heat_org from heat_price
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'g1_heat' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'g1_heat' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy106.HeatPrice(Unknown Source)
	at com.bootdo.heat.service.impl.HeatServiceImpl.HeatPrice(HeatServiceImpl.java:265)
	at com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(tableHeatYYController.java:418)
	at com.bootdo.charts.controller.tableHeatYYController$$FastClassBySpringCGLIB$$a9eba87d.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatYYController$$EnhancerBySpringCGLIB$$f27eb5e.tableHeatYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'g1_heat' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-05-16 10:26:48 -<==    Updates: 1
2019-05-16 10:29:26 -Starting BootdoApplication on PC-201905091110 with PID 6844 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 10:29:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 10:29:26 -The following profiles are active: dev
2019-05-16 10:29:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 10:29:26 CST 2019]; root of context hierarchy
2019-05-16 10:29:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 10:29:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8f957530] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:29:32 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$81eea3d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:29:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:29:33 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:29:33 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:29:33 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 10:29:33 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 10:29:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:29:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:29:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:29:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:29:34 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 10:29:34 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 10:29:34 -Starting service [Tomcat]
2019-05-16 10:29:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 10:29:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 10:29:34 -Initializing Spring embedded WebApplicationContext
2019-05-16 10:29:34 -Root WebApplicationContext: initialization completed in 7843 ms
2019-05-16 10:29:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 10:29:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 10:29:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 10:29:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 10:29:35 -Filter xssFilter was not registered (disabled)
2019-05-16 10:29:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 10:29:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 10:29:35 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 10:29:35 -Servlet dispatcherServlet mapped to [/]
2019-05-16 10:29:43 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 10:29:26 CST 2019]; root of context hierarchy
2019-05-16 10:29:43 -Using default implementation for ThreadExecutor
2019-05-16 10:29:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 10:29:43 -Quartz Scheduler v.2.2.1 created.
2019-05-16 10:29:43 -RAMJobStore initialized.
2019-05-16 10:29:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 10:29:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 10:29:43 -Quartz scheduler version: 2.2.1
2019-05-16 10:29:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4e5c8ef3
2019-05-16 10:29:44 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 10:29:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 10:29:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 10:29:46 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:29:46 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:29:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 10:29:46 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 10:29:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 10:29:46 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 10:29:46 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:29:46 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 10:29:46 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:29:46 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 10:29:46 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:29:46 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 10:29:46 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 10:29:46 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 10:29:46 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 10:29:46 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:29:46 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 10:29:46 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:29:46 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 10:29:46 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-16 10:29:46 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 10:29:46 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 10:29:46 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 10:29:46 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 10:29:46 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 10:29:46 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 10:29:46 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 10:29:46 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 10:29:46 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 10:29:46 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 10:29:46 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 10:29:46 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 10:29:46 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 10:29:46 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 10:29:46 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 10:29:46 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 10:29:46 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 10:29:46 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 10:29:46 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 10:29:46 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 10:29:46 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 10:29:46 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 10:29:46 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 10:29:46 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 10:29:46 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 10:29:46 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 10:29:46 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 10:29:46 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 10:29:46 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 10:29:46 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 10:29:46 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 10:29:46 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 10:29:46 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 10:29:46 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:29:46 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 10:29:46 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:29:46 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:29:46 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:29:46 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 10:29:46 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 10:29:46 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 10:29:46 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 10:29:46 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 10:29:46 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 10:29:46 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 10:29:46 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 10:29:46 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 10:29:46 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 10:29:46 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 10:29:46 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 10:29:46 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 10:29:46 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 10:29:46 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 10:29:46 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 10:29:46 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 10:29:46 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 10:29:46 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 10:29:46 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 10:29:46 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 10:29:46 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 10:29:46 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 10:29:46 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 10:29:46 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 10:29:46 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 10:29:46 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:46 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 10:29:46 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 10:29:46 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 10:29:46 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 10:29:46 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 10:29:46 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 10:29:46 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 10:29:46 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 10:29:46 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 10:29:46 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 10:29:46 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 10:29:46 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 10:29:46 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 10:29:46 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 10:29:46 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 10:29:46 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 10:29:46 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 10:29:46 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 10:29:46 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 10:29:46 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:46 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 10:29:46 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 10:29:46 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:46 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 10:29:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 10:29:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 10:29:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 10:29:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 10:29:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 10:29:47 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:47 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 10:29:47 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 10:29:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 10:29:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 10:29:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 10:29:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 10:29:47 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 10:29:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 10:29:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 10:29:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 10:29:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 10:29:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 10:29:47 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 10:29:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 10:29:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 10:29:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 10:29:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 10:29:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 10:29:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 10:29:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 10:29:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 10:29:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 10:29:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 10:29:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 10:29:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 10:29:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 10:29:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 10:29:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 10:29:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 10:29:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 10:29:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 10:29:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 10:29:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 10:29:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 10:29:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 10:29:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 10:29:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 10:29:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 10:29:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 10:29:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 10:29:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 10:29:47 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 10:29:47 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 10:29:47 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 10:29:47 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 10:29:47 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 10:29:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 10:29:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 10:29:47 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:47 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 10:29:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 10:29:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 10:29:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 10:29:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 10:29:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 10:29:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:29:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 10:29:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 10:29:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:29:47 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:29:47 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 10:29:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 10:29:47 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 10:29:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 10:29:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 10:29:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 10:29:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 10:29:47 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 10:29:47 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 10:29:47 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 10:29:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:29:48 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 10:29:26 CST 2019]; root of context hierarchy
2019-05-16 10:29:48 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:29:48 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:29:48 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:29:48 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 10:29:48 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 10:29:50 -Registering beans for JMX exposure on startup
2019-05-16 10:29:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 10:29:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 10:29:50 -Starting beans in phase 2147483647
2019-05-16 10:29:50 -Context refreshed
2019-05-16 10:29:50 -Found 1 custom documentation plugin(s)
2019-05-16 10:29:50 -Scanning for api listing references
2019-05-16 10:29:51 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 10:29:51 -Generating unique operation named: removeUsingPOST_1
2019-05-16 10:29:51 -Generating unique operation named: addUsingGET_1
2019-05-16 10:29:51 -Generating unique operation named: editUsingGET_1
2019-05-16 10:29:51 -Generating unique operation named: listUsingGET_1
2019-05-16 10:29:51 -Generating unique operation named: removeUsingPOST_2
2019-05-16 10:29:51 -Generating unique operation named: removeUsingPOST_3
2019-05-16 10:29:51 -Generating unique operation named: saveUsingPOST_1
2019-05-16 10:29:51 -Generating unique operation named: updateUsingGET_1
2019-05-16 10:29:51 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPOST_1
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPUT_1
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 10:29:51 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 10:29:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 10:29:51 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 10:29:51 -Generating unique operation named: addUsingGET_2
2019-05-16 10:29:51 -Generating unique operation named: editUsingGET_2
2019-05-16 10:29:51 -Generating unique operation named: listUsingGET_2
2019-05-16 10:29:51 -Generating unique operation named: removeUsingPOST_4
2019-05-16 10:29:51 -Generating unique operation named: removeUsingPOST_5
2019-05-16 10:29:51 -Generating unique operation named: saveUsingPOST_2
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPOST_2
2019-05-16 10:29:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 10:29:51 -Generating unique operation named: addUsingGET_3
2019-05-16 10:29:51 -Generating unique operation named: editUsingGET_3
2019-05-16 10:29:51 -Generating unique operation named: listUsingGET_3
2019-05-16 10:29:51 -Generating unique operation named: removeUsingPOST_6
2019-05-16 10:29:51 -Generating unique operation named: removeUsingPOST_7
2019-05-16 10:29:51 -Generating unique operation named: saveUsingPOST_3
2019-05-16 10:29:51 -Generating unique operation named: updateUsingGET_2
2019-05-16 10:29:51 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPOST_3
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPUT_2
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 10:29:51 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 10:29:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 10:29:51 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 10:29:51 -Generating unique operation named: addUsingGET_4
2019-05-16 10:29:51 -Generating unique operation named: editUsingGET_4
2019-05-16 10:29:51 -Generating unique operation named: listUsingGET_4
2019-05-16 10:29:51 -Generating unique operation named: removeUsingPOST_8
2019-05-16 10:29:51 -Generating unique operation named: removeUsingPOST_9
2019-05-16 10:29:51 -Generating unique operation named: saveUsingPOST_4
2019-05-16 10:29:51 -Generating unique operation named: updateUsingGET_3
2019-05-16 10:29:51 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPOST_4
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPUT_3
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 10:29:51 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 10:29:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 10:29:51 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 10:29:51 -Generating unique operation named: ElecUsingGET_1
2019-05-16 10:29:51 -Generating unique operation named: addUsingGET_5
2019-05-16 10:29:51 -Generating unique operation named: editUsingGET_5
2019-05-16 10:29:51 -Generating unique operation named: listUsingGET_5
2019-05-16 10:29:51 -Generating unique operation named: removeUsingPOST_10
2019-05-16 10:29:51 -Generating unique operation named: removeUsingPOST_11
2019-05-16 10:29:51 -Generating unique operation named: saveUsingPOST_5
2019-05-16 10:29:51 -Generating unique operation named: updateUsingGET_4
2019-05-16 10:29:51 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPOST_5
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPUT_4
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 10:29:51 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 10:29:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 10:29:51 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 10:29:51 -Generating unique operation named: editUsingGET_6
2019-05-16 10:29:51 -Generating unique operation named: listUsingGET_6
2019-05-16 10:29:51 -Generating unique operation named: updateUsingPOST_6
2019-05-16 10:29:51 -Generating unique operation named: addUsingGET_6
2019-05-16 10:29:51 -Generating unique operation named: editUsingGET_7
2019-05-16 10:29:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 10:29:51 -Generating unique operation named: listUsingGET_7
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_12
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_13
2019-05-16 10:29:52 -Generating unique operation named: saveUsingPOST_6
2019-05-16 10:29:52 -Generating unique operation named: updateUsingGET_5
2019-05-16 10:29:52 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 10:29:52 -Generating unique operation named: updateUsingPOST_7
2019-05-16 10:29:52 -Generating unique operation named: updateUsingPUT_5
2019-05-16 10:29:52 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 10:29:52 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 10:29:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 10:29:52 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 10:29:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 10:29:52 -Generating unique operation named: addUsingGET_7
2019-05-16 10:29:52 -Generating unique operation named: editUsingGET_8
2019-05-16 10:29:52 -Generating unique operation named: listUsingGET_8
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_14
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_15
2019-05-16 10:29:52 -Generating unique operation named: saveUsingPOST_7
2019-05-16 10:29:52 -Generating unique operation named: updateUsingGET_6
2019-05-16 10:29:52 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 10:29:52 -Generating unique operation named: updateUsingPOST_8
2019-05-16 10:29:52 -Generating unique operation named: updateUsingPUT_6
2019-05-16 10:29:52 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 10:29:52 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 10:29:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 10:29:52 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 10:29:52 -Generating unique operation named: addUsingGET_8
2019-05-16 10:29:52 -Generating unique operation named: editUsingGET_9
2019-05-16 10:29:52 -Generating unique operation named: listUsingGET_9
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_16
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_17
2019-05-16 10:29:52 -Generating unique operation named: saveUsingPOST_8
2019-05-16 10:29:52 -Generating unique operation named: updateUsingGET_7
2019-05-16 10:29:52 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 10:29:52 -Generating unique operation named: updateUsingPOST_9
2019-05-16 10:29:52 -Generating unique operation named: updateUsingPUT_7
2019-05-16 10:29:52 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 10:29:52 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 10:29:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 10:29:52 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 10:29:52 -Generating unique operation named: addUsingGET_9
2019-05-16 10:29:52 -Generating unique operation named: editUsingGET_10
2019-05-16 10:29:52 -Generating unique operation named: infoUsingGET_1
2019-05-16 10:29:52 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 10:29:52 -Generating unique operation named: infoUsingPOST_1
2019-05-16 10:29:52 -Generating unique operation named: infoUsingPUT_1
2019-05-16 10:29:52 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 10:29:52 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 10:29:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 10:29:52 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 10:29:52 -Generating unique operation named: listUsingGET_10
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_18
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_19
2019-05-16 10:29:52 -Generating unique operation named: saveUsingPOST_9
2019-05-16 10:29:52 -Generating unique operation named: updateUsingPOST_10
2019-05-16 10:29:52 -Generating unique operation named: listUsingGET_11
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_20
2019-05-16 10:29:52 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 10:29:52 -Generating unique operation named: addUsingGET_10
2019-05-16 10:29:52 -Generating unique operation named: editUsingGET_11
2019-05-16 10:29:52 -Generating unique operation named: listUsingGET_12
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_21
2019-05-16 10:29:52 -Generating unique operation named: saveUsingPOST_10
2019-05-16 10:29:52 -Generating unique operation named: treeUsingGET_1
2019-05-16 10:29:52 -Generating unique operation named: treeUsingGET_2
2019-05-16 10:29:52 -Generating unique operation named: updateUsingPOST_11
2019-05-16 10:29:52 -Generating unique operation named: addUsingGET_11
2019-05-16 10:29:52 -Generating unique operation named: editUsingGET_12
2019-05-16 10:29:52 -Generating unique operation named: listUsingGET_13
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_22
2019-05-16 10:29:52 -Generating unique operation named: removeUsingPOST_23
2019-05-16 10:29:52 -Generating unique operation named: saveUsingPOST_11
2019-05-16 10:29:53 -Generating unique operation named: updateUsingGET_8
2019-05-16 10:29:53 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPOST_12
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPUT_8
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 10:29:53 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 10:29:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 10:29:53 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 10:29:53 -Generating unique operation named: addUsingGET_12
2019-05-16 10:29:53 -Generating unique operation named: editUsingGET_13
2019-05-16 10:29:53 -Generating unique operation named: listUsingGET_14
2019-05-16 10:29:53 -Generating unique operation named: removeUsingPOST_24
2019-05-16 10:29:53 -Generating unique operation named: removeUsingPOST_25
2019-05-16 10:29:53 -Generating unique operation named: saveUsingPOST_12
2019-05-16 10:29:53 -Generating unique operation named: updateUsingGET_9
2019-05-16 10:29:53 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPOST_13
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPUT_9
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 10:29:53 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 10:29:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 10:29:53 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 10:29:53 -Generating unique operation named: addUsingGET_13
2019-05-16 10:29:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 10:29:53 -Generating unique operation named: editUsingGET_14
2019-05-16 10:29:53 -Generating unique operation named: listUsingGET_15
2019-05-16 10:29:53 -Generating unique operation named: saveUsingPOST_13
2019-05-16 10:29:53 -Generating unique operation named: saveUsingPOST_14
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPOST_14
2019-05-16 10:29:53 -Generating unique operation named: listUsingGET_16
2019-05-16 10:29:53 -Generating unique operation named: listUsingHEAD_1
2019-05-16 10:29:53 -Generating unique operation named: listUsingPOST_1
2019-05-16 10:29:53 -Generating unique operation named: listUsingPUT_1
2019-05-16 10:29:53 -Generating unique operation named: listUsingPATCH_1
2019-05-16 10:29:53 -Generating unique operation named: listUsingDELETE_1
2019-05-16 10:29:53 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 10:29:53 -Generating unique operation named: listUsingTRACE_1
2019-05-16 10:29:53 -Generating unique operation named: countDDUsingGET_1
2019-05-16 10:29:53 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 10:29:53 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-16 10:29:53 -Generating unique operation named: addUsingGET_14
2019-05-16 10:29:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 10:29:53 -Generating unique operation named: editUsingGET_15
2019-05-16 10:29:53 -Generating unique operation named: listUsingGET_17
2019-05-16 10:29:53 -Generating unique operation named: removeUsingPOST_26
2019-05-16 10:29:53 -Generating unique operation named: saveUsingPOST_15
2019-05-16 10:29:53 -Generating unique operation named: treeUsingGET_3
2019-05-16 10:29:53 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPOST_15
2019-05-16 10:29:53 -Generating unique operation named: addUsingGET_15
2019-05-16 10:29:53 -Generating unique operation named: editUsingGET_16
2019-05-16 10:29:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 10:29:53 -Generating unique operation named: listUsingGET_18
2019-05-16 10:29:53 -Generating unique operation named: removeUsingPOST_27
2019-05-16 10:29:53 -Generating unique operation named: removeUsingPOST_28
2019-05-16 10:29:53 -Generating unique operation named: saveUsingPOST_16
2019-05-16 10:29:53 -Generating unique operation named: updateUsingGET_10
2019-05-16 10:29:53 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPOST_16
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPUT_10
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 10:29:53 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 10:29:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 10:29:53 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 10:29:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 10:29:53 -Generating unique operation named: addUsingGET_16
2019-05-16 10:29:53 -Generating unique operation named: editUsingGET_17
2019-05-16 10:29:53 -Generating unique operation named: listUsingGET_19
2019-05-16 10:29:53 -Generating unique operation named: removeUsingPOST_29
2019-05-16 10:29:53 -Generating unique operation named: removeUsingPOST_30
2019-05-16 10:29:53 -Generating unique operation named: saveUsingPOST_17
2019-05-16 10:29:53 -Generating unique operation named: updateUsingGET_11
2019-05-16 10:29:53 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPOST_17
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPUT_11
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 10:29:53 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 10:29:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 10:29:53 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 10:29:53 -Generating unique operation named: addUsingGET_17
2019-05-16 10:29:53 -Generating unique operation named: editUsingGET_18
2019-05-16 10:29:53 -Generating unique operation named: listUsingGET_20
2019-05-16 10:29:53 -Generating unique operation named: removeUsingPOST_31
2019-05-16 10:29:53 -Generating unique operation named: removeUsingPOST_32
2019-05-16 10:29:53 -Generating unique operation named: saveUsingPOST_18
2019-05-16 10:29:53 -Generating unique operation named: updateUsingGET_12
2019-05-16 10:29:53 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPOST_18
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPUT_12
2019-05-16 10:29:53 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 10:29:53 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 10:29:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 10:29:53 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 10:29:53 -Starting Quartz Scheduler now
2019-05-16 10:29:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 10:29:53 -Starting...
2019-05-16 10:29:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 10:29:53 -Started.
2019-05-16 10:29:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 10:29:53 -Using a shared selector for servlet write/read
2019-05-16 10:29:53 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 10:29:53 -Started BootdoApplication in 28.515 seconds (JVM running for 29.401)
2019-05-16 10:29:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 10:29:54 -==> Parameters: 
2019-05-16 10:29:54 -<==      Total: 1
2019-05-16 10:30:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 10:30:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 10:30:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
2019-05-16 10:30:07 -Enabling session validation scheduler...
2019-05-16 10:30:08 -请求地址 : http://localhost:8081/login;JSESSIONID=500c1ecc-54f0-48aa-b61f-78f51c204fc4
2019-05-16 10:30:08 -HTTP METHOD : GET
2019-05-16 10:30:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 10:30:08 -参数 : [{}]
2019-05-16 10:30:08 -耗时 : 4
2019-05-16 10:30:08 -返回值 : login
2019-05-16 10:30:09 -请求地址 : http://localhost:8081/getVerify
2019-05-16 10:30:09 -HTTP METHOD : GET
2019-05-16 10:30:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 10:30:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@54692f58, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5aaecba5]
2019-05-16 10:30:09 -2227
2019-05-16 10:30:09 -耗时 : 380
2019-05-16 10:30:09 -返回值 : null
2019-05-16 10:30:13 -请求地址 : http://localhost:8081/login
2019-05-16 10:30:13 -HTTP METHOD : POST
2019-05-16 10:30:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 10:30:13 -参数 : [admin, 111111, 2227, org.apache.shiro.web.servlet.ShiroHttpServletRequest@76c43411]
2019-05-16 10:30:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 10:30:13 -==> Parameters: admin(String)
2019-05-16 10:30:13 -<==      Total: 1
2019-05-16 10:30:13 -耗时 : 100
2019-05-16 10:30:13 -返回值 : {msg=操作成功, code=0}
2019-05-16 10:30:13 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 10:30:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:30:13 -==> Parameters: 1(Long), admin(String), 登录(String), 100(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 10:30:13.48(Timestamp)
2019-05-16 10:30:13 -请求地址 : http://localhost:8081/index
2019-05-16 10:30:13 -HTTP METHOD : GET
2019-05-16 10:30:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 10:30:13 -参数 : [{}]
2019-05-16 10:30:13 -<==    Updates: 1
2019-05-16 10:30:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 10:30:13 -==> Parameters: 1(Long)
2019-05-16 10:30:13 -<==      Total: 49
2019-05-16 10:30:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 10:30:13 -==> Parameters: 138(Long)
2019-05-16 10:30:13 -<==      Total: 1
2019-05-16 10:30:13 -耗时 : 180
2019-05-16 10:30:13 -返回值 : index_v1
2019-05-16 10:30:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:30:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 180(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 10:30:13.802(Timestamp)
2019-05-16 10:30:13 -<==    Updates: 1
2019-05-16 10:30:13 -请求地址 : http://localhost:8081/main
2019-05-16 10:30:13 -HTTP METHOD : GET
2019-05-16 10:30:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:30:13 -参数 : []
2019-05-16 10:30:13 -耗时 : 0
2019-05-16 10:30:13 -返回值 : main
2019-05-16 10:30:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 10:30:14 -HTTP METHOD : GET
2019-05-16 10:30:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 10:30:14 -参数 : []
2019-05-16 10:30:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 10:30:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 10:30:14 -<==      Total: 0
2019-05-16 10:30:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 10:30:14 -==> Parameters: 1(Long), 0(String)
2019-05-16 10:30:14 -<==      Total: 1
2019-05-16 10:30:14 -耗时 : 40
2019-05-16 10:30:14 -返回值 : com.bootdo.common.utils.PageUtils@3e91e2a
2019-05-16 10:30:14 -请求地址 : http://localhost:8081/main
2019-05-16 10:30:14 -HTTP METHOD : GET
2019-05-16 10:30:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:30:14 -参数 : []
2019-05-16 10:30:14 -耗时 : 1
2019-05-16 10:30:14 -返回值 : main
2019-05-16 10:30:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 10:30:19 -==> Parameters: 1(Long)
2019-05-16 10:30:19 -<==      Total: 93
2019-05-16 10:30:19 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 10:30:19 -HTTP METHOD : GET
2019-05-16 10:30:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 10:30:19 -参数 : []
2019-05-16 10:30:19 -耗时 : 14
2019-05-16 10:30:19 -返回值 : charts/tableElecYY
2019-05-16 10:30:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:30:20 -HTTP METHOD : GET
2019-05-16 10:30:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:30:20 -参数 : [userType]
2019-05-16 10:30:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:30:20 -==> Parameters: userType(String)
2019-05-16 10:30:20 -<==      Total: 4
2019-05-16 10:30:20 -耗时 : 27
2019-05-16 10:30:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:30:20 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-16 10:30:20 -HTTP METHOD : GET
2019-05-16 10:30:20 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 10:30:20 -参数 : []
2019-05-16 10:30:20 -耗时 : 7
2019-05-16 10:30:20 -返回值 : charts/tableWaterYY
2019-05-16 10:30:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:30:20 -HTTP METHOD : GET
2019-05-16 10:30:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:30:20 -参数 : [userType]
2019-05-16 10:30:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:30:20 -==> Parameters: userType(String)
2019-05-16 10:30:20 -<==      Total: 4
2019-05-16 10:30:20 -耗时 : 6
2019-05-16 10:30:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:30:21 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-16 10:30:21 -HTTP METHOD : GET
2019-05-16 10:30:21 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:30:21 -参数 : []
2019-05-16 10:30:21 -耗时 : 6
2019-05-16 10:30:21 -返回值 : charts/tableHeatYY
2019-05-16 10:30:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:30:21 -HTTP METHOD : GET
2019-05-16 10:30:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:30:21 -参数 : [userType]
2019-05-16 10:30:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:30:21 -==> Parameters: userType(String)
2019-05-16 10:30:21 -<==      Total: 4
2019-05-16 10:30:21 -耗时 : 6
2019-05-16 10:30:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:30:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:30:29 -HTTP METHOD : GET
2019-05-16 10:30:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:30:29 -参数 : []
2019-05-16 10:30:29 -耗时 : 1
2019-05-16 10:30:29 -返回值 : system/dept/deptTree
2019-05-16 10:30:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:30:29 -HTTP METHOD : GET
2019-05-16 10:30:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:30:29 -参数 : []
2019-05-16 10:30:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:30:29 -==> Parameters: 
2019-05-16 10:30:29 -<==      Total: 3
2019-05-16 10:30:29 -耗时 : 17
2019-05-16 10:30:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:30:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:30:30 -HTTP METHOD : GET
2019-05-16 10:30:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:30:30 -参数 : []
2019-05-16 10:30:30 -耗时 : 1
2019-05-16 10:30:30 -返回值 : system/dept/deptTree
2019-05-16 10:30:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:30:31 -HTTP METHOD : GET
2019-05-16 10:30:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:30:31 -参数 : []
2019-05-16 10:30:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:30:31 -==> Parameters: 
2019-05-16 10:30:31 -<==      Total: 3
2019-05-16 10:30:31 -耗时 : 4
2019-05-16 10:30:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:30:33 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-16 10:30:33 -HTTP METHOD : POST
2019-05-16 10:30:33 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:30:33 -参数 : [com.bootdo.heat.vo.HeatVo@2c2a35b9, com.bootdo.moneyLog.vo.HeatLogVo@3b8b3e12]
2019-05-16 10:30:33 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:33 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:30:33 -<==      Total: 1
2019-05-16 10:30:33 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-16 10:30:33 -==> Parameters: 
2019-05-16 10:30:33 -<==      Total: 2
2019-05-16 10:30:33 -耗时 : 233
2019-05-16 10:30:33 -返回值 : {STotalyuOld=0, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0, STotalyuNew=0, GSOweHeatCountYYNew=0, type=2, SPreHeatCountYYOld=0, TotalPreyuNew=0, GSHeatAreaYY=1, GMOweHeatSumYYNew=0, GSTotalhuOld=0, TotalCostyu=307, MHeatPrice=3, SHeatPrice=4, GMHeatPrice=3, SPreHeatCountYYNew=0, TotalPreyuOld=0, TotalOwehuNew=0, TotalCosthu=10, STotalhuOld=0, MOweHeatSumYYNew=0, GSOweHeatSumYYOld=0, TotalLogyu=241, STotalhuNew=0, MTotalyuOld=0, MHeatLogYYCount=2, GSTotalhuNew=0, GSTotalyuOld=0, MOweHeatSumYYOld=0, GMOweHeatSumYYOld=0, GMHeatLogYYSum=80, GSOweHeatSumYYNew=0, GSHeatCostYYCount =1, MTotalhuNew=0, MTotalyuNew=0, GSTotalyuNew=0, GSHeatPrice=4, MOweHeatCountYYOld=0, MHeatLogYYSum=120, SHeatCostYYCount =2, TotalLoghu=5, SHeatCostYYSum =2, GMHeatAreaYY=1, GMHeatCostYYCount =1, MOweHeatCountYYNew=0, MHeatCostYYCount =6, TotalOweyuOld=0, MPreHeatCountYYOld=0, SOweHeatCountYYOld=0, GMTotalhuNew=0, SHeatLogYYSum=40, SHeatLogYYCount=1, SOweHeatSumYYOld=0, MPreHeatCountYYNew=0, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatCountYYNew=0, TotalPrehuNew=0, SOweHeatSumYYNew=0, SPreHeatSumYYNew=0, GMPreHeatSumYYNew=0, GSPreHeatCountYYOld=0, TotalOweyuNew=0, GMHeatCostYYSum =1, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, GMPreHeatSumYYOld=0, MHeatAreaYY=1, TotalPrehuOld=0, SPreHeatSumYYOld=0, SHeatAreaYY=1, GMTotalyuNew=0, TotalOwehuOld=0, PriceTotal=14, GSHeatLogYYSum=1, GMTotalyuOld=0, MHeatCostYYSum =303, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=0, TotalAllyuNew=0, GMPreHeatCountYYOld=0, GSHeatCostYYSum =1, MPreHeatSumYYOld=0, GSPreHeatSumYYOld=0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 10:30:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:30:42 -HTTP METHOD : GET
2019-05-16 10:30:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:30:42 -参数 : []
2019-05-16 10:30:42 -耗时 : 0
2019-05-16 10:30:42 -返回值 : system/dept/deptTree
2019-05-16 10:30:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:30:42 -HTTP METHOD : GET
2019-05-16 10:30:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:30:42 -参数 : []
2019-05-16 10:30:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:30:42 -==> Parameters: 
2019-05-16 10:30:42 -<==      Total: 3
2019-05-16 10:30:42 -耗时 : 3
2019-05-16 10:30:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:30:44 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-16 10:30:44 -HTTP METHOD : POST
2019-05-16 10:30:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:30:44 -参数 : [com.bootdo.heat.vo.HeatVo@38789467, com.bootdo.moneyLog.vo.HeatLogVo@773ede35]
2019-05-16 10:30:44 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:44 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:30:44 -<==      Total: 1
2019-05-16 10:30:44 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:30:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:30:45 -<==      Total: 1
2019-05-16 10:30:45 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-16 10:30:45 -==> Parameters: 
2019-05-16 10:30:45 -<==      Total: 2
2019-05-16 10:30:45 -耗时 : 157
2019-05-16 10:30:45 -返回值 : {STotalyuOld=0, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0, STotalyuNew=0, GSOweHeatCountYYNew=0, type=3, SPreHeatCountYYOld=0, TotalPreyuNew=0, GSHeatAreaYY=0, GMOweHeatSumYYNew=0, GSTotalhuOld=0, TotalCostyu=18, MHeatPrice=3, SHeatPrice=4, SPreHeatCountYYNew=0, TotalPreyuOld=0, TotalOwehuNew=5, TotalCosthu=18, STotalhuOld=0, MOweHeatSumYYNew=-10, GSOweHeatSumYYOld=0, TotalLogyu=0, STotalhuNew=0, MTotalyuOld=0, MHeatLogYYCount=0, GSTotalhuNew=0, GSTotalyuOld=0, MOweHeatSumYYOld=0, GMOweHeatSumYYOld=0, GMHeatLogYYSum=0, GSOweHeatSumYYNew=0, GSHeatCostYYCount =0, MTotalhuNew=5, MTotalyuNew=-10, GSTotalyuNew=0, MOweHeatCountYYOld=0, MHeatLogYYSum=0, SHeatCostYYCount =0, TotalLoghu=0, SHeatCostYYSum =0, GMHeatAreaYY=0, GMHeatCostYYCount =0, MOweHeatCountYYNew=5, MHeatCostYYCount =18, TotalOweyuOld=0, MPreHeatCountYYOld=0, SOweHeatCountYYOld=0, GMTotalhuNew=0, SHeatLogYYSum=0, SHeatLogYYCount=0, SOweHeatSumYYOld=0, MPreHeatCountYYNew=0, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatCountYYNew=0, TotalPrehuNew=0, SOweHeatSumYYNew=0, SPreHeatSumYYNew=0, GMPreHeatSumYYNew=0, GSPreHeatCountYYOld=0, TotalOweyuNew=-10, GMHeatCostYYSum =0, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, GMPreHeatSumYYOld=0, MHeatAreaYY=0, TotalPrehuOld=0, SPreHeatSumYYOld=0, SHeatAreaYY=0, GMTotalyuNew=0, TotalOwehuOld=0, PriceTotal=7, GSHeatLogYYSum=20, GMTotalyuOld=0, MHeatCostYYSum =18, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=0, TotalAllhuNew=5, TotalAllyuNew=-10, GMPreHeatCountYYOld=0, GSHeatCostYYSum =0, MPreHeatSumYYOld=0, GSPreHeatSumYYOld=0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 10:30:47 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-05-16 10:31:41 -请求地址 : http://localhost:8081/login;JSESSIONID=3bc2a047-178b-4a3b-ab54-f7227107e8ac
2019-05-16 10:31:41 -HTTP METHOD : GET
2019-05-16 10:31:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 10:31:41 -参数 : [{}]
2019-05-16 10:31:41 -耗时 : 1
2019-05-16 10:31:41 -返回值 : login
2019-05-16 10:31:46 -请求地址 : http://localhost:8081/getVerify
2019-05-16 10:31:46 -HTTP METHOD : GET
2019-05-16 10:31:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 10:31:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@d6734b1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7f1ed69a]
2019-05-16 10:31:46 -7333
2019-05-16 10:31:46 -耗时 : 15
2019-05-16 10:31:46 -返回值 : null
2019-05-16 10:31:52 -请求地址 : http://localhost:8081/login
2019-05-16 10:31:52 -HTTP METHOD : POST
2019-05-16 10:31:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 10:31:52 -参数 : [admin, 111111, 7333, org.apache.shiro.web.servlet.ShiroHttpServletRequest@421182ed]
2019-05-16 10:31:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 10:31:52 -==> Parameters: admin(String)
2019-05-16 10:31:52 -<==      Total: 1
2019-05-16 10:31:52 -耗时 : 7
2019-05-16 10:31:52 -返回值 : {msg=操作成功, code=0}
2019-05-16 10:31:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:31:52 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 10:31:52.24(Timestamp)
2019-05-16 10:31:52 -请求地址 : http://localhost:8081/index
2019-05-16 10:31:52 -HTTP METHOD : GET
2019-05-16 10:31:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 10:31:52 -参数 : [{}]
2019-05-16 10:31:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 10:31:52 -==> Parameters: 1(Long)
2019-05-16 10:31:52 -<==    Updates: 1
2019-05-16 10:31:52 -<==      Total: 49
2019-05-16 10:31:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 10:31:52 -==> Parameters: 138(Long)
2019-05-16 10:31:52 -<==      Total: 1
2019-05-16 10:31:52 -耗时 : 53
2019-05-16 10:31:52 -返回值 : index_v1
2019-05-16 10:31:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:31:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 53(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 10:31:52.335(Timestamp)
2019-05-16 10:31:52 -<==    Updates: 1
2019-05-16 10:31:52 -请求地址 : http://localhost:8081/main
2019-05-16 10:31:52 -HTTP METHOD : GET
2019-05-16 10:31:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:31:52 -参数 : []
2019-05-16 10:31:52 -耗时 : 1
2019-05-16 10:31:52 -返回值 : main
2019-05-16 10:31:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 10:31:52 -HTTP METHOD : GET
2019-05-16 10:31:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 10:31:52 -参数 : []
2019-05-16 10:31:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 10:31:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 10:31:52 -<==      Total: 0
2019-05-16 10:31:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 10:31:52 -==> Parameters: 1(Long), 0(String)
2019-05-16 10:31:52 -<==      Total: 1
2019-05-16 10:31:52 -耗时 : 8
2019-05-16 10:31:52 -返回值 : com.bootdo.common.utils.PageUtils@27a9f6fb
2019-05-16 10:31:52 -请求地址 : http://localhost:8081/main
2019-05-16 10:31:52 -HTTP METHOD : GET
2019-05-16 10:31:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:31:52 -参数 : []
2019-05-16 10:31:52 -耗时 : 0
2019-05-16 10:31:52 -返回值 : main
2019-05-16 10:31:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 10:31:55 -==> Parameters: 1(Long)
2019-05-16 10:31:55 -<==      Total: 93
2019-05-16 10:31:55 -请求地址 : http://localhost:8081/charts/countYY
2019-05-16 10:31:55 -HTTP METHOD : GET
2019-05-16 10:31:55 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-16 10:31:55 -参数 : []
2019-05-16 10:31:55 -耗时 : 1
2019-05-16 10:31:55 -返回值 : charts/countYY
2019-05-16 10:31:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:31:56 -HTTP METHOD : GET
2019-05-16 10:31:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:31:56 -参数 : [userType]
2019-05-16 10:31:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:31:56 -==> Parameters: userType(String)
2019-05-16 10:31:56 -<==      Total: 4
2019-05-16 10:31:56 -耗时 : 7
2019-05-16 10:31:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:31:56 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 10:31:56 -HTTP METHOD : GET
2019-05-16 10:31:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 10:31:56 -参数 : []
2019-05-16 10:31:56 -耗时 : 0
2019-05-16 10:31:56 -返回值 : charts/tableElecYY
2019-05-16 10:31:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:31:57 -HTTP METHOD : GET
2019-05-16 10:31:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:31:57 -参数 : [userType]
2019-05-16 10:31:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:31:57 -==> Parameters: userType(String)
2019-05-16 10:31:57 -<==      Total: 4
2019-05-16 10:31:57 -耗时 : 5
2019-05-16 10:31:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:31:57 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-16 10:31:57 -HTTP METHOD : GET
2019-05-16 10:31:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 10:31:57 -参数 : []
2019-05-16 10:31:57 -耗时 : 1
2019-05-16 10:31:57 -返回值 : charts/tableWaterYY
2019-05-16 10:31:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:31:57 -HTTP METHOD : GET
2019-05-16 10:31:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:31:57 -参数 : [userType]
2019-05-16 10:31:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:31:57 -==> Parameters: userType(String)
2019-05-16 10:31:57 -<==      Total: 4
2019-05-16 10:31:57 -耗时 : 3
2019-05-16 10:31:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:31:58 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-16 10:31:58 -HTTP METHOD : GET
2019-05-16 10:31:58 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:31:58 -参数 : []
2019-05-16 10:31:58 -耗时 : 0
2019-05-16 10:31:58 -返回值 : charts/tableHeatYY
2019-05-16 10:31:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:31:58 -HTTP METHOD : GET
2019-05-16 10:31:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:31:58 -参数 : [userType]
2019-05-16 10:31:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:31:58 -==> Parameters: userType(String)
2019-05-16 10:31:58 -<==      Total: 4
2019-05-16 10:31:58 -耗时 : 4
2019-05-16 10:31:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:32:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:32:04 -HTTP METHOD : GET
2019-05-16 10:32:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:32:04 -参数 : []
2019-05-16 10:32:04 -耗时 : 0
2019-05-16 10:32:04 -返回值 : system/dept/deptTree
2019-05-16 10:32:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:32:04 -HTTP METHOD : GET
2019-05-16 10:32:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:32:04 -参数 : []
2019-05-16 10:32:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:32:04 -==> Parameters: 
2019-05-16 10:32:04 -<==      Total: 3
2019-05-16 10:32:04 -耗时 : 3
2019-05-16 10:32:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:32:06 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-16 10:32:06 -HTTP METHOD : POST
2019-05-16 10:32:06 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:32:06 -参数 : [com.bootdo.heat.vo.HeatVo@3ddbea39, com.bootdo.moneyLog.vo.HeatLogVo@1330347f]
2019-05-16 10:32:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:32:06 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:32:06 -<==      Total: 1
2019-05-16 10:32:06 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-16 10:32:06 -==> Parameters: 
2019-05-16 10:32:06 -<==      Total: 2
2019-05-16 10:32:06 -耗时 : 132
2019-05-16 10:32:06 -返回值 : {STotalyuOld=0, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0, STotalyuNew=0, GSOweHeatCountYYNew=0, type=2, SPreHeatCountYYOld=0, TotalPreyuNew=0, GSHeatAreaYY=1, GMOweHeatSumYYNew=0, GSTotalhuOld=0, TotalCostyu=307, MHeatPrice=3, SHeatPrice=4, GMHeatPrice=3, SPreHeatCountYYNew=0, TotalPreyuOld=0, TotalOwehuNew=0, TotalCosthu=10, STotalhuOld=0, MOweHeatSumYYNew=0, GSOweHeatSumYYOld=0, TotalLogyu=241, STotalhuNew=0, MTotalyuOld=0, MHeatLogYYCount=2, GSTotalhuNew=0, GSTotalyuOld=0, MOweHeatSumYYOld=0, GMOweHeatSumYYOld=0, GMHeatLogYYSum=80, GSOweHeatSumYYNew=0, GSHeatCostYYCount =1, MTotalhuNew=0, MTotalyuNew=0, GSTotalyuNew=0, GSHeatPrice=4, MOweHeatCountYYOld=0, MHeatLogYYSum=120, SHeatCostYYCount =2, TotalLoghu=5, SHeatCostYYSum =2, GMHeatAreaYY=1, GMHeatCostYYCount =1, MOweHeatCountYYNew=0, MHeatCostYYCount =6, TotalOweyuOld=0, MPreHeatCountYYOld=0, SOweHeatCountYYOld=0, GMTotalhuNew=0, SHeatLogYYSum=40, SHeatLogYYCount=1, SOweHeatSumYYOld=0, MPreHeatCountYYNew=0, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatCountYYNew=0, TotalPrehuNew=0, SOweHeatSumYYNew=0, SPreHeatSumYYNew=0, GMPreHeatSumYYNew=0, GSPreHeatCountYYOld=0, TotalOweyuNew=0, GMHeatCostYYSum =1, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, GMPreHeatSumYYOld=0, MHeatAreaYY=1, TotalPrehuOld=0, SPreHeatSumYYOld=0, SHeatAreaYY=1, GMTotalyuNew=0, TotalOwehuOld=0, PriceTotal=14, GSHeatLogYYSum=1, GMTotalyuOld=0, MHeatCostYYSum =303, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=0, TotalAllyuNew=0, GMPreHeatCountYYOld=0, GSHeatCostYYSum =1, MPreHeatSumYYOld=0, GSPreHeatSumYYOld=0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 10:39:26 -Starting BootdoApplication on PC-201905091110 with PID 38664 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 10:39:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 10:39:26 -The following profiles are active: dev
2019-05-16 10:39:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 10:39:26 CST 2019]; root of context hierarchy
2019-05-16 10:39:29 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 10:39:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$918fd747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:39:31 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$83e905ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:39:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:39:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:39:32 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:39:32 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 10:39:32 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 10:39:32 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:39:32 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:39:32 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:39:32 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 10:39:33 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 10:39:33 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 10:39:33 -Starting service [Tomcat]
2019-05-16 10:39:33 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 10:39:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 10:39:33 -Initializing Spring embedded WebApplicationContext
2019-05-16 10:39:33 -Root WebApplicationContext: initialization completed in 6770 ms
2019-05-16 10:39:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 10:39:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 10:39:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 10:39:33 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 10:39:33 -Filter xssFilter was not registered (disabled)
2019-05-16 10:39:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 10:39:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 10:39:33 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 10:39:33 -Servlet dispatcherServlet mapped to [/]
2019-05-16 10:39:41 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 10:39:26 CST 2019]; root of context hierarchy
2019-05-16 10:39:41 -Using default implementation for ThreadExecutor
2019-05-16 10:39:41 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 10:39:41 -Quartz Scheduler v.2.2.1 created.
2019-05-16 10:39:41 -RAMJobStore initialized.
2019-05-16 10:39:41 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 10:39:41 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 10:39:41 -Quartz scheduler version: 2.2.1
2019-05-16 10:39:41 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@50a7c72b
2019-05-16 10:39:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 10:39:42 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 10:39:44 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:39:44 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 10:39:44 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 10:39:44 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:39:44 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 10:39:44 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 10:39:44 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 10:39:44 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:39:44 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 10:39:44 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:39:44 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:39:44 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 10:39:44 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 10:39:44 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 10:39:44 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 10:39:44 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 10:39:44 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:39:44 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 10:39:44 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 10:39:44 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 10:39:44 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 10:39:44 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-16 10:39:44 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 10:39:44 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 10:39:44 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 10:39:44 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 10:39:44 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 10:39:44 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 10:39:44 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 10:39:44 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 10:39:44 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 10:39:44 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 10:39:44 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 10:39:44 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 10:39:44 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 10:39:44 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 10:39:44 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 10:39:44 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 10:39:44 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 10:39:44 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 10:39:44 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 10:39:44 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 10:39:44 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 10:39:44 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 10:39:44 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 10:39:44 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 10:39:44 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 10:39:44 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 10:39:44 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 10:39:44 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:39:44 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 10:39:44 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:39:44 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 10:39:44 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:39:44 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 10:39:44 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 10:39:44 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 10:39:44 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 10:39:44 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 10:39:44 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 10:39:44 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 10:39:44 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 10:39:44 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 10:39:44 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 10:39:44 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 10:39:44 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 10:39:44 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 10:39:44 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 10:39:44 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 10:39:44 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 10:39:44 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 10:39:44 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 10:39:44 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 10:39:44 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 10:39:44 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 10:39:44 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 10:39:44 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 10:39:44 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 10:39:44 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 10:39:44 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 10:39:44 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 10:39:44 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 10:39:44 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 10:39:44 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 10:39:44 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 10:39:44 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 10:39:44 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 10:39:44 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 10:39:44 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 10:39:44 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 10:39:44 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 10:39:44 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 10:39:44 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 10:39:44 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 10:39:44 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 10:39:44 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 10:39:44 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 10:39:44 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 10:39:44 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 10:39:44 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 10:39:44 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 10:39:44 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 10:39:44 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 10:39:44 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 10:39:44 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 10:39:44 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 10:39:44 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 10:39:44 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 10:39:44 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 10:39:44 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 10:39:44 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 10:39:44 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 10:39:44 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 10:39:44 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 10:39:44 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 10:39:44 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 10:39:44 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 10:39:44 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 10:39:44 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 10:39:44 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 10:39:44 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 10:39:44 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 10:39:44 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 10:39:44 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 10:39:44 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 10:39:44 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 10:39:44 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 10:39:44 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 10:39:44 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 10:39:44 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 10:39:44 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 10:39:44 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 10:39:44 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 10:39:44 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 10:39:44 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 10:39:44 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 10:39:44 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 10:39:44 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 10:39:44 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 10:39:44 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 10:39:44 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 10:39:44 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 10:39:44 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 10:39:44 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 10:39:44 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 10:39:44 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 10:39:44 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 10:39:44 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 10:39:44 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 10:39:44 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 10:39:44 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 10:39:44 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 10:39:45 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 10:39:45 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 10:39:45 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 10:39:46 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:39:46 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 10:39:26 CST 2019]; root of context hierarchy
2019-05-16 10:39:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:39:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:39:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 10:39:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 10:39:46 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 10:39:48 -Registering beans for JMX exposure on startup
2019-05-16 10:39:48 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 10:39:48 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 10:39:48 -Starting beans in phase 2147483647
2019-05-16 10:39:48 -Context refreshed
2019-05-16 10:39:48 -Found 1 custom documentation plugin(s)
2019-05-16 10:39:48 -Scanning for api listing references
2019-05-16 10:39:48 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 10:39:48 -Generating unique operation named: removeUsingPOST_1
2019-05-16 10:39:48 -Generating unique operation named: addUsingGET_1
2019-05-16 10:39:48 -Generating unique operation named: editUsingGET_1
2019-05-16 10:39:48 -Generating unique operation named: listUsingGET_1
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_2
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_3
2019-05-16 10:39:49 -Generating unique operation named: saveUsingPOST_1
2019-05-16 10:39:49 -Generating unique operation named: updateUsingGET_1
2019-05-16 10:39:49 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPOST_1
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPUT_1
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 10:39:49 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 10:39:49 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 10:39:49 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 10:39:49 -Generating unique operation named: addUsingGET_2
2019-05-16 10:39:49 -Generating unique operation named: editUsingGET_2
2019-05-16 10:39:49 -Generating unique operation named: listUsingGET_2
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_4
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_5
2019-05-16 10:39:49 -Generating unique operation named: saveUsingPOST_2
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPOST_2
2019-05-16 10:39:49 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 10:39:49 -Generating unique operation named: addUsingGET_3
2019-05-16 10:39:49 -Generating unique operation named: editUsingGET_3
2019-05-16 10:39:49 -Generating unique operation named: listUsingGET_3
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_6
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_7
2019-05-16 10:39:49 -Generating unique operation named: saveUsingPOST_3
2019-05-16 10:39:49 -Generating unique operation named: updateUsingGET_2
2019-05-16 10:39:49 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPOST_3
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPUT_2
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 10:39:49 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 10:39:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 10:39:49 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 10:39:49 -Generating unique operation named: addUsingGET_4
2019-05-16 10:39:49 -Generating unique operation named: editUsingGET_4
2019-05-16 10:39:49 -Generating unique operation named: listUsingGET_4
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_8
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_9
2019-05-16 10:39:49 -Generating unique operation named: saveUsingPOST_4
2019-05-16 10:39:49 -Generating unique operation named: updateUsingGET_3
2019-05-16 10:39:49 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPOST_4
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPUT_3
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 10:39:49 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 10:39:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 10:39:49 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 10:39:49 -Generating unique operation named: ElecUsingGET_1
2019-05-16 10:39:49 -Generating unique operation named: addUsingGET_5
2019-05-16 10:39:49 -Generating unique operation named: editUsingGET_5
2019-05-16 10:39:49 -Generating unique operation named: listUsingGET_5
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_10
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_11
2019-05-16 10:39:49 -Generating unique operation named: saveUsingPOST_5
2019-05-16 10:39:49 -Generating unique operation named: updateUsingGET_4
2019-05-16 10:39:49 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPOST_5
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPUT_4
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 10:39:49 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 10:39:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 10:39:49 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 10:39:49 -Generating unique operation named: editUsingGET_6
2019-05-16 10:39:49 -Generating unique operation named: listUsingGET_6
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPOST_6
2019-05-16 10:39:49 -Generating unique operation named: addUsingGET_6
2019-05-16 10:39:49 -Generating unique operation named: editUsingGET_7
2019-05-16 10:39:49 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 10:39:49 -Generating unique operation named: listUsingGET_7
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_12
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_13
2019-05-16 10:39:49 -Generating unique operation named: saveUsingPOST_6
2019-05-16 10:39:49 -Generating unique operation named: updateUsingGET_5
2019-05-16 10:39:49 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPOST_7
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPUT_5
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 10:39:49 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 10:39:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 10:39:49 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 10:39:49 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 10:39:49 -Generating unique operation named: addUsingGET_7
2019-05-16 10:39:49 -Generating unique operation named: editUsingGET_8
2019-05-16 10:39:49 -Generating unique operation named: listUsingGET_8
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_14
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_15
2019-05-16 10:39:49 -Generating unique operation named: saveUsingPOST_7
2019-05-16 10:39:49 -Generating unique operation named: updateUsingGET_6
2019-05-16 10:39:49 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPOST_8
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPUT_6
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 10:39:49 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 10:39:49 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 10:39:49 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 10:39:49 -Generating unique operation named: addUsingGET_8
2019-05-16 10:39:49 -Generating unique operation named: editUsingGET_9
2019-05-16 10:39:49 -Generating unique operation named: listUsingGET_9
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_16
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_17
2019-05-16 10:39:49 -Generating unique operation named: saveUsingPOST_8
2019-05-16 10:39:49 -Generating unique operation named: updateUsingGET_7
2019-05-16 10:39:49 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPOST_9
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPUT_7
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 10:39:49 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 10:39:49 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 10:39:49 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 10:39:49 -Generating unique operation named: addUsingGET_9
2019-05-16 10:39:49 -Generating unique operation named: editUsingGET_10
2019-05-16 10:39:49 -Generating unique operation named: infoUsingGET_1
2019-05-16 10:39:49 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 10:39:49 -Generating unique operation named: infoUsingPOST_1
2019-05-16 10:39:49 -Generating unique operation named: infoUsingPUT_1
2019-05-16 10:39:49 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 10:39:49 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 10:39:49 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 10:39:49 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 10:39:49 -Generating unique operation named: listUsingGET_10
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_18
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_19
2019-05-16 10:39:49 -Generating unique operation named: saveUsingPOST_9
2019-05-16 10:39:49 -Generating unique operation named: updateUsingPOST_10
2019-05-16 10:39:49 -Generating unique operation named: listUsingGET_11
2019-05-16 10:39:49 -Generating unique operation named: removeUsingPOST_20
2019-05-16 10:39:49 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 10:39:49 -Generating unique operation named: addUsingGET_10
2019-05-16 10:39:49 -Generating unique operation named: editUsingGET_11
2019-05-16 10:39:49 -Generating unique operation named: listUsingGET_12
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_21
2019-05-16 10:39:50 -Generating unique operation named: saveUsingPOST_10
2019-05-16 10:39:50 -Generating unique operation named: treeUsingGET_1
2019-05-16 10:39:50 -Generating unique operation named: treeUsingGET_2
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPOST_11
2019-05-16 10:39:50 -Generating unique operation named: addUsingGET_11
2019-05-16 10:39:50 -Generating unique operation named: editUsingGET_12
2019-05-16 10:39:50 -Generating unique operation named: listUsingGET_13
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_22
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_23
2019-05-16 10:39:50 -Generating unique operation named: saveUsingPOST_11
2019-05-16 10:39:50 -Generating unique operation named: updateUsingGET_8
2019-05-16 10:39:50 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPOST_12
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPUT_8
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 10:39:50 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 10:39:50 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 10:39:50 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 10:39:50 -Generating unique operation named: addUsingGET_12
2019-05-16 10:39:50 -Generating unique operation named: editUsingGET_13
2019-05-16 10:39:50 -Generating unique operation named: listUsingGET_14
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_24
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_25
2019-05-16 10:39:50 -Generating unique operation named: saveUsingPOST_12
2019-05-16 10:39:50 -Generating unique operation named: updateUsingGET_9
2019-05-16 10:39:50 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPOST_13
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPUT_9
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 10:39:50 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 10:39:50 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 10:39:50 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 10:39:50 -Generating unique operation named: addUsingGET_13
2019-05-16 10:39:50 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 10:39:50 -Generating unique operation named: editUsingGET_14
2019-05-16 10:39:50 -Generating unique operation named: listUsingGET_15
2019-05-16 10:39:50 -Generating unique operation named: saveUsingPOST_13
2019-05-16 10:39:50 -Generating unique operation named: saveUsingPOST_14
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPOST_14
2019-05-16 10:39:50 -Generating unique operation named: listUsingGET_16
2019-05-16 10:39:50 -Generating unique operation named: listUsingHEAD_1
2019-05-16 10:39:50 -Generating unique operation named: listUsingPOST_1
2019-05-16 10:39:50 -Generating unique operation named: listUsingPUT_1
2019-05-16 10:39:50 -Generating unique operation named: listUsingPATCH_1
2019-05-16 10:39:50 -Generating unique operation named: listUsingDELETE_1
2019-05-16 10:39:50 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 10:39:50 -Generating unique operation named: listUsingTRACE_1
2019-05-16 10:39:50 -Generating unique operation named: countDDUsingGET_1
2019-05-16 10:39:50 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 10:39:50 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-16 10:39:50 -Generating unique operation named: addUsingGET_14
2019-05-16 10:39:50 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 10:39:50 -Generating unique operation named: editUsingGET_15
2019-05-16 10:39:50 -Generating unique operation named: listUsingGET_17
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_26
2019-05-16 10:39:50 -Generating unique operation named: saveUsingPOST_15
2019-05-16 10:39:50 -Generating unique operation named: treeUsingGET_3
2019-05-16 10:39:50 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPOST_15
2019-05-16 10:39:50 -Generating unique operation named: addUsingGET_15
2019-05-16 10:39:50 -Generating unique operation named: editUsingGET_16
2019-05-16 10:39:50 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 10:39:50 -Generating unique operation named: listUsingGET_18
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_27
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_28
2019-05-16 10:39:50 -Generating unique operation named: saveUsingPOST_16
2019-05-16 10:39:50 -Generating unique operation named: updateUsingGET_10
2019-05-16 10:39:50 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPOST_16
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPUT_10
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 10:39:50 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 10:39:50 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 10:39:50 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 10:39:50 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 10:39:50 -Generating unique operation named: addUsingGET_16
2019-05-16 10:39:50 -Generating unique operation named: editUsingGET_17
2019-05-16 10:39:50 -Generating unique operation named: listUsingGET_19
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_29
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_30
2019-05-16 10:39:50 -Generating unique operation named: saveUsingPOST_17
2019-05-16 10:39:50 -Generating unique operation named: updateUsingGET_11
2019-05-16 10:39:50 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPOST_17
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPUT_11
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 10:39:50 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 10:39:50 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 10:39:50 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 10:39:50 -Generating unique operation named: addUsingGET_17
2019-05-16 10:39:50 -Generating unique operation named: editUsingGET_18
2019-05-16 10:39:50 -Generating unique operation named: listUsingGET_20
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_31
2019-05-16 10:39:50 -Generating unique operation named: removeUsingPOST_32
2019-05-16 10:39:50 -Generating unique operation named: saveUsingPOST_18
2019-05-16 10:39:50 -Generating unique operation named: updateUsingGET_12
2019-05-16 10:39:50 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPOST_18
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPUT_12
2019-05-16 10:39:50 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 10:39:50 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 10:39:50 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 10:39:50 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 10:39:50 -Starting Quartz Scheduler now
2019-05-16 10:39:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 10:39:50 -Starting...
2019-05-16 10:39:50 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 10:39:50 -Started.
2019-05-16 10:39:50 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 10:39:50 -Using a shared selector for servlet write/read
2019-05-16 10:39:50 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 10:39:50 -Started BootdoApplication in 25.468 seconds (JVM running for 26.154)
2019-05-16 10:39:50 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 10:39:51 -==> Parameters: 
2019-05-16 10:39:51 -<==      Total: 1
2019-05-16 10:40:08 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 10:40:08 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 10:40:08 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-05-16 10:40:08 -Enabling session validation scheduler...
2019-05-16 10:40:08 -请求地址 : http://localhost:8081/login;JSESSIONID=bc0122af-41f5-4f52-9bfc-db19a0af1a66
2019-05-16 10:40:08 -HTTP METHOD : GET
2019-05-16 10:40:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 10:40:08 -参数 : [{}]
2019-05-16 10:40:08 -耗时 : 6
2019-05-16 10:40:08 -返回值 : login
2019-05-16 10:40:09 -请求地址 : http://localhost:8081/getVerify
2019-05-16 10:40:09 -HTTP METHOD : GET
2019-05-16 10:40:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 10:40:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ee7c1e4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@50203448]
2019-05-16 10:40:09 -4182
2019-05-16 10:40:09 -耗时 : 661
2019-05-16 10:40:09 -返回值 : null
2019-05-16 10:40:15 -请求地址 : http://localhost:8081/login
2019-05-16 10:40:15 -HTTP METHOD : POST
2019-05-16 10:40:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 10:40:15 -参数 : [admin, 111111, 4182, org.apache.shiro.web.servlet.ShiroHttpServletRequest@26293373]
2019-05-16 10:40:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 10:40:15 -==> Parameters: admin(String)
2019-05-16 10:40:15 -<==      Total: 1
2019-05-16 10:40:15 -耗时 : 163
2019-05-16 10:40:15 -返回值 : {msg=操作成功, code=0}
2019-05-16 10:40:15 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 10:40:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:40:15 -==> Parameters: 1(Long), admin(String), 登录(String), 163(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 10:40:15.377(Timestamp)
2019-05-16 10:40:15 -<==    Updates: 1
2019-05-16 10:40:15 -请求地址 : http://localhost:8081/index
2019-05-16 10:40:15 -HTTP METHOD : GET
2019-05-16 10:40:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 10:40:15 -参数 : [{}]
2019-05-16 10:40:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 10:40:15 -==> Parameters: 1(Long)
2019-05-16 10:40:15 -<==      Total: 49
2019-05-16 10:40:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 10:40:15 -==> Parameters: 138(Long)
2019-05-16 10:40:15 -<==      Total: 1
2019-05-16 10:40:15 -耗时 : 116
2019-05-16 10:40:15 -返回值 : index_v1
2019-05-16 10:40:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:40:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 117(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 10:40:15.636(Timestamp)
2019-05-16 10:40:15 -<==    Updates: 1
2019-05-16 10:40:15 -请求地址 : http://localhost:8081/main
2019-05-16 10:40:15 -HTTP METHOD : GET
2019-05-16 10:40:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:40:15 -参数 : []
2019-05-16 10:40:15 -耗时 : 1
2019-05-16 10:40:15 -返回值 : main
2019-05-16 10:40:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 10:40:15 -HTTP METHOD : GET
2019-05-16 10:40:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 10:40:15 -参数 : []
2019-05-16 10:40:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 10:40:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 10:40:15 -<==      Total: 0
2019-05-16 10:40:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 10:40:15 -==> Parameters: 1(Long), 0(String)
2019-05-16 10:40:15 -<==      Total: 1
2019-05-16 10:40:15 -耗时 : 49
2019-05-16 10:40:15 -返回值 : com.bootdo.common.utils.PageUtils@a08e05c
2019-05-16 10:40:16 -请求地址 : http://localhost:8081/main
2019-05-16 10:40:16 -HTTP METHOD : GET
2019-05-16 10:40:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:40:16 -参数 : []
2019-05-16 10:40:16 -耗时 : 0
2019-05-16 10:40:16 -返回值 : main
2019-05-16 10:40:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 10:40:23 -==> Parameters: 1(Long)
2019-05-16 10:40:23 -<==      Total: 93
2019-05-16 10:40:23 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 10:40:23 -HTTP METHOD : GET
2019-05-16 10:40:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 10:40:23 -参数 : []
2019-05-16 10:40:23 -耗时 : 12
2019-05-16 10:40:23 -返回值 : charts/tableElecYY
2019-05-16 10:40:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:40:24 -HTTP METHOD : GET
2019-05-16 10:40:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:40:24 -参数 : [userType]
2019-05-16 10:40:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:40:24 -==> Parameters: userType(String)
2019-05-16 10:40:24 -<==      Total: 4
2019-05-16 10:40:24 -耗时 : 22
2019-05-16 10:40:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:40:24 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-16 10:40:24 -HTTP METHOD : GET
2019-05-16 10:40:24 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 10:40:24 -参数 : []
2019-05-16 10:40:24 -耗时 : 5
2019-05-16 10:40:24 -返回值 : charts/tableWaterYY
2019-05-16 10:40:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:40:24 -HTTP METHOD : GET
2019-05-16 10:40:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:40:24 -参数 : [userType]
2019-05-16 10:40:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:40:24 -==> Parameters: userType(String)
2019-05-16 10:40:24 -<==      Total: 4
2019-05-16 10:40:24 -耗时 : 6
2019-05-16 10:40:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:40:25 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-16 10:40:25 -HTTP METHOD : GET
2019-05-16 10:40:25 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:40:25 -参数 : []
2019-05-16 10:40:25 -耗时 : 11
2019-05-16 10:40:25 -返回值 : charts/tableHeatYY
2019-05-16 10:40:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:40:25 -HTTP METHOD : GET
2019-05-16 10:40:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:40:25 -参数 : [userType]
2019-05-16 10:40:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:40:25 -==> Parameters: userType(String)
2019-05-16 10:40:25 -<==      Total: 4
2019-05-16 10:40:25 -耗时 : 6
2019-05-16 10:40:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:40:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:40:27 -HTTP METHOD : GET
2019-05-16 10:40:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:40:27 -参数 : []
2019-05-16 10:40:27 -耗时 : 0
2019-05-16 10:40:27 -返回值 : system/dept/deptTree
2019-05-16 10:40:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:40:28 -HTTP METHOD : GET
2019-05-16 10:40:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:40:28 -参数 : []
2019-05-16 10:40:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:40:28 -==> Parameters: 
2019-05-16 10:40:28 -<==      Total: 3
2019-05-16 10:40:28 -耗时 : 16
2019-05-16 10:40:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:40:30 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-16 10:40:30 -HTTP METHOD : POST
2019-05-16 10:40:30 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:40:30 -参数 : [com.bootdo.heat.vo.HeatVo@62d784f7, com.bootdo.moneyLog.vo.HeatLogVo@7783f8ce]
2019-05-16 10:40:30 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:40:30 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:40:30 -<==      Total: 1
2019-05-16 10:40:30 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-16 10:40:30 -==> Parameters: 
2019-05-16 10:40:30 -<==      Total: 2
2019-05-16 10:40:30 -耗时 : 346
2019-05-16 10:40:30 -返回值 : {STotalyuOld=0, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0, STotalyuNew=0, GSOweHeatCountYYNew=0, type=2, SPreHeatCountYYOld=0, TotalPreyuNew=0, GSHeatAreaYY=1, GMOweHeatSumYYNew=0, GSTotalhuOld=0, TotalCostyu=307, MHeatPrice=3, SHeatPrice=4, GMHeatPrice=3, SPreHeatCountYYNew=0, TotalPreyuOld=0, TotalOwehuNew=0, TotalCosthu=10, STotalhuOld=0, MOweHeatSumYYNew=0, GSOweHeatSumYYOld=0, TotalLogyu=241, STotalhuNew=0, MTotalyuOld=0, MHeatLogYYCount=2, GSTotalhuNew=0, GSTotalyuOld=0, MOweHeatSumYYOld=0, GMOweHeatSumYYOld=0, GMHeatLogYYSum=80, GSOweHeatSumYYNew=0, GSHeatCostYYCount =1, MTotalhuNew=0, MTotalyuNew=0, GSTotalyuNew=0, GSHeatPrice=4, MOweHeatCountYYOld=0, MHeatLogYYSum=120, SHeatCostYYCount =2, TotalLoghu=5, SHeatCostYYSum =2, GMHeatAreaYY=1, GMHeatCostYYCount =1, MOweHeatCountYYNew=0, MHeatCostYYCount =6, TotalOweyuOld=0, MPreHeatCountYYOld=0, SOweHeatCountYYOld=0, GMTotalhuNew=0, SHeatLogYYSum=40, SHeatLogYYCount=1, SOweHeatSumYYOld=0, MPreHeatCountYYNew=0, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatCountYYNew=0, TotalPrehuNew=0, SOweHeatSumYYNew=0, SPreHeatSumYYNew=0, GMPreHeatSumYYNew=0, GSPreHeatCountYYOld=0, TotalOweyuNew=0, GMHeatCostYYSum =1, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, GMPreHeatSumYYOld=0, MHeatAreaYY=1, TotalPrehuOld=0, SPreHeatSumYYOld=0, SHeatAreaYY=1, GMTotalyuNew=0, TotalOwehuOld=0, PriceTotal=14, GSHeatLogYYSum=1, AreaTotalYY=4, GMTotalyuOld=0, MHeatCostYYSum =303, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=0, TotalAllyuNew=0, GMPreHeatCountYYOld=0, GSHeatCostYYSum =1, MPreHeatSumYYOld=0, GSPreHeatSumYYOld=0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 10:40:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-05-16 10:40:55 -请求地址 : http://localhost:8081/main
2019-05-16 10:40:55 -HTTP METHOD : GET
2019-05-16 10:40:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:40:55 -参数 : []
2019-05-16 10:40:55 -耗时 : 0
2019-05-16 10:40:55 -返回值 : main
2019-05-16 10:40:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 10:40:56 -HTTP METHOD : GET
2019-05-16 10:40:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 10:40:56 -参数 : []
2019-05-16 10:40:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 10:40:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 10:40:56 -<==      Total: 0
2019-05-16 10:40:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 10:40:56 -==> Parameters: 1(Long), 0(String)
2019-05-16 10:40:56 -<==      Total: 1
2019-05-16 10:40:56 -耗时 : 8
2019-05-16 10:40:56 -返回值 : com.bootdo.common.utils.PageUtils@7eea250a
2019-05-16 10:40:56 -请求地址 : http://localhost:8081/main
2019-05-16 10:40:56 -HTTP METHOD : GET
2019-05-16 10:40:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:40:56 -参数 : []
2019-05-16 10:40:56 -耗时 : 0
2019-05-16 10:40:56 -返回值 : main
2019-05-16 10:41:21 -请求地址 : http://localhost:8081/login;JSESSIONID=ad1bd2b2-92a9-4edb-9510-49931a9ef33a
2019-05-16 10:41:21 -HTTP METHOD : GET
2019-05-16 10:41:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 10:41:21 -参数 : [{}]
2019-05-16 10:41:21 -耗时 : 0
2019-05-16 10:41:21 -返回值 : login
2019-05-16 10:41:21 -请求地址 : http://localhost:8081/getVerify
2019-05-16 10:41:21 -HTTP METHOD : GET
2019-05-16 10:41:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 10:41:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@291d6d80, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7c4e6b42]
2019-05-16 10:41:21 -9192
2019-05-16 10:41:21 -耗时 : 22
2019-05-16 10:41:21 -返回值 : null
2019-05-16 10:41:21 -请求地址 : http://localhost:8081/login
2019-05-16 10:41:21 -HTTP METHOD : GET
2019-05-16 10:41:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 10:41:21 -参数 : [{}]
2019-05-16 10:41:21 -耗时 : 0
2019-05-16 10:41:21 -返回值 : login
2019-05-16 10:41:29 -请求地址 : http://localhost:8081/login
2019-05-16 10:41:29 -HTTP METHOD : POST
2019-05-16 10:41:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 10:41:29 -参数 : [admin, 111111, 9192, org.apache.shiro.web.servlet.ShiroHttpServletRequest@756dea07]
2019-05-16 10:41:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 10:41:29 -==> Parameters: admin(String)
2019-05-16 10:41:29 -<==      Total: 1
2019-05-16 10:41:29 -耗时 : 6
2019-05-16 10:41:29 -返回值 : {msg=操作成功, code=0}
2019-05-16 10:41:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:41:29 -==> Parameters: 1(Long), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 10:41:29.139(Timestamp)
2019-05-16 10:41:29 -请求地址 : http://localhost:8081/index
2019-05-16 10:41:29 -HTTP METHOD : GET
2019-05-16 10:41:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 10:41:29 -参数 : [{}]
2019-05-16 10:41:29 -<==    Updates: 1
2019-05-16 10:41:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 10:41:29 -==> Parameters: 1(Long)
2019-05-16 10:41:29 -<==      Total: 49
2019-05-16 10:41:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 10:41:29 -==> Parameters: 138(Long)
2019-05-16 10:41:29 -<==      Total: 1
2019-05-16 10:41:29 -耗时 : 113
2019-05-16 10:41:29 -返回值 : index_v1
2019-05-16 10:41:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:41:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 113(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 10:41:29.279(Timestamp)
2019-05-16 10:41:29 -<==    Updates: 1
2019-05-16 10:41:29 -请求地址 : http://localhost:8081/main
2019-05-16 10:41:29 -HTTP METHOD : GET
2019-05-16 10:41:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:41:29 -参数 : []
2019-05-16 10:41:29 -耗时 : 0
2019-05-16 10:41:29 -返回值 : main
2019-05-16 10:41:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 10:41:29 -HTTP METHOD : GET
2019-05-16 10:41:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 10:41:29 -参数 : []
2019-05-16 10:41:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 10:41:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 10:41:29 -<==      Total: 0
2019-05-16 10:41:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 10:41:29 -==> Parameters: 1(Long), 0(String)
2019-05-16 10:41:29 -<==      Total: 1
2019-05-16 10:41:29 -耗时 : 7
2019-05-16 10:41:29 -返回值 : com.bootdo.common.utils.PageUtils@746508cd
2019-05-16 10:41:29 -请求地址 : http://localhost:8081/main
2019-05-16 10:41:29 -HTTP METHOD : GET
2019-05-16 10:41:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:41:29 -参数 : []
2019-05-16 10:41:29 -耗时 : 1
2019-05-16 10:41:29 -返回值 : main
2019-05-16 10:41:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 10:41:32 -==> Parameters: 1(Long)
2019-05-16 10:41:32 -<==      Total: 93
2019-05-16 10:41:32 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 10:41:32 -HTTP METHOD : GET
2019-05-16 10:41:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 10:41:32 -参数 : []
2019-05-16 10:41:32 -耗时 : 1
2019-05-16 10:41:32 -返回值 : charts/tableElecYY
2019-05-16 10:41:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:41:33 -HTTP METHOD : GET
2019-05-16 10:41:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:41:33 -参数 : [userType]
2019-05-16 10:41:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:41:33 -==> Parameters: userType(String)
2019-05-16 10:41:33 -<==      Total: 4
2019-05-16 10:41:33 -耗时 : 8
2019-05-16 10:41:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:41:36 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-16 10:41:36 -HTTP METHOD : GET
2019-05-16 10:41:36 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 10:41:36 -参数 : []
2019-05-16 10:41:36 -耗时 : 0
2019-05-16 10:41:36 -返回值 : charts/tableWaterYY
2019-05-16 10:41:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:41:36 -HTTP METHOD : GET
2019-05-16 10:41:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:41:36 -参数 : [userType]
2019-05-16 10:41:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:41:36 -==> Parameters: userType(String)
2019-05-16 10:41:36 -<==      Total: 4
2019-05-16 10:41:36 -耗时 : 4
2019-05-16 10:41:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:41:37 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-16 10:41:37 -HTTP METHOD : GET
2019-05-16 10:41:37 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:41:37 -参数 : []
2019-05-16 10:41:37 -耗时 : 0
2019-05-16 10:41:37 -返回值 : charts/tableHeatYY
2019-05-16 10:41:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:41:37 -HTTP METHOD : GET
2019-05-16 10:41:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:41:37 -参数 : [userType]
2019-05-16 10:41:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:41:37 -==> Parameters: userType(String)
2019-05-16 10:41:37 -<==      Total: 4
2019-05-16 10:41:37 -耗时 : 5
2019-05-16 10:41:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:41:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:41:40 -HTTP METHOD : GET
2019-05-16 10:41:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:41:40 -参数 : []
2019-05-16 10:41:40 -耗时 : 1
2019-05-16 10:41:40 -返回值 : system/dept/deptTree
2019-05-16 10:41:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:41:40 -HTTP METHOD : GET
2019-05-16 10:41:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:41:40 -参数 : []
2019-05-16 10:41:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:41:40 -==> Parameters: 
2019-05-16 10:41:40 -<==      Total: 3
2019-05-16 10:41:40 -耗时 : 3
2019-05-16 10:41:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:41:42 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-16 10:41:42 -HTTP METHOD : POST
2019-05-16 10:41:42 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:41:42 -参数 : [com.bootdo.heat.vo.HeatVo@2f96eead, com.bootdo.moneyLog.vo.HeatLogVo@6696eeb3]
2019-05-16 10:41:42 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:41:42 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:41:42 -<==      Total: 1
2019-05-16 10:41:42 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-16 10:41:42 -==> Parameters: 
2019-05-16 10:41:42 -<==      Total: 2
2019-05-16 10:41:42 -耗时 : 121
2019-05-16 10:41:42 -返回值 : {STotalyuOld=0, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0, STotalyuNew=0, GSOweHeatCountYYNew=0, type=2, SPreHeatCountYYOld=0, TotalPreyuNew=0, GSHeatAreaYY=1, GMOweHeatSumYYNew=0, GSTotalhuOld=0, TotalCostyu=307, MHeatPrice=3, SHeatPrice=4, GMHeatPrice=3, SPreHeatCountYYNew=0, TotalPreyuOld=0, TotalOwehuNew=0, TotalCosthu=10, STotalhuOld=0, MOweHeatSumYYNew=0, GSOweHeatSumYYOld=0, TotalLogyu=241, STotalhuNew=0, MTotalyuOld=0, MHeatLogYYCount=2, GSTotalhuNew=0, GSTotalyuOld=0, MOweHeatSumYYOld=0, GMOweHeatSumYYOld=0, GMHeatLogYYSum=80, GSOweHeatSumYYNew=0, GSHeatCostYYCount =1, MTotalhuNew=0, MTotalyuNew=0, GSTotalyuNew=0, GSHeatPrice=4, MOweHeatCountYYOld=0, MHeatLogYYSum=120, SHeatCostYYCount =2, TotalLoghu=5, SHeatCostYYSum =2, GMHeatAreaYY=1, GMHeatCostYYCount =1, MOweHeatCountYYNew=0, MHeatCostYYCount =6, TotalOweyuOld=0, MPreHeatCountYYOld=0, SOweHeatCountYYOld=0, GMTotalhuNew=0, SHeatLogYYSum=40, SHeatLogYYCount=1, SOweHeatSumYYOld=0, MPreHeatCountYYNew=0, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatCountYYNew=0, TotalPrehuNew=0, SOweHeatSumYYNew=0, SPreHeatSumYYNew=0, GMPreHeatSumYYNew=0, GSPreHeatCountYYOld=0, TotalOweyuNew=0, GMHeatCostYYSum =1, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, GMPreHeatSumYYOld=0, MHeatAreaYY=1, TotalPrehuOld=0, SPreHeatSumYYOld=0, SHeatAreaYY=1, GMTotalyuNew=0, TotalOwehuOld=0, PriceTotal=14, GSHeatLogYYSum=1, AreaTotalYY=4, GMTotalyuOld=0, MHeatCostYYSum =303, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=0, TotalAllyuNew=0, GMPreHeatCountYYOld=0, GSHeatCostYYSum =1, MPreHeatSumYYOld=0, GSPreHeatSumYYOld=0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 10:42:49 -请求地址 : http://localhost:8081/index
2019-05-16 10:42:49 -HTTP METHOD : GET
2019-05-16 10:42:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 10:42:49 -参数 : [{}]
2019-05-16 10:42:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 10:42:49 -==> Parameters: 1(Long)
2019-05-16 10:42:49 -<==      Total: 49
2019-05-16 10:42:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 10:42:49 -==> Parameters: 138(Long)
2019-05-16 10:42:49 -<==      Total: 1
2019-05-16 10:42:49 -耗时 : 23
2019-05-16 10:42:49 -返回值 : index_v1
2019-05-16 10:42:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:42:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 10:42:49.952(Timestamp)
2019-05-16 10:42:50 -<==    Updates: 1
2019-05-16 10:42:50 -请求地址 : http://localhost:8081/main
2019-05-16 10:42:50 -HTTP METHOD : GET
2019-05-16 10:42:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:42:50 -参数 : []
2019-05-16 10:42:50 -耗时 : 0
2019-05-16 10:42:50 -返回值 : main
2019-05-16 10:42:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 10:42:50 -HTTP METHOD : GET
2019-05-16 10:42:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 10:42:50 -参数 : []
2019-05-16 10:42:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 10:42:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 10:42:50 -<==      Total: 0
2019-05-16 10:42:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 10:42:50 -==> Parameters: 1(Long), 0(String)
2019-05-16 10:42:50 -<==      Total: 1
2019-05-16 10:42:50 -耗时 : 8
2019-05-16 10:42:50 -返回值 : com.bootdo.common.utils.PageUtils@3d36f2de
2019-05-16 10:42:50 -请求地址 : http://localhost:8081/main
2019-05-16 10:42:50 -HTTP METHOD : GET
2019-05-16 10:42:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:42:50 -参数 : []
2019-05-16 10:42:50 -耗时 : 1
2019-05-16 10:42:50 -返回值 : main
2019-05-16 10:42:53 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 10:42:53 -HTTP METHOD : GET
2019-05-16 10:42:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 10:42:53 -参数 : []
2019-05-16 10:42:53 -耗时 : 0
2019-05-16 10:42:53 -返回值 : charts/tableElecYY
2019-05-16 10:42:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:42:53 -HTTP METHOD : GET
2019-05-16 10:42:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:42:53 -参数 : [userType]
2019-05-16 10:42:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:42:53 -==> Parameters: userType(String)
2019-05-16 10:42:53 -<==      Total: 4
2019-05-16 10:42:53 -耗时 : 3
2019-05-16 10:42:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:42:54 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-16 10:42:54 -HTTP METHOD : GET
2019-05-16 10:42:54 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:42:54 -参数 : []
2019-05-16 10:42:54 -耗时 : 1
2019-05-16 10:42:54 -返回值 : charts/tableHeatYY
2019-05-16 10:42:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:42:54 -HTTP METHOD : GET
2019-05-16 10:42:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:42:54 -参数 : [userType]
2019-05-16 10:42:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:42:54 -==> Parameters: userType(String)
2019-05-16 10:42:54 -<==      Total: 4
2019-05-16 10:42:54 -耗时 : 5
2019-05-16 10:42:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:42:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:42:57 -HTTP METHOD : GET
2019-05-16 10:42:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:42:57 -参数 : []
2019-05-16 10:42:57 -耗时 : 0
2019-05-16 10:42:57 -返回值 : system/dept/deptTree
2019-05-16 10:42:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:42:57 -HTTP METHOD : GET
2019-05-16 10:42:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:42:57 -参数 : []
2019-05-16 10:42:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:42:57 -==> Parameters: 
2019-05-16 10:42:57 -<==      Total: 3
2019-05-16 10:42:57 -耗时 : 4
2019-05-16 10:42:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:42:58 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-16 10:42:58 -HTTP METHOD : POST
2019-05-16 10:42:58 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:42:58 -参数 : [com.bootdo.heat.vo.HeatVo@4411ae4f, com.bootdo.moneyLog.vo.HeatLogVo@63b49f4c]
2019-05-16 10:42:58 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:42:58 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:42:58 -<==      Total: 1
2019-05-16 10:42:58 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-16 10:42:58 -==> Parameters: 
2019-05-16 10:42:58 -<==      Total: 2
2019-05-16 10:42:58 -耗时 : 107
2019-05-16 10:42:58 -返回值 : {STotalyuOld=0, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0, STotalyuNew=0, GSOweHeatCountYYNew=0, type=2, SPreHeatCountYYOld=0, TotalPreyuNew=0, GSHeatAreaYY=1, GMOweHeatSumYYNew=0, GSTotalhuOld=0, TotalCostyu=307, MHeatPrice=3, SHeatPrice=4, GMHeatPrice=3, SPreHeatCountYYNew=0, TotalPreyuOld=0, TotalOwehuNew=0, TotalCosthu=10, STotalhuOld=0, MOweHeatSumYYNew=0, GSOweHeatSumYYOld=0, TotalLogyu=241, STotalhuNew=0, MTotalyuOld=0, MHeatLogYYCount=2, GSTotalhuNew=0, GSTotalyuOld=0, MOweHeatSumYYOld=0, GMOweHeatSumYYOld=0, GMHeatLogYYSum=80, GSOweHeatSumYYNew=0, GSHeatCostYYCount =1, MTotalhuNew=0, MTotalyuNew=0, GSTotalyuNew=0, GSHeatPrice=4, MOweHeatCountYYOld=0, MHeatLogYYSum=120, SHeatCostYYCount =2, TotalLoghu=5, SHeatCostYYSum =2, GMHeatAreaYY=1, GMHeatCostYYCount =1, MOweHeatCountYYNew=0, MHeatCostYYCount =6, TotalOweyuOld=0, MPreHeatCountYYOld=0, SOweHeatCountYYOld=0, GMTotalhuNew=0, SHeatLogYYSum=40, SHeatLogYYCount=1, SOweHeatSumYYOld=0, MPreHeatCountYYNew=0, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatCountYYNew=0, TotalPrehuNew=0, SOweHeatSumYYNew=0, SPreHeatSumYYNew=0, GMPreHeatSumYYNew=0, GSPreHeatCountYYOld=0, TotalOweyuNew=0, GMHeatCostYYSum =1, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, GMPreHeatSumYYOld=0, MHeatAreaYY=1, TotalPrehuOld=0, SPreHeatSumYYOld=0, SHeatAreaYY=1, GMTotalyuNew=0, TotalOwehuOld=0, PriceTotal=14, GSHeatLogYYSum=1, AreaTotalYY=4, GMTotalyuOld=0, MHeatCostYYSum =303, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=0, TotalAllyuNew=0, GMPreHeatCountYYOld=0, GSHeatCostYYSum =1, MPreHeatSumYYOld=0, GSPreHeatSumYYOld=0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 10:43:27 -请求地址 : http://localhost:8081/index
2019-05-16 10:43:27 -HTTP METHOD : GET
2019-05-16 10:43:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 10:43:27 -参数 : [{}]
2019-05-16 10:43:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 10:43:27 -==> Parameters: 1(Long)
2019-05-16 10:43:27 -<==      Total: 49
2019-05-16 10:43:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 10:43:27 -==> Parameters: 138(Long)
2019-05-16 10:43:27 -<==      Total: 1
2019-05-16 10:43:27 -耗时 : 25
2019-05-16 10:43:27 -返回值 : index_v1
2019-05-16 10:43:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 10:43:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 10:43:27.271(Timestamp)
2019-05-16 10:43:27 -<==    Updates: 1
2019-05-16 10:43:27 -请求地址 : http://localhost:8081/main
2019-05-16 10:43:27 -HTTP METHOD : GET
2019-05-16 10:43:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:43:27 -参数 : []
2019-05-16 10:43:27 -耗时 : 0
2019-05-16 10:43:27 -返回值 : main
2019-05-16 10:43:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 10:43:27 -HTTP METHOD : GET
2019-05-16 10:43:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 10:43:27 -参数 : []
2019-05-16 10:43:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 10:43:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 10:43:27 -<==      Total: 0
2019-05-16 10:43:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 10:43:27 -==> Parameters: 1(Long), 0(String)
2019-05-16 10:43:27 -<==      Total: 1
2019-05-16 10:43:27 -耗时 : 6
2019-05-16 10:43:27 -返回值 : com.bootdo.common.utils.PageUtils@8544069
2019-05-16 10:43:27 -请求地址 : http://localhost:8081/main
2019-05-16 10:43:27 -HTTP METHOD : GET
2019-05-16 10:43:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 10:43:27 -参数 : []
2019-05-16 10:43:27 -耗时 : 0
2019-05-16 10:43:27 -返回值 : main
2019-05-16 10:43:30 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 10:43:30 -HTTP METHOD : GET
2019-05-16 10:43:30 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 10:43:30 -参数 : []
2019-05-16 10:43:30 -耗时 : 1
2019-05-16 10:43:30 -返回值 : charts/tableElecYY
2019-05-16 10:43:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:43:30 -HTTP METHOD : GET
2019-05-16 10:43:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:43:30 -参数 : [userType]
2019-05-16 10:43:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:43:30 -==> Parameters: userType(String)
2019-05-16 10:43:30 -<==      Total: 4
2019-05-16 10:43:30 -耗时 : 4
2019-05-16 10:43:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:43:30 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-16 10:43:30 -HTTP METHOD : GET
2019-05-16 10:43:30 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 10:43:30 -参数 : []
2019-05-16 10:43:30 -耗时 : 0
2019-05-16 10:43:30 -返回值 : charts/tableWaterYY
2019-05-16 10:43:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:43:31 -HTTP METHOD : GET
2019-05-16 10:43:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:43:31 -参数 : [userType]
2019-05-16 10:43:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:43:31 -==> Parameters: userType(String)
2019-05-16 10:43:31 -<==      Total: 4
2019-05-16 10:43:31 -耗时 : 5
2019-05-16 10:43:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:43:31 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-16 10:43:31 -HTTP METHOD : GET
2019-05-16 10:43:31 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:43:31 -参数 : []
2019-05-16 10:43:31 -耗时 : 1
2019-05-16 10:43:31 -返回值 : charts/tableHeatYY
2019-05-16 10:43:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 10:43:31 -HTTP METHOD : GET
2019-05-16 10:43:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 10:43:31 -参数 : [userType]
2019-05-16 10:43:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 10:43:31 -==> Parameters: userType(String)
2019-05-16 10:43:31 -<==      Total: 4
2019-05-16 10:43:31 -耗时 : 4
2019-05-16 10:43:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 10:43:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:43:33 -HTTP METHOD : GET
2019-05-16 10:43:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:43:33 -参数 : []
2019-05-16 10:43:33 -耗时 : 1
2019-05-16 10:43:33 -返回值 : system/dept/deptTree
2019-05-16 10:43:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:43:34 -HTTP METHOD : GET
2019-05-16 10:43:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:43:34 -参数 : []
2019-05-16 10:43:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:43:34 -==> Parameters: 
2019-05-16 10:43:34 -<==      Total: 3
2019-05-16 10:43:34 -耗时 : 3
2019-05-16 10:43:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:43:36 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-16 10:43:36 -HTTP METHOD : POST
2019-05-16 10:43:36 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:43:36 -参数 : [com.bootdo.heat.vo.HeatVo@62061313, com.bootdo.moneyLog.vo.HeatLogVo@5f5099ca]
2019-05-16 10:43:36 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:36 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 10:43:36 -<==      Total: 1
2019-05-16 10:43:36 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-16 10:43:36 -==> Parameters: 
2019-05-16 10:43:36 -<==      Total: 2
2019-05-16 10:43:36 -耗时 : 102
2019-05-16 10:43:36 -返回值 : {STotalyuOld=0, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0, STotalyuNew=0, GSOweHeatCountYYNew=0, type=2, SPreHeatCountYYOld=0, TotalPreyuNew=0, GSHeatAreaYY=1, GMOweHeatSumYYNew=0, GSTotalhuOld=0, TotalCostyu=307, MHeatPrice=3, SHeatPrice=4, GMHeatPrice=3, SPreHeatCountYYNew=0, TotalPreyuOld=0, TotalOwehuNew=0, TotalCosthu=10, STotalhuOld=0, MOweHeatSumYYNew=0, GSOweHeatSumYYOld=0, TotalLogyu=241, STotalhuNew=0, MTotalyuOld=0, MHeatLogYYCount=2, GSTotalhuNew=0, GSTotalyuOld=0, MOweHeatSumYYOld=0, GMOweHeatSumYYOld=0, GMHeatLogYYSum=80, GSOweHeatSumYYNew=0, GSHeatCostYYCount =1, MTotalhuNew=0, MTotalyuNew=0, GSTotalyuNew=0, GSHeatPrice=4, MOweHeatCountYYOld=0, MHeatLogYYSum=120, SHeatCostYYCount =2, TotalLoghu=5, SHeatCostYYSum =2, GMHeatAreaYY=1, GMHeatCostYYCount =1, MOweHeatCountYYNew=0, MHeatCostYYCount =6, TotalOweyuOld=0, MPreHeatCountYYOld=0, SOweHeatCountYYOld=0, GMTotalhuNew=0, SHeatLogYYSum=40, SHeatLogYYCount=1, SOweHeatSumYYOld=0, MPreHeatCountYYNew=0, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatCountYYNew=0, TotalPrehuNew=0, SOweHeatSumYYNew=0, SPreHeatSumYYNew=0, GMPreHeatSumYYNew=0, GSPreHeatCountYYOld=0, TotalOweyuNew=0, GMHeatCostYYSum =1, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, GMPreHeatSumYYOld=0, MHeatAreaYY=1, TotalPrehuOld=0, SPreHeatSumYYOld=0, SHeatAreaYY=1, GMTotalyuNew=0, TotalOwehuOld=0, PriceTotal=14, GSHeatLogYYSum=1, AreaTotalYY=4, GMTotalyuOld=0, MHeatCostYYSum =303, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=0, TotalAllyuNew=0, GMPreHeatCountYYOld=0, GSHeatCostYYSum =1, MPreHeatSumYYOld=0, GSPreHeatSumYYOld=0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 10:43:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 10:43:43 -HTTP METHOD : GET
2019-05-16 10:43:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 10:43:43 -参数 : []
2019-05-16 10:43:43 -耗时 : 0
2019-05-16 10:43:43 -返回值 : system/dept/deptTree
2019-05-16 10:43:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 10:43:43 -HTTP METHOD : GET
2019-05-16 10:43:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 10:43:43 -参数 : []
2019-05-16 10:43:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 10:43:43 -==> Parameters: 
2019-05-16 10:43:43 -<==      Total: 3
2019-05-16 10:43:43 -耗时 : 5
2019-05-16 10:43:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 10:43:45 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-16 10:43:45 -HTTP METHOD : POST
2019-05-16 10:43:45 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 10:43:45 -参数 : [com.bootdo.heat.vo.HeatVo@23558bef, com.bootdo.moneyLog.vo.HeatLogVo@5f2bd9f6]
2019-05-16 10:43:45 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and heat_type = ? and user_org = ? 
2019-05-16 10:43:45 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 10:43:45 -<==      Total: 1
2019-05-16 10:43:45 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-16 10:43:45 -==> Parameters: 
2019-05-16 10:43:45 -<==      Total: 2
2019-05-16 10:43:45 -耗时 : 98
2019-05-16 10:43:45 -返回值 : {STotalyuOld=0, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0, STotalyuNew=0, GSOweHeatCountYYNew=0, type=3, SPreHeatCountYYOld=0, TotalPreyuNew=0, GSHeatAreaYY=0, GMOweHeatSumYYNew=0, GSTotalhuOld=0, TotalCostyu=18, MHeatPrice=3, SHeatPrice=4, SPreHeatCountYYNew=0, TotalPreyuOld=0, TotalOwehuNew=5, TotalCosthu=18, STotalhuOld=0, MOweHeatSumYYNew=-10, GSOweHeatSumYYOld=0, TotalLogyu=0, STotalhuNew=0, MTotalyuOld=0, MHeatLogYYCount=0, GSTotalhuNew=0, GSTotalyuOld=0, MOweHeatSumYYOld=0, GMOweHeatSumYYOld=0, GMHeatLogYYSum=0, GSOweHeatSumYYNew=0, GSHeatCostYYCount =0, MTotalhuNew=5, MTotalyuNew=-10, GSTotalyuNew=0, MOweHeatCountYYOld=0, MHeatLogYYSum=0, SHeatCostYYCount =0, TotalLoghu=0, SHeatCostYYSum =0, GMHeatAreaYY=0, GMHeatCostYYCount =0, MOweHeatCountYYNew=5, MHeatCostYYCount =18, TotalOweyuOld=0, MPreHeatCountYYOld=0, SOweHeatCountYYOld=0, GMTotalhuNew=0, SHeatLogYYSum=0, SHeatLogYYCount=0, SOweHeatSumYYOld=0, MPreHeatCountYYNew=0, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatCountYYNew=0, TotalPrehuNew=0, SOweHeatSumYYNew=0, SPreHeatSumYYNew=0, GMPreHeatSumYYNew=0, GSPreHeatCountYYOld=0, TotalOweyuNew=-10, GMHeatCostYYSum =0, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, GMPreHeatSumYYOld=0, MHeatAreaYY=0, TotalPrehuOld=0, SPreHeatSumYYOld=0, SHeatAreaYY=0, GMTotalyuNew=0, TotalOwehuOld=0, PriceTotal=7, GSHeatLogYYSum=20, AreaTotalYY=0, GMTotalyuOld=0, MHeatCostYYSum =18, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=0, TotalAllhuNew=5, TotalAllyuNew=-10, GMPreHeatCountYYOld=0, GSHeatCostYYSum =0, MPreHeatSumYYOld=0, GSPreHeatSumYYOld=0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 11:10:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 438]
2019-05-16 11:40:08 -Validating all active sessions...
2019-05-16 11:40:08 -Finished session validation.  [2] sessions were stopped.
2019-05-16 11:40:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 871]
2019-05-16 12:10:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1304]
2019-05-16 12:40:08 -Validating all active sessions...
2019-05-16 12:40:08 -Finished session validation.  No sessions were stopped.
2019-05-16 12:40:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1737]
2019-05-16 13:10:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2170]
2019-05-16 13:40:08 -Validating all active sessions...
2019-05-16 13:40:08 -Finished session validation.  No sessions were stopped.
2019-05-16 13:40:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2603]
2019-05-16 14:10:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3036]
2019-05-16 14:40:08 -Validating all active sessions...
2019-05-16 14:40:08 -Finished session validation.  No sessions were stopped.
2019-05-16 14:40:45 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3469]
2019-05-16 14:45:57 -Starting BootdoApplication on PC-201905091110 with PID 18892 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 14:45:57 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 14:45:57 -The following profiles are active: dev
2019-05-16 14:45:57 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 14:45:57 CST 2019]; root of context hierarchy
2019-05-16 14:45:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 14:46:01 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$76957a4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:46:01 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$68eea8f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:46:02 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:46:02 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:46:02 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:46:02 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 14:46:02 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 14:46:02 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:46:02 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:46:02 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:46:02 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:46:03 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 14:46:03 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 14:46:03 -Starting service [Tomcat]
2019-05-16 14:46:03 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 14:46:03 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 14:46:03 -Initializing Spring embedded WebApplicationContext
2019-05-16 14:46:03 -Root WebApplicationContext: initialization completed in 6658 ms
2019-05-16 14:46:04 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 14:46:04 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 14:46:04 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 14:46:04 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 14:46:04 -Filter xssFilter was not registered (disabled)
2019-05-16 14:46:04 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 14:46:04 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 14:46:04 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 14:46:04 -Servlet dispatcherServlet mapped to [/]
2019-05-16 14:46:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 14:45:57 CST 2019]; root of context hierarchy
2019-05-16 14:46:09 -Using default implementation for ThreadExecutor
2019-05-16 14:46:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 14:46:09 -Quartz Scheduler v.2.2.1 created.
2019-05-16 14:46:09 -RAMJobStore initialized.
2019-05-16 14:46:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 14:46:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 14:46:09 -Quartz scheduler version: 2.2.1
2019-05-16 14:46:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3a0896b3
2019-05-16 14:46:09 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 14:46:09 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 14:46:11 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 14:46:11 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:46:11 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 14:46:11 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:46:11 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 14:46:11 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 14:46:11 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:46:11 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 14:46:11 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 14:46:11 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:46:11 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 14:46:11 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:46:11 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 14:46:11 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 14:46:11 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 14:46:11 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 14:46:11 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:46:11 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 14:46:11 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:46:11 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 14:46:11 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 14:46:11 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-16 14:46:11 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 14:46:11 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 14:46:11 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 14:46:11 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 14:46:11 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 14:46:11 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 14:46:11 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:11 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 14:46:11 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 14:46:11 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 14:46:11 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:11 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 14:46:11 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 14:46:11 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 14:46:11 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 14:46:11 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 14:46:11 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 14:46:11 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:11 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 14:46:11 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 14:46:11 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 14:46:11 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:11 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 14:46:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 14:46:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 14:46:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 14:46:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 14:46:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 14:46:11 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 14:46:11 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 14:46:11 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 14:46:11 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 14:46:11 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:11 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 14:46:11 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 14:46:11 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:11 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 14:46:11 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 14:46:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 14:46:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 14:46:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 14:46:11 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 14:46:11 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 14:46:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 14:46:11 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 14:46:11 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 14:46:11 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 14:46:11 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 14:46:11 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 14:46:11 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:11 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 14:46:11 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 14:46:11 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 14:46:11 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 14:46:11 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 14:46:11 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 14:46:11 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 14:46:11 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 14:46:11 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 14:46:11 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:11 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 14:46:11 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:11 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 14:46:11 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 14:46:11 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 14:46:11 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 14:46:11 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 14:46:11 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 14:46:11 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 14:46:11 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:11 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 14:46:11 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 14:46:11 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 14:46:11 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 14:46:11 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:11 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 14:46:11 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 14:46:11 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 14:46:11 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 14:46:11 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 14:46:11 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:11 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 14:46:11 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:11 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 14:46:12 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 14:46:12 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:12 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 14:46:12 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 14:46:12 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 14:46:12 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 14:46:12 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 14:46:12 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 14:46:12 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 14:46:12 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 14:46:12 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 14:46:12 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 14:46:12 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 14:46:12 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 14:46:12 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 14:46:12 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 14:46:12 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 14:46:12 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 14:46:12 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 14:46:12 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 14:46:12 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:12 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 14:46:12 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 14:46:12 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 14:46:12 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:12 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 14:46:12 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 14:46:12 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 14:46:12 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 14:46:12 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:12 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 14:46:12 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 14:46:12 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 14:46:12 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:12 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 14:46:12 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 14:46:12 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 14:46:12 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 14:46:12 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 14:46:12 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 14:46:12 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 14:46:12 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 14:46:12 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 14:46:12 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:12 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 14:46:12 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 14:46:12 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:12 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 14:46:12 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 14:46:12 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 14:46:12 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 14:46:12 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 14:46:12 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 14:46:12 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 14:46:12 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 14:46:12 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 14:46:12 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 14:46:12 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 14:46:12 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 14:46:12 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:12 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 14:46:12 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:12 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 14:46:12 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 14:46:12 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 14:46:12 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 14:46:12 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 14:46:12 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 14:46:12 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 14:46:12 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 14:46:12 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 14:46:12 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 14:46:12 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 14:46:12 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 14:46:12 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:12 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 14:46:12 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:12 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 14:46:12 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:12 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 14:46:12 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 14:46:12 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 14:46:12 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 14:46:12 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 14:46:12 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 14:46:12 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:46:12 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 14:46:12 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:46:12 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 14:46:12 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 14:46:12 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 14:46:12 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:46:12 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 14:46:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 14:46:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 14:46:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 14:46:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 14:46:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 14:46:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 14:46:12 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 14:46:13 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 14:46:13 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 14:45:57 CST 2019]; root of context hierarchy
2019-05-16 14:46:13 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 14:46:13 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 14:46:13 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 14:46:13 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 14:46:13 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 14:46:15 -Registering beans for JMX exposure on startup
2019-05-16 14:46:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 14:46:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 14:46:15 -Starting beans in phase 2147483647
2019-05-16 14:46:15 -Context refreshed
2019-05-16 14:46:15 -Found 1 custom documentation plugin(s)
2019-05-16 14:46:15 -Scanning for api listing references
2019-05-16 14:46:15 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 14:46:15 -Generating unique operation named: removeUsingPOST_1
2019-05-16 14:46:15 -Generating unique operation named: addUsingGET_1
2019-05-16 14:46:15 -Generating unique operation named: editUsingGET_1
2019-05-16 14:46:15 -Generating unique operation named: listUsingGET_1
2019-05-16 14:46:15 -Generating unique operation named: removeUsingPOST_2
2019-05-16 14:46:15 -Generating unique operation named: removeUsingPOST_3
2019-05-16 14:46:15 -Generating unique operation named: saveUsingPOST_1
2019-05-16 14:46:15 -Generating unique operation named: updateUsingGET_1
2019-05-16 14:46:15 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPOST_1
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPUT_1
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 14:46:16 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 14:46:16 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 14:46:16 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 14:46:16 -Generating unique operation named: addUsingGET_2
2019-05-16 14:46:16 -Generating unique operation named: editUsingGET_2
2019-05-16 14:46:16 -Generating unique operation named: listUsingGET_2
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_4
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_5
2019-05-16 14:46:16 -Generating unique operation named: saveUsingPOST_2
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPOST_2
2019-05-16 14:46:16 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 14:46:16 -Generating unique operation named: addUsingGET_3
2019-05-16 14:46:16 -Generating unique operation named: editUsingGET_3
2019-05-16 14:46:16 -Generating unique operation named: listUsingGET_3
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_6
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_7
2019-05-16 14:46:16 -Generating unique operation named: saveUsingPOST_3
2019-05-16 14:46:16 -Generating unique operation named: updateUsingGET_2
2019-05-16 14:46:16 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPOST_3
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPUT_2
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 14:46:16 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 14:46:16 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 14:46:16 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 14:46:16 -Generating unique operation named: addUsingGET_4
2019-05-16 14:46:16 -Generating unique operation named: editUsingGET_4
2019-05-16 14:46:16 -Generating unique operation named: listUsingGET_4
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_8
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_9
2019-05-16 14:46:16 -Generating unique operation named: saveUsingPOST_4
2019-05-16 14:46:16 -Generating unique operation named: updateUsingGET_3
2019-05-16 14:46:16 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPOST_4
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPUT_3
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 14:46:16 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 14:46:16 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 14:46:16 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 14:46:16 -Generating unique operation named: ElecUsingGET_1
2019-05-16 14:46:16 -Generating unique operation named: addUsingGET_5
2019-05-16 14:46:16 -Generating unique operation named: editUsingGET_5
2019-05-16 14:46:16 -Generating unique operation named: listUsingGET_5
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_10
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_11
2019-05-16 14:46:16 -Generating unique operation named: saveUsingPOST_5
2019-05-16 14:46:16 -Generating unique operation named: updateUsingGET_4
2019-05-16 14:46:16 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPOST_5
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPUT_4
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 14:46:16 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 14:46:16 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 14:46:16 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 14:46:16 -Generating unique operation named: editUsingGET_6
2019-05-16 14:46:16 -Generating unique operation named: listUsingGET_6
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPOST_6
2019-05-16 14:46:16 -Generating unique operation named: addUsingGET_6
2019-05-16 14:46:16 -Generating unique operation named: editUsingGET_7
2019-05-16 14:46:16 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 14:46:16 -Generating unique operation named: listUsingGET_7
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_12
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_13
2019-05-16 14:46:16 -Generating unique operation named: saveUsingPOST_6
2019-05-16 14:46:16 -Generating unique operation named: updateUsingGET_5
2019-05-16 14:46:16 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPOST_7
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPUT_5
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 14:46:16 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 14:46:16 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 14:46:16 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 14:46:16 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 14:46:16 -Generating unique operation named: addUsingGET_7
2019-05-16 14:46:16 -Generating unique operation named: editUsingGET_8
2019-05-16 14:46:16 -Generating unique operation named: listUsingGET_8
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_14
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_15
2019-05-16 14:46:16 -Generating unique operation named: saveUsingPOST_7
2019-05-16 14:46:16 -Generating unique operation named: updateUsingGET_6
2019-05-16 14:46:16 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPOST_8
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPUT_6
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 14:46:16 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 14:46:16 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 14:46:16 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 14:46:16 -Generating unique operation named: addUsingGET_8
2019-05-16 14:46:16 -Generating unique operation named: editUsingGET_9
2019-05-16 14:46:16 -Generating unique operation named: listUsingGET_9
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_16
2019-05-16 14:46:16 -Generating unique operation named: removeUsingPOST_17
2019-05-16 14:46:16 -Generating unique operation named: saveUsingPOST_8
2019-05-16 14:46:16 -Generating unique operation named: updateUsingGET_7
2019-05-16 14:46:16 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPOST_9
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPUT_7
2019-05-16 14:46:16 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 14:46:16 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 14:46:16 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 14:46:16 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 14:46:16 -Generating unique operation named: addUsingGET_9
2019-05-16 14:46:16 -Generating unique operation named: editUsingGET_10
2019-05-16 14:46:16 -Generating unique operation named: infoUsingGET_1
2019-05-16 14:46:16 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 14:46:16 -Generating unique operation named: infoUsingPOST_1
2019-05-16 14:46:16 -Generating unique operation named: infoUsingPUT_1
2019-05-16 14:46:17 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 14:46:17 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 14:46:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 14:46:17 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 14:46:17 -Generating unique operation named: listUsingGET_10
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_18
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_19
2019-05-16 14:46:17 -Generating unique operation named: saveUsingPOST_9
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPOST_10
2019-05-16 14:46:17 -Generating unique operation named: listUsingGET_11
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_20
2019-05-16 14:46:17 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 14:46:17 -Generating unique operation named: addUsingGET_10
2019-05-16 14:46:17 -Generating unique operation named: editUsingGET_11
2019-05-16 14:46:17 -Generating unique operation named: listUsingGET_12
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_21
2019-05-16 14:46:17 -Generating unique operation named: saveUsingPOST_10
2019-05-16 14:46:17 -Generating unique operation named: treeUsingGET_1
2019-05-16 14:46:17 -Generating unique operation named: treeUsingGET_2
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPOST_11
2019-05-16 14:46:17 -Generating unique operation named: addUsingGET_11
2019-05-16 14:46:17 -Generating unique operation named: editUsingGET_12
2019-05-16 14:46:17 -Generating unique operation named: listUsingGET_13
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_22
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_23
2019-05-16 14:46:17 -Generating unique operation named: saveUsingPOST_11
2019-05-16 14:46:17 -Generating unique operation named: updateUsingGET_8
2019-05-16 14:46:17 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPOST_12
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPUT_8
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 14:46:17 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 14:46:17 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 14:46:17 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 14:46:17 -Generating unique operation named: addUsingGET_12
2019-05-16 14:46:17 -Generating unique operation named: editUsingGET_13
2019-05-16 14:46:17 -Generating unique operation named: listUsingGET_14
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_24
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_25
2019-05-16 14:46:17 -Generating unique operation named: saveUsingPOST_12
2019-05-16 14:46:17 -Generating unique operation named: updateUsingGET_9
2019-05-16 14:46:17 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPOST_13
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPUT_9
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 14:46:17 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 14:46:17 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 14:46:17 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 14:46:17 -Generating unique operation named: addUsingGET_13
2019-05-16 14:46:17 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 14:46:17 -Generating unique operation named: editUsingGET_14
2019-05-16 14:46:17 -Generating unique operation named: listUsingGET_15
2019-05-16 14:46:17 -Generating unique operation named: saveUsingPOST_13
2019-05-16 14:46:17 -Generating unique operation named: saveUsingPOST_14
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPOST_14
2019-05-16 14:46:17 -Generating unique operation named: listUsingGET_16
2019-05-16 14:46:17 -Generating unique operation named: listUsingHEAD_1
2019-05-16 14:46:17 -Generating unique operation named: listUsingPOST_1
2019-05-16 14:46:17 -Generating unique operation named: listUsingPUT_1
2019-05-16 14:46:17 -Generating unique operation named: listUsingPATCH_1
2019-05-16 14:46:17 -Generating unique operation named: listUsingDELETE_1
2019-05-16 14:46:17 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 14:46:17 -Generating unique operation named: listUsingTRACE_1
2019-05-16 14:46:17 -Generating unique operation named: countDDUsingGET_1
2019-05-16 14:46:17 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 14:46:17 -Generating unique operation named: addUsingGET_14
2019-05-16 14:46:17 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 14:46:17 -Generating unique operation named: editUsingGET_15
2019-05-16 14:46:17 -Generating unique operation named: listUsingGET_17
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_26
2019-05-16 14:46:17 -Generating unique operation named: saveUsingPOST_15
2019-05-16 14:46:17 -Generating unique operation named: treeUsingGET_3
2019-05-16 14:46:17 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPOST_15
2019-05-16 14:46:17 -Generating unique operation named: addUsingGET_15
2019-05-16 14:46:17 -Generating unique operation named: editUsingGET_16
2019-05-16 14:46:17 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 14:46:17 -Generating unique operation named: listUsingGET_18
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_27
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_28
2019-05-16 14:46:17 -Generating unique operation named: saveUsingPOST_16
2019-05-16 14:46:17 -Generating unique operation named: updateUsingGET_10
2019-05-16 14:46:17 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPOST_16
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPUT_10
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 14:46:17 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 14:46:17 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 14:46:17 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 14:46:17 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 14:46:17 -Generating unique operation named: addUsingGET_16
2019-05-16 14:46:17 -Generating unique operation named: editUsingGET_17
2019-05-16 14:46:17 -Generating unique operation named: listUsingGET_19
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_29
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_30
2019-05-16 14:46:17 -Generating unique operation named: saveUsingPOST_17
2019-05-16 14:46:17 -Generating unique operation named: updateUsingGET_11
2019-05-16 14:46:17 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPOST_17
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPUT_11
2019-05-16 14:46:17 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 14:46:17 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 14:46:17 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 14:46:17 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 14:46:17 -Generating unique operation named: addUsingGET_17
2019-05-16 14:46:17 -Generating unique operation named: editUsingGET_18
2019-05-16 14:46:17 -Generating unique operation named: listUsingGET_20
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_31
2019-05-16 14:46:17 -Generating unique operation named: removeUsingPOST_32
2019-05-16 14:46:17 -Generating unique operation named: saveUsingPOST_18
2019-05-16 14:46:18 -Generating unique operation named: updateUsingGET_12
2019-05-16 14:46:18 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 14:46:18 -Generating unique operation named: updateUsingPOST_18
2019-05-16 14:46:18 -Generating unique operation named: updateUsingPUT_12
2019-05-16 14:46:18 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 14:46:18 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 14:46:18 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 14:46:18 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 14:46:18 -Starting Quartz Scheduler now
2019-05-16 14:46:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 14:46:18 -Starting...
2019-05-16 14:46:18 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 14:46:18 -Started.
2019-05-16 14:46:18 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 14:46:18 -Using a shared selector for servlet write/read
2019-05-16 14:46:18 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 14:46:18 -Started BootdoApplication in 22.563 seconds (JVM running for 23.316)
2019-05-16 14:46:18 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 14:46:18 -==> Parameters: 
2019-05-16 14:46:18 -<==      Total: 1
2019-05-16 14:46:34 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 14:46:34 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 14:46:34 -FrameworkServlet 'dispatcherServlet': initialization completed in 52 ms
2019-05-16 14:46:34 -Enabling session validation scheduler...
2019-05-16 14:46:34 -请求地址 : http://localhost:8081/login;JSESSIONID=2671334a-9221-4b45-8d8d-350ec8ded6af
2019-05-16 14:46:34 -HTTP METHOD : GET
2019-05-16 14:46:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 14:46:34 -参数 : [{}]
2019-05-16 14:46:34 -耗时 : 4
2019-05-16 14:46:34 -返回值 : login
2019-05-16 14:46:36 -请求地址 : http://localhost:8081/getVerify
2019-05-16 14:46:36 -HTTP METHOD : GET
2019-05-16 14:46:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 14:46:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@10f1d9c8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@34a448d2]
2019-05-16 14:46:41 -2067
2019-05-16 14:46:41 -耗时 : 4668
2019-05-16 14:46:41 -返回值 : null
2019-05-16 14:46:45 -请求地址 : http://localhost:8081/login
2019-05-16 14:46:45 -HTTP METHOD : POST
2019-05-16 14:46:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 14:46:45 -参数 : [admin, 111111, 2067, org.apache.shiro.web.servlet.ShiroHttpServletRequest@76ac2fdc]
2019-05-16 14:46:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 14:46:45 -==> Parameters: admin(String)
2019-05-16 14:46:45 -<==      Total: 1
2019-05-16 14:46:45 -耗时 : 177
2019-05-16 14:46:45 -返回值 : {msg=操作成功, code=0}
2019-05-16 14:46:46 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 14:46:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 14:46:46 -请求地址 : http://localhost:8081/index
2019-05-16 14:46:46 -HTTP METHOD : GET
2019-05-16 14:46:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 14:46:46 -参数 : [{}]
2019-05-16 14:46:46 -==> Parameters: 1(Long), admin(String), 登录(String), 178(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 14:46:46.058(Timestamp)
2019-05-16 14:46:46 -<==    Updates: 1
2019-05-16 14:46:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 14:46:46 -==> Parameters: 1(Long)
2019-05-16 14:46:46 -<==      Total: 49
2019-05-16 14:46:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 14:46:46 -==> Parameters: 138(Long)
2019-05-16 14:46:46 -<==      Total: 1
2019-05-16 14:46:46 -耗时 : 207
2019-05-16 14:46:46 -返回值 : index_v1
2019-05-16 14:46:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 14:46:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 207(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 14:46:46.339(Timestamp)
2019-05-16 14:46:46 -<==    Updates: 1
2019-05-16 14:46:46 -请求地址 : http://localhost:8081/main
2019-05-16 14:46:46 -HTTP METHOD : GET
2019-05-16 14:46:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 14:46:46 -参数 : []
2019-05-16 14:46:46 -耗时 : 0
2019-05-16 14:46:46 -返回值 : main
2019-05-16 14:46:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 14:46:46 -HTTP METHOD : GET
2019-05-16 14:46:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 14:46:46 -参数 : []
2019-05-16 14:46:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 14:46:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 14:46:47 -<==      Total: 0
2019-05-16 14:46:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 14:46:47 -请求地址 : http://localhost:8081/main
2019-05-16 14:46:47 -HTTP METHOD : GET
2019-05-16 14:46:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 14:46:47 -参数 : []
2019-05-16 14:46:47 -耗时 : 0
2019-05-16 14:46:47 -返回值 : main
2019-05-16 14:46:47 -==> Parameters: 1(Long), 0(String)
2019-05-16 14:46:47 -<==      Total: 1
2019-05-16 14:46:47 -耗时 : 196
2019-05-16 14:46:47 -返回值 : com.bootdo.common.utils.PageUtils@16bb86bf
2019-05-16 14:46:51 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 14:46:51 -==> Parameters: 1(Long)
2019-05-16 14:46:51 -<==      Total: 93
2019-05-16 14:46:51 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 14:46:51 -HTTP METHOD : GET
2019-05-16 14:46:51 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:46:51 -参数 : []
2019-05-16 14:46:51 -耗时 : 7
2019-05-16 14:46:51 -返回值 : charts/tableElecYY
2019-05-16 14:46:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 14:46:52 -HTTP METHOD : GET
2019-05-16 14:46:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 14:46:52 -参数 : [userType]
2019-05-16 14:46:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 14:46:52 -==> Parameters: userType(String)
2019-05-16 14:46:52 -<==      Total: 4
2019-05-16 14:46:52 -耗时 : 54
2019-05-16 14:46:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 14:46:52 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-16 14:46:52 -HTTP METHOD : GET
2019-05-16 14:46:52 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-16 14:46:52 -参数 : []
2019-05-16 14:46:52 -耗时 : 6
2019-05-16 14:46:52 -返回值 : charts/tableWaterYY
2019-05-16 14:46:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 14:46:53 -HTTP METHOD : GET
2019-05-16 14:46:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 14:46:53 -参数 : [userType]
2019-05-16 14:46:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 14:46:53 -==> Parameters: userType(String)
2019-05-16 14:46:53 -<==      Total: 4
2019-05-16 14:46:53 -耗时 : 5
2019-05-16 14:46:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 14:46:54 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 14:46:54 -HTTP METHOD : GET
2019-05-16 14:46:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:46:54 -参数 : []
2019-05-16 14:46:54 -耗时 : 1
2019-05-16 14:46:54 -返回值 : charts/tableElecYY
2019-05-16 14:46:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 14:46:54 -HTTP METHOD : GET
2019-05-16 14:46:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 14:46:54 -参数 : [userType]
2019-05-16 14:46:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 14:46:54 -==> Parameters: userType(String)
2019-05-16 14:46:54 -<==      Total: 4
2019-05-16 14:46:54 -耗时 : 6
2019-05-16 14:46:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 14:47:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 14:47:00 -HTTP METHOD : GET
2019-05-16 14:47:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 14:47:00 -参数 : []
2019-05-16 14:47:00 -耗时 : 0
2019-05-16 14:47:00 -返回值 : system/dept/deptTree
2019-05-16 14:47:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 14:47:00 -HTTP METHOD : GET
2019-05-16 14:47:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 14:47:00 -参数 : []
2019-05-16 14:47:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 14:47:00 -==> Parameters: 
2019-05-16 14:47:00 -<==      Total: 3
2019-05-16 14:47:00 -耗时 : 34
2019-05-16 14:47:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 14:47:02 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-16 14:47:02 -HTTP METHOD : POST
2019-05-16 14:47:02 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:47:02 -参数 : [com.bootdo.elec.vo.ElecVo@5a7667b0, com.bootdo.moneyLog.vo.ElecLogVo@27849946]
2019-05-16 14:47:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 14:47:02 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecYY/tableElecYY(String), java.lang.NumberFormatException: null(String), null, 2019-05-16 14:47:02.156(Timestamp)
2019-05-16 14:47:02 -null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.bootdo.charts.controller.tableElecYYController.tableElecYY(tableElecYYController.java:58)
	at com.bootdo.charts.controller.tableElecYYController$$FastClassBySpringCGLIB$$2af9ae92.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecYYController$$EnhancerBySpringCGLIB$$ec07f2bd.tableElecYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-16 14:47:02 -<==    Updates: 1
2019-05-16 14:47:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-05-16 14:52:03 -Starting BootdoApplication on PC-201905091110 with PID 26588 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 14:52:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 14:52:03 -The following profiles are active: dev
2019-05-16 14:52:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 14:52:03 CST 2019]; root of context hierarchy
2019-05-16 14:52:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 14:52:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:52:09 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:52:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:52:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:52:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:52:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 14:52:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 14:52:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:52:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:52:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:52:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 14:52:11 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 14:52:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 14:52:11 -Starting service [Tomcat]
2019-05-16 14:52:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 14:52:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 14:52:11 -Initializing Spring embedded WebApplicationContext
2019-05-16 14:52:11 -Root WebApplicationContext: initialization completed in 8234 ms
2019-05-16 14:52:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 14:52:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 14:52:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 14:52:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 14:52:12 -Filter xssFilter was not registered (disabled)
2019-05-16 14:52:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 14:52:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 14:52:12 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 14:52:12 -Servlet dispatcherServlet mapped to [/]
2019-05-16 14:52:17 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 14:52:03 CST 2019]; root of context hierarchy
2019-05-16 14:52:17 -Using default implementation for ThreadExecutor
2019-05-16 14:52:17 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 14:52:17 -Quartz Scheduler v.2.2.1 created.
2019-05-16 14:52:17 -RAMJobStore initialized.
2019-05-16 14:52:17 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 14:52:17 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 14:52:17 -Quartz scheduler version: 2.2.1
2019-05-16 14:52:17 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6e0d16a4
2019-05-16 14:52:18 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 14:52:18 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 14:52:21 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 14:52:21 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:52:21 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:52:21 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 14:52:21 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 14:52:21 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 14:52:21 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:52:21 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 14:52:21 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 14:52:21 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:52:21 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 14:52:21 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:52:21 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 14:52:21 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 14:52:21 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 14:52:21 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 14:52:21 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:52:21 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 14:52:21 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 14:52:21 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 14:52:21 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-16 14:52:21 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 14:52:21 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 14:52:21 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 14:52:21 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 14:52:21 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 14:52:21 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 14:52:21 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 14:52:21 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 14:52:21 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 14:52:21 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 14:52:21 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 14:52:21 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 14:52:21 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 14:52:21 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 14:52:21 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 14:52:21 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 14:52:21 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 14:52:21 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 14:52:21 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 14:52:21 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 14:52:21 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 14:52:21 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 14:52:21 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 14:52:21 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 14:52:21 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 14:52:21 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 14:52:21 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 14:52:21 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 14:52:21 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 14:52:21 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 14:52:21 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 14:52:21 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 14:52:21 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 14:52:21 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 14:52:21 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 14:52:21 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 14:52:21 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 14:52:21 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 14:52:21 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 14:52:21 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 14:52:21 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 14:52:21 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 14:52:21 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 14:52:21 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 14:52:21 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 14:52:21 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 14:52:21 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 14:52:21 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 14:52:21 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 14:52:21 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 14:52:21 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 14:52:21 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 14:52:21 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 14:52:21 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 14:52:21 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 14:52:21 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 14:52:21 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 14:52:21 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 14:52:21 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 14:52:21 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 14:52:21 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 14:52:21 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 14:52:21 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 14:52:21 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 14:52:21 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 14:52:21 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 14:52:21 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 14:52:21 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 14:52:21 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 14:52:21 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 14:52:21 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 14:52:21 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 14:52:21 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 14:52:21 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 14:52:21 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 14:52:21 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 14:52:21 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 14:52:21 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 14:52:21 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 14:52:21 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 14:52:21 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 14:52:21 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 14:52:21 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 14:52:21 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 14:52:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 14:52:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 14:52:21 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 14:52:21 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 14:52:21 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 14:52:21 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 14:52:21 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 14:52:21 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 14:52:21 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 14:52:21 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 14:52:21 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 14:52:21 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 14:52:21 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 14:52:21 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 14:52:21 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 14:52:21 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 14:52:21 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 14:52:21 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 14:52:21 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 14:52:21 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 14:52:21 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 14:52:21 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 14:52:21 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 14:52:21 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 14:52:21 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 14:52:21 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 14:52:21 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 14:52:21 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 14:52:21 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 14:52:21 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 14:52:21 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 14:52:21 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 14:52:21 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 14:52:21 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 14:52:21 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 14:52:21 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 14:52:21 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 14:52:21 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 14:52:21 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 14:52:21 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 14:52:21 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 14:52:21 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 14:52:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 14:52:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 14:52:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 14:52:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 14:52:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 14:52:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 14:52:22 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 14:52:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 14:52:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 14:52:03 CST 2019]; root of context hierarchy
2019-05-16 14:52:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 14:52:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 14:52:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 14:52:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 14:52:23 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 14:52:26 -Registering beans for JMX exposure on startup
2019-05-16 14:52:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 14:52:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 14:52:26 -Starting beans in phase 2147483647
2019-05-16 14:52:26 -Context refreshed
2019-05-16 14:52:26 -Found 1 custom documentation plugin(s)
2019-05-16 14:52:26 -Scanning for api listing references
2019-05-16 14:52:27 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 14:52:27 -Generating unique operation named: removeUsingPOST_1
2019-05-16 14:52:27 -Generating unique operation named: addUsingGET_1
2019-05-16 14:52:27 -Generating unique operation named: editUsingGET_1
2019-05-16 14:52:27 -Generating unique operation named: listUsingGET_1
2019-05-16 14:52:27 -Generating unique operation named: removeUsingPOST_2
2019-05-16 14:52:27 -Generating unique operation named: removeUsingPOST_3
2019-05-16 14:52:27 -Generating unique operation named: saveUsingPOST_1
2019-05-16 14:52:27 -Generating unique operation named: updateUsingGET_1
2019-05-16 14:52:27 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPOST_1
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPUT_1
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 14:52:27 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 14:52:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 14:52:27 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 14:52:27 -Generating unique operation named: addUsingGET_2
2019-05-16 14:52:27 -Generating unique operation named: editUsingGET_2
2019-05-16 14:52:27 -Generating unique operation named: listUsingGET_2
2019-05-16 14:52:27 -Generating unique operation named: removeUsingPOST_4
2019-05-16 14:52:27 -Generating unique operation named: removeUsingPOST_5
2019-05-16 14:52:27 -Generating unique operation named: saveUsingPOST_2
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPOST_2
2019-05-16 14:52:27 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 14:52:27 -Generating unique operation named: addUsingGET_3
2019-05-16 14:52:27 -Generating unique operation named: editUsingGET_3
2019-05-16 14:52:27 -Generating unique operation named: listUsingGET_3
2019-05-16 14:52:27 -Generating unique operation named: removeUsingPOST_6
2019-05-16 14:52:27 -Generating unique operation named: removeUsingPOST_7
2019-05-16 14:52:27 -Generating unique operation named: saveUsingPOST_3
2019-05-16 14:52:27 -Generating unique operation named: updateUsingGET_2
2019-05-16 14:52:27 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPOST_3
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPUT_2
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 14:52:27 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 14:52:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 14:52:27 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 14:52:27 -Generating unique operation named: addUsingGET_4
2019-05-16 14:52:27 -Generating unique operation named: editUsingGET_4
2019-05-16 14:52:27 -Generating unique operation named: listUsingGET_4
2019-05-16 14:52:27 -Generating unique operation named: removeUsingPOST_8
2019-05-16 14:52:27 -Generating unique operation named: removeUsingPOST_9
2019-05-16 14:52:27 -Generating unique operation named: saveUsingPOST_4
2019-05-16 14:52:27 -Generating unique operation named: updateUsingGET_3
2019-05-16 14:52:27 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPOST_4
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPUT_3
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 14:52:27 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 14:52:27 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 14:52:27 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 14:52:27 -Generating unique operation named: ElecUsingGET_1
2019-05-16 14:52:27 -Generating unique operation named: addUsingGET_5
2019-05-16 14:52:27 -Generating unique operation named: editUsingGET_5
2019-05-16 14:52:27 -Generating unique operation named: listUsingGET_5
2019-05-16 14:52:27 -Generating unique operation named: removeUsingPOST_10
2019-05-16 14:52:27 -Generating unique operation named: removeUsingPOST_11
2019-05-16 14:52:27 -Generating unique operation named: saveUsingPOST_5
2019-05-16 14:52:27 -Generating unique operation named: updateUsingGET_4
2019-05-16 14:52:27 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPOST_5
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPUT_4
2019-05-16 14:52:27 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 14:52:27 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 14:52:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 14:52:27 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 14:52:28 -Generating unique operation named: editUsingGET_6
2019-05-16 14:52:28 -Generating unique operation named: listUsingGET_6
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPOST_6
2019-05-16 14:52:28 -Generating unique operation named: addUsingGET_6
2019-05-16 14:52:28 -Generating unique operation named: editUsingGET_7
2019-05-16 14:52:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 14:52:28 -Generating unique operation named: listUsingGET_7
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_12
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_13
2019-05-16 14:52:28 -Generating unique operation named: saveUsingPOST_6
2019-05-16 14:52:28 -Generating unique operation named: updateUsingGET_5
2019-05-16 14:52:28 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPOST_7
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPUT_5
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 14:52:28 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 14:52:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 14:52:28 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 14:52:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 14:52:28 -Generating unique operation named: addUsingGET_7
2019-05-16 14:52:28 -Generating unique operation named: editUsingGET_8
2019-05-16 14:52:28 -Generating unique operation named: listUsingGET_8
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_14
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_15
2019-05-16 14:52:28 -Generating unique operation named: saveUsingPOST_7
2019-05-16 14:52:28 -Generating unique operation named: updateUsingGET_6
2019-05-16 14:52:28 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPOST_8
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPUT_6
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 14:52:28 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 14:52:28 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 14:52:28 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 14:52:28 -Generating unique operation named: addUsingGET_8
2019-05-16 14:52:28 -Generating unique operation named: editUsingGET_9
2019-05-16 14:52:28 -Generating unique operation named: listUsingGET_9
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_16
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_17
2019-05-16 14:52:28 -Generating unique operation named: saveUsingPOST_8
2019-05-16 14:52:28 -Generating unique operation named: updateUsingGET_7
2019-05-16 14:52:28 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPOST_9
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPUT_7
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 14:52:28 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 14:52:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 14:52:28 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 14:52:28 -Generating unique operation named: addUsingGET_9
2019-05-16 14:52:28 -Generating unique operation named: editUsingGET_10
2019-05-16 14:52:28 -Generating unique operation named: infoUsingGET_1
2019-05-16 14:52:28 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 14:52:28 -Generating unique operation named: infoUsingPOST_1
2019-05-16 14:52:28 -Generating unique operation named: infoUsingPUT_1
2019-05-16 14:52:28 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 14:52:28 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 14:52:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 14:52:28 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 14:52:28 -Generating unique operation named: listUsingGET_10
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_18
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_19
2019-05-16 14:52:28 -Generating unique operation named: saveUsingPOST_9
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPOST_10
2019-05-16 14:52:28 -Generating unique operation named: listUsingGET_11
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_20
2019-05-16 14:52:28 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 14:52:28 -Generating unique operation named: addUsingGET_10
2019-05-16 14:52:28 -Generating unique operation named: editUsingGET_11
2019-05-16 14:52:28 -Generating unique operation named: listUsingGET_12
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_21
2019-05-16 14:52:28 -Generating unique operation named: saveUsingPOST_10
2019-05-16 14:52:28 -Generating unique operation named: treeUsingGET_1
2019-05-16 14:52:28 -Generating unique operation named: treeUsingGET_2
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPOST_11
2019-05-16 14:52:28 -Generating unique operation named: addUsingGET_11
2019-05-16 14:52:28 -Generating unique operation named: editUsingGET_12
2019-05-16 14:52:28 -Generating unique operation named: listUsingGET_13
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_22
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_23
2019-05-16 14:52:28 -Generating unique operation named: saveUsingPOST_11
2019-05-16 14:52:28 -Generating unique operation named: updateUsingGET_8
2019-05-16 14:52:28 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPOST_12
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPUT_8
2019-05-16 14:52:28 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 14:52:28 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 14:52:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 14:52:28 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 14:52:28 -Generating unique operation named: addUsingGET_12
2019-05-16 14:52:28 -Generating unique operation named: editUsingGET_13
2019-05-16 14:52:28 -Generating unique operation named: listUsingGET_14
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_24
2019-05-16 14:52:28 -Generating unique operation named: removeUsingPOST_25
2019-05-16 14:52:28 -Generating unique operation named: saveUsingPOST_12
2019-05-16 14:52:29 -Generating unique operation named: updateUsingGET_9
2019-05-16 14:52:29 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPOST_13
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPUT_9
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 14:52:29 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 14:52:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 14:52:29 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 14:52:29 -Generating unique operation named: addUsingGET_13
2019-05-16 14:52:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 14:52:29 -Generating unique operation named: editUsingGET_14
2019-05-16 14:52:29 -Generating unique operation named: listUsingGET_15
2019-05-16 14:52:29 -Generating unique operation named: saveUsingPOST_13
2019-05-16 14:52:29 -Generating unique operation named: saveUsingPOST_14
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPOST_14
2019-05-16 14:52:29 -Generating unique operation named: listUsingGET_16
2019-05-16 14:52:29 -Generating unique operation named: listUsingHEAD_1
2019-05-16 14:52:29 -Generating unique operation named: listUsingPOST_1
2019-05-16 14:52:29 -Generating unique operation named: listUsingPUT_1
2019-05-16 14:52:29 -Generating unique operation named: listUsingPATCH_1
2019-05-16 14:52:29 -Generating unique operation named: listUsingDELETE_1
2019-05-16 14:52:29 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 14:52:29 -Generating unique operation named: listUsingTRACE_1
2019-05-16 14:52:29 -Generating unique operation named: countDDUsingGET_1
2019-05-16 14:52:29 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 14:52:29 -Generating unique operation named: addUsingGET_14
2019-05-16 14:52:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 14:52:29 -Generating unique operation named: editUsingGET_15
2019-05-16 14:52:29 -Generating unique operation named: listUsingGET_17
2019-05-16 14:52:29 -Generating unique operation named: removeUsingPOST_26
2019-05-16 14:52:29 -Generating unique operation named: saveUsingPOST_15
2019-05-16 14:52:29 -Generating unique operation named: treeUsingGET_3
2019-05-16 14:52:29 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPOST_15
2019-05-16 14:52:29 -Generating unique operation named: addUsingGET_15
2019-05-16 14:52:29 -Generating unique operation named: editUsingGET_16
2019-05-16 14:52:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 14:52:29 -Generating unique operation named: listUsingGET_18
2019-05-16 14:52:29 -Generating unique operation named: removeUsingPOST_27
2019-05-16 14:52:29 -Generating unique operation named: removeUsingPOST_28
2019-05-16 14:52:29 -Generating unique operation named: saveUsingPOST_16
2019-05-16 14:52:29 -Generating unique operation named: updateUsingGET_10
2019-05-16 14:52:29 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPOST_16
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPUT_10
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 14:52:29 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 14:52:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 14:52:29 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 14:52:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 14:52:29 -Generating unique operation named: addUsingGET_16
2019-05-16 14:52:29 -Generating unique operation named: editUsingGET_17
2019-05-16 14:52:29 -Generating unique operation named: listUsingGET_19
2019-05-16 14:52:29 -Generating unique operation named: removeUsingPOST_29
2019-05-16 14:52:29 -Generating unique operation named: removeUsingPOST_30
2019-05-16 14:52:29 -Generating unique operation named: saveUsingPOST_17
2019-05-16 14:52:29 -Generating unique operation named: updateUsingGET_11
2019-05-16 14:52:29 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPOST_17
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPUT_11
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 14:52:29 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 14:52:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 14:52:29 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 14:52:29 -Generating unique operation named: addUsingGET_17
2019-05-16 14:52:29 -Generating unique operation named: editUsingGET_18
2019-05-16 14:52:29 -Generating unique operation named: listUsingGET_20
2019-05-16 14:52:29 -Generating unique operation named: removeUsingPOST_31
2019-05-16 14:52:29 -Generating unique operation named: removeUsingPOST_32
2019-05-16 14:52:29 -Generating unique operation named: saveUsingPOST_18
2019-05-16 14:52:29 -Generating unique operation named: updateUsingGET_12
2019-05-16 14:52:29 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPOST_18
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPUT_12
2019-05-16 14:52:29 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 14:52:29 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 14:52:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 14:52:29 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 14:52:29 -Starting Quartz Scheduler now
2019-05-16 14:52:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 14:52:29 -Starting...
2019-05-16 14:52:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 14:52:29 -Started.
2019-05-16 14:52:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 14:52:29 -Using a shared selector for servlet write/read
2019-05-16 14:52:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 14:52:29 -Started BootdoApplication in 27.659 seconds (JVM running for 28.632)
2019-05-16 14:52:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 14:52:30 -==> Parameters: 
2019-05-16 14:52:30 -<==      Total: 1
2019-05-16 14:52:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 14:52:37 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 14:52:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-05-16 14:52:37 -Enabling session validation scheduler...
2019-05-16 14:52:38 -请求地址 : http://localhost:8081/login;JSESSIONID=8e7cee4a-a39e-47e8-9ab6-3789abd67b02
2019-05-16 14:52:38 -HTTP METHOD : GET
2019-05-16 14:52:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 14:52:38 -参数 : [{}]
2019-05-16 14:52:38 -耗时 : 6
2019-05-16 14:52:38 -返回值 : login
2019-05-16 14:52:39 -请求地址 : http://localhost:8081/getVerify
2019-05-16 14:52:39 -HTTP METHOD : GET
2019-05-16 14:52:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 14:52:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@311fd65b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1be9af01]
2019-05-16 14:52:40 -5465
2019-05-16 14:52:40 -耗时 : 619
2019-05-16 14:52:40 -返回值 : null
2019-05-16 14:52:46 -请求地址 : http://localhost:8081/login
2019-05-16 14:52:46 -HTTP METHOD : POST
2019-05-16 14:52:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 14:52:46 -参数 : [admin, 111111, 5465, org.apache.shiro.web.servlet.ShiroHttpServletRequest@418b1064]
2019-05-16 14:52:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 14:52:46 -==> Parameters: admin(String)
2019-05-16 14:52:46 -<==      Total: 1
2019-05-16 14:52:46 -耗时 : 157
2019-05-16 14:52:46 -返回值 : {msg=操作成功, code=0}
2019-05-16 14:52:46 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 14:52:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 14:52:46 -==> Parameters: 1(Long), admin(String), 登录(String), 157(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 14:52:46.355(Timestamp)
2019-05-16 14:52:46 -请求地址 : http://localhost:8081/index
2019-05-16 14:52:46 -HTTP METHOD : GET
2019-05-16 14:52:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 14:52:46 -参数 : [{}]
2019-05-16 14:52:46 -<==    Updates: 1
2019-05-16 14:52:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 14:52:46 -==> Parameters: 1(Long)
2019-05-16 14:52:46 -<==      Total: 49
2019-05-16 14:52:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 14:52:46 -==> Parameters: 138(Long)
2019-05-16 14:52:46 -<==      Total: 1
2019-05-16 14:52:46 -耗时 : 113
2019-05-16 14:52:46 -返回值 : index_v1
2019-05-16 14:52:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 14:52:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 113(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 14:52:46.604(Timestamp)
2019-05-16 14:52:46 -<==    Updates: 1
2019-05-16 14:52:46 -请求地址 : http://localhost:8081/main
2019-05-16 14:52:46 -HTTP METHOD : GET
2019-05-16 14:52:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 14:52:46 -参数 : []
2019-05-16 14:52:46 -耗时 : 0
2019-05-16 14:52:46 -返回值 : main
2019-05-16 14:52:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 14:52:47 -HTTP METHOD : GET
2019-05-16 14:52:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 14:52:47 -参数 : []
2019-05-16 14:52:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 14:52:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 14:52:47 -<==      Total: 0
2019-05-16 14:52:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 14:52:47 -==> Parameters: 1(Long), 0(String)
2019-05-16 14:52:47 -<==      Total: 1
2019-05-16 14:52:47 -耗时 : 36
2019-05-16 14:52:47 -返回值 : com.bootdo.common.utils.PageUtils@1da31c6
2019-05-16 14:52:47 -请求地址 : http://localhost:8081/main
2019-05-16 14:52:47 -HTTP METHOD : GET
2019-05-16 14:52:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 14:52:47 -参数 : []
2019-05-16 14:52:47 -耗时 : 0
2019-05-16 14:52:47 -返回值 : main
2019-05-16 14:52:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 14:52:54 -==> Parameters: 1(Long)
2019-05-16 14:52:54 -<==      Total: 93
2019-05-16 14:52:54 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 14:52:54 -HTTP METHOD : GET
2019-05-16 14:52:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:52:54 -参数 : []
2019-05-16 14:52:54 -耗时 : 14
2019-05-16 14:52:54 -返回值 : charts/tableElecYY
2019-05-16 14:52:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 14:52:55 -HTTP METHOD : GET
2019-05-16 14:52:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 14:52:55 -参数 : [userType]
2019-05-16 14:52:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 14:52:55 -==> Parameters: userType(String)
2019-05-16 14:52:55 -<==      Total: 4
2019-05-16 14:52:55 -耗时 : 28
2019-05-16 14:52:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 14:52:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 14:52:58 -HTTP METHOD : GET
2019-05-16 14:52:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 14:52:58 -参数 : []
2019-05-16 14:52:58 -耗时 : 0
2019-05-16 14:52:58 -返回值 : system/dept/deptTree
2019-05-16 14:52:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 14:52:59 -HTTP METHOD : GET
2019-05-16 14:52:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 14:52:59 -参数 : []
2019-05-16 14:52:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 14:52:59 -==> Parameters: 
2019-05-16 14:52:59 -<==      Total: 3
2019-05-16 14:52:59 -耗时 : 18
2019-05-16 14:52:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 14:53:01 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-16 14:53:01 -HTTP METHOD : POST
2019-05-16 14:53:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:53:01 -参数 : [com.bootdo.elec.vo.ElecVo@288a0af9, com.bootdo.moneyLog.vo.ElecLogVo@75f04f38]
2019-05-16 14:53:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 14:53:01 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecYY/tableElecYY(String), java.lang.NumberFormatException: null(String), null, 2019-05-16 14:53:01.179(Timestamp)
2019-05-16 14:53:01 -null
java.lang.NumberFormatException: null
	at java.lang.Integer.parseInt(Integer.java:542)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.bootdo.charts.controller.tableElecYYController.tableElecYY(tableElecYYController.java:58)
	at com.bootdo.charts.controller.tableElecYYController$$FastClassBySpringCGLIB$$2af9ae92.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecYYController$$EnhancerBySpringCGLIB$$ee9795e5.tableElecYY(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-16 14:53:01 -<==    Updates: 1
2019-05-16 14:53:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-05-16 14:53:29 -请求地址 : http://localhost:8081/login;JSESSIONID=760dc5db-b2e3-4030-b39a-6c5632dfe28f
2019-05-16 14:53:29 -HTTP METHOD : GET
2019-05-16 14:53:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 14:53:29 -参数 : [{}]
2019-05-16 14:53:29 -耗时 : 0
2019-05-16 14:53:29 -返回值 : login
2019-05-16 14:53:30 -请求地址 : http://localhost:8081/getVerify
2019-05-16 14:53:30 -HTTP METHOD : GET
2019-05-16 14:53:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 14:53:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@37208ede, org.apache.shiro.web.servlet.ShiroHttpServletResponse@148b1eb6]
2019-05-16 14:53:30 -7870
2019-05-16 14:53:30 -耗时 : 17
2019-05-16 14:53:30 -返回值 : null
2019-05-16 14:53:30 -请求地址 : http://localhost:8081/login
2019-05-16 14:53:30 -HTTP METHOD : GET
2019-05-16 14:53:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 14:53:30 -参数 : [{}]
2019-05-16 14:53:30 -耗时 : 0
2019-05-16 14:53:30 -返回值 : login
2019-05-16 14:53:36 -请求地址 : http://localhost:8081/login
2019-05-16 14:53:36 -HTTP METHOD : POST
2019-05-16 14:53:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 14:53:36 -参数 : [admin, 111111, 7870, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6712ecf2]
2019-05-16 14:53:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 14:53:36 -==> Parameters: admin(String)
2019-05-16 14:53:36 -<==      Total: 1
2019-05-16 14:53:36 -耗时 : 7
2019-05-16 14:53:36 -返回值 : {msg=操作成功, code=0}
2019-05-16 14:53:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 14:53:36 -==> Parameters: 1(Long), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 14:53:36.864(Timestamp)
2019-05-16 14:53:36 -请求地址 : http://localhost:8081/index
2019-05-16 14:53:36 -HTTP METHOD : GET
2019-05-16 14:53:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 14:53:36 -参数 : [{}]
2019-05-16 14:53:37 -<==    Updates: 1
2019-05-16 14:53:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 14:53:37 -==> Parameters: 1(Long)
2019-05-16 14:53:37 -<==      Total: 49
2019-05-16 14:53:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 14:53:37 -==> Parameters: 138(Long)
2019-05-16 14:53:37 -<==      Total: 1
2019-05-16 14:53:37 -耗时 : 158
2019-05-16 14:53:37 -返回值 : index_v1
2019-05-16 14:53:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 14:53:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 159(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 14:53:37.05(Timestamp)
2019-05-16 14:53:37 -<==    Updates: 1
2019-05-16 14:53:37 -请求地址 : http://localhost:8081/main
2019-05-16 14:53:37 -HTTP METHOD : GET
2019-05-16 14:53:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 14:53:37 -参数 : []
2019-05-16 14:53:37 -耗时 : 0
2019-05-16 14:53:37 -返回值 : main
2019-05-16 14:53:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 14:53:37 -HTTP METHOD : GET
2019-05-16 14:53:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 14:53:37 -参数 : []
2019-05-16 14:53:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 14:53:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 14:53:37 -请求地址 : http://localhost:8081/main
2019-05-16 14:53:37 -HTTP METHOD : GET
2019-05-16 14:53:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 14:53:37 -参数 : []
2019-05-16 14:53:37 -耗时 : 0
2019-05-16 14:53:37 -返回值 : main
2019-05-16 14:53:37 -<==      Total: 0
2019-05-16 14:53:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 14:53:37 -==> Parameters: 1(Long), 0(String)
2019-05-16 14:53:37 -<==      Total: 1
2019-05-16 14:53:37 -耗时 : 101
2019-05-16 14:53:37 -返回值 : com.bootdo.common.utils.PageUtils@6b33f966
2019-05-16 14:53:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 14:53:43 -==> Parameters: 1(Long)
2019-05-16 14:53:43 -<==      Total: 93
2019-05-16 14:53:43 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 14:53:43 -HTTP METHOD : GET
2019-05-16 14:53:43 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:53:43 -参数 : []
2019-05-16 14:53:43 -耗时 : 1
2019-05-16 14:53:43 -返回值 : charts/tableElecYY
2019-05-16 14:53:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 14:53:44 -HTTP METHOD : GET
2019-05-16 14:53:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 14:53:44 -参数 : [userType]
2019-05-16 14:53:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 14:53:44 -==> Parameters: userType(String)
2019-05-16 14:53:44 -<==      Total: 4
2019-05-16 14:53:44 -耗时 : 8
2019-05-16 14:53:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 14:53:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 14:53:48 -HTTP METHOD : GET
2019-05-16 14:53:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 14:53:48 -参数 : []
2019-05-16 14:53:48 -耗时 : 1
2019-05-16 14:53:48 -返回值 : system/dept/deptTree
2019-05-16 14:53:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 14:53:48 -HTTP METHOD : GET
2019-05-16 14:53:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 14:53:48 -参数 : []
2019-05-16 14:53:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 14:53:48 -==> Parameters: 
2019-05-16 14:53:48 -<==      Total: 3
2019-05-16 14:53:48 -耗时 : 8
2019-05-16 14:53:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 14:53:50 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-16 14:53:50 -HTTP METHOD : POST
2019-05-16 14:53:50 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:53:50 -参数 : [com.bootdo.elec.vo.ElecVo@663561aa, com.bootdo.moneyLog.vo.ElecLogVo@38dc4e2d]
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:53:50 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:53:50 -<==      Total: 1
2019-05-16 14:53:50 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-16 14:53:50 -==> Parameters: 
2019-05-16 14:53:51 -<==      Total: 2
2019-05-16 14:53:51 -耗时 : 797
2019-05-16 14:53:51 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=204, WGTotalyuNew=0, TotalCostyu=306, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=0, MMElecCostYYSum =1, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=12, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=1, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=1, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=0, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=1, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=1, MOweElecSumYYOld=0, MOweElecCountYYOld=0, AmountTotalYY=11, SElecCostYYCount =1, MElecCostYYCount =2, G2ElecCostYYCount =1, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=15, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4364, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=1, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=1, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, WGElecCostYYSum =0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=1, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=1, WSOweElecSumYYNew=0, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=1, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=1, ZTotalhuOld=0, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=1, WMElecAmountYY=1, G1TotalhuOld=0, MSPreElecSumYYNew=1, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, G3ElecCostYYCount =1, WSElecAmountYY=1, WMElecLogYYSum=60, G2TotalyuOld=0, TotalAllyuNew=202, TotalAllhuOld=0, STotalyuOld=0, MPreElecCountYYNew=0, G1ElecCostYYSum =100, SOweElecSumYYNew=0, MMTotalyuOld=0, type=2, SOweElecCountYYOld=0, MSTotalhuNew=1, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, ZOweElecSumYYNew=0, SElecCostYYSum =0, TotalLogyu=4754, ZTotalhuNew=1, MPreElecSumYYNew=0, WMElecCostYYSum =1, G2ElecLogYYSum=70, G1ElecLogYYSum=80, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, MSOweElecCountYYNew=0, WMElecCostYYCount =1, WSPreElecSumYYNew=0, ZPreElecSumYYNew=1, WSElecCostYYCount =1, MMElecCostYYCount =1, MTotalhuOld=0, MSElecCostYYCount =1, G1TotalyuOld=0, TotalPrehuNew=9, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=1, WMTotalhuNew=1, WGTotalhuNew=1, MElecAmountYY=1, WGElecCostYYCount =1, MElecCostYYSum =101, WSElecCostYYSum =0, TotalAllhuNew=11, WGOweElecSumYYOld=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=1, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=1, G2ElecCostYYSum =100, MSElecAmountYY=1, G1ElecCostYYCount =1, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSElecCostYYSum =1, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, G3ElecCostYYSum =1, WSTotalhuOld=0, G2ElecLogYYCount=1, ZOweElecCountYYNew=0, WMElecLogYYCount=1, WMTotalhuOld=0, WGPreElecCountYYNew=1, ZElecCostYYSum =1, G3OweElecCountYYNew=1, MSPreElecCountYYNew=1, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=1, G1PreElecCountYYNew=1, ZElecCostYYCount =1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-16 14:54:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 14:54:04 -HTTP METHOD : GET
2019-05-16 14:54:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 14:54:04 -参数 : []
2019-05-16 14:54:04 -耗时 : 0
2019-05-16 14:54:04 -返回值 : system/dept/deptTree
2019-05-16 14:54:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 14:54:05 -HTTP METHOD : GET
2019-05-16 14:54:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 14:54:05 -参数 : []
2019-05-16 14:54:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 14:54:05 -==> Parameters: 
2019-05-16 14:54:05 -<==      Total: 3
2019-05-16 14:54:05 -耗时 : 3
2019-05-16 14:54:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 14:54:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 14:54:06 -HTTP METHOD : GET
2019-05-16 14:54:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 14:54:06 -参数 : []
2019-05-16 14:54:06 -耗时 : 1
2019-05-16 14:54:06 -返回值 : system/dept/deptTree
2019-05-16 14:54:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 14:54:06 -HTTP METHOD : GET
2019-05-16 14:54:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 14:54:06 -参数 : []
2019-05-16 14:54:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 14:54:06 -==> Parameters: 
2019-05-16 14:54:06 -<==      Total: 3
2019-05-16 14:54:06 -耗时 : 7
2019-05-16 14:54:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 14:54:08 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-16 14:54:08 -HTTP METHOD : POST
2019-05-16 14:54:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:54:08 -参数 : [com.bootdo.elec.vo.ElecVo@612433aa, com.bootdo.moneyLog.vo.ElecLogVo@5502e022]
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:08 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:54:08 -<==      Total: 1
2019-05-16 14:54:08 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-16 14:54:08 -==> Parameters: 
2019-05-16 14:54:08 -<==      Total: 2
2019-05-16 14:54:08 -耗时 : 314
2019-05-16 14:54:08 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=0, MMPreElecSumYYNew=0, MMOweElecCountYYNew=0, TotalPreyuNew=0, WGTotalyuNew=0, TotalCostyu=0, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=20, MMElecCostYYSum =0, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=0, TotalCosthu=0, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=0, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=0, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=1, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=0, WSTotalhuNew=0, MOweElecSumYYOld=0, MOweElecCountYYOld=0, AmountTotalYY=0, SElecCostYYCount =0, MElecCostYYCount =0, G2ElecCostYYCount =0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=0, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=0, G2TotalyuNew=0, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=0, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=0, WGTotalyuOld=0, WGElecCostYYSum =0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=0, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=0, G3ElecAmountYY=0, WSOweElecSumYYNew=0, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=0, MTotalyuNew=0, G2OweElecCountYYNew=0, G1TotalyuNew=0, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, WSElecLogYYSum=0, G2OweElecSumYYOld=0, WGElecAmountYY=0, WMElecAmountYY=0, G1TotalhuOld=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=0, TotalOweyuNew=0, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=0, TotalOwehuOld=0, WGOweElecCountYYOld=0, G3ElecCostYYCount =0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=0, TotalAllhuOld=0, STotalyuOld=0, MPreElecCountYYNew=0, G1ElecCostYYSum =0, SOweElecSumYYNew=0, MMTotalyuOld=0, type=3, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, ZOweElecSumYYNew=0, SElecCostYYSum =0, TotalLogyu=20, ZTotalhuNew=0, MPreElecSumYYNew=0, WMElecCostYYSum =0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=0, TotalLoghu=1, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, MSOweElecCountYYNew=0, WMElecCostYYCount =0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, WSElecCostYYCount =0, MMElecCostYYCount =0, MTotalhuOld=0, MSElecCostYYCount =0, G1TotalyuOld=0, TotalPrehuNew=0, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=0, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=0, WGTotalhuNew=0, MElecAmountYY=0, WGElecCostYYCount =0, MElecCostYYSum =0, WSElecCostYYSum =0, TotalAllhuNew=0, WGOweElecSumYYOld=0, G3PreElecCountYYOld=0, G2TotalhuNew=0, G3OweElecSumYYNew=0, G1PreElecSumYYNew=0, SElecAmountYY=0, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, G2ElecCostYYSum =0, MSElecAmountYY=0, G1ElecCostYYCount =0, WSTotalyuNew=0, G1TotalhuNew=0, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSElecCostYYSum =0, MSOweElecSumYYNew=0, WMTotalyuNew=0, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=0, WMPreElecCountYYNew=0, MMPreElecCountYYNew=0, G3ElecCostYYSum =0, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, ZElecCostYYSum =0, G3OweElecCountYYNew=0, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=0, ZElecCostYYCount =0, SPreElecSumYYOld=0, G3ElecLogYYCount=0}
2019-05-16 14:54:46 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-16 14:54:46 -HTTP METHOD : GET
2019-05-16 14:54:46 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-16 14:54:46 -参数 : []
2019-05-16 14:54:46 -耗时 : 10
2019-05-16 14:54:46 -返回值 : charts/tableHeatYY
2019-05-16 14:54:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 14:54:47 -HTTP METHOD : GET
2019-05-16 14:54:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 14:54:47 -参数 : [userType]
2019-05-16 14:54:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 14:54:47 -==> Parameters: userType(String)
2019-05-16 14:54:47 -<==      Total: 4
2019-05-16 14:54:47 -耗时 : 4
2019-05-16 14:54:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 14:54:49 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 14:54:49 -HTTP METHOD : GET
2019-05-16 14:54:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:54:49 -参数 : []
2019-05-16 14:54:49 -耗时 : 0
2019-05-16 14:54:49 -返回值 : charts/tableElecYY
2019-05-16 14:54:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 14:54:49 -HTTP METHOD : GET
2019-05-16 14:54:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 14:54:49 -参数 : [userType]
2019-05-16 14:54:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 14:54:49 -==> Parameters: userType(String)
2019-05-16 14:54:49 -<==      Total: 4
2019-05-16 14:54:49 -耗时 : 8
2019-05-16 14:54:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 14:54:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 14:54:54 -HTTP METHOD : GET
2019-05-16 14:54:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 14:54:54 -参数 : []
2019-05-16 14:54:54 -耗时 : 0
2019-05-16 14:54:54 -返回值 : system/dept/deptTree
2019-05-16 14:54:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 14:54:54 -HTTP METHOD : GET
2019-05-16 14:54:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 14:54:54 -参数 : []
2019-05-16 14:54:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 14:54:54 -==> Parameters: 
2019-05-16 14:54:54 -<==      Total: 3
2019-05-16 14:54:54 -耗时 : 3
2019-05-16 14:54:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 14:54:56 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-16 14:54:56 -HTTP METHOD : POST
2019-05-16 14:54:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:54:56 -参数 : [com.bootdo.elec.vo.ElecVo@39349f5a, com.bootdo.moneyLog.vo.ElecLogVo@4d68bdcf]
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:54:56 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:54:56 -<==      Total: 1
2019-05-16 14:54:56 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-16 14:54:56 -==> Parameters: 
2019-05-16 14:54:56 -<==      Total: 2
2019-05-16 14:54:56 -耗时 : 259
2019-05-16 14:54:56 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=204, WGTotalyuNew=0, TotalCostyu=306, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=0, MMElecCostYYSum =1, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=12, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=1, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=1, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=0, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=1, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=1, MOweElecSumYYOld=0, MOweElecCountYYOld=0, AmountTotalYY=11, SElecCostYYCount =1, MElecCostYYCount =2, G2ElecCostYYCount =1, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=15, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4364, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=1, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=1, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, WGElecCostYYSum =0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=1, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=1, WSOweElecSumYYNew=0, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=1, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=1, ZTotalhuOld=0, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=1, WMElecAmountYY=1, G1TotalhuOld=0, MSPreElecSumYYNew=1, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, G3ElecCostYYCount =1, WSElecAmountYY=1, WMElecLogYYSum=60, G2TotalyuOld=0, TotalAllyuNew=202, TotalAllhuOld=0, STotalyuOld=0, MPreElecCountYYNew=0, G1ElecCostYYSum =100, SOweElecSumYYNew=0, MMTotalyuOld=0, type=2, SOweElecCountYYOld=0, MSTotalhuNew=1, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, ZOweElecSumYYNew=0, SElecCostYYSum =0, TotalLogyu=4754, ZTotalhuNew=1, MPreElecSumYYNew=0, WMElecCostYYSum =1, G2ElecLogYYSum=70, G1ElecLogYYSum=80, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, MSOweElecCountYYNew=0, WMElecCostYYCount =1, WSPreElecSumYYNew=0, ZPreElecSumYYNew=1, WSElecCostYYCount =1, MMElecCostYYCount =1, MTotalhuOld=0, MSElecCostYYCount =1, G1TotalyuOld=0, TotalPrehuNew=9, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=1, WMTotalhuNew=1, WGTotalhuNew=1, MElecAmountYY=1, WGElecCostYYCount =1, MElecCostYYSum =101, WSElecCostYYSum =0, TotalAllhuNew=11, WGOweElecSumYYOld=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=1, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=1, G2ElecCostYYSum =100, MSElecAmountYY=1, G1ElecCostYYCount =1, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSElecCostYYSum =1, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, G3ElecCostYYSum =1, WSTotalhuOld=0, G2ElecLogYYCount=1, ZOweElecCountYYNew=0, WMElecLogYYCount=1, WMTotalhuOld=0, WGPreElecCountYYNew=1, ZElecCostYYSum =1, G3OweElecCountYYNew=1, MSPreElecCountYYNew=1, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=1, G1PreElecCountYYNew=1, ZElecCostYYCount =1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-16 14:57:23 -请求地址 : http://localhost:8081/index
2019-05-16 14:57:23 -HTTP METHOD : GET
2019-05-16 14:57:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 14:57:23 -参数 : [{}]
2019-05-16 14:57:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 14:57:23 -==> Parameters: 1(Long)
2019-05-16 14:57:23 -<==      Total: 49
2019-05-16 14:57:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 14:57:23 -==> Parameters: 138(Long)
2019-05-16 14:57:23 -<==      Total: 1
2019-05-16 14:57:23 -耗时 : 19
2019-05-16 14:57:23 -返回值 : index_v1
2019-05-16 14:57:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 14:57:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 14:57:23.471(Timestamp)
2019-05-16 14:57:23 -请求地址 : http://localhost:8081/main
2019-05-16 14:57:23 -HTTP METHOD : GET
2019-05-16 14:57:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 14:57:23 -参数 : []
2019-05-16 14:57:23 -耗时 : 1
2019-05-16 14:57:23 -返回值 : main
2019-05-16 14:57:23 -<==    Updates: 1
2019-05-16 14:57:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 14:57:23 -HTTP METHOD : GET
2019-05-16 14:57:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 14:57:23 -参数 : []
2019-05-16 14:57:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 14:57:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 14:57:23 -<==      Total: 0
2019-05-16 14:57:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 14:57:23 -==> Parameters: 1(Long), 0(String)
2019-05-16 14:57:23 -<==      Total: 1
2019-05-16 14:57:23 -耗时 : 6
2019-05-16 14:57:23 -返回值 : com.bootdo.common.utils.PageUtils@649b65ab
2019-05-16 14:57:23 -请求地址 : http://localhost:8081/main
2019-05-16 14:57:23 -HTTP METHOD : GET
2019-05-16 14:57:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 14:57:23 -参数 : []
2019-05-16 14:57:23 -耗时 : 1
2019-05-16 14:57:23 -返回值 : main
2019-05-16 14:57:28 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 14:57:28 -HTTP METHOD : GET
2019-05-16 14:57:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:57:28 -参数 : []
2019-05-16 14:57:28 -耗时 : 1
2019-05-16 14:57:28 -返回值 : charts/tableElecYY
2019-05-16 14:57:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 14:57:29 -HTTP METHOD : GET
2019-05-16 14:57:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 14:57:29 -参数 : [userType]
2019-05-16 14:57:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 14:57:29 -==> Parameters: userType(String)
2019-05-16 14:57:29 -<==      Total: 4
2019-05-16 14:57:29 -耗时 : 4
2019-05-16 14:57:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 14:57:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 14:57:32 -HTTP METHOD : GET
2019-05-16 14:57:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 14:57:32 -参数 : []
2019-05-16 14:57:32 -耗时 : 1
2019-05-16 14:57:32 -返回值 : system/dept/deptTree
2019-05-16 14:57:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 14:57:32 -HTTP METHOD : GET
2019-05-16 14:57:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 14:57:32 -参数 : []
2019-05-16 14:57:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 14:57:32 -==> Parameters: 
2019-05-16 14:57:32 -<==      Total: 3
2019-05-16 14:57:32 -耗时 : 5
2019-05-16 14:57:32 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 14:57:33 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-16 14:57:33 -HTTP METHOD : POST
2019-05-16 14:57:33 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:57:33 -参数 : [com.bootdo.elec.vo.ElecVo@3d52c0cd, com.bootdo.moneyLog.vo.ElecLogVo@22c51a9]
2019-05-16 14:57:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:57:33 -<==      Total: 1
2019-05-16 14:57:33 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:33 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:34 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 14:57:34 -<==      Total: 1
2019-05-16 14:57:34 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-16 14:57:34 -==> Parameters: 
2019-05-16 14:57:34 -<==      Total: 2
2019-05-16 14:57:34 -耗时 : 323
2019-05-16 14:57:34 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=204, WGTotalyuNew=0, TotalCostyu=306, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=0, MMElecCostYYSum =1, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=12, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=1, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=1, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=0, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=1, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=1, MOweElecSumYYOld=0, MOweElecCountYYOld=0, AmountTotalYY=11, SElecCostYYCount =1, MElecCostYYCount =2, G2ElecCostYYCount =1, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=15, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4364, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=1, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=1, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, WGElecCostYYSum =0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=1, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=1, WSOweElecSumYYNew=0, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=1, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=1, ZTotalhuOld=0, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=1, WMElecAmountYY=1, G1TotalhuOld=0, MSPreElecSumYYNew=1, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, G3ElecCostYYCount =1, WSElecAmountYY=1, WMElecLogYYSum=60, G2TotalyuOld=0, TotalAllyuNew=202, TotalAllhuOld=0, STotalyuOld=0, MPreElecCountYYNew=0, G1ElecCostYYSum =100, SOweElecSumYYNew=0, MMTotalyuOld=0, type=2, SOweElecCountYYOld=0, MSTotalhuNew=1, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, ZOweElecSumYYNew=0, SElecCostYYSum =0, TotalLogyu=4754, ZTotalhuNew=1, MPreElecSumYYNew=0, WMElecCostYYSum =1, G2ElecLogYYSum=70, G1ElecLogYYSum=80, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, MSOweElecCountYYNew=0, WMElecCostYYCount =1, WSPreElecSumYYNew=0, ZPreElecSumYYNew=1, WSElecCostYYCount =1, MMElecCostYYCount =1, MTotalhuOld=0, MSElecCostYYCount =1, G1TotalyuOld=0, TotalPrehuNew=9, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=1, WMTotalhuNew=1, WGTotalhuNew=1, MElecAmountYY=1, WGElecCostYYCount =1, MElecCostYYSum =101, WSElecCostYYSum =0, TotalAllhuNew=11, WGOweElecSumYYOld=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=1, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=1, G2ElecCostYYSum =100, MSElecAmountYY=1, G1ElecCostYYCount =1, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSElecCostYYSum =1, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, G3ElecCostYYSum =1, WSTotalhuOld=0, G2ElecLogYYCount=1, ZOweElecCountYYNew=0, WMElecLogYYCount=1, WMTotalhuOld=0, WGPreElecCountYYNew=1, ZElecCostYYSum =1, G3OweElecCountYYNew=1, MSPreElecCountYYNew=1, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=1, G1PreElecCountYYNew=1, ZElecCostYYCount =1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-16 14:57:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 14:57:49 -HTTP METHOD : GET
2019-05-16 14:57:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 14:57:49 -参数 : []
2019-05-16 14:57:49 -耗时 : 1
2019-05-16 14:57:49 -返回值 : system/dept/deptTree
2019-05-16 14:57:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 14:57:49 -HTTP METHOD : GET
2019-05-16 14:57:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 14:57:49 -参数 : []
2019-05-16 14:57:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 14:57:49 -==> Parameters: 
2019-05-16 14:57:49 -<==      Total: 3
2019-05-16 14:57:49 -耗时 : 3
2019-05-16 14:57:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 14:57:51 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-16 14:57:51 -HTTP METHOD : POST
2019-05-16 14:57:51 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 14:57:51 -参数 : [com.bootdo.elec.vo.ElecVo@ea800a, com.bootdo.moneyLog.vo.ElecLogVo@22b18ad4]
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 14:57:51 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 14:57:51 -<==      Total: 1
2019-05-16 14:57:51 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-16 14:57:51 -==> Parameters: 
2019-05-16 14:57:51 -<==      Total: 2
2019-05-16 14:57:51 -耗时 : 236
2019-05-16 14:57:51 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=0, MMPreElecSumYYNew=0, MMOweElecCountYYNew=0, TotalPreyuNew=0, WGTotalyuNew=0, TotalCostyu=0, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=20, MMElecCostYYSum =0, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=0, TotalCosthu=0, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=0, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=0, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=1, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=0, WSTotalhuNew=0, MOweElecSumYYOld=0, MOweElecCountYYOld=0, AmountTotalYY=0, SElecCostYYCount =0, MElecCostYYCount =0, G2ElecCostYYCount =0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=0, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=0, G2TotalyuNew=0, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=0, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=0, WGTotalyuOld=0, WGElecCostYYSum =0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=0, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=0, G3ElecAmountYY=0, WSOweElecSumYYNew=0, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=0, MTotalyuNew=0, G2OweElecCountYYNew=0, G1TotalyuNew=0, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, WSElecLogYYSum=0, G2OweElecSumYYOld=0, WGElecAmountYY=0, WMElecAmountYY=0, G1TotalhuOld=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=0, TotalOweyuNew=0, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=0, TotalOwehuOld=0, WGOweElecCountYYOld=0, G3ElecCostYYCount =0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=0, TotalAllhuOld=0, STotalyuOld=0, MPreElecCountYYNew=0, G1ElecCostYYSum =0, SOweElecSumYYNew=0, MMTotalyuOld=0, type=3, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, ZOweElecSumYYNew=0, SElecCostYYSum =0, TotalLogyu=20, ZTotalhuNew=0, MPreElecSumYYNew=0, WMElecCostYYSum =0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=0, TotalLoghu=1, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, MSOweElecCountYYNew=0, WMElecCostYYCount =0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, WSElecCostYYCount =0, MMElecCostYYCount =0, MTotalhuOld=0, MSElecCostYYCount =0, G1TotalyuOld=0, TotalPrehuNew=0, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=0, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=0, WGTotalhuNew=0, MElecAmountYY=0, WGElecCostYYCount =0, MElecCostYYSum =0, WSElecCostYYSum =0, TotalAllhuNew=0, WGOweElecSumYYOld=0, G3PreElecCountYYOld=0, G2TotalhuNew=0, G3OweElecSumYYNew=0, G1PreElecSumYYNew=0, SElecAmountYY=0, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, G2ElecCostYYSum =0, MSElecAmountYY=0, G1ElecCostYYCount =0, WSTotalyuNew=0, G1TotalhuNew=0, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSElecCostYYSum =0, MSOweElecSumYYNew=0, WMTotalyuNew=0, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=0, WMPreElecCountYYNew=0, MMPreElecCountYYNew=0, G3ElecCostYYSum =0, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, ZElecCostYYSum =0, G3OweElecCountYYNew=0, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=0, ZElecCostYYCount =0, SPreElecSumYYOld=0, G3ElecLogYYCount=0}
2019-05-16 15:02:23 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:02:23 -HTTP METHOD : GET
2019-05-16 15:02:23 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:02:23 -参数 : []
2019-05-16 15:02:23 -耗时 : 10
2019-05-16 15:02:23 -返回值 : charts/tableElecMM
2019-05-16 15:02:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:23 -HTTP METHOD : GET
2019-05-16 15:02:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:23 -参数 : [userType]
2019-05-16 15:02:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:23 -==> Parameters: userType(String)
2019-05-16 15:02:23 -<==      Total: 4
2019-05-16 15:02:23 -耗时 : 5
2019-05-16 15:02:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:25 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:02:25 -HTTP METHOD : GET
2019-05-16 15:02:25 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:02:25 -参数 : []
2019-05-16 15:02:25 -耗时 : 9
2019-05-16 15:02:25 -返回值 : charts/tableHeatMM
2019-05-16 15:02:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:25 -HTTP METHOD : GET
2019-05-16 15:02:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:25 -参数 : [userType]
2019-05-16 15:02:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:25 -==> Parameters: userType(String)
2019-05-16 15:02:25 -<==      Total: 4
2019-05-16 15:02:25 -耗时 : 3
2019-05-16 15:02:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:26 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:02:26 -HTTP METHOD : GET
2019-05-16 15:02:26 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:02:26 -参数 : []
2019-05-16 15:02:26 -耗时 : 9
2019-05-16 15:02:26 -返回值 : charts/tableWaterMM
2019-05-16 15:02:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:26 -HTTP METHOD : GET
2019-05-16 15:02:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:26 -参数 : [userType]
2019-05-16 15:02:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:26 -==> Parameters: userType(String)
2019-05-16 15:02:26 -<==      Total: 4
2019-05-16 15:02:26 -耗时 : 3
2019-05-16 15:02:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:27 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:02:27 -HTTP METHOD : GET
2019-05-16 15:02:27 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:02:27 -参数 : []
2019-05-16 15:02:27 -耗时 : 0
2019-05-16 15:02:27 -返回值 : charts/tableHeatMM
2019-05-16 15:02:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:27 -HTTP METHOD : GET
2019-05-16 15:02:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:27 -参数 : [userType]
2019-05-16 15:02:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:27 -==> Parameters: userType(String)
2019-05-16 15:02:27 -<==      Total: 4
2019-05-16 15:02:27 -耗时 : 4
2019-05-16 15:02:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:27 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:02:27 -HTTP METHOD : GET
2019-05-16 15:02:27 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:02:27 -参数 : []
2019-05-16 15:02:27 -耗时 : 0
2019-05-16 15:02:27 -返回值 : charts/tableElecMM
2019-05-16 15:02:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:27 -HTTP METHOD : GET
2019-05-16 15:02:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:27 -参数 : [userType]
2019-05-16 15:02:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:27 -==> Parameters: userType(String)
2019-05-16 15:02:27 -<==      Total: 4
2019-05-16 15:02:27 -耗时 : 4
2019-05-16 15:02:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:28 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:02:28 -HTTP METHOD : GET
2019-05-16 15:02:28 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:02:28 -参数 : []
2019-05-16 15:02:28 -耗时 : 0
2019-05-16 15:02:28 -返回值 : charts/tableHeatMM
2019-05-16 15:02:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:28 -HTTP METHOD : GET
2019-05-16 15:02:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:28 -参数 : [userType]
2019-05-16 15:02:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:28 -==> Parameters: userType(String)
2019-05-16 15:02:28 -<==      Total: 4
2019-05-16 15:02:28 -耗时 : 3
2019-05-16 15:02:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:29 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:02:29 -HTTP METHOD : GET
2019-05-16 15:02:29 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:02:29 -参数 : []
2019-05-16 15:02:29 -耗时 : 0
2019-05-16 15:02:29 -返回值 : charts/tableWaterMM
2019-05-16 15:02:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:29 -HTTP METHOD : GET
2019-05-16 15:02:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:29 -参数 : [userType]
2019-05-16 15:02:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:29 -==> Parameters: userType(String)
2019-05-16 15:02:29 -<==      Total: 4
2019-05-16 15:02:29 -耗时 : 3
2019-05-16 15:02:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:30 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:02:30 -HTTP METHOD : GET
2019-05-16 15:02:30 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:02:30 -参数 : []
2019-05-16 15:02:30 -耗时 : 0
2019-05-16 15:02:30 -返回值 : charts/tableElecMM
2019-05-16 15:02:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:30 -HTTP METHOD : GET
2019-05-16 15:02:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:30 -参数 : [userType]
2019-05-16 15:02:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:30 -==> Parameters: userType(String)
2019-05-16 15:02:30 -<==      Total: 4
2019-05-16 15:02:30 -耗时 : 4
2019-05-16 15:02:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:32 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:02:32 -HTTP METHOD : GET
2019-05-16 15:02:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:02:32 -参数 : []
2019-05-16 15:02:32 -耗时 : 0
2019-05-16 15:02:32 -返回值 : charts/tableElecMM
2019-05-16 15:02:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:32 -HTTP METHOD : GET
2019-05-16 15:02:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:32 -参数 : [userType]
2019-05-16 15:02:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:32 -==> Parameters: userType(String)
2019-05-16 15:02:32 -<==      Total: 4
2019-05-16 15:02:32 -耗时 : 2
2019-05-16 15:02:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:34 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:02:34 -HTTP METHOD : GET
2019-05-16 15:02:34 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:02:34 -参数 : []
2019-05-16 15:02:34 -耗时 : 0
2019-05-16 15:02:34 -返回值 : charts/tableHeatMM
2019-05-16 15:02:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:34 -HTTP METHOD : GET
2019-05-16 15:02:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:34 -参数 : [userType]
2019-05-16 15:02:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:34 -==> Parameters: userType(String)
2019-05-16 15:02:34 -<==      Total: 4
2019-05-16 15:02:34 -耗时 : 2
2019-05-16 15:02:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:36 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:02:36 -HTTP METHOD : GET
2019-05-16 15:02:36 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:02:36 -参数 : []
2019-05-16 15:02:36 -耗时 : 0
2019-05-16 15:02:36 -返回值 : charts/tableWaterMM
2019-05-16 15:02:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:36 -HTTP METHOD : GET
2019-05-16 15:02:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:36 -参数 : [userType]
2019-05-16 15:02:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:36 -==> Parameters: userType(String)
2019-05-16 15:02:36 -<==      Total: 4
2019-05-16 15:02:36 -耗时 : 3
2019-05-16 15:02:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:38 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:02:38 -HTTP METHOD : GET
2019-05-16 15:02:38 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:02:38 -参数 : []
2019-05-16 15:02:38 -耗时 : 0
2019-05-16 15:02:38 -返回值 : charts/tableHeatMM
2019-05-16 15:02:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:38 -HTTP METHOD : GET
2019-05-16 15:02:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:38 -参数 : [userType]
2019-05-16 15:02:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:38 -==> Parameters: userType(String)
2019-05-16 15:02:38 -<==      Total: 4
2019-05-16 15:02:38 -耗时 : 4
2019-05-16 15:02:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:38 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:02:38 -HTTP METHOD : GET
2019-05-16 15:02:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:02:38 -参数 : []
2019-05-16 15:02:38 -耗时 : 0
2019-05-16 15:02:38 -返回值 : charts/tableElecMM
2019-05-16 15:02:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:38 -HTTP METHOD : GET
2019-05-16 15:02:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:38 -参数 : [userType]
2019-05-16 15:02:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:38 -==> Parameters: userType(String)
2019-05-16 15:02:38 -<==      Total: 4
2019-05-16 15:02:38 -耗时 : 4
2019-05-16 15:02:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:39 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:02:39 -HTTP METHOD : GET
2019-05-16 15:02:39 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:02:39 -参数 : []
2019-05-16 15:02:39 -耗时 : 0
2019-05-16 15:02:39 -返回值 : charts/tableHeatMM
2019-05-16 15:02:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:40 -HTTP METHOD : GET
2019-05-16 15:02:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:40 -参数 : [userType]
2019-05-16 15:02:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:40 -==> Parameters: userType(String)
2019-05-16 15:02:40 -<==      Total: 4
2019-05-16 15:02:40 -耗时 : 6
2019-05-16 15:02:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:41 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:02:41 -HTTP METHOD : GET
2019-05-16 15:02:41 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:02:41 -参数 : []
2019-05-16 15:02:41 -耗时 : 0
2019-05-16 15:02:41 -返回值 : charts/tableWaterMM
2019-05-16 15:02:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:41 -HTTP METHOD : GET
2019-05-16 15:02:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:41 -参数 : [userType]
2019-05-16 15:02:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:41 -==> Parameters: userType(String)
2019-05-16 15:02:41 -<==      Total: 4
2019-05-16 15:02:41 -耗时 : 2
2019-05-16 15:02:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:41 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:02:41 -HTTP METHOD : GET
2019-05-16 15:02:41 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:02:41 -参数 : []
2019-05-16 15:02:41 -耗时 : 0
2019-05-16 15:02:41 -返回值 : charts/tableHeatMM
2019-05-16 15:02:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:41 -HTTP METHOD : GET
2019-05-16 15:02:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:41 -参数 : [userType]
2019-05-16 15:02:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:41 -==> Parameters: userType(String)
2019-05-16 15:02:41 -<==      Total: 4
2019-05-16 15:02:41 -耗时 : 3
2019-05-16 15:02:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:02:42 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:02:42 -HTTP METHOD : GET
2019-05-16 15:02:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:02:42 -参数 : []
2019-05-16 15:02:42 -耗时 : 0
2019-05-16 15:02:42 -返回值 : charts/tableElecMM
2019-05-16 15:02:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:02:42 -HTTP METHOD : GET
2019-05-16 15:02:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:02:42 -参数 : [userType]
2019-05-16 15:02:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:02:42 -==> Parameters: userType(String)
2019-05-16 15:02:42 -<==      Total: 4
2019-05-16 15:02:42 -耗时 : 3
2019-05-16 15:02:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:00 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:04:00 -HTTP METHOD : GET
2019-05-16 15:04:00 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:04:00 -参数 : []
2019-05-16 15:04:00 -耗时 : 0
2019-05-16 15:04:00 -返回值 : charts/tableWaterMM
2019-05-16 15:04:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:01 -HTTP METHOD : GET
2019-05-16 15:04:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:01 -参数 : [userType]
2019-05-16 15:04:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:01 -==> Parameters: userType(String)
2019-05-16 15:04:01 -<==      Total: 4
2019-05-16 15:04:01 -耗时 : 4
2019-05-16 15:04:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:01 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:01 -HTTP METHOD : GET
2019-05-16 15:04:01 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:01 -参数 : []
2019-05-16 15:04:01 -耗时 : 0
2019-05-16 15:04:01 -返回值 : charts/tableHeatMM
2019-05-16 15:04:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:01 -HTTP METHOD : GET
2019-05-16 15:04:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:01 -参数 : [userType]
2019-05-16 15:04:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:01 -==> Parameters: userType(String)
2019-05-16 15:04:01 -<==      Total: 4
2019-05-16 15:04:01 -耗时 : 3
2019-05-16 15:04:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:02 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:04:02 -HTTP METHOD : GET
2019-05-16 15:04:02 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:04:02 -参数 : []
2019-05-16 15:04:02 -耗时 : 0
2019-05-16 15:04:02 -返回值 : charts/tableWaterMM
2019-05-16 15:04:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:02 -HTTP METHOD : GET
2019-05-16 15:04:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:02 -参数 : [userType]
2019-05-16 15:04:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:02 -==> Parameters: userType(String)
2019-05-16 15:04:02 -<==      Total: 4
2019-05-16 15:04:02 -耗时 : 3
2019-05-16 15:04:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:03 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:03 -HTTP METHOD : GET
2019-05-16 15:04:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:03 -参数 : []
2019-05-16 15:04:03 -耗时 : 0
2019-05-16 15:04:03 -返回值 : charts/tableHeatMM
2019-05-16 15:04:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:03 -HTTP METHOD : GET
2019-05-16 15:04:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:03 -参数 : [userType]
2019-05-16 15:04:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:03 -==> Parameters: userType(String)
2019-05-16 15:04:03 -<==      Total: 4
2019-05-16 15:04:03 -耗时 : 3
2019-05-16 15:04:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:03 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:04:03 -HTTP METHOD : GET
2019-05-16 15:04:03 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:04:03 -参数 : []
2019-05-16 15:04:03 -耗时 : 0
2019-05-16 15:04:03 -返回值 : charts/tableWaterMM
2019-05-16 15:04:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:03 -HTTP METHOD : GET
2019-05-16 15:04:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:03 -参数 : [userType]
2019-05-16 15:04:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:03 -==> Parameters: userType(String)
2019-05-16 15:04:03 -<==      Total: 4
2019-05-16 15:04:03 -耗时 : 2
2019-05-16 15:04:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:05 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:05 -HTTP METHOD : GET
2019-05-16 15:04:05 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:05 -参数 : []
2019-05-16 15:04:05 -耗时 : 1
2019-05-16 15:04:05 -返回值 : charts/tableHeatMM
2019-05-16 15:04:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:05 -HTTP METHOD : GET
2019-05-16 15:04:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:05 -参数 : [userType]
2019-05-16 15:04:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:05 -==> Parameters: userType(String)
2019-05-16 15:04:05 -<==      Total: 4
2019-05-16 15:04:05 -耗时 : 2
2019-05-16 15:04:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:06 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:04:06 -HTTP METHOD : GET
2019-05-16 15:04:06 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:04:06 -参数 : []
2019-05-16 15:04:06 -耗时 : 0
2019-05-16 15:04:06 -返回值 : charts/tableWaterMM
2019-05-16 15:04:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:06 -HTTP METHOD : GET
2019-05-16 15:04:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:06 -参数 : [userType]
2019-05-16 15:04:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:06 -==> Parameters: userType(String)
2019-05-16 15:04:06 -<==      Total: 4
2019-05-16 15:04:06 -耗时 : 4
2019-05-16 15:04:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:06 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:06 -HTTP METHOD : GET
2019-05-16 15:04:06 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:06 -参数 : []
2019-05-16 15:04:06 -耗时 : 0
2019-05-16 15:04:06 -返回值 : charts/tableHeatMM
2019-05-16 15:04:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:06 -HTTP METHOD : GET
2019-05-16 15:04:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:06 -参数 : [userType]
2019-05-16 15:04:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:06 -==> Parameters: userType(String)
2019-05-16 15:04:06 -<==      Total: 4
2019-05-16 15:04:06 -耗时 : 3
2019-05-16 15:04:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 15:04:07 -==> Parameters: 1(Long)
2019-05-16 15:04:07 -<==      Total: 93
2019-05-16 15:04:07 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:04:07 -HTTP METHOD : GET
2019-05-16 15:04:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:04:07 -参数 : []
2019-05-16 15:04:07 -耗时 : 0
2019-05-16 15:04:07 -返回值 : charts/tableElecMM
2019-05-16 15:04:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:07 -HTTP METHOD : GET
2019-05-16 15:04:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:07 -参数 : [userType]
2019-05-16 15:04:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:07 -==> Parameters: userType(String)
2019-05-16 15:04:07 -<==      Total: 4
2019-05-16 15:04:07 -耗时 : 5
2019-05-16 15:04:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:07 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:04:07 -HTTP METHOD : GET
2019-05-16 15:04:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:04:07 -参数 : []
2019-05-16 15:04:07 -耗时 : 0
2019-05-16 15:04:07 -返回值 : charts/tableElecMM
2019-05-16 15:04:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:07 -HTTP METHOD : GET
2019-05-16 15:04:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:07 -参数 : [userType]
2019-05-16 15:04:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:07 -==> Parameters: userType(String)
2019-05-16 15:04:07 -<==      Total: 4
2019-05-16 15:04:07 -耗时 : 2
2019-05-16 15:04:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:08 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:04:08 -HTTP METHOD : GET
2019-05-16 15:04:08 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:04:08 -参数 : []
2019-05-16 15:04:08 -耗时 : 0
2019-05-16 15:04:08 -返回值 : charts/tableWaterMM
2019-05-16 15:04:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:08 -HTTP METHOD : GET
2019-05-16 15:04:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:08 -参数 : [userType]
2019-05-16 15:04:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:08 -==> Parameters: userType(String)
2019-05-16 15:04:08 -<==      Total: 4
2019-05-16 15:04:08 -耗时 : 3
2019-05-16 15:04:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:08 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:08 -HTTP METHOD : GET
2019-05-16 15:04:08 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:08 -参数 : []
2019-05-16 15:04:08 -耗时 : 0
2019-05-16 15:04:08 -返回值 : charts/tableHeatMM
2019-05-16 15:04:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:09 -HTTP METHOD : GET
2019-05-16 15:04:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:09 -参数 : [userType]
2019-05-16 15:04:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:09 -==> Parameters: userType(String)
2019-05-16 15:04:09 -<==      Total: 4
2019-05-16 15:04:09 -耗时 : 3
2019-05-16 15:04:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:09 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:04:09 -HTTP METHOD : GET
2019-05-16 15:04:09 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:04:09 -参数 : []
2019-05-16 15:04:09 -耗时 : 1
2019-05-16 15:04:09 -返回值 : charts/tableElecMM
2019-05-16 15:04:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:09 -HTTP METHOD : GET
2019-05-16 15:04:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:09 -参数 : [userType]
2019-05-16 15:04:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:09 -==> Parameters: userType(String)
2019-05-16 15:04:09 -<==      Total: 4
2019-05-16 15:04:09 -耗时 : 3
2019-05-16 15:04:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:09 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:09 -HTTP METHOD : GET
2019-05-16 15:04:09 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:09 -参数 : []
2019-05-16 15:04:09 -耗时 : 1
2019-05-16 15:04:09 -返回值 : charts/tableHeatMM
2019-05-16 15:04:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:10 -HTTP METHOD : GET
2019-05-16 15:04:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:10 -参数 : [userType]
2019-05-16 15:04:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:10 -==> Parameters: userType(String)
2019-05-16 15:04:10 -<==      Total: 4
2019-05-16 15:04:10 -耗时 : 8
2019-05-16 15:04:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:10 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:04:10 -HTTP METHOD : GET
2019-05-16 15:04:10 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:04:10 -参数 : []
2019-05-16 15:04:10 -耗时 : 0
2019-05-16 15:04:10 -返回值 : charts/tableWaterMM
2019-05-16 15:04:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:10 -HTTP METHOD : GET
2019-05-16 15:04:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:10 -参数 : [userType]
2019-05-16 15:04:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:10 -==> Parameters: userType(String)
2019-05-16 15:04:10 -<==      Total: 4
2019-05-16 15:04:10 -耗时 : 2
2019-05-16 15:04:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:10 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:10 -HTTP METHOD : GET
2019-05-16 15:04:10 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:10 -参数 : []
2019-05-16 15:04:10 -耗时 : 1
2019-05-16 15:04:10 -返回值 : charts/tableHeatMM
2019-05-16 15:04:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:10 -HTTP METHOD : GET
2019-05-16 15:04:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:10 -参数 : [userType]
2019-05-16 15:04:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:10 -==> Parameters: userType(String)
2019-05-16 15:04:10 -<==      Total: 4
2019-05-16 15:04:10 -耗时 : 2
2019-05-16 15:04:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:11 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:04:11 -HTTP METHOD : GET
2019-05-16 15:04:11 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:04:11 -参数 : []
2019-05-16 15:04:11 -耗时 : 0
2019-05-16 15:04:11 -返回值 : charts/tableElecMM
2019-05-16 15:04:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:11 -HTTP METHOD : GET
2019-05-16 15:04:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:11 -参数 : [userType]
2019-05-16 15:04:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:11 -==> Parameters: userType(String)
2019-05-16 15:04:11 -<==      Total: 4
2019-05-16 15:04:11 -耗时 : 5
2019-05-16 15:04:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:11 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:11 -HTTP METHOD : GET
2019-05-16 15:04:11 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:11 -参数 : []
2019-05-16 15:04:11 -耗时 : 0
2019-05-16 15:04:11 -返回值 : charts/tableHeatMM
2019-05-16 15:04:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:11 -HTTP METHOD : GET
2019-05-16 15:04:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:11 -参数 : [userType]
2019-05-16 15:04:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:11 -==> Parameters: userType(String)
2019-05-16 15:04:11 -<==      Total: 4
2019-05-16 15:04:11 -耗时 : 3
2019-05-16 15:04:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:12 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:04:12 -HTTP METHOD : GET
2019-05-16 15:04:12 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:04:12 -参数 : []
2019-05-16 15:04:12 -耗时 : 0
2019-05-16 15:04:12 -返回值 : charts/tableWaterMM
2019-05-16 15:04:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:12 -HTTP METHOD : GET
2019-05-16 15:04:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:12 -参数 : [userType]
2019-05-16 15:04:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:12 -==> Parameters: userType(String)
2019-05-16 15:04:12 -<==      Total: 4
2019-05-16 15:04:12 -耗时 : 2
2019-05-16 15:04:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:12 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:12 -HTTP METHOD : GET
2019-05-16 15:04:12 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:12 -参数 : []
2019-05-16 15:04:12 -耗时 : 1
2019-05-16 15:04:12 -返回值 : charts/tableHeatMM
2019-05-16 15:04:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:12 -HTTP METHOD : GET
2019-05-16 15:04:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:12 -参数 : [userType]
2019-05-16 15:04:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:12 -==> Parameters: userType(String)
2019-05-16 15:04:12 -<==      Total: 4
2019-05-16 15:04:12 -耗时 : 3
2019-05-16 15:04:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:13 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:04:13 -HTTP METHOD : GET
2019-05-16 15:04:13 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:04:13 -参数 : []
2019-05-16 15:04:13 -耗时 : 1
2019-05-16 15:04:13 -返回值 : charts/tableElecMM
2019-05-16 15:04:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:13 -HTTP METHOD : GET
2019-05-16 15:04:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:13 -参数 : [userType]
2019-05-16 15:04:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:13 -==> Parameters: userType(String)
2019-05-16 15:04:13 -<==      Total: 4
2019-05-16 15:04:13 -耗时 : 3
2019-05-16 15:04:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:13 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:13 -HTTP METHOD : GET
2019-05-16 15:04:13 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:13 -参数 : []
2019-05-16 15:04:13 -耗时 : 0
2019-05-16 15:04:13 -返回值 : charts/tableHeatMM
2019-05-16 15:04:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:13 -HTTP METHOD : GET
2019-05-16 15:04:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:13 -参数 : [userType]
2019-05-16 15:04:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:13 -==> Parameters: userType(String)
2019-05-16 15:04:13 -<==      Total: 4
2019-05-16 15:04:13 -耗时 : 3
2019-05-16 15:04:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:14 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:04:14 -HTTP METHOD : GET
2019-05-16 15:04:14 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:04:14 -参数 : []
2019-05-16 15:04:14 -耗时 : 0
2019-05-16 15:04:14 -返回值 : charts/tableWaterMM
2019-05-16 15:04:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:14 -HTTP METHOD : GET
2019-05-16 15:04:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:14 -参数 : [userType]
2019-05-16 15:04:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:14 -==> Parameters: userType(String)
2019-05-16 15:04:14 -<==      Total: 4
2019-05-16 15:04:14 -耗时 : 3
2019-05-16 15:04:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:14 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:04:14 -HTTP METHOD : GET
2019-05-16 15:04:14 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:04:14 -参数 : []
2019-05-16 15:04:14 -耗时 : 0
2019-05-16 15:04:14 -返回值 : charts/tableElecMM
2019-05-16 15:04:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:14 -HTTP METHOD : GET
2019-05-16 15:04:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:14 -参数 : [userType]
2019-05-16 15:04:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:14 -==> Parameters: userType(String)
2019-05-16 15:04:14 -<==      Total: 4
2019-05-16 15:04:14 -耗时 : 3
2019-05-16 15:04:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:15 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:15 -HTTP METHOD : GET
2019-05-16 15:04:15 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:15 -参数 : []
2019-05-16 15:04:15 -耗时 : 0
2019-05-16 15:04:15 -返回值 : charts/tableHeatMM
2019-05-16 15:04:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:15 -HTTP METHOD : GET
2019-05-16 15:04:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:15 -参数 : [userType]
2019-05-16 15:04:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:15 -==> Parameters: userType(String)
2019-05-16 15:04:15 -<==      Total: 4
2019-05-16 15:04:15 -耗时 : 3
2019-05-16 15:04:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:15 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:04:15 -HTTP METHOD : GET
2019-05-16 15:04:15 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:04:15 -参数 : []
2019-05-16 15:04:15 -耗时 : 0
2019-05-16 15:04:15 -返回值 : charts/tableWaterMM
2019-05-16 15:04:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:15 -HTTP METHOD : GET
2019-05-16 15:04:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:15 -参数 : [userType]
2019-05-16 15:04:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:15 -==> Parameters: userType(String)
2019-05-16 15:04:15 -<==      Total: 4
2019-05-16 15:04:15 -耗时 : 2
2019-05-16 15:04:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:04:15 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:04:15 -HTTP METHOD : GET
2019-05-16 15:04:15 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:04:15 -参数 : []
2019-05-16 15:04:15 -耗时 : 1
2019-05-16 15:04:15 -返回值 : charts/tableHeatMM
2019-05-16 15:04:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:04:16 -HTTP METHOD : GET
2019-05-16 15:04:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:04:16 -参数 : [userType]
2019-05-16 15:04:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:04:16 -==> Parameters: userType(String)
2019-05-16 15:04:16 -<==      Total: 4
2019-05-16 15:04:16 -耗时 : 3
2019-05-16 15:04:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:08:01 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-16 15:08:01 -HTTP METHOD : POST
2019-05-16 15:08:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 15:08:01 -参数 : [com.bootdo.elec.vo.ElecVo@10f94adb, com.bootdo.moneyLog.vo.ElecLogVo@6a4a4f0f]
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:01 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-16 15:08:01 -<==      Total: 1
2019-05-16 15:08:01 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-16 15:08:01 -==> Parameters: 
2019-05-16 15:08:01 -<==      Total: 2
2019-05-16 15:08:01 -耗时 : 199
2019-05-16 15:08:01 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=0, MMPreElecSumYYNew=0, MMOweElecCountYYNew=0, TotalPreyuNew=0, WGTotalyuNew=0, TotalCostyu=0, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=20, MMElecCostYYSum =0, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=0, TotalCosthu=0, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0, G2PreElecSumYYNew=0, G1OweElecSumYYNew=0, G1ElecLogYYCount=0, MMTotalhuNew=0, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=1, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=0, WMTotalyuOld=0, WSElecLogYYCount=0, WSTotalhuNew=0, MOweElecSumYYOld=0, MOweElecCountYYOld=0, AmountTotalYY=0, SElecCostYYCount =0, MElecCostYYCount =0, G2ElecCostYYCount =0, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=0, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=0, G2TotalyuNew=0, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=0, WGElecLogYYCount=0, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=0, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=0, WGTotalyuOld=0, WGElecCostYYSum =0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=0, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=0, G3ElecAmountYY=0, WSOweElecSumYYNew=0, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=0, MTotalyuNew=0, G2OweElecCountYYNew=0, G1TotalyuNew=0, WMOweElecSumYYOld=0, SPreElecCountYYNew=0, ZTotalhuOld=0, WSElecLogYYSum=0, G2OweElecSumYYOld=0, WGElecAmountYY=0, WMElecAmountYY=0, G1TotalhuOld=0, MSPreElecSumYYNew=0, MOweElecCountYYNew=0, TotalOweyuNew=0, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=0, TotalOwehuOld=0, WGOweElecCountYYOld=0, G3ElecCostYYCount =0, WSElecAmountYY=0, WMElecLogYYSum=0, G2TotalyuOld=0, TotalAllyuNew=0, TotalAllhuOld=0, STotalyuOld=0, MPreElecCountYYNew=0, G1ElecCostYYSum =0, SOweElecSumYYNew=0, MMTotalyuOld=0, type=3, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, ZOweElecSumYYNew=0, SElecCostYYSum =0, TotalLogyu=20, ZTotalhuNew=0, MPreElecSumYYNew=0, WMElecCostYYSum =0, G2ElecLogYYSum=0, G1ElecLogYYSum=0, G3ElecLogYYSum=0, TotalLoghu=1, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, MSOweElecCountYYNew=0, WMElecCostYYCount =0, WSPreElecSumYYNew=0, ZPreElecSumYYNew=0, WSElecCostYYCount =0, MMElecCostYYCount =0, MTotalhuOld=0, MSElecCostYYCount =0, G1TotalyuOld=0, TotalPrehuNew=0, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=0, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=0, WMTotalhuNew=0, WGTotalhuNew=0, MElecAmountYY=0, WGElecCostYYCount =0, MElecCostYYSum =0, WSElecCostYYSum =0, TotalAllhuNew=0, WGOweElecSumYYOld=0, G3PreElecCountYYOld=0, G2TotalhuNew=0, G3OweElecSumYYNew=0, G1PreElecSumYYNew=0, SElecAmountYY=0, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=0, G2ElecCostYYSum =0, MSElecAmountYY=0, G1ElecCostYYCount =0, WSTotalyuNew=0, G1TotalhuNew=0, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSElecCostYYSum =0, MSOweElecSumYYNew=0, WMTotalyuNew=0, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=0, WMPreElecCountYYNew=0, MMPreElecCountYYNew=0, G3ElecCostYYSum =0, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, ZElecCostYYSum =0, G3OweElecCountYYNew=0, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=0, ZElecCostYYCount =0, SPreElecSumYYOld=0, G3ElecLogYYCount=0}
2019-05-16 15:08:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 15:08:03 -HTTP METHOD : GET
2019-05-16 15:08:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 15:08:03 -参数 : []
2019-05-16 15:08:03 -耗时 : 1
2019-05-16 15:08:03 -返回值 : system/dept/deptTree
2019-05-16 15:08:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 15:08:04 -HTTP METHOD : GET
2019-05-16 15:08:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 15:08:04 -参数 : []
2019-05-16 15:08:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 15:08:04 -==> Parameters: 
2019-05-16 15:08:04 -<==      Total: 3
2019-05-16 15:08:04 -耗时 : 2
2019-05-16 15:08:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 15:08:08 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-16 15:08:08 -HTTP METHOD : POST
2019-05-16 15:08:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 15:08:08 -参数 : [com.bootdo.elec.vo.ElecVo@61bffa49, com.bootdo.moneyLog.vo.ElecLogVo@71e74453]
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-16 15:08:08 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-16 15:08:08 -<==      Total: 1
2019-05-16 15:08:08 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-16 15:08:08 -==> Parameters: 
2019-05-16 15:08:08 -<==      Total: 2
2019-05-16 15:08:08 -耗时 : 223
2019-05-16 15:08:08 -返回值 : {WGOweElecSumYYNew=0, G1OweElecCountYYNew=0, G3TotalyuNew=-1, MMPreElecSumYYNew=1, MMOweElecCountYYNew=0, TotalPreyuNew=204, WGTotalyuNew=0, TotalCostyu=306, WGTotalhuOld=0, WMPreElecSumYYOld=0, SElecLogYYSum=0, MMElecCostYYSum =1, G3TotalhuOld=0, G1PreElecSumYYOld=0, TotalOwehuNew=2, TotalCosthu=12, MSTotalyuOld=0, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=1, MTotalyuOld=0, G2PreElecSumYYNew=100, G1OweElecSumYYNew=0, G1ElecLogYYCount=1, MMTotalhuNew=1, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0, SElecLogYYCount=0, ZTotalyuOld=0, G3PreElecSumYYNew=0, ZElecLogYYSum=0, WSPreElecCountYYNew=1, WMTotalyuOld=0, WSElecLogYYCount=1, WSTotalhuNew=1, MOweElecSumYYOld=0, MOweElecCountYYOld=0, AmountTotalYY=11, SElecCostYYCount =1, MElecCostYYCount =2, G2ElecCostYYCount =1, G2OweElecSumYYNew=0, WSOweElecSumYYOld=0, MSPreElecSumYYOld=0, G3OweElecCountYYOld=0, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0, MElecLogYYCount=15, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=4364, G2TotalyuNew=100, G2TotalhuOld=0, MMOweElecSumYYNew=0, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0, ZTotalyuNew=1, WGElecLogYYCount=1, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0, ZElecAmountYY=1, STotalyuNew=0, SOweElecCountYYNew=0, MMTotalyuNew=1, WGTotalyuOld=0, WGElecCostYYSum =0, TotalPreyuOld=0, G3TotalyuOld=0, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=1, WMOweElecCountYYOld=0, G1ElecAmountYY=1, STotalhuOld=0, G2PreElecCountYYNew=1, G3ElecAmountYY=1, WSOweElecSumYYNew=0, MPreElecSumYYOld=0, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=1, G3PreElecSumYYOld=0, MMPreElecSumYYOld=0, MTotalhuNew=1, MTotalyuNew=-1, G2OweElecCountYYNew=0, G1TotalyuNew=100, WMOweElecSumYYOld=0, SPreElecCountYYNew=1, ZTotalhuOld=0, WSElecLogYYSum=80, G2OweElecSumYYOld=0, WGElecAmountYY=1, WMElecAmountYY=1, G1TotalhuOld=0, MSPreElecSumYYNew=1, MOweElecCountYYNew=1, TotalOweyuNew=-2, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=10, TotalOwehuOld=0, WGOweElecCountYYOld=0, G3ElecCostYYCount =1, WSElecAmountYY=1, WMElecLogYYSum=60, G2TotalyuOld=0, TotalAllyuNew=202, TotalAllhuOld=0, STotalyuOld=0, MPreElecCountYYNew=0, G1ElecCostYYSum =100, SOweElecSumYYNew=0, MMTotalyuOld=0, type=2, SOweElecCountYYOld=0, MSTotalhuNew=1, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0, WSTotalyuOld=0, ZOweElecSumYYNew=0, SElecCostYYSum =0, TotalLogyu=4754, ZTotalhuNew=1, MPreElecSumYYNew=0, WMElecCostYYSum =1, G2ElecLogYYSum=70, G1ElecLogYYSum=80, G3ElecLogYYSum=90, TotalLoghu=21, SPreElecCountYYOld=0, TotalOweyuOld=0, MSOweElecSumYYOld=0, MSOweElecCountYYNew=0, WMElecCostYYCount =1, WSPreElecSumYYNew=0, ZPreElecSumYYNew=1, WSElecCostYYCount =1, MMElecCostYYCount =1, MTotalhuOld=0, MSElecCostYYCount =1, G1TotalyuOld=0, TotalPrehuNew=9, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=1, SPreElecSumYYNew=0, MMElecLogYYCount=0, ZPreElecCountYYNew=1, WMTotalhuNew=1, WGTotalhuNew=1, MElecAmountYY=1, WGElecCostYYCount =1, MElecCostYYSum =101, WSElecCostYYSum =0, TotalAllhuNew=11, WGOweElecSumYYOld=0, G3PreElecCountYYOld=0, G2TotalhuNew=1, G3OweElecSumYYNew=-1, G1PreElecSumYYNew=100, SElecAmountYY=1, WGPreElecSumYYNew=0, G2PreElecSumYYOld=0, G2ElecAmountYY=1, G2ElecCostYYSum =100, MSElecAmountYY=1, G1ElecCostYYCount =1, WSTotalyuNew=0, G1TotalhuNew=1, G1OweElecSumYYOld=0, MMElecLogYYSum=0, MSElecCostYYSum =1, MSOweElecSumYYNew=0, WMTotalyuNew=1, WSPreElecSumYYOld=0, MSElecLogYYSum=0, ZPreElecSumYYOld=0, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=-1, WMPreElecCountYYNew=1, MMPreElecCountYYNew=1, G3ElecCostYYSum =1, WSTotalhuOld=0, G2ElecLogYYCount=1, ZOweElecCountYYNew=0, WMElecLogYYCount=1, WMTotalhuOld=0, WGPreElecCountYYNew=1, ZElecCostYYSum =1, G3OweElecCountYYNew=1, MSPreElecCountYYNew=1, MMOweElecSumYYOld=0, ZElecLogYYCount=0, MMElecAmountYY=1, G1PreElecCountYYNew=1, ZElecCostYYCount =1, SPreElecSumYYOld=0, G3ElecLogYYCount=1}
2019-05-16 15:23:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 441]
2019-05-16 15:46:45 -请求地址 : http://localhost:8081/login;JSESSIONID=1910bd55-05a5-4508-b698-c427cc259949
2019-05-16 15:46:45 -HTTP METHOD : GET
2019-05-16 15:46:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 15:46:45 -参数 : [{}]
2019-05-16 15:46:45 -耗时 : 0
2019-05-16 15:46:45 -返回值 : login
2019-05-16 15:46:45 -请求地址 : http://localhost:8081/login;JSESSIONID=1910bd55-05a5-4508-b698-c427cc259949
2019-05-16 15:46:45 -HTTP METHOD : GET
2019-05-16 15:46:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 15:46:45 -参数 : [{}]
2019-05-16 15:46:45 -耗时 : 0
2019-05-16 15:46:45 -返回值 : login
2019-05-16 15:46:45 -请求地址 : http://localhost:8081/getVerify
2019-05-16 15:46:45 -HTTP METHOD : GET
2019-05-16 15:46:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 15:46:45 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5e52d916, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3863d86a]
2019-05-16 15:46:45 -9167
2019-05-16 15:46:45 -耗时 : 40
2019-05-16 15:46:45 -返回值 : null
2019-05-16 15:46:46 -请求地址 : http://localhost:8081/getVerify
2019-05-16 15:46:46 -HTTP METHOD : GET
2019-05-16 15:46:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 15:46:46 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@661e413d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@11ea8646]
2019-05-16 15:46:46 -5824
2019-05-16 15:46:46 -耗时 : 8
2019-05-16 15:46:46 -返回值 : null
2019-05-16 15:46:56 -请求地址 : http://localhost:8081/login
2019-05-16 15:46:56 -HTTP METHOD : POST
2019-05-16 15:46:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 15:46:56 -参数 : [admin, 111111, 5824, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ef8106]
2019-05-16 15:46:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 15:46:56 -==> Parameters: admin(String)
2019-05-16 15:46:56 -<==      Total: 1
2019-05-16 15:46:56 -耗时 : 58
2019-05-16 15:46:56 -返回值 : {msg=操作成功, code=0}
2019-05-16 15:46:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 15:46:56 -请求地址 : http://localhost:8081/index
2019-05-16 15:46:56 -HTTP METHOD : GET
2019-05-16 15:46:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 15:46:56 -参数 : [{}]
2019-05-16 15:46:56 -==> Parameters: 1(Long), admin(String), 登录(String), 58(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 15:46:56.398(Timestamp)
2019-05-16 15:46:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 15:46:56 -<==    Updates: 1
2019-05-16 15:46:56 -==> Parameters: 1(Long)
2019-05-16 15:46:56 -<==      Total: 49
2019-05-16 15:46:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 15:46:56 -==> Parameters: 138(Long)
2019-05-16 15:46:56 -<==      Total: 1
2019-05-16 15:46:56 -耗时 : 91
2019-05-16 15:46:56 -返回值 : index_v1
2019-05-16 15:46:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 15:46:56 -请求地址 : http://localhost:8081/main
2019-05-16 15:46:56 -HTTP METHOD : GET
2019-05-16 15:46:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 15:46:56 -参数 : []
2019-05-16 15:46:56 -耗时 : 0
2019-05-16 15:46:56 -返回值 : main
2019-05-16 15:46:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 91(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 15:46:56.515(Timestamp)
2019-05-16 15:46:56 -<==    Updates: 1
2019-05-16 15:46:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 15:46:56 -HTTP METHOD : GET
2019-05-16 15:46:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 15:46:56 -参数 : []
2019-05-16 15:46:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 15:46:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 15:46:56 -<==      Total: 0
2019-05-16 15:46:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 15:46:56 -==> Parameters: 1(Long), 0(String)
2019-05-16 15:46:56 -<==      Total: 1
2019-05-16 15:46:56 -耗时 : 7
2019-05-16 15:46:56 -返回值 : com.bootdo.common.utils.PageUtils@64f8ac9f
2019-05-16 15:46:56 -请求地址 : http://localhost:8081/main
2019-05-16 15:46:56 -HTTP METHOD : GET
2019-05-16 15:46:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 15:46:56 -参数 : []
2019-05-16 15:46:56 -耗时 : 2
2019-05-16 15:46:56 -返回值 : main
2019-05-16 15:47:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 15:47:01 -==> Parameters: 1(Long)
2019-05-16 15:47:01 -<==      Total: 93
2019-05-16 15:47:01 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:47:01 -HTTP METHOD : GET
2019-05-16 15:47:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:47:01 -参数 : []
2019-05-16 15:47:01 -耗时 : 1
2019-05-16 15:47:01 -返回值 : charts/tableElecMM
2019-05-16 15:47:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:47:01 -HTTP METHOD : GET
2019-05-16 15:47:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:47:01 -参数 : [userType]
2019-05-16 15:47:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:47:01 -==> Parameters: userType(String)
2019-05-16 15:47:01 -<==      Total: 4
2019-05-16 15:47:01 -耗时 : 5
2019-05-16 15:47:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:47:03 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:47:03 -HTTP METHOD : GET
2019-05-16 15:47:03 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:47:03 -参数 : []
2019-05-16 15:47:03 -耗时 : 0
2019-05-16 15:47:03 -返回值 : charts/tableWaterMM
2019-05-16 15:47:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:47:03 -HTTP METHOD : GET
2019-05-16 15:47:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:47:03 -参数 : [userType]
2019-05-16 15:47:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:47:03 -==> Parameters: userType(String)
2019-05-16 15:47:03 -<==      Total: 4
2019-05-16 15:47:03 -耗时 : 5
2019-05-16 15:47:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:51:20 -Starting BootdoApplication on PC-201905091110 with PID 4800 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 15:51:20 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 15:51:20 -The following profiles are active: dev
2019-05-16 15:51:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 15:51:20 CST 2019]; root of context hierarchy
2019-05-16 15:51:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 15:51:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 15:51:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 15:51:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 15:51:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 15:51:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 15:51:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 15:51:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 15:51:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 15:51:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 15:51:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 15:51:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 15:51:26 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 15:51:26 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 15:51:27 -Starting service [Tomcat]
2019-05-16 15:51:27 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 15:51:27 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 15:51:27 -Initializing Spring embedded WebApplicationContext
2019-05-16 15:51:27 -Root WebApplicationContext: initialization completed in 6823 ms
2019-05-16 15:51:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 15:51:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 15:51:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 15:51:27 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 15:51:27 -Filter xssFilter was not registered (disabled)
2019-05-16 15:51:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 15:51:27 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 15:51:27 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 15:51:27 -Servlet dispatcherServlet mapped to [/]
2019-05-16 15:51:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 15:51:20 CST 2019]; root of context hierarchy
2019-05-16 15:51:32 -Using default implementation for ThreadExecutor
2019-05-16 15:51:32 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 15:51:32 -Quartz Scheduler v.2.2.1 created.
2019-05-16 15:51:32 -RAMJobStore initialized.
2019-05-16 15:51:32 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 15:51:32 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 15:51:32 -Quartz scheduler version: 2.2.1
2019-05-16 15:51:32 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4601047
2019-05-16 15:51:32 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 15:51:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 15:51:35 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 15:51:35 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 15:51:35 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 15:51:35 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 15:51:35 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 15:51:35 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 15:51:35 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 15:51:35 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 15:51:35 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 15:51:35 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 15:51:35 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 15:51:35 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 15:51:35 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 15:51:35 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 15:51:35 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 15:51:35 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 15:51:35 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 15:51:35 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 15:51:35 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 15:51:35 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 15:51:35 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 15:51:35 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 15:51:35 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 15:51:35 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 15:51:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 15:51:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 15:51:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 15:51:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 15:51:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 15:51:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 15:51:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 15:51:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 15:51:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 15:51:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 15:51:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 15:51:35 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 15:51:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 15:51:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 15:51:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 15:51:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 15:51:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 15:51:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 15:51:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 15:51:35 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 15:51:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 15:51:35 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 15:51:35 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 15:51:35 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 15:51:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 15:51:35 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 15:51:35 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 15:51:35 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 15:51:35 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 15:51:35 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 15:51:35 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 15:51:35 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 15:51:35 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 15:51:35 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 15:51:35 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 15:51:35 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 15:51:35 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 15:51:35 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 15:51:35 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 15:51:35 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 15:51:35 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 15:51:35 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 15:51:35 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 15:51:35 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 15:51:35 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 15:51:35 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 15:51:35 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 15:51:35 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 15:51:35 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 15:51:35 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 15:51:35 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 15:51:35 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 15:51:35 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 15:51:35 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 15:51:35 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 15:51:35 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 15:51:35 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 15:51:35 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 15:51:35 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 15:51:35 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 15:51:35 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 15:51:35 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 15:51:35 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 15:51:35 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 15:51:35 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 15:51:35 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 15:51:35 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 15:51:35 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 15:51:35 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 15:51:35 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 15:51:35 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 15:51:35 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 15:51:35 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 15:51:35 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 15:51:35 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 15:51:35 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 15:51:35 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 15:51:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 15:51:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 15:51:35 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 15:51:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 15:51:35 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 15:51:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 15:51:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 15:51:35 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 15:51:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 15:51:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 15:51:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 15:51:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 15:51:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 15:51:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 15:51:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 15:51:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 15:51:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 15:51:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 15:51:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 15:51:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 15:51:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 15:51:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 15:51:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 15:51:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 15:51:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 15:51:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 15:51:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 15:51:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 15:51:35 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 15:51:35 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 15:51:35 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 15:51:35 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 15:51:35 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 15:51:35 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 15:51:35 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 15:51:35 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 15:51:35 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 15:51:35 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 15:51:35 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 15:51:35 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 15:51:35 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 15:51:35 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 15:51:35 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 15:51:35 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 15:51:35 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 15:51:35 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 15:51:35 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 15:51:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 15:51:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 15:51:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 15:51:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 15:51:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 15:51:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 15:51:35 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 15:51:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 15:51:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 15:51:20 CST 2019]; root of context hierarchy
2019-05-16 15:51:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 15:51:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 15:51:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 15:51:36 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 15:51:36 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 15:51:38 -Registering beans for JMX exposure on startup
2019-05-16 15:51:38 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 15:51:38 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 15:51:38 -Starting beans in phase 2147483647
2019-05-16 15:51:38 -Context refreshed
2019-05-16 15:51:38 -Found 1 custom documentation plugin(s)
2019-05-16 15:51:38 -Scanning for api listing references
2019-05-16 15:51:38 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 15:51:38 -Generating unique operation named: removeUsingPOST_1
2019-05-16 15:51:38 -Generating unique operation named: addUsingGET_1
2019-05-16 15:51:39 -Generating unique operation named: editUsingGET_1
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_1
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_2
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_3
2019-05-16 15:51:39 -Generating unique operation named: saveUsingPOST_1
2019-05-16 15:51:39 -Generating unique operation named: updateUsingGET_1
2019-05-16 15:51:39 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPOST_1
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPUT_1
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 15:51:39 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 15:51:39 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 15:51:39 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 15:51:39 -Generating unique operation named: addUsingGET_2
2019-05-16 15:51:39 -Generating unique operation named: editUsingGET_2
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_2
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_4
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_5
2019-05-16 15:51:39 -Generating unique operation named: saveUsingPOST_2
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPOST_2
2019-05-16 15:51:39 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 15:51:39 -Generating unique operation named: addUsingGET_3
2019-05-16 15:51:39 -Generating unique operation named: editUsingGET_3
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_3
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_6
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_7
2019-05-16 15:51:39 -Generating unique operation named: saveUsingPOST_3
2019-05-16 15:51:39 -Generating unique operation named: updateUsingGET_2
2019-05-16 15:51:39 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPOST_3
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPUT_2
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 15:51:39 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 15:51:39 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 15:51:39 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 15:51:39 -Generating unique operation named: addUsingGET_4
2019-05-16 15:51:39 -Generating unique operation named: editUsingGET_4
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_4
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_8
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_9
2019-05-16 15:51:39 -Generating unique operation named: saveUsingPOST_4
2019-05-16 15:51:39 -Generating unique operation named: updateUsingGET_3
2019-05-16 15:51:39 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPOST_4
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPUT_3
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 15:51:39 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 15:51:39 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 15:51:39 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 15:51:39 -Generating unique operation named: ElecUsingGET_1
2019-05-16 15:51:39 -Generating unique operation named: addUsingGET_5
2019-05-16 15:51:39 -Generating unique operation named: editUsingGET_5
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_5
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_10
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_11
2019-05-16 15:51:39 -Generating unique operation named: saveUsingPOST_5
2019-05-16 15:51:39 -Generating unique operation named: updateUsingGET_4
2019-05-16 15:51:39 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPOST_5
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPUT_4
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 15:51:39 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 15:51:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 15:51:39 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 15:51:39 -Generating unique operation named: editUsingGET_6
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_6
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPOST_6
2019-05-16 15:51:39 -Generating unique operation named: addUsingGET_6
2019-05-16 15:51:39 -Generating unique operation named: editUsingGET_7
2019-05-16 15:51:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_7
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_12
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_13
2019-05-16 15:51:39 -Generating unique operation named: saveUsingPOST_6
2019-05-16 15:51:39 -Generating unique operation named: updateUsingGET_5
2019-05-16 15:51:39 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPOST_7
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPUT_5
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 15:51:39 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 15:51:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 15:51:39 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 15:51:39 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 15:51:39 -Generating unique operation named: addUsingGET_7
2019-05-16 15:51:39 -Generating unique operation named: editUsingGET_8
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_8
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_14
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_15
2019-05-16 15:51:39 -Generating unique operation named: saveUsingPOST_7
2019-05-16 15:51:39 -Generating unique operation named: updateUsingGET_6
2019-05-16 15:51:39 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPOST_8
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPUT_6
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 15:51:39 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 15:51:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 15:51:39 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 15:51:39 -Generating unique operation named: addUsingGET_8
2019-05-16 15:51:39 -Generating unique operation named: editUsingGET_9
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_9
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_16
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_17
2019-05-16 15:51:39 -Generating unique operation named: saveUsingPOST_8
2019-05-16 15:51:39 -Generating unique operation named: updateUsingGET_7
2019-05-16 15:51:39 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPOST_9
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPUT_7
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 15:51:39 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 15:51:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 15:51:39 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 15:51:39 -Generating unique operation named: addUsingGET_9
2019-05-16 15:51:39 -Generating unique operation named: editUsingGET_10
2019-05-16 15:51:39 -Generating unique operation named: infoUsingGET_1
2019-05-16 15:51:39 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 15:51:39 -Generating unique operation named: infoUsingPOST_1
2019-05-16 15:51:39 -Generating unique operation named: infoUsingPUT_1
2019-05-16 15:51:39 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 15:51:39 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 15:51:39 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 15:51:39 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_10
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_18
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_19
2019-05-16 15:51:39 -Generating unique operation named: saveUsingPOST_9
2019-05-16 15:51:39 -Generating unique operation named: updateUsingPOST_10
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_11
2019-05-16 15:51:39 -Generating unique operation named: removeUsingPOST_20
2019-05-16 15:51:39 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 15:51:39 -Generating unique operation named: addUsingGET_10
2019-05-16 15:51:39 -Generating unique operation named: editUsingGET_11
2019-05-16 15:51:39 -Generating unique operation named: listUsingGET_12
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_21
2019-05-16 15:51:40 -Generating unique operation named: saveUsingPOST_10
2019-05-16 15:51:40 -Generating unique operation named: treeUsingGET_1
2019-05-16 15:51:40 -Generating unique operation named: treeUsingGET_2
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPOST_11
2019-05-16 15:51:40 -Generating unique operation named: addUsingGET_11
2019-05-16 15:51:40 -Generating unique operation named: editUsingGET_12
2019-05-16 15:51:40 -Generating unique operation named: listUsingGET_13
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_22
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_23
2019-05-16 15:51:40 -Generating unique operation named: saveUsingPOST_11
2019-05-16 15:51:40 -Generating unique operation named: updateUsingGET_8
2019-05-16 15:51:40 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPOST_12
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPUT_8
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 15:51:40 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 15:51:40 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 15:51:40 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 15:51:40 -Generating unique operation named: addUsingGET_12
2019-05-16 15:51:40 -Generating unique operation named: editUsingGET_13
2019-05-16 15:51:40 -Generating unique operation named: listUsingGET_14
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_24
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_25
2019-05-16 15:51:40 -Generating unique operation named: saveUsingPOST_12
2019-05-16 15:51:40 -Generating unique operation named: updateUsingGET_9
2019-05-16 15:51:40 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPOST_13
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPUT_9
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 15:51:40 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 15:51:40 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 15:51:40 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 15:51:40 -Generating unique operation named: addUsingGET_13
2019-05-16 15:51:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 15:51:40 -Generating unique operation named: editUsingGET_14
2019-05-16 15:51:40 -Generating unique operation named: listUsingGET_15
2019-05-16 15:51:40 -Generating unique operation named: saveUsingPOST_13
2019-05-16 15:51:40 -Generating unique operation named: saveUsingPOST_14
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPOST_14
2019-05-16 15:51:40 -Generating unique operation named: listUsingGET_16
2019-05-16 15:51:40 -Generating unique operation named: listUsingHEAD_1
2019-05-16 15:51:40 -Generating unique operation named: listUsingPOST_1
2019-05-16 15:51:40 -Generating unique operation named: listUsingPUT_1
2019-05-16 15:51:40 -Generating unique operation named: listUsingPATCH_1
2019-05-16 15:51:40 -Generating unique operation named: listUsingDELETE_1
2019-05-16 15:51:40 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 15:51:40 -Generating unique operation named: listUsingTRACE_1
2019-05-16 15:51:40 -Generating unique operation named: countDDUsingGET_1
2019-05-16 15:51:40 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 15:51:40 -Generating unique operation named: addUsingGET_14
2019-05-16 15:51:40 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 15:51:40 -Generating unique operation named: editUsingGET_15
2019-05-16 15:51:40 -Generating unique operation named: listUsingGET_17
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_26
2019-05-16 15:51:40 -Generating unique operation named: saveUsingPOST_15
2019-05-16 15:51:40 -Generating unique operation named: treeUsingGET_3
2019-05-16 15:51:40 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPOST_15
2019-05-16 15:51:40 -Generating unique operation named: addUsingGET_15
2019-05-16 15:51:40 -Generating unique operation named: editUsingGET_16
2019-05-16 15:51:40 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 15:51:40 -Generating unique operation named: listUsingGET_18
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_27
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_28
2019-05-16 15:51:40 -Generating unique operation named: saveUsingPOST_16
2019-05-16 15:51:40 -Generating unique operation named: updateUsingGET_10
2019-05-16 15:51:40 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPOST_16
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPUT_10
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 15:51:40 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 15:51:40 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 15:51:40 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 15:51:40 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 15:51:40 -Generating unique operation named: addUsingGET_16
2019-05-16 15:51:40 -Generating unique operation named: editUsingGET_17
2019-05-16 15:51:40 -Generating unique operation named: listUsingGET_19
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_29
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_30
2019-05-16 15:51:40 -Generating unique operation named: saveUsingPOST_17
2019-05-16 15:51:40 -Generating unique operation named: updateUsingGET_11
2019-05-16 15:51:40 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPOST_17
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPUT_11
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 15:51:40 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 15:51:40 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 15:51:40 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 15:51:40 -Generating unique operation named: addUsingGET_17
2019-05-16 15:51:40 -Generating unique operation named: editUsingGET_18
2019-05-16 15:51:40 -Generating unique operation named: listUsingGET_20
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_31
2019-05-16 15:51:40 -Generating unique operation named: removeUsingPOST_32
2019-05-16 15:51:40 -Generating unique operation named: saveUsingPOST_18
2019-05-16 15:51:40 -Generating unique operation named: updateUsingGET_12
2019-05-16 15:51:40 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPOST_18
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPUT_12
2019-05-16 15:51:40 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 15:51:40 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 15:51:40 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 15:51:40 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 15:51:40 -Starting Quartz Scheduler now
2019-05-16 15:51:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 15:51:40 -Starting...
2019-05-16 15:51:40 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 15:51:40 -Started.
2019-05-16 15:51:40 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 15:51:40 -Using a shared selector for servlet write/read
2019-05-16 15:51:40 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 15:51:40 -Started BootdoApplication in 21.509 seconds (JVM running for 22.18)
2019-05-16 15:51:40 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 15:51:41 -==> Parameters: 
2019-05-16 15:51:41 -<==      Total: 1
2019-05-16 15:52:23 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 15:52:23 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 15:52:23 -FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2019-05-16 15:52:23 -Enabling session validation scheduler...
2019-05-16 15:52:23 -请求地址 : http://localhost:8081/login;JSESSIONID=92636a78-8f36-4446-9e3c-10102b73453b
2019-05-16 15:52:23 -HTTP METHOD : GET
2019-05-16 15:52:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 15:52:23 -参数 : [{}]
2019-05-16 15:52:23 -耗时 : 3
2019-05-16 15:52:23 -返回值 : login
2019-05-16 15:52:24 -请求地址 : http://localhost:8081/getVerify
2019-05-16 15:52:24 -HTTP METHOD : GET
2019-05-16 15:52:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 15:52:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4d1cffcc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@492362b7]
2019-05-16 15:52:25 -1159
2019-05-16 15:52:25 -耗时 : 671
2019-05-16 15:52:25 -返回值 : null
2019-05-16 15:52:25 -请求地址 : http://localhost:8081/login
2019-05-16 15:52:25 -HTTP METHOD : GET
2019-05-16 15:52:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 15:52:25 -参数 : [{}]
2019-05-16 15:52:25 -耗时 : 1
2019-05-16 15:52:25 -返回值 : login
2019-05-16 15:52:29 -请求地址 : http://localhost:8081/login
2019-05-16 15:52:29 -HTTP METHOD : POST
2019-05-16 15:52:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 15:52:29 -参数 : [admin, 111111, 1159, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4373b4e9]
2019-05-16 15:52:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 15:52:29 -==> Parameters: admin(String)
2019-05-16 15:52:29 -<==      Total: 1
2019-05-16 15:52:29 -耗时 : 172
2019-05-16 15:52:29 -返回值 : {msg=操作成功, code=0}
2019-05-16 15:52:29 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 15:52:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 15:52:29 -==> Parameters: 1(Long), admin(String), 登录(String), 173(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 15:52:29.767(Timestamp)
2019-05-16 15:52:29 -请求地址 : http://localhost:8081/index
2019-05-16 15:52:29 -HTTP METHOD : GET
2019-05-16 15:52:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 15:52:29 -参数 : [{}]
2019-05-16 15:52:29 -<==    Updates: 1
2019-05-16 15:52:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 15:52:29 -==> Parameters: 1(Long)
2019-05-16 15:52:29 -<==      Total: 49
2019-05-16 15:52:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 15:52:29 -==> Parameters: 138(Long)
2019-05-16 15:52:29 -<==      Total: 1
2019-05-16 15:52:29 -耗时 : 114
2019-05-16 15:52:29 -返回值 : index_v1
2019-05-16 15:52:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 15:52:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 114(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 15:52:30.016(Timestamp)
2019-05-16 15:52:30 -<==    Updates: 1
2019-05-16 15:52:30 -请求地址 : http://localhost:8081/main
2019-05-16 15:52:30 -HTTP METHOD : GET
2019-05-16 15:52:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 15:52:30 -参数 : []
2019-05-16 15:52:30 -耗时 : 0
2019-05-16 15:52:30 -返回值 : main
2019-05-16 15:52:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 15:52:30 -HTTP METHOD : GET
2019-05-16 15:52:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 15:52:30 -参数 : []
2019-05-16 15:52:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 15:52:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 15:52:30 -<==      Total: 0
2019-05-16 15:52:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 15:52:30 -==> Parameters: 1(Long), 0(String)
2019-05-16 15:52:30 -<==      Total: 1
2019-05-16 15:52:30 -耗时 : 33
2019-05-16 15:52:30 -返回值 : com.bootdo.common.utils.PageUtils@3c3ac7ac
2019-05-16 15:52:30 -请求地址 : http://localhost:8081/main
2019-05-16 15:52:30 -HTTP METHOD : GET
2019-05-16 15:52:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 15:52:30 -参数 : []
2019-05-16 15:52:30 -耗时 : 1
2019-05-16 15:52:30 -返回值 : main
2019-05-16 15:52:35 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-16 15:52:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 15:52:38 -==> Parameters: 1(Long)
2019-05-16 15:52:38 -<==      Total: 93
2019-05-16 15:52:38 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:52:38 -HTTP METHOD : GET
2019-05-16 15:52:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:52:38 -参数 : []
2019-05-16 15:52:38 -耗时 : 12
2019-05-16 15:52:38 -返回值 : charts/tableElecMM
2019-05-16 15:52:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:52:39 -HTTP METHOD : GET
2019-05-16 15:52:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:52:39 -参数 : [userType]
2019-05-16 15:52:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:52:39 -==> Parameters: userType(String)
2019-05-16 15:52:39 -<==      Total: 4
2019-05-16 15:52:39 -耗时 : 36
2019-05-16 15:52:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:52:40 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:52:40 -HTTP METHOD : GET
2019-05-16 15:52:40 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:52:40 -参数 : []
2019-05-16 15:52:40 -耗时 : 12
2019-05-16 15:52:40 -返回值 : charts/tableWaterMM
2019-05-16 15:52:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:52:41 -HTTP METHOD : GET
2019-05-16 15:52:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:52:41 -参数 : [userType]
2019-05-16 15:52:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:52:41 -==> Parameters: userType(String)
2019-05-16 15:52:41 -<==      Total: 4
2019-05-16 15:52:41 -耗时 : 5
2019-05-16 15:52:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:52:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 15:52:44 -HTTP METHOD : GET
2019-05-16 15:52:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 15:52:44 -参数 : []
2019-05-16 15:52:44 -耗时 : 1
2019-05-16 15:52:44 -返回值 : system/dept/deptTree
2019-05-16 15:52:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 15:52:44 -HTTP METHOD : GET
2019-05-16 15:52:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 15:52:44 -参数 : []
2019-05-16 15:52:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 15:52:44 -==> Parameters: 
2019-05-16 15:52:44 -<==      Total: 3
2019-05-16 15:52:44 -耗时 : 66
2019-05-16 15:52:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 15:52:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 15:52:54 -HTTP METHOD : GET
2019-05-16 15:52:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 15:52:54 -参数 : []
2019-05-16 15:52:54 -耗时 : 0
2019-05-16 15:52:54 -返回值 : system/dept/deptTree
2019-05-16 15:52:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 15:52:55 -HTTP METHOD : GET
2019-05-16 15:52:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 15:52:55 -参数 : []
2019-05-16 15:52:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 15:52:55 -==> Parameters: 
2019-05-16 15:52:55 -<==      Total: 3
2019-05-16 15:52:55 -耗时 : 5
2019-05-16 15:52:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 15:52:57 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-16 15:52:57 -HTTP METHOD : POST
2019-05-16 15:52:57 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:52:57 -参数 : [com.bootdo.water.vo.WaterVo@643ffa08, com.bootdo.moneyLog.vo.WaterLogVo@6333ecfc]
2019-05-16 15:52:57 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:57 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:57 -<==      Total: 1
2019-05-16 15:52:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:57 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:57 -<==      Total: 1
2019-05-16 15:52:57 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:57 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:57 -<==      Total: 1
2019-05-16 15:52:57 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:57 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:57 -<==      Total: 1
2019-05-16 15:52:57 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:57 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:52:58 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:52:58 -<==      Total: 1
2019-05-16 15:52:58 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-16 15:52:58 -==> Parameters: 
2019-05-16 15:52:58 -<==      Total: 2
2019-05-16 15:52:58 -耗时 : 228
2019-05-16 15:52:58 -返回值 : {MOweWaterSumMMOld=-18, S3TotalhuNew=0, MWaterCostMMSum =18, S1PreWaterSumMMNew=1, S3WaterLogMMCount=1, S3WaterCostMMCount =0, S1PreWaterSumMMOld=0, type=2, S2OweWaterSumMMNew=0, TotalPreyuNew=26, S3WaterLogMMSum=60, TotalCostyu=28, S1WaterPrice=10, MWaterLogMMCount=1, S1TotalyuOld=0, S2OweWaterSumMMOld=0, MWaterCostMMCount =3, TotalPreyuOld=6, S2WaterCostMMSum =0, S3TotalhuOld=0, TotalOwehuNew=1, TotalCosthu=4, MOweWaterCountMMOld=1, S3OweWaterSumMMNew=0, TotalLogyu=60, MOweWaterCountMMNew=1, S2TotalhuNew=0, S3WaterCostMMSum =0, MTotalyuOld=-12, S2OweWaterCountMMOld=0, S3OweWaterCountMMNew=0, S1WaterCostMMCount =1, MWaterPrice=6, S1PreWaterCountMMNew=1, MTotalhuNew=3, MTotalyuNew=16, S1WaterLogMMSum=20, S3OweWaterCountMMOld=0, TotalLoghu=2, S2OweWaterCountMMNew=0, S1PreWaterCountMMOld=0, S3OweWaterSumMMOld=0, MOweWaterSumMMNew=-9, S2TotalhuOld=0, S2TotalyuOld=0, TotalOweyuOld=-18, MWaterLogMMSum=40, S1OweWaterCountMMOld=0, MPreWaterCountMMOld=1, S3PreWaterCountMMOld=0, S3PreWaterSumMMOld=0, S2TotalyuNew=0, S1TotalhuNew=1, MTotalhuOld=2, S1OweWaterSumMMOld=0, S3PreWaterCountMMNew=0, S2WaterLogMMSum=60, MPreWaterCountMMNew=2, S1TotalhuOld=0, S2WaterLogMMCount=1, TotalPrehuNew=3, S1OweWaterSumMMNew=0, S1WaterCostMMSum =10, S2PreWaterCountMMOld=0, MPreWaterSumMMOld=6, TotalOweyuNew=-9, S1OweWaterCountMMNew=0, S2PreWaterCountMMNew=0, S3TotalyuOld=0, MPreWaterSumMMNew=25, S3PreWaterSumMMNew=0, S3TotalyuNew=0, TotalPrehuOld=1, S2PreWaterSumMMNew=0, S2PreWaterSumMMOld=0, S1WaterLogMMCount=1, TotalOwehuOld=1, PriceTotal=16, S1TotalyuNew=1, TotalAllhuNew=4, TotalAllyuNew=17, S2WaterCostMMCount =0, TotalAllhuOld=2, TotalAllyuOld=-12}
2019-05-16 15:56:57 -请求地址 : http://localhost:8081/login;JSESSIONID=bbc43ad9-c7f2-49dc-8a71-0526e4dccad8
2019-05-16 15:56:57 -HTTP METHOD : GET
2019-05-16 15:56:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 15:56:57 -参数 : [{}]
2019-05-16 15:56:57 -耗时 : 1
2019-05-16 15:56:57 -返回值 : login
2019-05-16 15:56:58 -请求地址 : http://localhost:8081/getVerify
2019-05-16 15:56:58 -HTTP METHOD : GET
2019-05-16 15:56:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 15:56:58 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@17392338, org.apache.shiro.web.servlet.ShiroHttpServletResponse@637a534e]
2019-05-16 15:56:58 -4658
2019-05-16 15:56:58 -耗时 : 10
2019-05-16 15:56:58 -返回值 : null
2019-05-16 15:56:58 -请求地址 : http://localhost:8081/login
2019-05-16 15:56:58 -HTTP METHOD : GET
2019-05-16 15:56:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 15:56:58 -参数 : [{}]
2019-05-16 15:56:58 -耗时 : 0
2019-05-16 15:56:58 -返回值 : login
2019-05-16 15:57:13 -请求地址 : http://localhost:8081/login
2019-05-16 15:57:13 -HTTP METHOD : POST
2019-05-16 15:57:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 15:57:13 -参数 : [admin, 111111, 4658, org.apache.shiro.web.servlet.ShiroHttpServletRequest@bf1c178]
2019-05-16 15:57:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 15:57:13 -==> Parameters: admin(String)
2019-05-16 15:57:13 -<==      Total: 1
2019-05-16 15:57:13 -耗时 : 7
2019-05-16 15:57:13 -返回值 : {msg=操作成功, code=0}
2019-05-16 15:57:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 15:57:13 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 15:57:13.162(Timestamp)
2019-05-16 15:57:13 -请求地址 : http://localhost:8081/index
2019-05-16 15:57:13 -HTTP METHOD : GET
2019-05-16 15:57:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 15:57:13 -参数 : [{}]
2019-05-16 15:57:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 15:57:13 -==> Parameters: 1(Long)
2019-05-16 15:57:13 -<==    Updates: 1
2019-05-16 15:57:13 -<==      Total: 49
2019-05-16 15:57:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 15:57:13 -==> Parameters: 138(Long)
2019-05-16 15:57:13 -<==      Total: 1
2019-05-16 15:57:13 -耗时 : 116
2019-05-16 15:57:13 -返回值 : index_v1
2019-05-16 15:57:13 -请求地址 : http://localhost:8081/main
2019-05-16 15:57:13 -HTTP METHOD : GET
2019-05-16 15:57:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 15:57:13 -参数 : []
2019-05-16 15:57:13 -耗时 : 1
2019-05-16 15:57:13 -返回值 : main
2019-05-16 15:57:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 15:57:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 117(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 15:57:13.368(Timestamp)
2019-05-16 15:57:13 -<==    Updates: 1
2019-05-16 15:57:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 15:57:13 -HTTP METHOD : GET
2019-05-16 15:57:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 15:57:13 -参数 : []
2019-05-16 15:57:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 15:57:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 15:57:13 -<==      Total: 0
2019-05-16 15:57:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 15:57:13 -==> Parameters: 1(Long), 0(String)
2019-05-16 15:57:13 -<==      Total: 1
2019-05-16 15:57:13 -耗时 : 9
2019-05-16 15:57:13 -返回值 : com.bootdo.common.utils.PageUtils@407c7af
2019-05-16 15:57:13 -请求地址 : http://localhost:8081/main
2019-05-16 15:57:13 -HTTP METHOD : GET
2019-05-16 15:57:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 15:57:13 -参数 : []
2019-05-16 15:57:13 -耗时 : 0
2019-05-16 15:57:13 -返回值 : main
2019-05-16 15:57:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 15:57:24 -==> Parameters: 1(Long)
2019-05-16 15:57:24 -<==      Total: 93
2019-05-16 15:57:24 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:57:24 -HTTP METHOD : GET
2019-05-16 15:57:24 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:57:24 -参数 : []
2019-05-16 15:57:24 -耗时 : 0
2019-05-16 15:57:24 -返回值 : charts/tableElecMM
2019-05-16 15:57:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:57:24 -HTTP METHOD : GET
2019-05-16 15:57:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:57:24 -参数 : [userType]
2019-05-16 15:57:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:57:24 -==> Parameters: userType(String)
2019-05-16 15:57:24 -<==      Total: 4
2019-05-16 15:57:24 -耗时 : 13
2019-05-16 15:57:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:57:25 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:57:25 -HTTP METHOD : GET
2019-05-16 15:57:25 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:57:25 -参数 : []
2019-05-16 15:57:25 -耗时 : 0
2019-05-16 15:57:25 -返回值 : charts/tableWaterMM
2019-05-16 15:57:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:57:26 -HTTP METHOD : GET
2019-05-16 15:57:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:57:26 -参数 : [userType]
2019-05-16 15:57:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:57:26 -==> Parameters: userType(String)
2019-05-16 15:57:26 -<==      Total: 4
2019-05-16 15:57:26 -耗时 : 6
2019-05-16 15:57:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:57:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 15:57:31 -HTTP METHOD : GET
2019-05-16 15:57:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 15:57:31 -参数 : []
2019-05-16 15:57:31 -耗时 : 0
2019-05-16 15:57:31 -返回值 : system/dept/deptTree
2019-05-16 15:57:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 15:57:31 -HTTP METHOD : GET
2019-05-16 15:57:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 15:57:31 -参数 : []
2019-05-16 15:57:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 15:57:31 -==> Parameters: 
2019-05-16 15:57:31 -<==      Total: 3
2019-05-16 15:57:31 -耗时 : 5
2019-05-16 15:57:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 15:57:32 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-16 15:57:32 -HTTP METHOD : POST
2019-05-16 15:57:32 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:57:32 -参数 : [com.bootdo.water.vo.WaterVo@7c4a114b, com.bootdo.moneyLog.vo.WaterLogVo@eaceed0]
2019-05-16 15:57:32 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:32 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 15:57:32 -<==      Total: 1
2019-05-16 15:57:32 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-16 15:57:32 -==> Parameters: 
2019-05-16 15:57:32 -<==      Total: 2
2019-05-16 15:57:32 -耗时 : 112
2019-05-16 15:57:32 -返回值 : {MOweWaterSumMMOld=-18, S3TotalhuNew=0, MWaterCostMMSum =18, S1PreWaterSumMMNew=1, S3WaterLogMMCount=1, S3WaterCostMMCount =0, S1PreWaterSumMMOld=0, type=2, S2OweWaterSumMMNew=0, TotalPreyuNew=26, S3WaterLogMMSum=60, TotalCostyu=28, S1WaterPrice=10, MWaterLogMMCount=1, S1TotalyuOld=0, S2OweWaterSumMMOld=0, MWaterCostMMCount =3, TotalPreyuOld=6, S2WaterCostMMSum =0, S3TotalhuOld=0, TotalOwehuNew=1, TotalCosthu=4, MOweWaterCountMMOld=1, S3OweWaterSumMMNew=0, TotalLogyu=60, MOweWaterCountMMNew=1, S2TotalhuNew=0, S3WaterCostMMSum =0, MTotalyuOld=-12, S2OweWaterCountMMOld=0, S3OweWaterCountMMNew=0, S1WaterCostMMCount =1, MWaterPrice=6, S1PreWaterCountMMNew=1, MTotalhuNew=3, MTotalyuNew=16, S1WaterLogMMSum=20, S3OweWaterCountMMOld=0, TotalLoghu=2, S2OweWaterCountMMNew=0, S1PreWaterCountMMOld=0, S3OweWaterSumMMOld=0, MOweWaterSumMMNew=-9, S2TotalhuOld=0, S2TotalyuOld=0, TotalOweyuOld=-18, MWaterLogMMSum=40, S1OweWaterCountMMOld=0, MPreWaterCountMMOld=1, S3PreWaterCountMMOld=0, S3PreWaterSumMMOld=0, S2TotalyuNew=0, S1TotalhuNew=1, MTotalhuOld=2, S1OweWaterSumMMOld=0, S3PreWaterCountMMNew=0, S2WaterLogMMSum=60, MPreWaterCountMMNew=2, S1TotalhuOld=0, S2WaterLogMMCount=1, TotalPrehuNew=3, S1OweWaterSumMMNew=0, S1WaterCostMMSum =10, S2PreWaterCountMMOld=0, MPreWaterSumMMOld=6, TotalOweyuNew=-9, S1OweWaterCountMMNew=0, S2PreWaterCountMMNew=0, S3TotalyuOld=0, MPreWaterSumMMNew=25, S3PreWaterSumMMNew=0, S3TotalyuNew=0, TotalPrehuOld=1, S2PreWaterSumMMNew=0, S2PreWaterSumMMOld=0, S1WaterLogMMCount=1, TotalOwehuOld=1, PriceTotal=16, S1TotalyuNew=1, TotalAllhuNew=4, TotalAllyuNew=17, S2WaterCostMMCount =0, TotalAllhuOld=2, TotalAllyuOld=-12}
2019-05-16 15:57:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 15:57:36 -HTTP METHOD : GET
2019-05-16 15:57:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 15:57:36 -参数 : []
2019-05-16 15:57:36 -耗时 : 0
2019-05-16 15:57:36 -返回值 : system/dept/deptTree
2019-05-16 15:57:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 15:57:36 -HTTP METHOD : GET
2019-05-16 15:57:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 15:57:36 -参数 : []
2019-05-16 15:57:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 15:57:36 -==> Parameters: 
2019-05-16 15:57:36 -<==      Total: 3
2019-05-16 15:57:36 -耗时 : 5
2019-05-16 15:57:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 15:57:38 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-16 15:57:38 -HTTP METHOD : POST
2019-05-16 15:57:38 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:57:38 -参数 : [com.bootdo.water.vo.WaterVo@2f36a03b, com.bootdo.moneyLog.vo.WaterLogVo@650a1421]
2019-05-16 15:57:38 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 15:57:38 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 15:57:38 -<==      Total: 1
2019-05-16 15:57:38 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-16 15:57:38 -==> Parameters: 
2019-05-16 15:57:38 -<==      Total: 2
2019-05-16 15:57:38 -耗时 : 116
2019-05-16 15:57:38 -返回值 : {MOweWaterSumMMOld=0, S3TotalhuNew=0, MWaterCostMMSum =0, S1PreWaterSumMMNew=0, S3WaterLogMMCount=0, S3WaterCostMMCount =0, S1PreWaterSumMMOld=0, type=3, S2OweWaterSumMMNew=0, TotalPreyuNew=0, S3WaterLogMMSum=0, TotalCostyu=0, S1WaterPrice=10, MWaterLogMMCount=0, S1TotalyuOld=0, S2OweWaterSumMMOld=0, MWaterCostMMCount =0, TotalPreyuOld=0, S2WaterCostMMSum =0, S3TotalhuOld=0, TotalOwehuNew=0, TotalCosthu=0, MOweWaterCountMMOld=0, S3OweWaterSumMMNew=0, TotalLogyu=0, MOweWaterCountMMNew=0, S2TotalhuNew=0, S3WaterCostMMSum =0, MTotalyuOld=0, S2OweWaterCountMMOld=0, S3OweWaterCountMMNew=0, S1WaterCostMMCount =0, MWaterPrice=5, S1PreWaterCountMMNew=0, MTotalhuNew=0, MTotalyuNew=0, S1WaterLogMMSum=0, S3OweWaterCountMMOld=0, TotalLoghu=0, S2OweWaterCountMMNew=0, S2WaterPrice=20, S1PreWaterCountMMOld=0, S3OweWaterSumMMOld=0, MOweWaterSumMMNew=0, S2TotalhuOld=0, S2TotalyuOld=0, TotalOweyuOld=0, MWaterLogMMSum=0, S1OweWaterCountMMOld=0, MPreWaterCountMMOld=0, S3PreWaterCountMMOld=0, S3PreWaterSumMMOld=0, S2TotalyuNew=0, S1TotalhuNew=0, MTotalhuOld=0, S1OweWaterSumMMOld=0, S3PreWaterCountMMNew=0, S2WaterLogMMSum=0, MPreWaterCountMMNew=0, S1TotalhuOld=0, S2WaterLogMMCount=0, TotalPrehuNew=0, S1OweWaterSumMMNew=0, S1WaterCostMMSum =0, S2PreWaterCountMMOld=0, MPreWaterSumMMOld=0, TotalOweyuNew=0, S1OweWaterCountMMNew=0, S2PreWaterCountMMNew=0, S3TotalyuOld=0, MPreWaterSumMMNew=0, S3PreWaterSumMMNew=0, S3WaterPrice=30, S3TotalyuNew=0, TotalPrehuOld=0, S2PreWaterSumMMNew=0, S2PreWaterSumMMOld=0, S1WaterLogMMCount=0, TotalOwehuOld=0, PriceTotal=65, S1TotalyuNew=0, TotalAllhuNew=0, TotalAllyuNew=0, S2WaterCostMMCount =0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 15:57:57 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:57:57 -HTTP METHOD : GET
2019-05-16 15:57:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:57:57 -参数 : []
2019-05-16 15:57:57 -耗时 : 8
2019-05-16 15:57:57 -返回值 : charts/tableHeatMM
2019-05-16 15:57:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:57:58 -HTTP METHOD : GET
2019-05-16 15:57:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:57:58 -参数 : [userType]
2019-05-16 15:57:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:57:58 -==> Parameters: userType(String)
2019-05-16 15:57:58 -<==      Total: 4
2019-05-16 15:57:58 -耗时 : 4
2019-05-16 15:57:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:57:58 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 15:57:58 -HTTP METHOD : GET
2019-05-16 15:57:58 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 15:57:58 -参数 : []
2019-05-16 15:57:58 -耗时 : 0
2019-05-16 15:57:58 -返回值 : charts/tableWaterMM
2019-05-16 15:57:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:57:58 -HTTP METHOD : GET
2019-05-16 15:57:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:57:58 -参数 : [userType]
2019-05-16 15:57:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:57:58 -==> Parameters: userType(String)
2019-05-16 15:57:58 -<==      Total: 4
2019-05-16 15:57:58 -耗时 : 3
2019-05-16 15:57:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:57:58 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 15:57:58 -HTTP METHOD : GET
2019-05-16 15:57:58 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 15:57:58 -参数 : []
2019-05-16 15:57:58 -耗时 : 0
2019-05-16 15:57:58 -返回值 : charts/tableHeatMM
2019-05-16 15:57:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:57:58 -HTTP METHOD : GET
2019-05-16 15:57:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:57:58 -参数 : [userType]
2019-05-16 15:57:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:57:58 -==> Parameters: userType(String)
2019-05-16 15:57:58 -<==      Total: 4
2019-05-16 15:57:58 -耗时 : 4
2019-05-16 15:57:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 15:57:59 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 15:57:59 -HTTP METHOD : GET
2019-05-16 15:57:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 15:57:59 -参数 : []
2019-05-16 15:57:59 -耗时 : 1
2019-05-16 15:57:59 -返回值 : charts/tableElecMM
2019-05-16 15:57:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 15:57:59 -HTTP METHOD : GET
2019-05-16 15:57:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 15:57:59 -参数 : [userType]
2019-05-16 15:57:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 15:57:59 -==> Parameters: userType(String)
2019-05-16 15:57:59 -<==      Total: 4
2019-05-16 15:57:59 -耗时 : 5
2019-05-16 15:57:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 16:22:35 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 433]
2019-05-16 16:44:25 -请求地址 : http://localhost:8081/login;JSESSIONID=06d1ff0b-5237-47cc-a67e-0b4fa716eb21
2019-05-16 16:44:25 -HTTP METHOD : GET
2019-05-16 16:44:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 16:44:25 -参数 : [{}]
2019-05-16 16:44:25 -耗时 : 0
2019-05-16 16:44:25 -返回值 : login
2019-05-16 16:44:25 -请求地址 : http://localhost:8081/getVerify
2019-05-16 16:44:25 -HTTP METHOD : GET
2019-05-16 16:44:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 16:44:25 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@aba4b51, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2032f20b]
2019-05-16 16:44:25 -7587
2019-05-16 16:44:25 -耗时 : 11
2019-05-16 16:44:25 -返回值 : null
2019-05-16 16:44:30 -请求地址 : http://localhost:8081/login
2019-05-16 16:44:30 -HTTP METHOD : POST
2019-05-16 16:44:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 16:44:30 -参数 : [admin, 111111, 7587, org.apache.shiro.web.servlet.ShiroHttpServletRequest@50f67ed5]
2019-05-16 16:44:30 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 16:44:30 -==> Parameters: admin(String)
2019-05-16 16:44:30 -<==      Total: 1
2019-05-16 16:44:30 -耗时 : 9
2019-05-16 16:44:30 -返回值 : {msg=操作成功, code=0}
2019-05-16 16:44:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 16:44:30 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 16:44:30.214(Timestamp)
2019-05-16 16:44:30 -请求地址 : http://localhost:8081/index
2019-05-16 16:44:30 -HTTP METHOD : GET
2019-05-16 16:44:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 16:44:30 -参数 : [{}]
2019-05-16 16:44:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 16:44:30 -==> Parameters: 1(Long)
2019-05-16 16:44:30 -<==      Total: 49
2019-05-16 16:44:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 16:44:30 -==> Parameters: 138(Long)
2019-05-16 16:44:30 -<==      Total: 1
2019-05-16 16:44:30 -耗时 : 27
2019-05-16 16:44:30 -返回值 : index_v1
2019-05-16 16:44:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 16:44:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 16:44:30.266(Timestamp)
2019-05-16 16:44:30 -<==    Updates: 1
2019-05-16 16:44:30 -请求地址 : http://localhost:8081/main
2019-05-16 16:44:30 -HTTP METHOD : GET
2019-05-16 16:44:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 16:44:30 -参数 : []
2019-05-16 16:44:30 -耗时 : 0
2019-05-16 16:44:30 -返回值 : main
2019-05-16 16:44:30 -<==    Updates: 1
2019-05-16 16:44:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 16:44:30 -HTTP METHOD : GET
2019-05-16 16:44:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 16:44:30 -参数 : []
2019-05-16 16:44:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 16:44:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 16:44:30 -<==      Total: 0
2019-05-16 16:44:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 16:44:30 -==> Parameters: 1(Long), 0(String)
2019-05-16 16:44:30 -<==      Total: 1
2019-05-16 16:44:30 -耗时 : 7
2019-05-16 16:44:30 -返回值 : com.bootdo.common.utils.PageUtils@12d814a0
2019-05-16 16:44:30 -请求地址 : http://localhost:8081/main
2019-05-16 16:44:30 -HTTP METHOD : GET
2019-05-16 16:44:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 16:44:30 -参数 : []
2019-05-16 16:44:30 -耗时 : 0
2019-05-16 16:44:30 -返回值 : main
2019-05-16 16:45:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 16:45:16 -==> Parameters: 1(Long)
2019-05-16 16:45:16 -<==      Total: 93
2019-05-16 16:45:16 -请求地址 : http://localhost:8081/charts/countYY
2019-05-16 16:45:16 -HTTP METHOD : GET
2019-05-16 16:45:16 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-16 16:45:16 -参数 : []
2019-05-16 16:45:16 -耗时 : 0
2019-05-16 16:45:16 -返回值 : charts/countYY
2019-05-16 16:45:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 16:45:16 -HTTP METHOD : GET
2019-05-16 16:45:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 16:45:16 -参数 : [userType]
2019-05-16 16:45:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 16:45:16 -==> Parameters: userType(String)
2019-05-16 16:45:16 -<==      Total: 4
2019-05-16 16:45:16 -耗时 : 5
2019-05-16 16:45:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 16:45:17 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 16:45:17 -HTTP METHOD : GET
2019-05-16 16:45:17 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 16:45:17 -参数 : []
2019-05-16 16:45:17 -耗时 : 1
2019-05-16 16:45:17 -返回值 : charts/tableElecMM
2019-05-16 16:45:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 16:45:17 -HTTP METHOD : GET
2019-05-16 16:45:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 16:45:17 -参数 : [userType]
2019-05-16 16:45:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 16:45:17 -==> Parameters: userType(String)
2019-05-16 16:45:17 -<==      Total: 4
2019-05-16 16:45:18 -耗时 : 6
2019-05-16 16:45:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 16:45:18 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 16:45:18 -HTTP METHOD : GET
2019-05-16 16:45:18 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 16:45:18 -参数 : []
2019-05-16 16:45:18 -耗时 : 1
2019-05-16 16:45:18 -返回值 : charts/tableWaterMM
2019-05-16 16:45:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 16:45:18 -HTTP METHOD : GET
2019-05-16 16:45:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 16:45:18 -参数 : [userType]
2019-05-16 16:45:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 16:45:18 -==> Parameters: userType(String)
2019-05-16 16:45:18 -<==      Total: 4
2019-05-16 16:45:18 -耗时 : 5
2019-05-16 16:45:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 16:45:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 16:45:21 -HTTP METHOD : GET
2019-05-16 16:45:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 16:45:21 -参数 : []
2019-05-16 16:45:21 -耗时 : 0
2019-05-16 16:45:21 -返回值 : system/dept/deptTree
2019-05-16 16:45:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 16:45:21 -HTTP METHOD : GET
2019-05-16 16:45:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 16:45:21 -参数 : []
2019-05-16 16:45:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 16:45:21 -==> Parameters: 
2019-05-16 16:45:21 -<==      Total: 3
2019-05-16 16:45:21 -耗时 : 4
2019-05-16 16:45:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 16:45:23 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-16 16:45:23 -HTTP METHOD : POST
2019-05-16 16:45:23 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 16:45:23 -参数 : [com.bootdo.water.vo.WaterVo@6e7d25b4, com.bootdo.moneyLog.vo.WaterLogVo@75203ee1]
2019-05-16 16:45:23 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:23 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-05-16 16:45:23 -<==      Total: 1
2019-05-16 16:45:23 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-16 16:45:23 -==> Parameters: 
2019-05-16 16:45:23 -<==      Total: 2
2019-05-16 16:45:23 -耗时 : 126
2019-05-16 16:45:23 -返回值 : {MOweWaterSumMMOld=0, S3TotalhuNew=0, MWaterCostMMSum =0, S1PreWaterSumMMNew=0, S3WaterLogMMCount=0, S3WaterCostMMCount =0, S1PreWaterSumMMOld=0, type=2, S2OweWaterSumMMNew=0, TotalPreyuNew=0, S3WaterLogMMSum=0, TotalCostyu=0, S1WaterPrice=10, MWaterLogMMCount=0, S1TotalyuOld=0, S2OweWaterSumMMOld=0, MWaterCostMMCount =0, TotalPreyuOld=0, S2WaterCostMMSum =0, S3TotalhuOld=0, TotalOwehuNew=0, TotalCosthu=0, MOweWaterCountMMOld=0, S3OweWaterSumMMNew=0, TotalLogyu=0, MOweWaterCountMMNew=0, S2TotalhuNew=0, S3WaterCostMMSum =0, MTotalyuOld=0, S2OweWaterCountMMOld=0, S3OweWaterCountMMNew=0, S1WaterCostMMCount =0, MWaterPrice=6, S1PreWaterCountMMNew=0, MTotalhuNew=0, MTotalyuNew=0, S1WaterLogMMSum=0, S3OweWaterCountMMOld=0, TotalLoghu=0, S2OweWaterCountMMNew=0, S1PreWaterCountMMOld=0, S3OweWaterSumMMOld=0, MOweWaterSumMMNew=0, S2TotalhuOld=0, S2TotalyuOld=0, TotalOweyuOld=0, MWaterLogMMSum=0, S1OweWaterCountMMOld=0, MPreWaterCountMMOld=0, S3PreWaterCountMMOld=0, S3PreWaterSumMMOld=0, S2TotalyuNew=0, S1TotalhuNew=0, MTotalhuOld=0, S1OweWaterSumMMOld=0, S3PreWaterCountMMNew=0, S2WaterLogMMSum=0, MPreWaterCountMMNew=0, S1TotalhuOld=0, S2WaterLogMMCount=0, TotalPrehuNew=0, S1OweWaterSumMMNew=0, S1WaterCostMMSum =0, S2PreWaterCountMMOld=0, MPreWaterSumMMOld=0, TotalOweyuNew=0, S1OweWaterCountMMNew=0, S2PreWaterCountMMNew=0, S3TotalyuOld=0, MPreWaterSumMMNew=0, S3PreWaterSumMMNew=0, S3TotalyuNew=0, TotalPrehuOld=0, S2PreWaterSumMMNew=0, S2PreWaterSumMMOld=0, S1WaterLogMMCount=0, TotalOwehuOld=0, PriceTotal=16, S1TotalyuNew=0, TotalAllhuNew=0, TotalAllyuNew=0, S2WaterCostMMCount =0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 16:45:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 16:45:30 -HTTP METHOD : GET
2019-05-16 16:45:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 16:45:30 -参数 : []
2019-05-16 16:45:30 -耗时 : 1
2019-05-16 16:45:30 -返回值 : system/dept/deptTree
2019-05-16 16:45:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 16:45:30 -HTTP METHOD : GET
2019-05-16 16:45:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 16:45:30 -参数 : []
2019-05-16 16:45:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 16:45:30 -==> Parameters: 
2019-05-16 16:45:30 -<==      Total: 3
2019-05-16 16:45:30 -耗时 : 6
2019-05-16 16:45:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 16:45:32 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-16 16:45:32 -HTTP METHOD : POST
2019-05-16 16:45:32 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 16:45:32 -参数 : [com.bootdo.water.vo.WaterVo@9796023, com.bootdo.moneyLog.vo.WaterLogVo@3e643ab]
2019-05-16 16:45:32 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 1(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:32 -<==      Total: 1
2019-05-16 16:45:32 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:32 -==> Parameters: 2019-05(String), 2(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 3(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(ID) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(ID) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-16 16:45:33 -==> Parameters: 2019-05(String), 4(String), 3(String)
2019-05-16 16:45:33 -<==      Total: 1
2019-05-16 16:45:33 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-16 16:45:33 -==> Parameters: 
2019-05-16 16:45:33 -<==      Total: 2
2019-05-16 16:45:33 -耗时 : 165
2019-05-16 16:45:33 -返回值 : {MOweWaterSumMMOld=0, S3TotalhuNew=0, MWaterCostMMSum =0, S1PreWaterSumMMNew=0, S3WaterLogMMCount=0, S3WaterCostMMCount =0, S1PreWaterSumMMOld=0, type=3, S2OweWaterSumMMNew=0, TotalPreyuNew=0, S3WaterLogMMSum=0, TotalCostyu=0, S1WaterPrice=10, MWaterLogMMCount=0, S1TotalyuOld=0, S2OweWaterSumMMOld=0, MWaterCostMMCount =0, TotalPreyuOld=0, S2WaterCostMMSum =0, S3TotalhuOld=0, TotalOwehuNew=0, TotalCosthu=0, MOweWaterCountMMOld=0, S3OweWaterSumMMNew=0, TotalLogyu=0, MOweWaterCountMMNew=0, S2TotalhuNew=0, S3WaterCostMMSum =0, MTotalyuOld=0, S2OweWaterCountMMOld=0, S3OweWaterCountMMNew=0, S1WaterCostMMCount =0, MWaterPrice=5, S1PreWaterCountMMNew=0, MTotalhuNew=0, MTotalyuNew=0, S1WaterLogMMSum=0, S3OweWaterCountMMOld=0, TotalLoghu=0, S2OweWaterCountMMNew=0, S2WaterPrice=20, S1PreWaterCountMMOld=0, S3OweWaterSumMMOld=0, MOweWaterSumMMNew=0, S2TotalhuOld=0, S2TotalyuOld=0, TotalOweyuOld=0, MWaterLogMMSum=0, S1OweWaterCountMMOld=0, MPreWaterCountMMOld=0, S3PreWaterCountMMOld=0, S3PreWaterSumMMOld=0, S2TotalyuNew=0, S1TotalhuNew=0, MTotalhuOld=0, S1OweWaterSumMMOld=0, S3PreWaterCountMMNew=0, S2WaterLogMMSum=0, MPreWaterCountMMNew=0, S1TotalhuOld=0, S2WaterLogMMCount=0, TotalPrehuNew=0, S1OweWaterSumMMNew=0, S1WaterCostMMSum =0, S2PreWaterCountMMOld=0, MPreWaterSumMMOld=0, TotalOweyuNew=0, S1OweWaterCountMMNew=0, S2PreWaterCountMMNew=0, S3TotalyuOld=0, MPreWaterSumMMNew=0, S3PreWaterSumMMNew=0, S3WaterPrice=30, S3TotalyuNew=0, TotalPrehuOld=0, S2PreWaterSumMMNew=0, S2PreWaterSumMMOld=0, S1WaterLogMMCount=0, TotalOwehuOld=0, PriceTotal=65, S1TotalyuNew=0, TotalAllhuNew=0, TotalAllyuNew=0, S2WaterCostMMCount =0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 16:52:23 -Validating all active sessions...
2019-05-16 16:52:23 -Finished session validation.  [1] sessions were stopped.
2019-05-16 16:52:35 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 866]
2019-05-16 17:01:50 -Starting BootdoApplication on PC-201905091110 with PID 10784 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 17:01:50 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 17:01:50 -The following profiles are active: dev
2019-05-16 17:01:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:01:51 CST 2019]; root of context hierarchy
2019-05-16 17:01:53 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 17:01:55 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb3b3035] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:01:55 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ad945edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:01:56 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:01:56 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:01:56 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:01:56 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 17:01:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 17:01:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:01:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:01:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:01:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:01:57 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 17:01:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 17:01:57 -Starting service [Tomcat]
2019-05-16 17:01:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 17:01:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 17:01:57 -Initializing Spring embedded WebApplicationContext
2019-05-16 17:01:57 -Root WebApplicationContext: initialization completed in 6799 ms
2019-05-16 17:01:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 17:01:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 17:01:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 17:01:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 17:01:58 -Filter xssFilter was not registered (disabled)
2019-05-16 17:01:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 17:01:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 17:01:58 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 17:01:58 -Servlet dispatcherServlet mapped to [/]
2019-05-16 17:02:02 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:01:51 CST 2019]; root of context hierarchy
2019-05-16 17:02:02 -Using default implementation for ThreadExecutor
2019-05-16 17:02:02 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 17:02:02 -Quartz Scheduler v.2.2.1 created.
2019-05-16 17:02:02 -RAMJobStore initialized.
2019-05-16 17:02:02 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 17:02:02 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 17:02:02 -Quartz scheduler version: 2.2.1
2019-05-16 17:02:02 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@221b77d7
2019-05-16 17:02:03 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 17:02:03 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 17:02:05 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:02:05 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 17:02:05 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 17:02:05 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:02:05 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 17:02:05 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 17:02:05 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 17:02:05 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:02:05 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:02:05 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 17:02:05 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 17:02:05 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:02:05 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 17:02:05 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 17:02:05 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 17:02:05 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 17:02:05 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 17:02:05 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:02:05 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:02:05 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 17:02:05 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 17:02:05 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 17:02:05 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 17:02:05 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 17:02:05 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 17:02:05 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 17:02:05 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 17:02:05 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 17:02:05 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 17:02:05 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 17:02:05 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 17:02:05 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 17:02:05 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 17:02:05 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 17:02:05 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 17:02:05 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 17:02:05 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 17:02:05 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 17:02:05 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 17:02:05 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 17:02:05 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 17:02:05 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 17:02:05 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 17:02:05 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 17:02:05 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 17:02:05 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 17:02:05 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 17:02:05 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 17:02:05 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 17:02:05 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:02:05 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 17:02:05 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:02:05 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 17:02:05 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:02:05 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:02:05 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:02:05 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 17:02:05 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 17:02:05 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 17:02:05 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 17:02:05 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 17:02:05 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 17:02:05 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 17:02:05 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 17:02:05 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 17:02:05 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 17:02:05 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 17:02:05 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 17:02:05 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 17:02:05 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:02:05 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 17:02:05 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 17:02:05 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 17:02:05 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 17:02:05 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 17:02:05 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 17:02:05 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 17:02:05 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 17:02:05 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:02:05 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:02:05 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:02:05 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 17:02:05 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 17:02:05 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 17:02:05 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 17:02:05 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 17:02:05 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 17:02:05 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:02:05 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 17:02:05 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 17:02:05 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 17:02:05 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 17:02:05 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 17:02:05 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 17:02:05 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 17:02:05 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 17:02:05 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 17:02:05 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 17:02:05 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 17:02:05 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 17:02:05 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 17:02:05 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 17:02:05 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 17:02:05 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 17:02:05 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 17:02:05 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 17:02:05 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 17:02:05 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:02:05 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 17:02:05 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 17:02:05 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 17:02:05 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 17:02:05 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 17:02:05 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 17:02:05 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 17:02:05 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 17:02:05 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 17:02:05 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 17:02:05 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 17:02:05 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 17:02:05 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 17:02:05 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 17:02:05 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 17:02:05 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 17:02:05 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 17:02:05 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 17:02:05 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 17:02:05 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 17:02:05 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:02:05 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 17:02:05 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 17:02:05 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 17:02:05 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 17:02:05 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 17:02:05 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:02:05 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 17:02:05 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 17:02:05 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 17:02:05 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 17:02:05 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 17:02:05 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:02:05 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 17:02:05 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:02:05 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 17:02:05 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 17:02:05 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 17:02:05 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:02:05 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 17:02:05 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:02:05 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 17:02:05 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 17:02:05 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 17:02:06 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 17:02:06 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 17:02:06 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 17:02:06 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:02:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:01:51 CST 2019]; root of context hierarchy
2019-05-16 17:02:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:02:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:02:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:02:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 17:02:07 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 17:02:08 -Registering beans for JMX exposure on startup
2019-05-16 17:02:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 17:02:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 17:02:08 -Starting beans in phase 2147483647
2019-05-16 17:02:08 -Context refreshed
2019-05-16 17:02:08 -Found 1 custom documentation plugin(s)
2019-05-16 17:02:09 -Scanning for api listing references
2019-05-16 17:02:09 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 17:02:09 -Generating unique operation named: removeUsingPOST_1
2019-05-16 17:02:09 -Generating unique operation named: addUsingGET_1
2019-05-16 17:02:09 -Generating unique operation named: editUsingGET_1
2019-05-16 17:02:09 -Generating unique operation named: listUsingGET_1
2019-05-16 17:02:09 -Generating unique operation named: removeUsingPOST_2
2019-05-16 17:02:09 -Generating unique operation named: removeUsingPOST_3
2019-05-16 17:02:09 -Generating unique operation named: saveUsingPOST_1
2019-05-16 17:02:09 -Generating unique operation named: updateUsingGET_1
2019-05-16 17:02:09 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 17:02:09 -Generating unique operation named: updateUsingPOST_1
2019-05-16 17:02:09 -Generating unique operation named: updateUsingPUT_1
2019-05-16 17:02:09 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 17:02:09 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 17:02:09 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 17:02:09 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 17:02:09 -Generating unique operation named: addUsingGET_2
2019-05-16 17:02:09 -Generating unique operation named: editUsingGET_2
2019-05-16 17:02:09 -Generating unique operation named: listUsingGET_2
2019-05-16 17:02:09 -Generating unique operation named: removeUsingPOST_4
2019-05-16 17:02:09 -Generating unique operation named: removeUsingPOST_5
2019-05-16 17:02:09 -Generating unique operation named: saveUsingPOST_2
2019-05-16 17:02:09 -Generating unique operation named: updateUsingPOST_2
2019-05-16 17:02:09 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 17:02:09 -Generating unique operation named: addUsingGET_3
2019-05-16 17:02:09 -Generating unique operation named: editUsingGET_3
2019-05-16 17:02:09 -Generating unique operation named: listUsingGET_3
2019-05-16 17:02:09 -Generating unique operation named: removeUsingPOST_6
2019-05-16 17:02:09 -Generating unique operation named: removeUsingPOST_7
2019-05-16 17:02:09 -Generating unique operation named: saveUsingPOST_3
2019-05-16 17:02:09 -Generating unique operation named: updateUsingGET_2
2019-05-16 17:02:09 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 17:02:09 -Generating unique operation named: updateUsingPOST_3
2019-05-16 17:02:09 -Generating unique operation named: updateUsingPUT_2
2019-05-16 17:02:09 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 17:02:09 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 17:02:09 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 17:02:09 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 17:02:09 -Generating unique operation named: addUsingGET_4
2019-05-16 17:02:09 -Generating unique operation named: editUsingGET_4
2019-05-16 17:02:09 -Generating unique operation named: listUsingGET_4
2019-05-16 17:02:09 -Generating unique operation named: removeUsingPOST_8
2019-05-16 17:02:09 -Generating unique operation named: removeUsingPOST_9
2019-05-16 17:02:09 -Generating unique operation named: saveUsingPOST_4
2019-05-16 17:02:09 -Generating unique operation named: updateUsingGET_3
2019-05-16 17:02:09 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 17:02:09 -Generating unique operation named: updateUsingPOST_4
2019-05-16 17:02:09 -Generating unique operation named: updateUsingPUT_3
2019-05-16 17:02:09 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 17:02:09 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 17:02:09 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 17:02:09 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 17:02:09 -Generating unique operation named: ElecUsingGET_1
2019-05-16 17:02:09 -Generating unique operation named: addUsingGET_5
2019-05-16 17:02:10 -Generating unique operation named: editUsingGET_5
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_5
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_10
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_11
2019-05-16 17:02:10 -Generating unique operation named: saveUsingPOST_5
2019-05-16 17:02:10 -Generating unique operation named: updateUsingGET_4
2019-05-16 17:02:10 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPOST_5
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPUT_4
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 17:02:10 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 17:02:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 17:02:10 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 17:02:10 -Generating unique operation named: editUsingGET_6
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_6
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPOST_6
2019-05-16 17:02:10 -Generating unique operation named: addUsingGET_6
2019-05-16 17:02:10 -Generating unique operation named: editUsingGET_7
2019-05-16 17:02:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_7
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_12
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_13
2019-05-16 17:02:10 -Generating unique operation named: saveUsingPOST_6
2019-05-16 17:02:10 -Generating unique operation named: updateUsingGET_5
2019-05-16 17:02:10 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPOST_7
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPUT_5
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 17:02:10 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 17:02:10 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 17:02:10 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 17:02:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 17:02:10 -Generating unique operation named: addUsingGET_7
2019-05-16 17:02:10 -Generating unique operation named: editUsingGET_8
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_8
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_14
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_15
2019-05-16 17:02:10 -Generating unique operation named: saveUsingPOST_7
2019-05-16 17:02:10 -Generating unique operation named: updateUsingGET_6
2019-05-16 17:02:10 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPOST_8
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPUT_6
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 17:02:10 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 17:02:10 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 17:02:10 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 17:02:10 -Generating unique operation named: addUsingGET_8
2019-05-16 17:02:10 -Generating unique operation named: editUsingGET_9
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_9
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_16
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_17
2019-05-16 17:02:10 -Generating unique operation named: saveUsingPOST_8
2019-05-16 17:02:10 -Generating unique operation named: updateUsingGET_7
2019-05-16 17:02:10 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPOST_9
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPUT_7
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 17:02:10 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 17:02:10 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 17:02:10 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 17:02:10 -Generating unique operation named: addUsingGET_9
2019-05-16 17:02:10 -Generating unique operation named: editUsingGET_10
2019-05-16 17:02:10 -Generating unique operation named: infoUsingGET_1
2019-05-16 17:02:10 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 17:02:10 -Generating unique operation named: infoUsingPOST_1
2019-05-16 17:02:10 -Generating unique operation named: infoUsingPUT_1
2019-05-16 17:02:10 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 17:02:10 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 17:02:10 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 17:02:10 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_10
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_18
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_19
2019-05-16 17:02:10 -Generating unique operation named: saveUsingPOST_9
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPOST_10
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_11
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_20
2019-05-16 17:02:10 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 17:02:10 -Generating unique operation named: addUsingGET_10
2019-05-16 17:02:10 -Generating unique operation named: editUsingGET_11
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_12
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_21
2019-05-16 17:02:10 -Generating unique operation named: saveUsingPOST_10
2019-05-16 17:02:10 -Generating unique operation named: treeUsingGET_1
2019-05-16 17:02:10 -Generating unique operation named: treeUsingGET_2
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPOST_11
2019-05-16 17:02:10 -Generating unique operation named: addUsingGET_11
2019-05-16 17:02:10 -Generating unique operation named: editUsingGET_12
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_13
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_22
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_23
2019-05-16 17:02:10 -Generating unique operation named: saveUsingPOST_11
2019-05-16 17:02:10 -Generating unique operation named: updateUsingGET_8
2019-05-16 17:02:10 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPOST_12
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPUT_8
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 17:02:10 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 17:02:10 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 17:02:10 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 17:02:10 -Generating unique operation named: addUsingGET_12
2019-05-16 17:02:10 -Generating unique operation named: editUsingGET_13
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_14
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_24
2019-05-16 17:02:10 -Generating unique operation named: removeUsingPOST_25
2019-05-16 17:02:10 -Generating unique operation named: saveUsingPOST_12
2019-05-16 17:02:10 -Generating unique operation named: updateUsingGET_9
2019-05-16 17:02:10 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPOST_13
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPUT_9
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 17:02:10 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 17:02:10 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 17:02:10 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 17:02:10 -Generating unique operation named: addUsingGET_13
2019-05-16 17:02:10 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 17:02:10 -Generating unique operation named: editUsingGET_14
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_15
2019-05-16 17:02:10 -Generating unique operation named: saveUsingPOST_13
2019-05-16 17:02:10 -Generating unique operation named: saveUsingPOST_14
2019-05-16 17:02:10 -Generating unique operation named: updateUsingPOST_14
2019-05-16 17:02:10 -Generating unique operation named: listUsingGET_16
2019-05-16 17:02:10 -Generating unique operation named: listUsingHEAD_1
2019-05-16 17:02:10 -Generating unique operation named: listUsingPOST_1
2019-05-16 17:02:10 -Generating unique operation named: listUsingPUT_1
2019-05-16 17:02:10 -Generating unique operation named: listUsingPATCH_1
2019-05-16 17:02:10 -Generating unique operation named: listUsingDELETE_1
2019-05-16 17:02:10 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 17:02:10 -Generating unique operation named: listUsingTRACE_1
2019-05-16 17:02:10 -Generating unique operation named: countDDUsingGET_1
2019-05-16 17:02:10 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 17:02:11 -Generating unique operation named: addUsingGET_14
2019-05-16 17:02:11 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 17:02:11 -Generating unique operation named: editUsingGET_15
2019-05-16 17:02:11 -Generating unique operation named: listUsingGET_17
2019-05-16 17:02:11 -Generating unique operation named: removeUsingPOST_26
2019-05-16 17:02:11 -Generating unique operation named: saveUsingPOST_15
2019-05-16 17:02:11 -Generating unique operation named: treeUsingGET_3
2019-05-16 17:02:11 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 17:02:11 -Generating unique operation named: updateUsingPOST_15
2019-05-16 17:02:11 -Generating unique operation named: addUsingGET_15
2019-05-16 17:02:11 -Generating unique operation named: editUsingGET_16
2019-05-16 17:02:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 17:02:11 -Generating unique operation named: listUsingGET_18
2019-05-16 17:02:11 -Generating unique operation named: removeUsingPOST_27
2019-05-16 17:02:11 -Generating unique operation named: removeUsingPOST_28
2019-05-16 17:02:11 -Generating unique operation named: saveUsingPOST_16
2019-05-16 17:02:11 -Generating unique operation named: updateUsingGET_10
2019-05-16 17:02:11 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 17:02:11 -Generating unique operation named: updateUsingPOST_16
2019-05-16 17:02:11 -Generating unique operation named: updateUsingPUT_10
2019-05-16 17:02:11 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 17:02:11 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 17:02:11 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 17:02:11 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 17:02:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 17:02:11 -Generating unique operation named: addUsingGET_16
2019-05-16 17:02:11 -Generating unique operation named: editUsingGET_17
2019-05-16 17:02:11 -Generating unique operation named: listUsingGET_19
2019-05-16 17:02:11 -Generating unique operation named: removeUsingPOST_29
2019-05-16 17:02:11 -Generating unique operation named: removeUsingPOST_30
2019-05-16 17:02:11 -Generating unique operation named: saveUsingPOST_17
2019-05-16 17:02:11 -Generating unique operation named: updateUsingGET_11
2019-05-16 17:02:11 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 17:02:11 -Generating unique operation named: updateUsingPOST_17
2019-05-16 17:02:11 -Generating unique operation named: updateUsingPUT_11
2019-05-16 17:02:11 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 17:02:11 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 17:02:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 17:02:11 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 17:02:11 -Generating unique operation named: addUsingGET_17
2019-05-16 17:02:11 -Generating unique operation named: editUsingGET_18
2019-05-16 17:02:11 -Generating unique operation named: listUsingGET_20
2019-05-16 17:02:11 -Generating unique operation named: removeUsingPOST_31
2019-05-16 17:02:11 -Generating unique operation named: removeUsingPOST_32
2019-05-16 17:02:11 -Generating unique operation named: saveUsingPOST_18
2019-05-16 17:02:11 -Generating unique operation named: updateUsingGET_12
2019-05-16 17:02:11 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 17:02:11 -Generating unique operation named: updateUsingPOST_18
2019-05-16 17:02:11 -Generating unique operation named: updateUsingPUT_12
2019-05-16 17:02:11 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 17:02:11 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 17:02:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 17:02:11 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 17:02:11 -Starting Quartz Scheduler now
2019-05-16 17:02:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 17:02:11 -Starting...
2019-05-16 17:02:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 17:02:11 -Started.
2019-05-16 17:02:11 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 17:02:11 -Using a shared selector for servlet write/read
2019-05-16 17:02:11 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 17:02:11 -Started BootdoApplication in 21.762 seconds (JVM running for 22.473)
2019-05-16 17:02:11 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 17:02:11 -==> Parameters: 
2019-05-16 17:02:11 -<==      Total: 1
2019-05-16 17:03:06 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-16 17:04:31 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 17:04:31 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 17:04:31 -FrameworkServlet 'dispatcherServlet': initialization completed in 82 ms
2019-05-16 17:04:31 -Enabling session validation scheduler...
2019-05-16 17:04:32 -请求地址 : http://localhost:8081/login;JSESSIONID=3156c311-542d-4906-be22-6dcbb6b363d2
2019-05-16 17:04:32 -HTTP METHOD : GET
2019-05-16 17:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 17:04:32 -参数 : [{}]
2019-05-16 17:04:32 -耗时 : 6
2019-05-16 17:04:32 -返回值 : login
2019-05-16 17:04:33 -请求地址 : http://localhost:8081/getVerify
2019-05-16 17:04:33 -HTTP METHOD : GET
2019-05-16 17:04:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 17:04:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2d851a2b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@e8ccb6f]
2019-05-16 17:04:34 -0812
2019-05-16 17:04:34 -耗时 : 528
2019-05-16 17:04:34 -返回值 : null
2019-05-16 17:04:34 -请求地址 : http://localhost:8081/login
2019-05-16 17:04:34 -HTTP METHOD : GET
2019-05-16 17:04:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 17:04:34 -参数 : [{}]
2019-05-16 17:04:34 -耗时 : 1
2019-05-16 17:04:34 -返回值 : login
2019-05-16 17:04:39 -请求地址 : http://localhost:8081/login
2019-05-16 17:04:39 -HTTP METHOD : POST
2019-05-16 17:04:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 17:04:39 -参数 : [admin, 111111, 0812, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7ae9e5a2]
2019-05-16 17:04:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 17:04:39 -==> Parameters: admin(String)
2019-05-16 17:04:39 -<==      Total: 1
2019-05-16 17:04:39 -耗时 : 183
2019-05-16 17:04:39 -返回值 : {msg=操作成功, code=0}
2019-05-16 17:04:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 17:04:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:04:39 -==> Parameters: 1(Long), admin(String), 登录(String), 184(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 17:04:39.839(Timestamp)
2019-05-16 17:04:39 -请求地址 : http://localhost:8081/index
2019-05-16 17:04:39 -HTTP METHOD : GET
2019-05-16 17:04:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 17:04:39 -参数 : [{}]
2019-05-16 17:04:39 -<==    Updates: 1
2019-05-16 17:04:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 17:04:40 -==> Parameters: 1(Long)
2019-05-16 17:04:40 -<==      Total: 49
2019-05-16 17:04:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 17:04:40 -==> Parameters: 138(Long)
2019-05-16 17:04:40 -<==      Total: 1
2019-05-16 17:04:40 -耗时 : 136
2019-05-16 17:04:40 -返回值 : index_v1
2019-05-16 17:04:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:04:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 137(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 17:04:40.092(Timestamp)
2019-05-16 17:04:40 -<==    Updates: 1
2019-05-16 17:04:40 -请求地址 : http://localhost:8081/main
2019-05-16 17:04:40 -HTTP METHOD : GET
2019-05-16 17:04:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:04:40 -参数 : []
2019-05-16 17:04:40 -耗时 : 0
2019-05-16 17:04:40 -返回值 : main
2019-05-16 17:04:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 17:04:40 -HTTP METHOD : GET
2019-05-16 17:04:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 17:04:40 -参数 : []
2019-05-16 17:04:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 17:04:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 17:04:40 -<==      Total: 0
2019-05-16 17:04:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 17:04:40 -==> Parameters: 1(Long), 0(String)
2019-05-16 17:04:40 -<==      Total: 1
2019-05-16 17:04:40 -耗时 : 37
2019-05-16 17:04:40 -返回值 : com.bootdo.common.utils.PageUtils@1a845e61
2019-05-16 17:04:40 -请求地址 : http://localhost:8081/main
2019-05-16 17:04:40 -HTTP METHOD : GET
2019-05-16 17:04:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:04:40 -参数 : []
2019-05-16 17:04:40 -耗时 : 0
2019-05-16 17:04:40 -返回值 : main
2019-05-16 17:05:11 -请求地址 : http://localhost:8081/index
2019-05-16 17:05:11 -HTTP METHOD : GET
2019-05-16 17:05:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 17:05:11 -参数 : [{}]
2019-05-16 17:05:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 17:05:11 -==> Parameters: 1(Long)
2019-05-16 17:05:11 -<==      Total: 49
2019-05-16 17:05:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 17:05:11 -==> Parameters: 138(Long)
2019-05-16 17:05:11 -<==      Total: 1
2019-05-16 17:05:11 -耗时 : 25
2019-05-16 17:05:11 -返回值 : index_v1
2019-05-16 17:05:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:05:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 17:05:11.999(Timestamp)
2019-05-16 17:05:12 -请求地址 : http://localhost:8081/main
2019-05-16 17:05:12 -HTTP METHOD : GET
2019-05-16 17:05:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:05:12 -参数 : []
2019-05-16 17:05:12 -耗时 : 0
2019-05-16 17:05:12 -返回值 : main
2019-05-16 17:05:12 -<==    Updates: 1
2019-05-16 17:05:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 17:05:12 -HTTP METHOD : GET
2019-05-16 17:05:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 17:05:12 -参数 : []
2019-05-16 17:05:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 17:05:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 17:05:12 -<==      Total: 0
2019-05-16 17:05:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 17:05:12 -==> Parameters: 1(Long), 0(String)
2019-05-16 17:05:12 -<==      Total: 1
2019-05-16 17:05:12 -耗时 : 4
2019-05-16 17:05:12 -返回值 : com.bootdo.common.utils.PageUtils@759a906c
2019-05-16 17:05:12 -请求地址 : http://localhost:8081/main
2019-05-16 17:05:12 -HTTP METHOD : GET
2019-05-16 17:05:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:05:12 -参数 : []
2019-05-16 17:05:12 -耗时 : 0
2019-05-16 17:05:12 -返回值 : main
2019-05-16 17:05:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 17:05:16 -==> Parameters: 1(Long)
2019-05-16 17:05:16 -<==      Total: 93
2019-05-16 17:05:16 -请求地址 : http://localhost:8081/charts/countYY
2019-05-16 17:05:16 -HTTP METHOD : GET
2019-05-16 17:05:16 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-16 17:05:16 -参数 : []
2019-05-16 17:05:16 -耗时 : 0
2019-05-16 17:05:16 -返回值 : charts/countYY
2019-05-16 17:05:17 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 17:05:17 -HTTP METHOD : GET
2019-05-16 17:05:17 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:05:17 -参数 : []
2019-05-16 17:05:17 -耗时 : 25
2019-05-16 17:05:17 -返回值 : charts/tableElecMM
2019-05-16 17:05:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:05:18 -HTTP METHOD : GET
2019-05-16 17:05:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:05:18 -参数 : [userType]
2019-05-16 17:05:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:05:18 -==> Parameters: userType(String)
2019-05-16 17:05:18 -<==      Total: 4
2019-05-16 17:05:18 -耗时 : 29
2019-05-16 17:05:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:05:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:05:18 -HTTP METHOD : GET
2019-05-16 17:05:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:05:18 -参数 : [userType]
2019-05-16 17:05:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:05:18 -==> Parameters: userType(String)
2019-05-16 17:05:18 -<==      Total: 4
2019-05-16 17:05:18 -耗时 : 7
2019-05-16 17:05:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:05:18 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 17:05:18 -HTTP METHOD : GET
2019-05-16 17:05:18 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 17:05:18 -参数 : []
2019-05-16 17:05:18 -耗时 : 7
2019-05-16 17:05:18 -返回值 : charts/tableHeatMM
2019-05-16 17:05:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:05:18 -HTTP METHOD : GET
2019-05-16 17:05:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:05:18 -参数 : [userType]
2019-05-16 17:05:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:05:18 -==> Parameters: userType(String)
2019-05-16 17:05:18 -<==      Total: 4
2019-05-16 17:05:18 -耗时 : 9
2019-05-16 17:05:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:05:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 17:05:25 -HTTP METHOD : GET
2019-05-16 17:05:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 17:05:25 -参数 : []
2019-05-16 17:05:25 -耗时 : 0
2019-05-16 17:05:25 -返回值 : system/dept/deptTree
2019-05-16 17:05:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 17:05:25 -HTTP METHOD : GET
2019-05-16 17:05:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 17:05:25 -参数 : []
2019-05-16 17:05:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 17:05:25 -==> Parameters: 
2019-05-16 17:05:25 -<==      Total: 3
2019-05-16 17:05:25 -耗时 : 21
2019-05-16 17:05:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 17:05:27 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-05-16 17:05:27 -HTTP METHOD : POST
2019-05-16 17:05:27 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 17:05:27 -参数 : [com.bootdo.heat.vo.HeatVo@285976d3, com.bootdo.moneyLog.vo.HeatLogVo@34f0c18e]
2019-05-16 17:05:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:05:27 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatMM/tableHeatMM(String), java.lang.NumberFormatException: For input string: "2019-03"(String), null, 2019-05-16 17:05:27.819(Timestamp)
2019-05-16 17:05:27 -For input string: "2019-03"
java.lang.NumberFormatException: For input string: "2019-03"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(tableHeatMMController.java:54)
	at com.bootdo.charts.controller.tableHeatMMController$$FastClassBySpringCGLIB$$52df86fd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatMMController$$EnhancerBySpringCGLIB$$e546857a.tableHeatMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-16 17:05:27 -<==    Updates: 1
2019-05-16 17:05:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 17:05:29 -HTTP METHOD : GET
2019-05-16 17:05:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 17:05:29 -参数 : []
2019-05-16 17:05:29 -耗时 : 0
2019-05-16 17:05:29 -返回值 : system/dept/deptTree
2019-05-16 17:05:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 17:05:29 -HTTP METHOD : GET
2019-05-16 17:05:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 17:05:29 -参数 : []
2019-05-16 17:05:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 17:05:29 -==> Parameters: 
2019-05-16 17:05:29 -<==      Total: 3
2019-05-16 17:05:29 -耗时 : 9
2019-05-16 17:05:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 17:05:31 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-05-16 17:05:31 -HTTP METHOD : POST
2019-05-16 17:05:31 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 17:05:31 -参数 : [com.bootdo.heat.vo.HeatVo@73d95ae5, com.bootdo.moneyLog.vo.HeatLogVo@20b23107]
2019-05-16 17:05:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:05:31 -For input string: "2019-03"
java.lang.NumberFormatException: For input string: "2019-03"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Integer.parseInt(Integer.java:580)
	at java.lang.Integer.parseInt(Integer.java:615)
	at com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(tableHeatMMController.java:54)
	at com.bootdo.charts.controller.tableHeatMMController$$FastClassBySpringCGLIB$$52df86fd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatMMController$$EnhancerBySpringCGLIB$$e546857a.tableHeatMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-16 17:05:31 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatMM/tableHeatMM(String), java.lang.NumberFormatException: For input string: "2019-03"(String), null, 2019-05-16 17:05:31.626(Timestamp)
2019-05-16 17:05:31 -<==    Updates: 1
2019-05-16 17:07:22 -Starting BootdoApplication on PC-201905091110 with PID 18244 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 17:07:22 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 17:07:22 -The following profiles are active: dev
2019-05-16 17:07:22 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:07:22 CST 2019]; root of context hierarchy
2019-05-16 17:07:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 17:07:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71fd8325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:07:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6456b1cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:07:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:07:28 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:07:28 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:07:28 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 17:07:28 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 17:07:28 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:07:28 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:07:28 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:07:28 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:07:29 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 17:07:29 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 17:07:29 -Starting service [Tomcat]
2019-05-16 17:07:29 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 17:07:29 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 17:07:30 -Initializing Spring embedded WebApplicationContext
2019-05-16 17:07:30 -Root WebApplicationContext: initialization completed in 7833 ms
2019-05-16 17:07:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 17:07:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 17:07:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 17:07:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 17:07:30 -Filter xssFilter was not registered (disabled)
2019-05-16 17:07:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 17:07:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 17:07:30 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 17:07:30 -Servlet dispatcherServlet mapped to [/]
2019-05-16 17:07:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:07:22 CST 2019]; root of context hierarchy
2019-05-16 17:07:35 -Using default implementation for ThreadExecutor
2019-05-16 17:07:35 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 17:07:35 -Quartz Scheduler v.2.2.1 created.
2019-05-16 17:07:35 -RAMJobStore initialized.
2019-05-16 17:07:35 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 17:07:35 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 17:07:35 -Quartz scheduler version: 2.2.1
2019-05-16 17:07:35 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@50a7c72b
2019-05-16 17:07:36 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 17:07:36 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 17:07:38 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 17:07:38 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:07:38 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:07:38 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 17:07:38 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 17:07:38 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 17:07:38 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:07:38 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 17:07:38 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:07:38 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 17:07:38 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:07:38 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 17:07:38 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 17:07:38 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 17:07:38 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 17:07:38 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 17:07:38 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 17:07:38 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:07:38 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 17:07:38 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:07:38 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 17:07:38 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 17:07:38 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 17:07:38 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 17:07:38 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 17:07:38 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 17:07:38 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 17:07:38 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 17:07:38 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 17:07:38 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 17:07:38 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 17:07:38 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 17:07:38 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 17:07:38 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 17:07:38 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 17:07:38 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 17:07:38 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 17:07:38 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 17:07:38 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 17:07:38 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 17:07:38 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 17:07:38 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 17:07:38 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 17:07:38 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 17:07:38 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 17:07:38 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 17:07:38 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 17:07:38 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 17:07:38 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 17:07:38 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:07:38 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 17:07:38 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:07:38 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:07:38 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 17:07:38 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:07:38 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:07:38 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 17:07:38 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 17:07:38 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 17:07:38 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 17:07:38 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 17:07:38 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 17:07:38 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 17:07:38 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 17:07:38 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 17:07:38 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 17:07:38 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 17:07:38 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 17:07:38 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 17:07:38 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:07:38 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 17:07:38 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 17:07:38 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 17:07:38 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 17:07:38 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 17:07:38 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 17:07:38 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 17:07:38 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 17:07:38 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:07:38 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:07:38 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:07:38 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 17:07:38 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 17:07:38 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 17:07:38 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 17:07:38 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 17:07:38 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 17:07:38 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 17:07:38 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:07:38 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 17:07:38 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 17:07:38 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 17:07:38 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 17:07:38 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 17:07:38 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 17:07:38 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 17:07:38 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 17:07:38 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 17:07:38 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 17:07:38 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 17:07:38 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 17:07:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 17:07:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 17:07:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 17:07:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 17:07:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 17:07:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 17:07:38 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:07:38 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 17:07:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 17:07:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 17:07:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 17:07:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 17:07:38 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 17:07:38 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 17:07:38 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 17:07:38 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 17:07:38 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 17:07:38 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 17:07:38 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 17:07:38 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 17:07:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 17:07:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 17:07:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 17:07:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 17:07:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 17:07:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 17:07:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:07:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 17:07:38 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 17:07:38 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 17:07:38 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 17:07:38 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 17:07:38 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 17:07:38 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:07:38 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:38 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 17:07:38 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 17:07:38 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 17:07:38 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 17:07:38 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 17:07:38 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:07:38 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 17:07:38 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 17:07:38 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:07:38 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 17:07:39 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 17:07:39 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:07:39 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 17:07:39 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:07:39 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 17:07:39 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 17:07:39 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 17:07:39 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 17:07:39 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 17:07:39 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 17:07:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:07:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:07:22 CST 2019]; root of context hierarchy
2019-05-16 17:07:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:07:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:07:40 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:07:40 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 17:07:40 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 17:07:42 -Registering beans for JMX exposure on startup
2019-05-16 17:07:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 17:07:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 17:07:42 -Starting beans in phase 2147483647
2019-05-16 17:07:42 -Context refreshed
2019-05-16 17:07:42 -Found 1 custom documentation plugin(s)
2019-05-16 17:07:42 -Scanning for api listing references
2019-05-16 17:07:42 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_1
2019-05-16 17:07:43 -Generating unique operation named: addUsingGET_1
2019-05-16 17:07:43 -Generating unique operation named: editUsingGET_1
2019-05-16 17:07:43 -Generating unique operation named: listUsingGET_1
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_2
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_3
2019-05-16 17:07:43 -Generating unique operation named: saveUsingPOST_1
2019-05-16 17:07:43 -Generating unique operation named: updateUsingGET_1
2019-05-16 17:07:43 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPOST_1
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPUT_1
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 17:07:43 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 17:07:43 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 17:07:43 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 17:07:43 -Generating unique operation named: addUsingGET_2
2019-05-16 17:07:43 -Generating unique operation named: editUsingGET_2
2019-05-16 17:07:43 -Generating unique operation named: listUsingGET_2
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_4
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_5
2019-05-16 17:07:43 -Generating unique operation named: saveUsingPOST_2
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPOST_2
2019-05-16 17:07:43 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 17:07:43 -Generating unique operation named: addUsingGET_3
2019-05-16 17:07:43 -Generating unique operation named: editUsingGET_3
2019-05-16 17:07:43 -Generating unique operation named: listUsingGET_3
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_6
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_7
2019-05-16 17:07:43 -Generating unique operation named: saveUsingPOST_3
2019-05-16 17:07:43 -Generating unique operation named: updateUsingGET_2
2019-05-16 17:07:43 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPOST_3
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPUT_2
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 17:07:43 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 17:07:43 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 17:07:43 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 17:07:43 -Generating unique operation named: addUsingGET_4
2019-05-16 17:07:43 -Generating unique operation named: editUsingGET_4
2019-05-16 17:07:43 -Generating unique operation named: listUsingGET_4
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_8
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_9
2019-05-16 17:07:43 -Generating unique operation named: saveUsingPOST_4
2019-05-16 17:07:43 -Generating unique operation named: updateUsingGET_3
2019-05-16 17:07:43 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPOST_4
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPUT_3
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 17:07:43 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 17:07:43 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 17:07:43 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 17:07:43 -Generating unique operation named: ElecUsingGET_1
2019-05-16 17:07:43 -Generating unique operation named: addUsingGET_5
2019-05-16 17:07:43 -Generating unique operation named: editUsingGET_5
2019-05-16 17:07:43 -Generating unique operation named: listUsingGET_5
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_10
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_11
2019-05-16 17:07:43 -Generating unique operation named: saveUsingPOST_5
2019-05-16 17:07:43 -Generating unique operation named: updateUsingGET_4
2019-05-16 17:07:43 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPOST_5
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPUT_4
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 17:07:43 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 17:07:43 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 17:07:43 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 17:07:43 -Generating unique operation named: editUsingGET_6
2019-05-16 17:07:43 -Generating unique operation named: listUsingGET_6
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPOST_6
2019-05-16 17:07:43 -Generating unique operation named: addUsingGET_6
2019-05-16 17:07:43 -Generating unique operation named: editUsingGET_7
2019-05-16 17:07:43 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 17:07:43 -Generating unique operation named: listUsingGET_7
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_12
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_13
2019-05-16 17:07:43 -Generating unique operation named: saveUsingPOST_6
2019-05-16 17:07:43 -Generating unique operation named: updateUsingGET_5
2019-05-16 17:07:43 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPOST_7
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPUT_5
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 17:07:43 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 17:07:43 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 17:07:43 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 17:07:43 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 17:07:43 -Generating unique operation named: addUsingGET_7
2019-05-16 17:07:43 -Generating unique operation named: editUsingGET_8
2019-05-16 17:07:43 -Generating unique operation named: listUsingGET_8
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_14
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_15
2019-05-16 17:07:43 -Generating unique operation named: saveUsingPOST_7
2019-05-16 17:07:43 -Generating unique operation named: updateUsingGET_6
2019-05-16 17:07:43 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPOST_8
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPUT_6
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 17:07:43 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 17:07:43 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 17:07:43 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 17:07:43 -Generating unique operation named: addUsingGET_8
2019-05-16 17:07:43 -Generating unique operation named: editUsingGET_9
2019-05-16 17:07:43 -Generating unique operation named: listUsingGET_9
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_16
2019-05-16 17:07:43 -Generating unique operation named: removeUsingPOST_17
2019-05-16 17:07:43 -Generating unique operation named: saveUsingPOST_8
2019-05-16 17:07:43 -Generating unique operation named: updateUsingGET_7
2019-05-16 17:07:43 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPOST_9
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPUT_7
2019-05-16 17:07:43 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 17:07:43 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 17:07:43 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 17:07:43 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 17:07:44 -Generating unique operation named: addUsingGET_9
2019-05-16 17:07:44 -Generating unique operation named: editUsingGET_10
2019-05-16 17:07:44 -Generating unique operation named: infoUsingGET_1
2019-05-16 17:07:44 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 17:07:44 -Generating unique operation named: infoUsingPOST_1
2019-05-16 17:07:44 -Generating unique operation named: infoUsingPUT_1
2019-05-16 17:07:44 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 17:07:44 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 17:07:44 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 17:07:44 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 17:07:44 -Generating unique operation named: listUsingGET_10
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_18
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_19
2019-05-16 17:07:44 -Generating unique operation named: saveUsingPOST_9
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPOST_10
2019-05-16 17:07:44 -Generating unique operation named: listUsingGET_11
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_20
2019-05-16 17:07:44 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 17:07:44 -Generating unique operation named: addUsingGET_10
2019-05-16 17:07:44 -Generating unique operation named: editUsingGET_11
2019-05-16 17:07:44 -Generating unique operation named: listUsingGET_12
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_21
2019-05-16 17:07:44 -Generating unique operation named: saveUsingPOST_10
2019-05-16 17:07:44 -Generating unique operation named: treeUsingGET_1
2019-05-16 17:07:44 -Generating unique operation named: treeUsingGET_2
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPOST_11
2019-05-16 17:07:44 -Generating unique operation named: addUsingGET_11
2019-05-16 17:07:44 -Generating unique operation named: editUsingGET_12
2019-05-16 17:07:44 -Generating unique operation named: listUsingGET_13
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_22
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_23
2019-05-16 17:07:44 -Generating unique operation named: saveUsingPOST_11
2019-05-16 17:07:44 -Generating unique operation named: updateUsingGET_8
2019-05-16 17:07:44 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPOST_12
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPUT_8
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 17:07:44 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 17:07:44 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 17:07:44 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 17:07:44 -Generating unique operation named: addUsingGET_12
2019-05-16 17:07:44 -Generating unique operation named: editUsingGET_13
2019-05-16 17:07:44 -Generating unique operation named: listUsingGET_14
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_24
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_25
2019-05-16 17:07:44 -Generating unique operation named: saveUsingPOST_12
2019-05-16 17:07:44 -Generating unique operation named: updateUsingGET_9
2019-05-16 17:07:44 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPOST_13
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPUT_9
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 17:07:44 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 17:07:44 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 17:07:44 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 17:07:44 -Generating unique operation named: addUsingGET_13
2019-05-16 17:07:44 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 17:07:44 -Generating unique operation named: editUsingGET_14
2019-05-16 17:07:44 -Generating unique operation named: listUsingGET_15
2019-05-16 17:07:44 -Generating unique operation named: saveUsingPOST_13
2019-05-16 17:07:44 -Generating unique operation named: saveUsingPOST_14
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPOST_14
2019-05-16 17:07:44 -Generating unique operation named: listUsingGET_16
2019-05-16 17:07:44 -Generating unique operation named: listUsingHEAD_1
2019-05-16 17:07:44 -Generating unique operation named: listUsingPOST_1
2019-05-16 17:07:44 -Generating unique operation named: listUsingPUT_1
2019-05-16 17:07:44 -Generating unique operation named: listUsingPATCH_1
2019-05-16 17:07:44 -Generating unique operation named: listUsingDELETE_1
2019-05-16 17:07:44 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 17:07:44 -Generating unique operation named: listUsingTRACE_1
2019-05-16 17:07:44 -Generating unique operation named: countDDUsingGET_1
2019-05-16 17:07:44 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 17:07:44 -Generating unique operation named: addUsingGET_14
2019-05-16 17:07:44 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 17:07:44 -Generating unique operation named: editUsingGET_15
2019-05-16 17:07:44 -Generating unique operation named: listUsingGET_17
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_26
2019-05-16 17:07:44 -Generating unique operation named: saveUsingPOST_15
2019-05-16 17:07:44 -Generating unique operation named: treeUsingGET_3
2019-05-16 17:07:44 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPOST_15
2019-05-16 17:07:44 -Generating unique operation named: addUsingGET_15
2019-05-16 17:07:44 -Generating unique operation named: editUsingGET_16
2019-05-16 17:07:44 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 17:07:44 -Generating unique operation named: listUsingGET_18
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_27
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_28
2019-05-16 17:07:44 -Generating unique operation named: saveUsingPOST_16
2019-05-16 17:07:44 -Generating unique operation named: updateUsingGET_10
2019-05-16 17:07:44 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPOST_16
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPUT_10
2019-05-16 17:07:44 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 17:07:44 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 17:07:44 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 17:07:44 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 17:07:44 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 17:07:44 -Generating unique operation named: addUsingGET_16
2019-05-16 17:07:44 -Generating unique operation named: editUsingGET_17
2019-05-16 17:07:44 -Generating unique operation named: listUsingGET_19
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_29
2019-05-16 17:07:44 -Generating unique operation named: removeUsingPOST_30
2019-05-16 17:07:44 -Generating unique operation named: saveUsingPOST_17
2019-05-16 17:07:44 -Generating unique operation named: updateUsingGET_11
2019-05-16 17:07:44 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 17:07:45 -Generating unique operation named: updateUsingPOST_17
2019-05-16 17:07:45 -Generating unique operation named: updateUsingPUT_11
2019-05-16 17:07:45 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 17:07:45 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 17:07:45 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 17:07:45 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 17:07:45 -Generating unique operation named: addUsingGET_17
2019-05-16 17:07:45 -Generating unique operation named: editUsingGET_18
2019-05-16 17:07:45 -Generating unique operation named: listUsingGET_20
2019-05-16 17:07:45 -Generating unique operation named: removeUsingPOST_31
2019-05-16 17:07:45 -Generating unique operation named: removeUsingPOST_32
2019-05-16 17:07:45 -Generating unique operation named: saveUsingPOST_18
2019-05-16 17:07:45 -Generating unique operation named: updateUsingGET_12
2019-05-16 17:07:45 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 17:07:45 -Generating unique operation named: updateUsingPOST_18
2019-05-16 17:07:45 -Generating unique operation named: updateUsingPUT_12
2019-05-16 17:07:45 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 17:07:45 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 17:07:45 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 17:07:45 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 17:07:45 -Starting Quartz Scheduler now
2019-05-16 17:07:45 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 17:07:45 -Starting...
2019-05-16 17:07:45 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 17:07:45 -Started.
2019-05-16 17:07:45 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 17:07:45 -Using a shared selector for servlet write/read
2019-05-16 17:07:45 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 17:07:45 -Started BootdoApplication in 24.349 seconds (JVM running for 25.08)
2019-05-16 17:07:45 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 17:07:45 -==> Parameters: 
2019-05-16 17:07:45 -<==      Total: 1
2019-05-16 17:08:39 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-16 17:16:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 17:16:25 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 17:16:25 -FrameworkServlet 'dispatcherServlet': initialization completed in 88 ms
2019-05-16 17:16:25 -Enabling session validation scheduler...
2019-05-16 17:16:25 -请求地址 : http://localhost:8081/login;JSESSIONID=fd20e943-cae9-4ccf-bd6f-5591503e1e90
2019-05-16 17:16:25 -HTTP METHOD : GET
2019-05-16 17:16:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 17:16:25 -参数 : [{}]
2019-05-16 17:16:25 -耗时 : 11
2019-05-16 17:16:25 -返回值 : login
2019-05-16 17:16:26 -请求地址 : http://localhost:8081/login
2019-05-16 17:16:26 -HTTP METHOD : GET
2019-05-16 17:16:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 17:16:26 -参数 : [{}]
2019-05-16 17:16:26 -耗时 : 1
2019-05-16 17:16:26 -返回值 : login
2019-05-16 17:16:27 -请求地址 : http://localhost:8081/getVerify
2019-05-16 17:16:27 -HTTP METHOD : GET
2019-05-16 17:16:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 17:16:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@a734ec5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@e4cdb53]
2019-05-16 17:16:27 -8703
2019-05-16 17:16:27 -耗时 : 519
2019-05-16 17:16:27 -返回值 : null
2019-05-16 17:16:27 -请求地址 : http://localhost:8081/login
2019-05-16 17:16:27 -HTTP METHOD : GET
2019-05-16 17:16:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 17:16:27 -参数 : [{}]
2019-05-16 17:16:27 -耗时 : 0
2019-05-16 17:16:27 -返回值 : login
2019-05-16 17:16:32 -请求地址 : http://localhost:8081/login
2019-05-16 17:16:32 -HTTP METHOD : POST
2019-05-16 17:16:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 17:16:32 -参数 : [admin, 111111, 8703, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2c46c2d5]
2019-05-16 17:16:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 17:16:33 -==> Parameters: admin(String)
2019-05-16 17:16:33 -<==      Total: 1
2019-05-16 17:16:33 -耗时 : 137
2019-05-16 17:16:33 -返回值 : {msg=操作成功, code=0}
2019-05-16 17:16:33 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 17:16:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:16:33 -==> Parameters: 1(Long), admin(String), 登录(String), 138(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 17:16:33.198(Timestamp)
2019-05-16 17:16:33 -<==    Updates: 1
2019-05-16 17:16:33 -请求地址 : http://localhost:8081/index
2019-05-16 17:16:33 -HTTP METHOD : GET
2019-05-16 17:16:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 17:16:33 -参数 : [{}]
2019-05-16 17:16:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 17:16:33 -==> Parameters: 1(Long)
2019-05-16 17:16:33 -<==      Total: 49
2019-05-16 17:16:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 17:16:33 -==> Parameters: 138(Long)
2019-05-16 17:16:33 -<==      Total: 1
2019-05-16 17:16:33 -耗时 : 126
2019-05-16 17:16:33 -返回值 : index_v1
2019-05-16 17:16:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:16:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 126(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 17:16:33.51(Timestamp)
2019-05-16 17:16:33 -<==    Updates: 1
2019-05-16 17:16:33 -请求地址 : http://localhost:8081/main
2019-05-16 17:16:33 -HTTP METHOD : GET
2019-05-16 17:16:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:16:33 -参数 : []
2019-05-16 17:16:33 -耗时 : 0
2019-05-16 17:16:33 -返回值 : main
2019-05-16 17:16:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 17:16:34 -HTTP METHOD : GET
2019-05-16 17:16:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 17:16:34 -参数 : []
2019-05-16 17:16:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 17:16:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 17:16:34 -<==      Total: 0
2019-05-16 17:16:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 17:16:34 -==> Parameters: 1(Long), 0(String)
2019-05-16 17:16:34 -<==      Total: 1
2019-05-16 17:16:34 -耗时 : 83
2019-05-16 17:16:34 -返回值 : com.bootdo.common.utils.PageUtils@11d3c20e
2019-05-16 17:16:34 -请求地址 : http://localhost:8081/main
2019-05-16 17:16:34 -HTTP METHOD : GET
2019-05-16 17:16:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:16:34 -参数 : []
2019-05-16 17:16:34 -耗时 : 0
2019-05-16 17:16:34 -返回值 : main
2019-05-16 17:16:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 17:16:40 -==> Parameters: 1(Long)
2019-05-16 17:16:40 -<==      Total: 93
2019-05-16 17:16:40 -请求地址 : http://localhost:8081/charts/countMM
2019-05-16 17:16:40 -HTTP METHOD : GET
2019-05-16 17:16:40 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-16 17:16:40 -参数 : []
2019-05-16 17:16:40 -耗时 : 16
2019-05-16 17:16:40 -返回值 : charts/countMM
2019-05-16 17:16:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:16:42 -HTTP METHOD : GET
2019-05-16 17:16:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:16:42 -参数 : [userType]
2019-05-16 17:16:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:16:42 -==> Parameters: userType(String)
2019-05-16 17:16:42 -<==      Total: 4
2019-05-16 17:16:42 -耗时 : 58
2019-05-16 17:16:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:16:43 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 17:16:43 -HTTP METHOD : GET
2019-05-16 17:16:43 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:16:43 -参数 : []
2019-05-16 17:16:43 -耗时 : 12
2019-05-16 17:16:43 -返回值 : charts/tableElecMM
2019-05-16 17:16:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:16:43 -HTTP METHOD : GET
2019-05-16 17:16:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:16:43 -参数 : [userType]
2019-05-16 17:16:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:16:43 -==> Parameters: userType(String)
2019-05-16 17:16:43 -<==      Total: 4
2019-05-16 17:16:43 -耗时 : 5
2019-05-16 17:16:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:16:44 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 17:16:44 -HTTP METHOD : GET
2019-05-16 17:16:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 17:16:44 -参数 : []
2019-05-16 17:16:44 -耗时 : 7
2019-05-16 17:16:44 -返回值 : charts/tableHeatMM
2019-05-16 17:16:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:16:44 -HTTP METHOD : GET
2019-05-16 17:16:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:16:44 -参数 : [userType]
2019-05-16 17:16:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:16:44 -==> Parameters: userType(String)
2019-05-16 17:16:44 -<==      Total: 4
2019-05-16 17:16:44 -耗时 : 6
2019-05-16 17:16:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:16:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 17:16:57 -HTTP METHOD : GET
2019-05-16 17:16:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 17:16:57 -参数 : []
2019-05-16 17:16:57 -耗时 : 0
2019-05-16 17:16:57 -返回值 : system/dept/deptTree
2019-05-16 17:16:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 17:16:58 -HTTP METHOD : GET
2019-05-16 17:16:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 17:16:58 -参数 : []
2019-05-16 17:16:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 17:16:58 -==> Parameters: 
2019-05-16 17:16:58 -<==      Total: 3
2019-05-16 17:16:58 -耗时 : 29
2019-05-16 17:16:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 17:16:59 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-05-16 17:16:59 -HTTP METHOD : POST
2019-05-16 17:16:59 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 17:16:59 -参数 : [com.bootdo.heat.vo.HeatVo@afd4771, com.bootdo.moneyLog.vo.HeatLogVo@63c5a240]
2019-05-16 17:16:59 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:16:59 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:16:59 -<==      Total: 1
2019-05-16 17:16:59 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-16 17:16:59 -==> Parameters: 
2019-05-16 17:16:59 -<==      Total: 2
2019-05-16 17:16:59 -耗时 : 218
2019-05-16 17:16:59 -返回值 : {STotalyuOld=0, SPreHeatSumMMNew=2, GSPreHeatCountMMNew=1, MHeatLogMMSum=120, GSPreHeatCountMMOld=0, GMHeatCostMMSum =1, SPreHeatSumMMOld=0, STotalyuNew=2, SHeatCostMMSum =2, SHeatLogMMCount=1, type=2, GSHeatLogMMCount=0, TotalPreyuNew=105, GSHeatAreaMM=1, GSTotalhuOld=0, TotalCostyu=205, MHeatPrice=3, MHeatCostMMSum =201, MOweHeatSumMMNew=-79, SHeatPrice=4, GMHeatPrice=3, GSOweHeatSumMMOld=0, SHeatLogMMSum=40, GMHeatLogMMSum=80, TotalPreyuOld=10, MHeatCostMMCount =3, GSOweHeatSumMMNew=0, TotalOwehuNew=1, MOweHeatSumMMOld=-1, TotalCosthu=7, SOweHeatSumMMNew=0, GMOweHeatCountMMOld=0, STotalhuOld=0, SOweHeatCountMMNew=0, GMPreHeatSumMMNew=1, TotalLogyu=240, GMOweHeatCountMMNew=0, STotalhuNew=2, MTotalyuOld=9, GSTotalhuNew=1, GSTotalyuOld=0, GSPreHeatSumMMNew=1, GMPreHeatSumMMOld=0, GMPreHeatCountMMNew=1, MPreHeatSumMMNew=101, MTotalhuNew=3, MTotalyuNew=22, GMHeatLogMMCount=1, GSTotalyuNew=1, GSHeatPrice=4, GSHeatLogMMSum=0, TotalLoghu=4, SOweHeatSumMMOld=0, GMHeatAreaMM=1, SOweHeatCountMMOld=0, SPreHeatCountMMOld=0, TotalOweyuOld=-1, GMHeatCostMMCount =1, GMOweHeatSumMMNew=0, GMTotalhuNew=1, SPreHeatCountMMNew=2, GSHeatCostMMCount =1, GMPreHeatCountMMOld=0, MPreHeatSumMMOld=10, MTotalhuOld=2, GMTotalhuOld=0, GSPreHeatSumMMOld=0, TotalPrehuNew=6, MHeatLogMMCount=2, TotalOweyuNew=-79, SHeatCostMMCount =2, GSHeatCostMMSum =1, MHeatAreaMM=1, TotalPrehuOld=1, SHeatAreaMM=1, MOweHeatCountMMOld=1, GMTotalyuNew=1, TotalOwehuOld=1, PriceTotal=14, AreaTotalMM=4, MOweHeatCountMMNew=1, GMTotalyuOld=0, MPreHeatCountMMOld=1, GSOweHeatCountMMOld=0, TotalAllhuNew=7, TotalAllyuNew=26, GSOweHeatCountMMNew=0, MPreHeatCountMMNew=2, GMOweHeatSumMMOld=0, TotalAllhuOld=2, TotalAllyuOld=9}
2019-05-16 17:17:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 17:17:05 -HTTP METHOD : GET
2019-05-16 17:17:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 17:17:05 -参数 : []
2019-05-16 17:17:05 -耗时 : 0
2019-05-16 17:17:05 -返回值 : system/dept/deptTree
2019-05-16 17:17:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 17:17:05 -HTTP METHOD : GET
2019-05-16 17:17:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 17:17:05 -参数 : []
2019-05-16 17:17:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 17:17:05 -==> Parameters: 
2019-05-16 17:17:05 -<==      Total: 3
2019-05-16 17:17:05 -耗时 : 4
2019-05-16 17:17:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 17:17:06 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-05-16 17:17:06 -HTTP METHOD : POST
2019-05-16 17:17:06 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 17:17:06 -参数 : [com.bootdo.heat.vo.HeatVo@b8c88d8, com.bootdo.moneyLog.vo.HeatLogVo@3cc92f67]
2019-05-16 17:17:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-16 17:17:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:17:06 -<==      Total: 1
2019-05-16 17:17:06 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-16 17:17:06 -==> Parameters: 
2019-05-16 17:17:07 -<==      Total: 2
2019-05-16 17:17:07 -耗时 : 134
2019-05-16 17:17:07 -返回值 : {STotalyuOld=0, SPreHeatSumMMNew=0, GSPreHeatCountMMNew=0, MHeatLogMMSum=0, GSPreHeatCountMMOld=0, GMHeatCostMMSum =0, SPreHeatSumMMOld=0, STotalyuNew=0, SHeatCostMMSum =0, SHeatLogMMCount=0, type=3, GSHeatLogMMCount=1, TotalPreyuNew=1, GSHeatAreaMM=0, GSTotalhuOld=0, TotalCostyu=1, MHeatPrice=3, MHeatCostMMSum =1, MOweHeatSumMMNew=0, SHeatPrice=4, GSOweHeatSumMMOld=0, SHeatLogMMSum=0, GMHeatLogMMSum=0, TotalPreyuOld=0, MHeatCostMMCount =1, GSOweHeatSumMMNew=0, TotalOwehuNew=0, MOweHeatSumMMOld=0, TotalCosthu=1, SOweHeatSumMMNew=0, GMOweHeatCountMMOld=0, STotalhuOld=0, SOweHeatCountMMNew=0, GMPreHeatSumMMNew=0, TotalLogyu=0, GMOweHeatCountMMNew=0, STotalhuNew=0, MTotalyuOld=0, GSTotalhuNew=0, GSTotalyuOld=0, GSPreHeatSumMMNew=0, GMPreHeatSumMMOld=0, GMPreHeatCountMMNew=0, MPreHeatSumMMNew=1, MTotalhuNew=1, MTotalyuNew=1, GMHeatLogMMCount=0, GSTotalyuNew=0, GSHeatLogMMSum=20, TotalLoghu=0, SOweHeatSumMMOld=0, GMHeatAreaMM=0, SOweHeatCountMMOld=0, SPreHeatCountMMOld=0, TotalOweyuOld=0, GMHeatCostMMCount =0, GMOweHeatSumMMNew=0, GMTotalhuNew=0, SPreHeatCountMMNew=0, GSHeatCostMMCount =0, GMPreHeatCountMMOld=0, MPreHeatSumMMOld=0, MTotalhuOld=0, GMTotalhuOld=0, GSPreHeatSumMMOld=0, TotalPrehuNew=1, MHeatLogMMCount=0, TotalOweyuNew=0, SHeatCostMMCount =0, GSHeatCostMMSum =0, MHeatAreaMM=0, TotalPrehuOld=0, SHeatAreaMM=0, MOweHeatCountMMOld=0, GMTotalyuNew=0, TotalOwehuOld=0, PriceTotal=7, AreaTotalMM=0, MOweHeatCountMMNew=0, GMTotalyuOld=0, MPreHeatCountMMOld=0, GSOweHeatCountMMOld=0, TotalAllhuNew=1, TotalAllyuNew=1, GSOweHeatCountMMNew=0, MPreHeatCountMMNew=1, GMOweHeatSumMMOld=0, TotalAllhuOld=0, TotalAllyuOld=0}
2019-05-16 17:17:10 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 17:17:10 -HTTP METHOD : GET
2019-05-16 17:17:10 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 17:17:10 -参数 : []
2019-05-16 17:17:10 -耗时 : 9
2019-05-16 17:17:10 -返回值 : charts/tableWaterMM
2019-05-16 17:17:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:17:10 -HTTP METHOD : GET
2019-05-16 17:17:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:17:10 -参数 : [userType]
2019-05-16 17:17:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:17:10 -==> Parameters: userType(String)
2019-05-16 17:17:10 -<==      Total: 4
2019-05-16 17:17:10 -耗时 : 6
2019-05-16 17:17:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:17:10 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 17:17:10 -HTTP METHOD : GET
2019-05-16 17:17:10 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 17:17:10 -参数 : []
2019-05-16 17:17:10 -耗时 : 0
2019-05-16 17:17:10 -返回值 : charts/tableHeatMM
2019-05-16 17:17:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:17:10 -HTTP METHOD : GET
2019-05-16 17:17:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:17:10 -参数 : [userType]
2019-05-16 17:17:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:17:10 -==> Parameters: userType(String)
2019-05-16 17:17:10 -<==      Total: 4
2019-05-16 17:17:10 -耗时 : 5
2019-05-16 17:17:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:17:11 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 17:17:11 -HTTP METHOD : GET
2019-05-16 17:17:11 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 17:17:11 -参数 : []
2019-05-16 17:17:11 -耗时 : 0
2019-05-16 17:17:11 -返回值 : charts/tableWaterMM
2019-05-16 17:17:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:17:11 -HTTP METHOD : GET
2019-05-16 17:17:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:17:11 -参数 : [userType]
2019-05-16 17:17:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:17:11 -==> Parameters: userType(String)
2019-05-16 17:17:11 -<==      Total: 4
2019-05-16 17:17:11 -耗时 : 7
2019-05-16 17:17:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:17:11 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 17:17:11 -HTTP METHOD : GET
2019-05-16 17:17:11 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 17:17:11 -参数 : []
2019-05-16 17:17:11 -耗时 : 1
2019-05-16 17:17:11 -返回值 : charts/tableHeatMM
2019-05-16 17:17:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:17:11 -HTTP METHOD : GET
2019-05-16 17:17:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:17:11 -参数 : [userType]
2019-05-16 17:17:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:17:11 -==> Parameters: userType(String)
2019-05-16 17:17:11 -<==      Total: 4
2019-05-16 17:17:11 -耗时 : 5
2019-05-16 17:17:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:17:12 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-16 17:17:12 -HTTP METHOD : GET
2019-05-16 17:17:12 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-16 17:17:12 -参数 : []
2019-05-16 17:17:12 -耗时 : 0
2019-05-16 17:17:12 -返回值 : charts/tableWaterMM
2019-05-16 17:17:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:17:12 -HTTP METHOD : GET
2019-05-16 17:17:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:17:12 -参数 : [userType]
2019-05-16 17:17:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:17:12 -==> Parameters: userType(String)
2019-05-16 17:17:12 -<==      Total: 4
2019-05-16 17:17:12 -耗时 : 4
2019-05-16 17:17:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:17:12 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 17:17:12 -HTTP METHOD : GET
2019-05-16 17:17:12 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 17:17:12 -参数 : []
2019-05-16 17:17:12 -耗时 : 0
2019-05-16 17:17:12 -返回值 : charts/tableHeatMM
2019-05-16 17:17:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:17:12 -HTTP METHOD : GET
2019-05-16 17:17:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:17:12 -参数 : [userType]
2019-05-16 17:17:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:17:12 -==> Parameters: userType(String)
2019-05-16 17:17:12 -<==      Total: 4
2019-05-16 17:17:12 -耗时 : 4
2019-05-16 17:17:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:17:13 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 17:17:13 -HTTP METHOD : GET
2019-05-16 17:17:13 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:17:13 -参数 : []
2019-05-16 17:17:13 -耗时 : 0
2019-05-16 17:17:13 -返回值 : charts/tableElecMM
2019-05-16 17:17:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:17:13 -HTTP METHOD : GET
2019-05-16 17:17:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:17:13 -参数 : [userType]
2019-05-16 17:17:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:17:13 -==> Parameters: userType(String)
2019-05-16 17:17:13 -<==      Total: 4
2019-05-16 17:17:13 -耗时 : 5
2019-05-16 17:17:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:38:39 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 319]
2019-05-16 17:39:42 -Starting BootdoApplication on PC-201905091110 with PID 9996 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 17:39:42 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 17:39:42 -The following profiles are active: dev
2019-05-16 17:39:42 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:39:42 CST 2019]; root of context hierarchy
2019-05-16 17:39:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 17:39:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:39:46 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:39:47 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:39:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:39:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:39:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 17:39:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 17:39:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:39:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:39:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:39:48 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:39:48 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 17:39:48 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 17:39:48 -Starting service [Tomcat]
2019-05-16 17:39:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 17:39:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 17:39:49 -Initializing Spring embedded WebApplicationContext
2019-05-16 17:39:49 -Root WebApplicationContext: initialization completed in 6669 ms
2019-05-16 17:39:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 17:39:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 17:39:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 17:39:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 17:39:49 -Filter xssFilter was not registered (disabled)
2019-05-16 17:39:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 17:39:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 17:39:49 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 17:39:49 -Servlet dispatcherServlet mapped to [/]
2019-05-16 17:39:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:39:42 CST 2019]; root of context hierarchy
2019-05-16 17:39:53 -Using default implementation for ThreadExecutor
2019-05-16 17:39:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 17:39:53 -Quartz Scheduler v.2.2.1 created.
2019-05-16 17:39:53 -RAMJobStore initialized.
2019-05-16 17:39:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 17:39:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 17:39:53 -Quartz scheduler version: 2.2.1
2019-05-16 17:39:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@305b43ca
2019-05-16 17:39:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 17:39:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 17:39:56 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 17:39:56 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:39:56 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 17:39:56 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:39:56 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 17:39:56 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 17:39:56 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 17:39:56 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:39:56 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 17:39:56 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:39:56 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 17:39:56 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:39:56 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 17:39:56 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 17:39:56 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 17:39:56 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 17:39:56 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:39:56 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 17:39:56 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:39:56 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 17:39:56 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 17:39:56 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 17:39:56 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 17:39:56 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 17:39:56 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 17:39:56 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 17:39:56 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 17:39:56 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 17:39:56 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 17:39:56 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 17:39:56 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 17:39:56 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 17:39:56 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 17:39:56 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 17:39:56 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 17:39:56 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 17:39:56 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 17:39:56 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 17:39:56 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 17:39:56 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 17:39:56 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 17:39:56 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 17:39:56 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 17:39:56 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 17:39:56 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 17:39:56 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 17:39:56 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 17:39:56 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 17:39:56 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 17:39:56 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:39:56 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 17:39:56 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:39:56 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:39:56 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:39:56 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 17:39:56 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 17:39:56 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:39:56 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 17:39:56 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 17:39:56 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 17:39:56 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 17:39:56 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 17:39:56 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 17:39:56 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 17:39:56 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 17:39:56 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 17:39:56 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 17:39:56 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 17:39:56 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 17:39:56 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 17:39:56 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:39:56 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 17:39:56 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 17:39:56 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 17:39:56 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 17:39:56 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 17:39:56 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 17:39:56 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 17:39:56 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:39:56 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:39:56 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:39:56 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 17:39:56 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 17:39:56 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 17:39:56 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 17:39:56 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 17:39:56 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 17:39:56 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 17:39:56 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:39:56 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 17:39:56 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 17:39:56 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 17:39:56 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 17:39:56 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 17:39:56 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 17:39:56 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 17:39:56 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 17:39:56 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 17:39:56 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 17:39:56 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 17:39:56 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 17:39:56 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 17:39:56 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 17:39:56 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 17:39:56 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 17:39:56 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 17:39:56 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 17:39:56 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 17:39:56 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:39:56 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 17:39:56 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 17:39:56 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 17:39:56 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 17:39:56 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 17:39:56 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 17:39:56 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 17:39:56 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 17:39:56 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 17:39:56 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 17:39:56 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 17:39:56 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 17:39:56 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 17:39:56 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 17:39:56 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 17:39:56 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 17:39:56 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 17:39:56 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:39:56 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 17:39:56 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 17:39:56 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 17:39:56 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 17:39:56 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 17:39:56 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 17:39:56 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 17:39:56 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 17:39:56 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:39:56 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 17:39:56 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 17:39:56 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 17:39:56 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 17:39:56 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:39:56 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 17:39:56 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:39:56 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 17:39:56 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:39:56 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 17:39:56 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 17:39:56 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 17:39:56 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:39:56 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 17:39:56 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 17:39:56 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 17:39:56 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 17:39:57 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 17:39:57 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 17:39:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:39:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:39:42 CST 2019]; root of context hierarchy
2019-05-16 17:39:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:39:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:39:57 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:39:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 17:39:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 17:39:59 -Registering beans for JMX exposure on startup
2019-05-16 17:39:59 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 17:39:59 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 17:39:59 -Starting beans in phase 2147483647
2019-05-16 17:39:59 -Context refreshed
2019-05-16 17:39:59 -Found 1 custom documentation plugin(s)
2019-05-16 17:39:59 -Scanning for api listing references
2019-05-16 17:40:00 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 17:40:00 -Generating unique operation named: removeUsingPOST_1
2019-05-16 17:40:00 -Generating unique operation named: addUsingGET_1
2019-05-16 17:40:00 -Generating unique operation named: editUsingGET_1
2019-05-16 17:40:00 -Generating unique operation named: listUsingGET_1
2019-05-16 17:40:00 -Generating unique operation named: removeUsingPOST_2
2019-05-16 17:40:00 -Generating unique operation named: removeUsingPOST_3
2019-05-16 17:40:00 -Generating unique operation named: saveUsingPOST_1
2019-05-16 17:40:00 -Generating unique operation named: updateUsingGET_1
2019-05-16 17:40:00 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPOST_1
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPUT_1
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 17:40:00 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 17:40:00 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 17:40:00 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 17:40:00 -Generating unique operation named: addUsingGET_2
2019-05-16 17:40:00 -Generating unique operation named: editUsingGET_2
2019-05-16 17:40:00 -Generating unique operation named: listUsingGET_2
2019-05-16 17:40:00 -Generating unique operation named: removeUsingPOST_4
2019-05-16 17:40:00 -Generating unique operation named: removeUsingPOST_5
2019-05-16 17:40:00 -Generating unique operation named: saveUsingPOST_2
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPOST_2
2019-05-16 17:40:00 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 17:40:00 -Generating unique operation named: addUsingGET_3
2019-05-16 17:40:00 -Generating unique operation named: editUsingGET_3
2019-05-16 17:40:00 -Generating unique operation named: listUsingGET_3
2019-05-16 17:40:00 -Generating unique operation named: removeUsingPOST_6
2019-05-16 17:40:00 -Generating unique operation named: removeUsingPOST_7
2019-05-16 17:40:00 -Generating unique operation named: saveUsingPOST_3
2019-05-16 17:40:00 -Generating unique operation named: updateUsingGET_2
2019-05-16 17:40:00 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPOST_3
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPUT_2
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 17:40:00 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 17:40:00 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 17:40:00 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 17:40:00 -Generating unique operation named: addUsingGET_4
2019-05-16 17:40:00 -Generating unique operation named: editUsingGET_4
2019-05-16 17:40:00 -Generating unique operation named: listUsingGET_4
2019-05-16 17:40:00 -Generating unique operation named: removeUsingPOST_8
2019-05-16 17:40:00 -Generating unique operation named: removeUsingPOST_9
2019-05-16 17:40:00 -Generating unique operation named: saveUsingPOST_4
2019-05-16 17:40:00 -Generating unique operation named: updateUsingGET_3
2019-05-16 17:40:00 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPOST_4
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPUT_3
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 17:40:00 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 17:40:00 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 17:40:00 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 17:40:00 -Generating unique operation named: ElecUsingGET_1
2019-05-16 17:40:00 -Generating unique operation named: addUsingGET_5
2019-05-16 17:40:00 -Generating unique operation named: editUsingGET_5
2019-05-16 17:40:00 -Generating unique operation named: listUsingGET_5
2019-05-16 17:40:00 -Generating unique operation named: removeUsingPOST_10
2019-05-16 17:40:00 -Generating unique operation named: removeUsingPOST_11
2019-05-16 17:40:00 -Generating unique operation named: saveUsingPOST_5
2019-05-16 17:40:00 -Generating unique operation named: updateUsingGET_4
2019-05-16 17:40:00 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPOST_5
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPUT_4
2019-05-16 17:40:00 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 17:40:00 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 17:40:00 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 17:40:00 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 17:40:00 -Generating unique operation named: editUsingGET_6
2019-05-16 17:40:01 -Generating unique operation named: listUsingGET_6
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPOST_6
2019-05-16 17:40:01 -Generating unique operation named: addUsingGET_6
2019-05-16 17:40:01 -Generating unique operation named: editUsingGET_7
2019-05-16 17:40:01 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 17:40:01 -Generating unique operation named: listUsingGET_7
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_12
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_13
2019-05-16 17:40:01 -Generating unique operation named: saveUsingPOST_6
2019-05-16 17:40:01 -Generating unique operation named: updateUsingGET_5
2019-05-16 17:40:01 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPOST_7
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPUT_5
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 17:40:01 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 17:40:01 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 17:40:01 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 17:40:01 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 17:40:01 -Generating unique operation named: addUsingGET_7
2019-05-16 17:40:01 -Generating unique operation named: editUsingGET_8
2019-05-16 17:40:01 -Generating unique operation named: listUsingGET_8
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_14
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_15
2019-05-16 17:40:01 -Generating unique operation named: saveUsingPOST_7
2019-05-16 17:40:01 -Generating unique operation named: updateUsingGET_6
2019-05-16 17:40:01 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPOST_8
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPUT_6
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 17:40:01 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 17:40:01 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 17:40:01 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 17:40:01 -Generating unique operation named: addUsingGET_8
2019-05-16 17:40:01 -Generating unique operation named: editUsingGET_9
2019-05-16 17:40:01 -Generating unique operation named: listUsingGET_9
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_16
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_17
2019-05-16 17:40:01 -Generating unique operation named: saveUsingPOST_8
2019-05-16 17:40:01 -Generating unique operation named: updateUsingGET_7
2019-05-16 17:40:01 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPOST_9
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPUT_7
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 17:40:01 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 17:40:01 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 17:40:01 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 17:40:01 -Generating unique operation named: addUsingGET_9
2019-05-16 17:40:01 -Generating unique operation named: editUsingGET_10
2019-05-16 17:40:01 -Generating unique operation named: infoUsingGET_1
2019-05-16 17:40:01 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 17:40:01 -Generating unique operation named: infoUsingPOST_1
2019-05-16 17:40:01 -Generating unique operation named: infoUsingPUT_1
2019-05-16 17:40:01 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 17:40:01 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 17:40:01 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 17:40:01 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 17:40:01 -Generating unique operation named: listUsingGET_10
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_18
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_19
2019-05-16 17:40:01 -Generating unique operation named: saveUsingPOST_9
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPOST_10
2019-05-16 17:40:01 -Generating unique operation named: listUsingGET_11
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_20
2019-05-16 17:40:01 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 17:40:01 -Generating unique operation named: addUsingGET_10
2019-05-16 17:40:01 -Generating unique operation named: editUsingGET_11
2019-05-16 17:40:01 -Generating unique operation named: listUsingGET_12
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_21
2019-05-16 17:40:01 -Generating unique operation named: saveUsingPOST_10
2019-05-16 17:40:01 -Generating unique operation named: treeUsingGET_1
2019-05-16 17:40:01 -Generating unique operation named: treeUsingGET_2
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPOST_11
2019-05-16 17:40:01 -Generating unique operation named: addUsingGET_11
2019-05-16 17:40:01 -Generating unique operation named: editUsingGET_12
2019-05-16 17:40:01 -Generating unique operation named: listUsingGET_13
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_22
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_23
2019-05-16 17:40:01 -Generating unique operation named: saveUsingPOST_11
2019-05-16 17:40:01 -Generating unique operation named: updateUsingGET_8
2019-05-16 17:40:01 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPOST_12
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPUT_8
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 17:40:01 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 17:40:01 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 17:40:01 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 17:40:01 -Generating unique operation named: addUsingGET_12
2019-05-16 17:40:01 -Generating unique operation named: editUsingGET_13
2019-05-16 17:40:01 -Generating unique operation named: listUsingGET_14
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_24
2019-05-16 17:40:01 -Generating unique operation named: removeUsingPOST_25
2019-05-16 17:40:01 -Generating unique operation named: saveUsingPOST_12
2019-05-16 17:40:01 -Generating unique operation named: updateUsingGET_9
2019-05-16 17:40:01 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPOST_13
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPUT_9
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 17:40:01 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 17:40:01 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 17:40:01 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 17:40:01 -Generating unique operation named: addUsingGET_13
2019-05-16 17:40:01 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 17:40:01 -Generating unique operation named: editUsingGET_14
2019-05-16 17:40:01 -Generating unique operation named: listUsingGET_15
2019-05-16 17:40:01 -Generating unique operation named: saveUsingPOST_13
2019-05-16 17:40:01 -Generating unique operation named: saveUsingPOST_14
2019-05-16 17:40:01 -Generating unique operation named: updateUsingPOST_14
2019-05-16 17:40:01 -Generating unique operation named: listUsingGET_16
2019-05-16 17:40:01 -Generating unique operation named: listUsingHEAD_1
2019-05-16 17:40:01 -Generating unique operation named: listUsingPOST_1
2019-05-16 17:40:01 -Generating unique operation named: listUsingPUT_1
2019-05-16 17:40:01 -Generating unique operation named: listUsingPATCH_1
2019-05-16 17:40:01 -Generating unique operation named: listUsingDELETE_1
2019-05-16 17:40:01 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 17:40:01 -Generating unique operation named: listUsingTRACE_1
2019-05-16 17:40:01 -Generating unique operation named: countDDUsingGET_1
2019-05-16 17:40:01 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 17:40:01 -Generating unique operation named: addUsingGET_14
2019-05-16 17:40:01 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 17:40:01 -Generating unique operation named: editUsingGET_15
2019-05-16 17:40:02 -Generating unique operation named: listUsingGET_17
2019-05-16 17:40:02 -Generating unique operation named: removeUsingPOST_26
2019-05-16 17:40:02 -Generating unique operation named: saveUsingPOST_15
2019-05-16 17:40:02 -Generating unique operation named: treeUsingGET_3
2019-05-16 17:40:02 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 17:40:02 -Generating unique operation named: updateUsingPOST_15
2019-05-16 17:40:02 -Generating unique operation named: addUsingGET_15
2019-05-16 17:40:02 -Generating unique operation named: editUsingGET_16
2019-05-16 17:40:02 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 17:40:02 -Generating unique operation named: listUsingGET_18
2019-05-16 17:40:02 -Generating unique operation named: removeUsingPOST_27
2019-05-16 17:40:02 -Generating unique operation named: removeUsingPOST_28
2019-05-16 17:40:02 -Generating unique operation named: saveUsingPOST_16
2019-05-16 17:40:02 -Generating unique operation named: updateUsingGET_10
2019-05-16 17:40:02 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 17:40:02 -Generating unique operation named: updateUsingPOST_16
2019-05-16 17:40:02 -Generating unique operation named: updateUsingPUT_10
2019-05-16 17:40:02 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 17:40:02 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 17:40:02 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 17:40:02 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 17:40:02 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 17:40:02 -Generating unique operation named: addUsingGET_16
2019-05-16 17:40:02 -Generating unique operation named: editUsingGET_17
2019-05-16 17:40:02 -Generating unique operation named: listUsingGET_19
2019-05-16 17:40:02 -Generating unique operation named: removeUsingPOST_29
2019-05-16 17:40:02 -Generating unique operation named: removeUsingPOST_30
2019-05-16 17:40:02 -Generating unique operation named: saveUsingPOST_17
2019-05-16 17:40:02 -Generating unique operation named: updateUsingGET_11
2019-05-16 17:40:02 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 17:40:02 -Generating unique operation named: updateUsingPOST_17
2019-05-16 17:40:02 -Generating unique operation named: updateUsingPUT_11
2019-05-16 17:40:02 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 17:40:02 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 17:40:02 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 17:40:02 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 17:40:02 -Generating unique operation named: addUsingGET_17
2019-05-16 17:40:02 -Generating unique operation named: editUsingGET_18
2019-05-16 17:40:02 -Generating unique operation named: listUsingGET_20
2019-05-16 17:40:02 -Generating unique operation named: removeUsingPOST_31
2019-05-16 17:40:02 -Generating unique operation named: removeUsingPOST_32
2019-05-16 17:40:02 -Generating unique operation named: saveUsingPOST_18
2019-05-16 17:40:02 -Generating unique operation named: updateUsingGET_12
2019-05-16 17:40:02 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 17:40:02 -Generating unique operation named: updateUsingPOST_18
2019-05-16 17:40:02 -Generating unique operation named: updateUsingPUT_12
2019-05-16 17:40:02 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 17:40:02 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 17:40:02 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 17:40:02 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 17:40:02 -Starting Quartz Scheduler now
2019-05-16 17:40:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 17:40:02 -Starting...
2019-05-16 17:40:02 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 17:40:02 -Started.
2019-05-16 17:40:02 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 17:40:02 -Using a shared selector for servlet write/read
2019-05-16 17:40:02 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 17:40:02 -Started BootdoApplication in 21.112 seconds (JVM running for 21.806)
2019-05-16 17:40:02 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 17:40:02 -==> Parameters: 
2019-05-16 17:40:02 -<==      Total: 1
2019-05-16 17:40:57 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-16 17:45:17 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 17:45:17 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 17:45:17 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-05-16 17:45:17 -Enabling session validation scheduler...
2019-05-16 17:45:17 -请求地址 : http://localhost:8081/login;JSESSIONID=54b79616-b5aa-4ee3-bfad-a19220b782d9
2019-05-16 17:45:17 -HTTP METHOD : GET
2019-05-16 17:45:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 17:45:17 -参数 : [{}]
2019-05-16 17:45:17 -耗时 : 3
2019-05-16 17:45:17 -返回值 : login
2019-05-16 17:45:18 -请求地址 : http://localhost:8081/getVerify
2019-05-16 17:45:18 -HTTP METHOD : GET
2019-05-16 17:45:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 17:45:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7359b246, org.apache.shiro.web.servlet.ShiroHttpServletResponse@55de7cc9]
2019-05-16 17:45:19 -7230
2019-05-16 17:45:19 -耗时 : 650
2019-05-16 17:45:19 -返回值 : null
2019-05-16 17:45:19 -请求地址 : http://localhost:8081/login
2019-05-16 17:45:19 -HTTP METHOD : GET
2019-05-16 17:45:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 17:45:19 -参数 : [{}]
2019-05-16 17:45:19 -耗时 : 0
2019-05-16 17:45:19 -返回值 : login
2019-05-16 17:45:25 -请求地址 : http://localhost:8081/login
2019-05-16 17:45:25 -HTTP METHOD : POST
2019-05-16 17:45:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 17:45:25 -参数 : [admin, 111111, 7230, org.apache.shiro.web.servlet.ShiroHttpServletRequest@11e242e4]
2019-05-16 17:45:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 17:45:25 -==> Parameters: admin(String)
2019-05-16 17:45:25 -<==      Total: 1
2019-05-16 17:45:25 -耗时 : 85
2019-05-16 17:45:25 -返回值 : {msg=操作成功, code=0}
2019-05-16 17:45:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 17:45:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:45:25 -==> Parameters: 1(Long), admin(String), 登录(String), 86(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 17:45:25.505(Timestamp)
2019-05-16 17:45:25 -<==    Updates: 1
2019-05-16 17:45:25 -请求地址 : http://localhost:8081/index
2019-05-16 17:45:25 -HTTP METHOD : GET
2019-05-16 17:45:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 17:45:25 -参数 : [{}]
2019-05-16 17:45:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 17:45:25 -==> Parameters: 1(Long)
2019-05-16 17:45:25 -<==      Total: 49
2019-05-16 17:45:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 17:45:25 -==> Parameters: 138(Long)
2019-05-16 17:45:25 -<==      Total: 1
2019-05-16 17:45:25 -耗时 : 138
2019-05-16 17:45:25 -返回值 : index_v1
2019-05-16 17:45:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:45:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 139(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 17:45:25.836(Timestamp)
2019-05-16 17:45:26 -请求地址 : http://localhost:8081/main
2019-05-16 17:45:26 -HTTP METHOD : GET
2019-05-16 17:45:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:45:26 -参数 : []
2019-05-16 17:45:26 -耗时 : 0
2019-05-16 17:45:26 -返回值 : main
2019-05-16 17:45:26 -<==    Updates: 1
2019-05-16 17:45:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 17:45:26 -HTTP METHOD : GET
2019-05-16 17:45:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 17:45:26 -参数 : []
2019-05-16 17:45:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 17:45:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 17:45:26 -<==      Total: 0
2019-05-16 17:45:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 17:45:26 -==> Parameters: 1(Long), 0(String)
2019-05-16 17:45:26 -<==      Total: 1
2019-05-16 17:45:26 -耗时 : 38
2019-05-16 17:45:26 -返回值 : com.bootdo.common.utils.PageUtils@1fc52c7b
2019-05-16 17:45:26 -请求地址 : http://localhost:8081/main
2019-05-16 17:45:26 -HTTP METHOD : GET
2019-05-16 17:45:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:45:26 -参数 : []
2019-05-16 17:45:26 -耗时 : 1
2019-05-16 17:45:26 -返回值 : main
2019-05-16 17:45:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 17:45:32 -==> Parameters: 1(Long)
2019-05-16 17:45:32 -<==      Total: 93
2019-05-16 17:45:32 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 17:45:32 -HTTP METHOD : GET
2019-05-16 17:45:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:45:32 -参数 : []
2019-05-16 17:45:32 -耗时 : 9
2019-05-16 17:45:32 -返回值 : charts/tableElecMM
2019-05-16 17:45:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:45:33 -HTTP METHOD : GET
2019-05-16 17:45:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:45:33 -参数 : [userType]
2019-05-16 17:45:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:45:33 -==> Parameters: userType(String)
2019-05-16 17:45:33 -<==      Total: 4
2019-05-16 17:45:33 -耗时 : 27
2019-05-16 17:45:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:45:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 17:45:46 -HTTP METHOD : GET
2019-05-16 17:45:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 17:45:46 -参数 : []
2019-05-16 17:45:46 -耗时 : 1
2019-05-16 17:45:46 -返回值 : system/dept/deptTree
2019-05-16 17:45:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 17:45:47 -HTTP METHOD : GET
2019-05-16 17:45:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 17:45:47 -参数 : []
2019-05-16 17:45:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 17:45:47 -==> Parameters: 
2019-05-16 17:45:47 -<==      Total: 3
2019-05-16 17:45:47 -耗时 : 16
2019-05-16 17:45:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 17:45:55 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-16 17:45:55 -HTTP METHOD : GET
2019-05-16 17:45:55 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-16 17:45:55 -参数 : []
2019-05-16 17:45:55 -耗时 : 14
2019-05-16 17:45:55 -返回值 : charts/tableHeatMM
2019-05-16 17:45:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:45:55 -HTTP METHOD : GET
2019-05-16 17:45:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:45:55 -参数 : [userType]
2019-05-16 17:45:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:45:55 -==> Parameters: userType(String)
2019-05-16 17:45:55 -<==      Total: 4
2019-05-16 17:45:55 -耗时 : 5
2019-05-16 17:45:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:47:59 -请求地址 : http://localhost:8081/index
2019-05-16 17:47:59 -HTTP METHOD : GET
2019-05-16 17:47:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 17:47:59 -参数 : [{}]
2019-05-16 17:47:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 17:47:59 -==> Parameters: 1(Long)
2019-05-16 17:47:59 -<==      Total: 49
2019-05-16 17:47:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 17:47:59 -==> Parameters: 138(Long)
2019-05-16 17:47:59 -<==      Total: 1
2019-05-16 17:47:59 -耗时 : 30
2019-05-16 17:47:59 -返回值 : index_v1
2019-05-16 17:47:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:47:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 17:47:59.538(Timestamp)
2019-05-16 17:47:59 -请求地址 : http://localhost:8081/main
2019-05-16 17:47:59 -HTTP METHOD : GET
2019-05-16 17:47:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:47:59 -参数 : []
2019-05-16 17:47:59 -耗时 : 0
2019-05-16 17:47:59 -返回值 : main
2019-05-16 17:47:59 -<==    Updates: 1
2019-05-16 17:47:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 17:47:59 -HTTP METHOD : GET
2019-05-16 17:47:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 17:47:59 -参数 : []
2019-05-16 17:47:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 17:47:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 17:47:59 -<==      Total: 0
2019-05-16 17:47:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 17:47:59 -==> Parameters: 1(Long), 0(String)
2019-05-16 17:47:59 -<==      Total: 1
2019-05-16 17:47:59 -耗时 : 11
2019-05-16 17:47:59 -返回值 : com.bootdo.common.utils.PageUtils@31a1e959
2019-05-16 17:47:59 -请求地址 : http://localhost:8081/main
2019-05-16 17:47:59 -HTTP METHOD : GET
2019-05-16 17:47:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:47:59 -参数 : []
2019-05-16 17:47:59 -耗时 : 0
2019-05-16 17:47:59 -返回值 : main
2019-05-16 17:48:07 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 17:48:07 -HTTP METHOD : GET
2019-05-16 17:48:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:48:07 -参数 : []
2019-05-16 17:48:07 -耗时 : 0
2019-05-16 17:48:07 -返回值 : charts/tableElecMM
2019-05-16 17:48:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:48:07 -HTTP METHOD : GET
2019-05-16 17:48:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:48:07 -参数 : [userType]
2019-05-16 17:48:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:48:07 -==> Parameters: userType(String)
2019-05-16 17:48:07 -<==      Total: 4
2019-05-16 17:48:07 -耗时 : 5
2019-05-16 17:48:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:48:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 17:48:12 -HTTP METHOD : GET
2019-05-16 17:48:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 17:48:12 -参数 : []
2019-05-16 17:48:12 -耗时 : 1
2019-05-16 17:48:12 -返回值 : system/dept/deptTree
2019-05-16 17:48:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 17:48:13 -HTTP METHOD : GET
2019-05-16 17:48:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 17:48:13 -参数 : []
2019-05-16 17:48:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 17:48:13 -==> Parameters: 
2019-05-16 17:48:13 -<==      Total: 3
2019-05-16 17:48:13 -耗时 : 6
2019-05-16 17:48:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 17:48:15 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-16 17:48:15 -HTTP METHOD : POST
2019-05-16 17:48:15 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:48:15 -参数 : [com.bootdo.elec.vo.ElecVo@4d910b52, com.bootdo.moneyLog.vo.ElecLogVo@7453b9a1]
2019-05-16 17:48:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:48:15 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld(String), null, 2019-05-16 17:48:15.003(Timestamp)
2019-05-16 17:48:15 -Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy105.PreElecCountMMOld(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.PreElecCountMMOld(ElecServiceImpl.java:110)
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:58)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$e7281bb5.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-16 17:48:15 -<==    Updates: 1
2019-05-16 17:48:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 17:48:16 -HTTP METHOD : GET
2019-05-16 17:48:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 17:48:16 -参数 : []
2019-05-16 17:48:16 -耗时 : 1
2019-05-16 17:48:16 -返回值 : system/dept/deptTree
2019-05-16 17:48:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 17:48:17 -HTTP METHOD : GET
2019-05-16 17:48:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 17:48:17 -参数 : []
2019-05-16 17:48:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 17:48:17 -==> Parameters: 
2019-05-16 17:48:17 -<==      Total: 3
2019-05-16 17:48:17 -耗时 : 5
2019-05-16 17:48:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 17:48:21 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-16 17:48:21 -HTTP METHOD : POST
2019-05-16 17:48:21 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:48:21 -参数 : [com.bootdo.elec.vo.ElecVo@3f947709, com.bootdo.moneyLog.vo.ElecLogVo@774583be]
2019-05-16 17:48:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:48:21 -Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy105.PreElecCountMMOld(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.PreElecCountMMOld(ElecServiceImpl.java:110)
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:58)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$e7281bb5.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-16 17:48:21 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld(String), null, 2019-05-16 17:48:21.448(Timestamp)
2019-05-16 17:48:21 -<==    Updates: 1
2019-05-16 17:48:26 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-16 17:48:26 -HTTP METHOD : POST
2019-05-16 17:48:26 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:48:26 -参数 : [com.bootdo.elec.vo.ElecVo@59061646, com.bootdo.moneyLog.vo.ElecLogVo@611be2a7]
2019-05-16 17:48:26 -Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy105.PreElecCountMMOld(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.PreElecCountMMOld(ElecServiceImpl.java:110)
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:58)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$e7281bb5.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-16 17:48:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:48:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld(String), null, 2019-05-16 17:48:26.908(Timestamp)
2019-05-16 17:48:26 -<==    Updates: 1
2019-05-16 17:48:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 17:48:28 -HTTP METHOD : GET
2019-05-16 17:48:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 17:48:28 -参数 : []
2019-05-16 17:48:28 -耗时 : 0
2019-05-16 17:48:28 -返回值 : system/dept/deptTree
2019-05-16 17:48:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 17:48:28 -HTTP METHOD : GET
2019-05-16 17:48:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 17:48:28 -参数 : []
2019-05-16 17:48:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 17:48:28 -==> Parameters: 
2019-05-16 17:48:28 -<==      Total: 3
2019-05-16 17:48:28 -耗时 : 3
2019-05-16 17:48:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 17:48:30 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-16 17:48:30 -HTTP METHOD : POST
2019-05-16 17:48:30 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:48:30 -参数 : [com.bootdo.elec.vo.ElecVo@482ac14d, com.bootdo.moneyLog.vo.ElecLogVo@71ff0468]
2019-05-16 17:48:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:48:30 -Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy105.PreElecCountMMOld(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.PreElecCountMMOld(ElecServiceImpl.java:110)
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:58)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$e7281bb5.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-16 17:48:30 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.PreElecCountMMOld(String), null, 2019-05-16 17:48:30.812(Timestamp)
2019-05-16 17:48:30 -<==    Updates: 1
2019-05-16 17:55:26 -Starting BootdoApplication on PC-201905091110 with PID 20192 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 17:55:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 17:55:26 -The following profiles are active: dev
2019-05-16 17:55:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:55:26 CST 2019]; root of context hierarchy
2019-05-16 17:55:28 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 17:55:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb3b3035] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:55:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ad945edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:55:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:55:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:55:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:55:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 17:55:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 17:55:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:55:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:55:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:55:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:55:32 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 17:55:32 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 17:55:32 -Starting service [Tomcat]
2019-05-16 17:55:32 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 17:55:32 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 17:55:33 -Initializing Spring embedded WebApplicationContext
2019-05-16 17:55:33 -Root WebApplicationContext: initialization completed in 6837 ms
2019-05-16 17:55:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 17:55:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 17:55:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 17:55:33 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 17:55:33 -Filter xssFilter was not registered (disabled)
2019-05-16 17:55:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 17:55:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 17:55:33 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 17:55:33 -Servlet dispatcherServlet mapped to [/]
2019-05-16 17:55:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:55:26 CST 2019]; root of context hierarchy
2019-05-16 17:55:37 -Using default implementation for ThreadExecutor
2019-05-16 17:55:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 17:55:37 -Quartz Scheduler v.2.2.1 created.
2019-05-16 17:55:37 -RAMJobStore initialized.
2019-05-16 17:55:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 17:55:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 17:55:37 -Quartz scheduler version: 2.2.1
2019-05-16 17:55:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@221b77d7
2019-05-16 17:55:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 17:55:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 17:55:40 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 17:55:40 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:55:40 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:55:40 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 17:55:40 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 17:55:40 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 17:55:40 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 17:55:40 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:55:40 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:55:40 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 17:55:40 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:55:40 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 17:55:40 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 17:55:40 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 17:55:40 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 17:55:40 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 17:55:40 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:55:40 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 17:55:40 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:55:40 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 17:55:40 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 17:55:40 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 17:55:40 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 17:55:40 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 17:55:40 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 17:55:40 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 17:55:40 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 17:55:40 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 17:55:40 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 17:55:40 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 17:55:40 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 17:55:40 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 17:55:40 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 17:55:40 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 17:55:40 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 17:55:40 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 17:55:40 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 17:55:40 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 17:55:40 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 17:55:40 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 17:55:40 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 17:55:40 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 17:55:40 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 17:55:40 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 17:55:40 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 17:55:40 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 17:55:40 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 17:55:40 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 17:55:40 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 17:55:40 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:55:40 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 17:55:40 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:55:40 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 17:55:40 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:55:40 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:55:40 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 17:55:40 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:55:40 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 17:55:40 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 17:55:40 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 17:55:40 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 17:55:40 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 17:55:40 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 17:55:40 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 17:55:40 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 17:55:40 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 17:55:40 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 17:55:40 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 17:55:40 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 17:55:40 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 17:55:40 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:55:40 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 17:55:40 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 17:55:40 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 17:55:40 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 17:55:40 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 17:55:40 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 17:55:40 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 17:55:40 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 17:55:40 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:55:40 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:55:40 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 17:55:40 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 17:55:40 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 17:55:40 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 17:55:40 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 17:55:40 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:55:40 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 17:55:40 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 17:55:40 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 17:55:40 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 17:55:40 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 17:55:40 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 17:55:40 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 17:55:40 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 17:55:40 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 17:55:40 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 17:55:40 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 17:55:40 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 17:55:40 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 17:55:40 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 17:55:40 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 17:55:40 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 17:55:40 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 17:55:40 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 17:55:40 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 17:55:40 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 17:55:40 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:55:40 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 17:55:40 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 17:55:40 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 17:55:40 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 17:55:40 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 17:55:40 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 17:55:40 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 17:55:40 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 17:55:40 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 17:55:40 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 17:55:40 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 17:55:40 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 17:55:40 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 17:55:40 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 17:55:40 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 17:55:40 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 17:55:40 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:55:40 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 17:55:40 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 17:55:40 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 17:55:40 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 17:55:40 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 17:55:40 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 17:55:40 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 17:55:40 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 17:55:40 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 17:55:40 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:55:40 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 17:55:40 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 17:55:40 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 17:55:40 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 17:55:40 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:55:40 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 17:55:40 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 17:55:40 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:55:40 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 17:55:40 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:55:40 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 17:55:40 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 17:55:40 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:55:40 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 17:55:40 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 17:55:40 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 17:55:41 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 17:55:41 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 17:55:41 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 17:55:41 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:55:41 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 17:55:26 CST 2019]; root of context hierarchy
2019-05-16 17:55:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:55:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:55:42 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:55:42 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 17:55:42 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 17:55:43 -Registering beans for JMX exposure on startup
2019-05-16 17:55:43 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 17:55:43 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 17:55:43 -Starting beans in phase 2147483647
2019-05-16 17:55:43 -Context refreshed
2019-05-16 17:55:43 -Found 1 custom documentation plugin(s)
2019-05-16 17:55:43 -Scanning for api listing references
2019-05-16 17:55:44 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 17:55:44 -Generating unique operation named: removeUsingPOST_1
2019-05-16 17:55:44 -Generating unique operation named: addUsingGET_1
2019-05-16 17:55:44 -Generating unique operation named: editUsingGET_1
2019-05-16 17:55:44 -Generating unique operation named: listUsingGET_1
2019-05-16 17:55:44 -Generating unique operation named: removeUsingPOST_2
2019-05-16 17:55:44 -Generating unique operation named: removeUsingPOST_3
2019-05-16 17:55:44 -Generating unique operation named: saveUsingPOST_1
2019-05-16 17:55:44 -Generating unique operation named: updateUsingGET_1
2019-05-16 17:55:44 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 17:55:44 -Generating unique operation named: updateUsingPOST_1
2019-05-16 17:55:44 -Generating unique operation named: updateUsingPUT_1
2019-05-16 17:55:44 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 17:55:44 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 17:55:44 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 17:55:44 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 17:55:44 -Generating unique operation named: addUsingGET_2
2019-05-16 17:55:44 -Generating unique operation named: editUsingGET_2
2019-05-16 17:55:44 -Generating unique operation named: listUsingGET_2
2019-05-16 17:55:44 -Generating unique operation named: removeUsingPOST_4
2019-05-16 17:55:44 -Generating unique operation named: removeUsingPOST_5
2019-05-16 17:55:44 -Generating unique operation named: saveUsingPOST_2
2019-05-16 17:55:44 -Generating unique operation named: updateUsingPOST_2
2019-05-16 17:55:44 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 17:55:44 -Generating unique operation named: addUsingGET_3
2019-05-16 17:55:44 -Generating unique operation named: editUsingGET_3
2019-05-16 17:55:44 -Generating unique operation named: listUsingGET_3
2019-05-16 17:55:44 -Generating unique operation named: removeUsingPOST_6
2019-05-16 17:55:44 -Generating unique operation named: removeUsingPOST_7
2019-05-16 17:55:44 -Generating unique operation named: saveUsingPOST_3
2019-05-16 17:55:44 -Generating unique operation named: updateUsingGET_2
2019-05-16 17:55:44 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 17:55:44 -Generating unique operation named: updateUsingPOST_3
2019-05-16 17:55:44 -Generating unique operation named: updateUsingPUT_2
2019-05-16 17:55:44 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 17:55:44 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 17:55:44 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 17:55:44 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 17:55:44 -Generating unique operation named: addUsingGET_4
2019-05-16 17:55:44 -Generating unique operation named: editUsingGET_4
2019-05-16 17:55:44 -Generating unique operation named: listUsingGET_4
2019-05-16 17:55:44 -Generating unique operation named: removeUsingPOST_8
2019-05-16 17:55:44 -Generating unique operation named: removeUsingPOST_9
2019-05-16 17:55:44 -Generating unique operation named: saveUsingPOST_4
2019-05-16 17:55:44 -Generating unique operation named: updateUsingGET_3
2019-05-16 17:55:44 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 17:55:44 -Generating unique operation named: updateUsingPOST_4
2019-05-16 17:55:44 -Generating unique operation named: updateUsingPUT_3
2019-05-16 17:55:44 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 17:55:44 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 17:55:44 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 17:55:44 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 17:55:44 -Generating unique operation named: ElecUsingGET_1
2019-05-16 17:55:44 -Generating unique operation named: addUsingGET_5
2019-05-16 17:55:44 -Generating unique operation named: editUsingGET_5
2019-05-16 17:55:44 -Generating unique operation named: listUsingGET_5
2019-05-16 17:55:44 -Generating unique operation named: removeUsingPOST_10
2019-05-16 17:55:44 -Generating unique operation named: removeUsingPOST_11
2019-05-16 17:55:44 -Generating unique operation named: saveUsingPOST_5
2019-05-16 17:55:45 -Generating unique operation named: updateUsingGET_4
2019-05-16 17:55:45 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPOST_5
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPUT_4
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 17:55:45 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 17:55:45 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 17:55:45 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 17:55:45 -Generating unique operation named: editUsingGET_6
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_6
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPOST_6
2019-05-16 17:55:45 -Generating unique operation named: addUsingGET_6
2019-05-16 17:55:45 -Generating unique operation named: editUsingGET_7
2019-05-16 17:55:45 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_7
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_12
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_13
2019-05-16 17:55:45 -Generating unique operation named: saveUsingPOST_6
2019-05-16 17:55:45 -Generating unique operation named: updateUsingGET_5
2019-05-16 17:55:45 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPOST_7
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPUT_5
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 17:55:45 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 17:55:45 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 17:55:45 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 17:55:45 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 17:55:45 -Generating unique operation named: addUsingGET_7
2019-05-16 17:55:45 -Generating unique operation named: editUsingGET_8
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_8
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_14
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_15
2019-05-16 17:55:45 -Generating unique operation named: saveUsingPOST_7
2019-05-16 17:55:45 -Generating unique operation named: updateUsingGET_6
2019-05-16 17:55:45 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPOST_8
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPUT_6
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 17:55:45 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 17:55:45 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 17:55:45 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 17:55:45 -Generating unique operation named: addUsingGET_8
2019-05-16 17:55:45 -Generating unique operation named: editUsingGET_9
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_9
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_16
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_17
2019-05-16 17:55:45 -Generating unique operation named: saveUsingPOST_8
2019-05-16 17:55:45 -Generating unique operation named: updateUsingGET_7
2019-05-16 17:55:45 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPOST_9
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPUT_7
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 17:55:45 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 17:55:45 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 17:55:45 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 17:55:45 -Generating unique operation named: addUsingGET_9
2019-05-16 17:55:45 -Generating unique operation named: editUsingGET_10
2019-05-16 17:55:45 -Generating unique operation named: infoUsingGET_1
2019-05-16 17:55:45 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 17:55:45 -Generating unique operation named: infoUsingPOST_1
2019-05-16 17:55:45 -Generating unique operation named: infoUsingPUT_1
2019-05-16 17:55:45 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 17:55:45 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 17:55:45 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 17:55:45 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_10
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_18
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_19
2019-05-16 17:55:45 -Generating unique operation named: saveUsingPOST_9
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPOST_10
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_11
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_20
2019-05-16 17:55:45 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 17:55:45 -Generating unique operation named: addUsingGET_10
2019-05-16 17:55:45 -Generating unique operation named: editUsingGET_11
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_12
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_21
2019-05-16 17:55:45 -Generating unique operation named: saveUsingPOST_10
2019-05-16 17:55:45 -Generating unique operation named: treeUsingGET_1
2019-05-16 17:55:45 -Generating unique operation named: treeUsingGET_2
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPOST_11
2019-05-16 17:55:45 -Generating unique operation named: addUsingGET_11
2019-05-16 17:55:45 -Generating unique operation named: editUsingGET_12
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_13
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_22
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_23
2019-05-16 17:55:45 -Generating unique operation named: saveUsingPOST_11
2019-05-16 17:55:45 -Generating unique operation named: updateUsingGET_8
2019-05-16 17:55:45 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPOST_12
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPUT_8
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 17:55:45 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 17:55:45 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 17:55:45 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 17:55:45 -Generating unique operation named: addUsingGET_12
2019-05-16 17:55:45 -Generating unique operation named: editUsingGET_13
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_14
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_24
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_25
2019-05-16 17:55:45 -Generating unique operation named: saveUsingPOST_12
2019-05-16 17:55:45 -Generating unique operation named: updateUsingGET_9
2019-05-16 17:55:45 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPOST_13
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPUT_9
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 17:55:45 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 17:55:45 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 17:55:45 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 17:55:45 -Generating unique operation named: addUsingGET_13
2019-05-16 17:55:45 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 17:55:45 -Generating unique operation named: editUsingGET_14
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_15
2019-05-16 17:55:45 -Generating unique operation named: saveUsingPOST_13
2019-05-16 17:55:45 -Generating unique operation named: saveUsingPOST_14
2019-05-16 17:55:45 -Generating unique operation named: updateUsingPOST_14
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_16
2019-05-16 17:55:45 -Generating unique operation named: listUsingHEAD_1
2019-05-16 17:55:45 -Generating unique operation named: listUsingPOST_1
2019-05-16 17:55:45 -Generating unique operation named: listUsingPUT_1
2019-05-16 17:55:45 -Generating unique operation named: listUsingPATCH_1
2019-05-16 17:55:45 -Generating unique operation named: listUsingDELETE_1
2019-05-16 17:55:45 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 17:55:45 -Generating unique operation named: listUsingTRACE_1
2019-05-16 17:55:45 -Generating unique operation named: countDDUsingGET_1
2019-05-16 17:55:45 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 17:55:45 -Generating unique operation named: addUsingGET_14
2019-05-16 17:55:45 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 17:55:45 -Generating unique operation named: editUsingGET_15
2019-05-16 17:55:45 -Generating unique operation named: listUsingGET_17
2019-05-16 17:55:45 -Generating unique operation named: removeUsingPOST_26
2019-05-16 17:55:46 -Generating unique operation named: saveUsingPOST_15
2019-05-16 17:55:46 -Generating unique operation named: treeUsingGET_3
2019-05-16 17:55:46 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 17:55:46 -Generating unique operation named: updateUsingPOST_15
2019-05-16 17:55:46 -Generating unique operation named: addUsingGET_15
2019-05-16 17:55:46 -Generating unique operation named: editUsingGET_16
2019-05-16 17:55:46 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 17:55:46 -Generating unique operation named: listUsingGET_18
2019-05-16 17:55:46 -Generating unique operation named: removeUsingPOST_27
2019-05-16 17:55:46 -Generating unique operation named: removeUsingPOST_28
2019-05-16 17:55:46 -Generating unique operation named: saveUsingPOST_16
2019-05-16 17:55:46 -Generating unique operation named: updateUsingGET_10
2019-05-16 17:55:46 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 17:55:46 -Generating unique operation named: updateUsingPOST_16
2019-05-16 17:55:46 -Generating unique operation named: updateUsingPUT_10
2019-05-16 17:55:46 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 17:55:46 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 17:55:46 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 17:55:46 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 17:55:46 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 17:55:46 -Generating unique operation named: addUsingGET_16
2019-05-16 17:55:46 -Generating unique operation named: editUsingGET_17
2019-05-16 17:55:46 -Generating unique operation named: listUsingGET_19
2019-05-16 17:55:46 -Generating unique operation named: removeUsingPOST_29
2019-05-16 17:55:46 -Generating unique operation named: removeUsingPOST_30
2019-05-16 17:55:46 -Generating unique operation named: saveUsingPOST_17
2019-05-16 17:55:46 -Generating unique operation named: updateUsingGET_11
2019-05-16 17:55:46 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 17:55:46 -Generating unique operation named: updateUsingPOST_17
2019-05-16 17:55:46 -Generating unique operation named: updateUsingPUT_11
2019-05-16 17:55:46 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 17:55:46 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 17:55:46 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 17:55:46 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 17:55:46 -Generating unique operation named: addUsingGET_17
2019-05-16 17:55:46 -Generating unique operation named: editUsingGET_18
2019-05-16 17:55:46 -Generating unique operation named: listUsingGET_20
2019-05-16 17:55:46 -Generating unique operation named: removeUsingPOST_31
2019-05-16 17:55:46 -Generating unique operation named: removeUsingPOST_32
2019-05-16 17:55:46 -Generating unique operation named: saveUsingPOST_18
2019-05-16 17:55:46 -Generating unique operation named: updateUsingGET_12
2019-05-16 17:55:46 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 17:55:46 -Generating unique operation named: updateUsingPOST_18
2019-05-16 17:55:46 -Generating unique operation named: updateUsingPUT_12
2019-05-16 17:55:46 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 17:55:46 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 17:55:46 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 17:55:46 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 17:55:46 -Starting Quartz Scheduler now
2019-05-16 17:55:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 17:55:46 -Starting...
2019-05-16 17:55:46 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 17:55:46 -Started.
2019-05-16 17:55:46 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 17:55:46 -Using a shared selector for servlet write/read
2019-05-16 17:55:46 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 17:55:46 -Started BootdoApplication in 21.41 seconds (JVM running for 22.087)
2019-05-16 17:56:47 -Starting BootdoApplication on PC-201905091110 with PID 7620 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 17:56:47 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 17:56:47 -The following profiles are active: dev
2019-05-16 17:56:47 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 17:56:47 CST 2019]; root of context hierarchy
2019-05-16 17:56:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 17:56:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$76957a4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:56:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$68eea8f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:56:52 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:56:52 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:56:52 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:56:52 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 17:56:52 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 17:56:52 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:56:52 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:56:53 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:56:53 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 17:56:53 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 17:56:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 17:56:53 -Starting service [Tomcat]
2019-05-16 17:56:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 17:56:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 17:56:54 -Initializing Spring embedded WebApplicationContext
2019-05-16 17:56:54 -Root WebApplicationContext: initialization completed in 6664 ms
2019-05-16 17:56:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 17:56:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 17:56:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 17:56:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 17:56:54 -Filter xssFilter was not registered (disabled)
2019-05-16 17:56:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 17:56:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 17:56:54 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 17:56:54 -Servlet dispatcherServlet mapped to [/]
2019-05-16 17:56:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 17:56:47 CST 2019]; root of context hierarchy
2019-05-16 17:56:58 -Using default implementation for ThreadExecutor
2019-05-16 17:56:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 17:56:58 -Quartz Scheduler v.2.2.1 created.
2019-05-16 17:56:58 -RAMJobStore initialized.
2019-05-16 17:56:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 17:56:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 17:56:58 -Quartz scheduler version: 2.2.1
2019-05-16 17:56:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@54c11750
2019-05-16 17:56:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 17:56:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 17:57:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 17:57:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:57:01 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:57:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 17:57:01 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 17:57:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 17:57:01 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 17:57:01 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:57:01 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 17:57:01 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:57:01 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:57:01 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 17:57:01 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 17:57:01 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 17:57:01 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 17:57:01 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 17:57:01 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:57:01 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 17:57:01 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 17:57:01 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 17:57:01 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 17:57:01 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 17:57:01 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 17:57:01 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 17:57:01 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 17:57:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 17:57:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 17:57:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 17:57:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 17:57:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 17:57:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 17:57:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 17:57:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 17:57:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 17:57:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 17:57:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 17:57:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 17:57:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 17:57:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 17:57:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 17:57:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 17:57:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 17:57:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 17:57:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 17:57:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 17:57:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 17:57:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 17:57:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 17:57:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 17:57:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:57:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 17:57:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:57:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 17:57:01 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:57:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 17:57:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:57:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 17:57:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 17:57:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 17:57:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 17:57:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 17:57:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 17:57:01 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 17:57:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 17:57:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 17:57:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 17:57:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 17:57:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 17:57:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 17:57:01 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:57:01 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 17:57:01 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 17:57:01 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 17:57:01 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 17:57:01 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 17:57:01 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 17:57:01 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 17:57:01 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 17:57:01 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:57:01 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:57:01 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 17:57:01 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 17:57:01 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 17:57:01 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 17:57:01 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 17:57:01 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 17:57:01 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 17:57:01 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 17:57:01 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 17:57:01 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 17:57:01 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 17:57:01 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 17:57:01 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 17:57:01 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 17:57:01 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 17:57:01 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 17:57:01 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 17:57:01 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 17:57:01 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 17:57:01 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 17:57:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 17:57:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 17:57:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 17:57:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 17:57:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 17:57:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 17:57:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 17:57:01 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:57:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 17:57:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 17:57:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 17:57:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 17:57:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 17:57:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 17:57:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 17:57:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 17:57:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 17:57:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 17:57:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 17:57:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 17:57:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 17:57:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 17:57:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 17:57:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 17:57:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:57:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 17:57:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 17:57:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 17:57:01 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 17:57:01 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 17:57:01 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 17:57:01 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 17:57:01 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 17:57:01 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 17:57:01 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 17:57:01 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 17:57:01 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 17:57:01 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 17:57:01 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 17:57:01 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 17:57:01 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 17:57:01 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 17:57:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 17:57:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 17:57:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 17:57:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 17:57:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 17:57:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 17:57:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 17:57:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 17:57:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 17:57:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 17:57:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 17:57:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 17:57:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:57:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 17:56:47 CST 2019]; root of context hierarchy
2019-05-16 17:57:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:57:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:57:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 17:57:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 17:57:02 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 17:57:04 -Registering beans for JMX exposure on startup
2019-05-16 17:57:04 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 17:57:04 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 17:57:04 -Starting beans in phase 2147483647
2019-05-16 17:57:04 -Context refreshed
2019-05-16 17:57:04 -Found 1 custom documentation plugin(s)
2019-05-16 17:57:04 -Scanning for api listing references
2019-05-16 17:57:05 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_1
2019-05-16 17:57:05 -Generating unique operation named: addUsingGET_1
2019-05-16 17:57:05 -Generating unique operation named: editUsingGET_1
2019-05-16 17:57:05 -Generating unique operation named: listUsingGET_1
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_2
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_3
2019-05-16 17:57:05 -Generating unique operation named: saveUsingPOST_1
2019-05-16 17:57:05 -Generating unique operation named: updateUsingGET_1
2019-05-16 17:57:05 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPOST_1
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPUT_1
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 17:57:05 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 17:57:05 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 17:57:05 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 17:57:05 -Generating unique operation named: addUsingGET_2
2019-05-16 17:57:05 -Generating unique operation named: editUsingGET_2
2019-05-16 17:57:05 -Generating unique operation named: listUsingGET_2
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_4
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_5
2019-05-16 17:57:05 -Generating unique operation named: saveUsingPOST_2
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPOST_2
2019-05-16 17:57:05 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 17:57:05 -Generating unique operation named: addUsingGET_3
2019-05-16 17:57:05 -Generating unique operation named: editUsingGET_3
2019-05-16 17:57:05 -Generating unique operation named: listUsingGET_3
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_6
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_7
2019-05-16 17:57:05 -Generating unique operation named: saveUsingPOST_3
2019-05-16 17:57:05 -Generating unique operation named: updateUsingGET_2
2019-05-16 17:57:05 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPOST_3
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPUT_2
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 17:57:05 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 17:57:05 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 17:57:05 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 17:57:05 -Generating unique operation named: addUsingGET_4
2019-05-16 17:57:05 -Generating unique operation named: editUsingGET_4
2019-05-16 17:57:05 -Generating unique operation named: listUsingGET_4
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_8
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_9
2019-05-16 17:57:05 -Generating unique operation named: saveUsingPOST_4
2019-05-16 17:57:05 -Generating unique operation named: updateUsingGET_3
2019-05-16 17:57:05 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPOST_4
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPUT_3
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 17:57:05 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 17:57:05 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 17:57:05 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 17:57:05 -Generating unique operation named: ElecUsingGET_1
2019-05-16 17:57:05 -Generating unique operation named: addUsingGET_5
2019-05-16 17:57:05 -Generating unique operation named: editUsingGET_5
2019-05-16 17:57:05 -Generating unique operation named: listUsingGET_5
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_10
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_11
2019-05-16 17:57:05 -Generating unique operation named: saveUsingPOST_5
2019-05-16 17:57:05 -Generating unique operation named: updateUsingGET_4
2019-05-16 17:57:05 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPOST_5
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPUT_4
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 17:57:05 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 17:57:05 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 17:57:05 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 17:57:05 -Generating unique operation named: editUsingGET_6
2019-05-16 17:57:05 -Generating unique operation named: listUsingGET_6
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPOST_6
2019-05-16 17:57:05 -Generating unique operation named: addUsingGET_6
2019-05-16 17:57:05 -Generating unique operation named: editUsingGET_7
2019-05-16 17:57:05 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 17:57:05 -Generating unique operation named: listUsingGET_7
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_12
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_13
2019-05-16 17:57:05 -Generating unique operation named: saveUsingPOST_6
2019-05-16 17:57:05 -Generating unique operation named: updateUsingGET_5
2019-05-16 17:57:05 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPOST_7
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPUT_5
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 17:57:05 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 17:57:05 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 17:57:05 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 17:57:05 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 17:57:05 -Generating unique operation named: addUsingGET_7
2019-05-16 17:57:05 -Generating unique operation named: editUsingGET_8
2019-05-16 17:57:05 -Generating unique operation named: listUsingGET_8
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_14
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_15
2019-05-16 17:57:05 -Generating unique operation named: saveUsingPOST_7
2019-05-16 17:57:05 -Generating unique operation named: updateUsingGET_6
2019-05-16 17:57:05 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPOST_8
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPUT_6
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 17:57:05 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 17:57:05 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 17:57:05 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 17:57:05 -Generating unique operation named: addUsingGET_8
2019-05-16 17:57:05 -Generating unique operation named: editUsingGET_9
2019-05-16 17:57:05 -Generating unique operation named: listUsingGET_9
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_16
2019-05-16 17:57:05 -Generating unique operation named: removeUsingPOST_17
2019-05-16 17:57:05 -Generating unique operation named: saveUsingPOST_8
2019-05-16 17:57:05 -Generating unique operation named: updateUsingGET_7
2019-05-16 17:57:05 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPOST_9
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPUT_7
2019-05-16 17:57:05 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 17:57:05 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 17:57:05 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 17:57:05 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 17:57:05 -Generating unique operation named: addUsingGET_9
2019-05-16 17:57:05 -Generating unique operation named: editUsingGET_10
2019-05-16 17:57:05 -Generating unique operation named: infoUsingGET_1
2019-05-16 17:57:05 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 17:57:05 -Generating unique operation named: infoUsingPOST_1
2019-05-16 17:57:05 -Generating unique operation named: infoUsingPUT_1
2019-05-16 17:57:06 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 17:57:06 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 17:57:06 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 17:57:06 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 17:57:06 -Generating unique operation named: listUsingGET_10
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_18
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_19
2019-05-16 17:57:06 -Generating unique operation named: saveUsingPOST_9
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPOST_10
2019-05-16 17:57:06 -Generating unique operation named: listUsingGET_11
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_20
2019-05-16 17:57:06 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 17:57:06 -Generating unique operation named: addUsingGET_10
2019-05-16 17:57:06 -Generating unique operation named: editUsingGET_11
2019-05-16 17:57:06 -Generating unique operation named: listUsingGET_12
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_21
2019-05-16 17:57:06 -Generating unique operation named: saveUsingPOST_10
2019-05-16 17:57:06 -Generating unique operation named: treeUsingGET_1
2019-05-16 17:57:06 -Generating unique operation named: treeUsingGET_2
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPOST_11
2019-05-16 17:57:06 -Generating unique operation named: addUsingGET_11
2019-05-16 17:57:06 -Generating unique operation named: editUsingGET_12
2019-05-16 17:57:06 -Generating unique operation named: listUsingGET_13
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_22
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_23
2019-05-16 17:57:06 -Generating unique operation named: saveUsingPOST_11
2019-05-16 17:57:06 -Generating unique operation named: updateUsingGET_8
2019-05-16 17:57:06 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPOST_12
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPUT_8
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 17:57:06 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 17:57:06 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 17:57:06 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 17:57:06 -Generating unique operation named: addUsingGET_12
2019-05-16 17:57:06 -Generating unique operation named: editUsingGET_13
2019-05-16 17:57:06 -Generating unique operation named: listUsingGET_14
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_24
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_25
2019-05-16 17:57:06 -Generating unique operation named: saveUsingPOST_12
2019-05-16 17:57:06 -Generating unique operation named: updateUsingGET_9
2019-05-16 17:57:06 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPOST_13
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPUT_9
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 17:57:06 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 17:57:06 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 17:57:06 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 17:57:06 -Generating unique operation named: addUsingGET_13
2019-05-16 17:57:06 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 17:57:06 -Generating unique operation named: editUsingGET_14
2019-05-16 17:57:06 -Generating unique operation named: listUsingGET_15
2019-05-16 17:57:06 -Generating unique operation named: saveUsingPOST_13
2019-05-16 17:57:06 -Generating unique operation named: saveUsingPOST_14
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPOST_14
2019-05-16 17:57:06 -Generating unique operation named: listUsingGET_16
2019-05-16 17:57:06 -Generating unique operation named: listUsingHEAD_1
2019-05-16 17:57:06 -Generating unique operation named: listUsingPOST_1
2019-05-16 17:57:06 -Generating unique operation named: listUsingPUT_1
2019-05-16 17:57:06 -Generating unique operation named: listUsingPATCH_1
2019-05-16 17:57:06 -Generating unique operation named: listUsingDELETE_1
2019-05-16 17:57:06 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 17:57:06 -Generating unique operation named: listUsingTRACE_1
2019-05-16 17:57:06 -Generating unique operation named: countDDUsingGET_1
2019-05-16 17:57:06 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 17:57:06 -Generating unique operation named: addUsingGET_14
2019-05-16 17:57:06 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 17:57:06 -Generating unique operation named: editUsingGET_15
2019-05-16 17:57:06 -Generating unique operation named: listUsingGET_17
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_26
2019-05-16 17:57:06 -Generating unique operation named: saveUsingPOST_15
2019-05-16 17:57:06 -Generating unique operation named: treeUsingGET_3
2019-05-16 17:57:06 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPOST_15
2019-05-16 17:57:06 -Generating unique operation named: addUsingGET_15
2019-05-16 17:57:06 -Generating unique operation named: editUsingGET_16
2019-05-16 17:57:06 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 17:57:06 -Generating unique operation named: listUsingGET_18
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_27
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_28
2019-05-16 17:57:06 -Generating unique operation named: saveUsingPOST_16
2019-05-16 17:57:06 -Generating unique operation named: updateUsingGET_10
2019-05-16 17:57:06 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPOST_16
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPUT_10
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 17:57:06 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 17:57:06 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 17:57:06 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 17:57:06 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 17:57:06 -Generating unique operation named: addUsingGET_16
2019-05-16 17:57:06 -Generating unique operation named: editUsingGET_17
2019-05-16 17:57:06 -Generating unique operation named: listUsingGET_19
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_29
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_30
2019-05-16 17:57:06 -Generating unique operation named: saveUsingPOST_17
2019-05-16 17:57:06 -Generating unique operation named: updateUsingGET_11
2019-05-16 17:57:06 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPOST_17
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPUT_11
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 17:57:06 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 17:57:06 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 17:57:06 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 17:57:06 -Generating unique operation named: addUsingGET_17
2019-05-16 17:57:06 -Generating unique operation named: editUsingGET_18
2019-05-16 17:57:06 -Generating unique operation named: listUsingGET_20
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_31
2019-05-16 17:57:06 -Generating unique operation named: removeUsingPOST_32
2019-05-16 17:57:06 -Generating unique operation named: saveUsingPOST_18
2019-05-16 17:57:06 -Generating unique operation named: updateUsingGET_12
2019-05-16 17:57:06 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPOST_18
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPUT_12
2019-05-16 17:57:06 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 17:57:06 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 17:57:06 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 17:57:06 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 17:57:07 -Starting Quartz Scheduler now
2019-05-16 17:57:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 17:57:07 -Starting...
2019-05-16 17:57:07 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 17:57:07 -Started.
2019-05-16 17:57:07 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 17:57:07 -Using a shared selector for servlet write/read
2019-05-16 17:57:07 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 17:57:07 -Started BootdoApplication in 20.864 seconds (JVM running for 21.548)
2019-05-16 17:57:07 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 17:57:07 -==> Parameters: 
2019-05-16 17:57:07 -<==      Total: 1
2019-05-16 17:57:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 17:57:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 17:57:32 -FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2019-05-16 17:57:32 -Enabling session validation scheduler...
2019-05-16 17:57:32 -请求地址 : http://localhost:8081/login;JSESSIONID=d36985e7-d056-4f1c-8a42-91a2d94f228a
2019-05-16 17:57:32 -HTTP METHOD : GET
2019-05-16 17:57:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 17:57:32 -参数 : [{}]
2019-05-16 17:57:32 -耗时 : 4
2019-05-16 17:57:32 -返回值 : login
2019-05-16 17:57:34 -请求地址 : http://localhost:8081/getVerify
2019-05-16 17:57:34 -HTTP METHOD : GET
2019-05-16 17:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 17:57:34 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@20e981b0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4ec187cb]
2019-05-16 17:57:34 -1862
2019-05-16 17:57:34 -耗时 : 525
2019-05-16 17:57:34 -返回值 : null
2019-05-16 17:57:34 -请求地址 : http://localhost:8081/login
2019-05-16 17:57:34 -HTTP METHOD : GET
2019-05-16 17:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 17:57:34 -参数 : [{}]
2019-05-16 17:57:34 -耗时 : 1
2019-05-16 17:57:34 -返回值 : login
2019-05-16 17:57:39 -请求地址 : http://localhost:8081/login
2019-05-16 17:57:39 -HTTP METHOD : POST
2019-05-16 17:57:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 17:57:39 -参数 : [admin, 111111, 1862, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1464ed3]
2019-05-16 17:57:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 17:57:39 -==> Parameters: admin(String)
2019-05-16 17:57:39 -<==      Total: 1
2019-05-16 17:57:39 -耗时 : 132
2019-05-16 17:57:39 -返回值 : {msg=操作成功, code=0}
2019-05-16 17:57:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 17:57:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:57:39 -==> Parameters: 1(Long), admin(String), 登录(String), 133(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 17:57:39.883(Timestamp)
2019-05-16 17:57:39 -请求地址 : http://localhost:8081/index
2019-05-16 17:57:39 -HTTP METHOD : GET
2019-05-16 17:57:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 17:57:39 -参数 : [{}]
2019-05-16 17:57:39 -<==    Updates: 1
2019-05-16 17:57:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 17:57:40 -==> Parameters: 1(Long)
2019-05-16 17:57:40 -<==      Total: 49
2019-05-16 17:57:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 17:57:40 -==> Parameters: 138(Long)
2019-05-16 17:57:40 -<==      Total: 1
2019-05-16 17:57:40 -耗时 : 118
2019-05-16 17:57:40 -返回值 : index_v1
2019-05-16 17:57:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 17:57:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 118(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 17:57:40.122(Timestamp)
2019-05-16 17:57:40 -<==    Updates: 1
2019-05-16 17:57:40 -请求地址 : http://localhost:8081/main
2019-05-16 17:57:40 -HTTP METHOD : GET
2019-05-16 17:57:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:57:40 -参数 : []
2019-05-16 17:57:40 -耗时 : 1
2019-05-16 17:57:40 -返回值 : main
2019-05-16 17:57:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 17:57:40 -HTTP METHOD : GET
2019-05-16 17:57:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 17:57:40 -参数 : []
2019-05-16 17:57:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 17:57:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 17:57:40 -<==      Total: 0
2019-05-16 17:57:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 17:57:40 -==> Parameters: 1(Long), 0(String)
2019-05-16 17:57:40 -<==      Total: 1
2019-05-16 17:57:40 -耗时 : 32
2019-05-16 17:57:40 -返回值 : com.bootdo.common.utils.PageUtils@468a65a5
2019-05-16 17:57:40 -请求地址 : http://localhost:8081/main
2019-05-16 17:57:40 -HTTP METHOD : GET
2019-05-16 17:57:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 17:57:40 -参数 : []
2019-05-16 17:57:40 -耗时 : 1
2019-05-16 17:57:40 -返回值 : main
2019-05-16 17:57:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 17:57:46 -==> Parameters: 1(Long)
2019-05-16 17:57:46 -<==      Total: 93
2019-05-16 17:57:46 -请求地址 : http://localhost:8081/charts/countYY
2019-05-16 17:57:46 -HTTP METHOD : GET
2019-05-16 17:57:46 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-16 17:57:46 -参数 : []
2019-05-16 17:57:46 -耗时 : 0
2019-05-16 17:57:46 -返回值 : charts/countYY
2019-05-16 17:57:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:57:47 -HTTP METHOD : GET
2019-05-16 17:57:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:57:47 -参数 : [userType]
2019-05-16 17:57:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:57:47 -==> Parameters: userType(String)
2019-05-16 17:57:47 -<==      Total: 4
2019-05-16 17:57:47 -耗时 : 25
2019-05-16 17:57:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:57:48 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-16 17:57:48 -HTTP METHOD : GET
2019-05-16 17:57:48 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:57:48 -参数 : []
2019-05-16 17:57:48 -耗时 : 11
2019-05-16 17:57:48 -返回值 : charts/tableElecMM
2019-05-16 17:57:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:57:48 -HTTP METHOD : GET
2019-05-16 17:57:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:57:48 -参数 : [userType]
2019-05-16 17:57:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:57:48 -==> Parameters: userType(String)
2019-05-16 17:57:48 -<==      Total: 4
2019-05-16 17:57:48 -耗时 : 7
2019-05-16 17:57:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:57:49 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-16 17:57:49 -HTTP METHOD : GET
2019-05-16 17:57:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-16 17:57:49 -参数 : []
2019-05-16 17:57:49 -耗时 : 13
2019-05-16 17:57:49 -返回值 : charts/tableElecYY
2019-05-16 17:57:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 17:57:49 -HTTP METHOD : GET
2019-05-16 17:57:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 17:57:49 -参数 : [userType]
2019-05-16 17:57:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 17:57:49 -==> Parameters: userType(String)
2019-05-16 17:57:49 -<==      Total: 4
2019-05-16 17:57:49 -耗时 : 7
2019-05-16 17:57:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 17:57:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 17:57:58 -HTTP METHOD : GET
2019-05-16 17:57:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 17:57:58 -参数 : []
2019-05-16 17:57:58 -耗时 : 0
2019-05-16 17:57:58 -返回值 : system/dept/deptTree
2019-05-16 17:57:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 17:57:58 -HTTP METHOD : GET
2019-05-16 17:57:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 17:57:58 -参数 : []
2019-05-16 17:57:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 17:57:58 -==> Parameters: 
2019-05-16 17:57:58 -<==      Total: 3
2019-05-16 17:57:58 -耗时 : 16
2019-05-16 17:57:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 17:57:59 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-16 17:57:59 -HTTP METHOD : POST
2019-05-16 17:57:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:57:59 -参数 : [com.bootdo.elec.vo.ElecVo@61e739f7, com.bootdo.moneyLog.vo.ElecLogVo@32bbddde]
2019-05-16 17:57:59 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:57:59 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 1(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 2(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 3(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 4(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 5(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 6(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 7(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 8(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 9(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 10(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:00 -==> Parameters: 2019-03(String), 11(String), 2(String)
2019-05-16 17:58:00 -<==      Total: 1
2019-05-16 17:58:00 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-16 17:58:00 -==> Parameters: 
2019-05-16 17:58:00 -<==      Total: 2
2019-05-16 17:58:00 -耗时 : 583
2019-05-16 17:58:00 -返回值 : {G1PreElecCountMMNew=1, WMOweElecSumMMNew=0, MSElecLogMMCount=0, G3TotalyuNew=-1, MSPreElecSumMMNew=1, MSOweElecCountMMOld=0, TotalPreyuNew=204, WGTotalyuNew=0, TotalCostyu=206, WGTotalhuOld=0, G2PreElecSumMMNew=100, G3TotalhuOld=0, WSPreElecSumMMOld=0, TotalOwehuNew=2, TotalCosthu=11, G1ElecAmountMM=1, G2ElecAmountMM=1, MSElecAmountMM=1, WMPreElecSumMMOld=0, MSTotalyuOld=0, G3ElecAmountMM=1, STotalhuNew=1, MTotalyuOld=4283, WGPreElecCountMMOld=0, MMTotalhuNew=1, ZOweElecSumMMOld=0, MMPreElecCountMMNew=1, ZTotalyuOld=0, MMOweElecCountMMNew=0, WMTotalyuOld=0, G2OweElecCountMMOld=0, WSTotalhuNew=1, SElecLogMMSum=0, WGElecAmountMM=1, ZElecLogMMSum=0, G1PreElecSumMMNew=100, WMElecAmountMM=1, G3OweElecCountMMOld=0, WGOweElecCountMMNew=0, MElecLogMMSum=152, MSPreElecCountMMOld=0, WSOweElecSumMMNew=0, G1OweElecCountMMNew=0, WSOweElecCountMMNew=0, WGOweElecSumMMNew=0, G3PreElecSumMMNew=0, WGPreElecSumMMOld=0, MSElecCostMMSum =1, G2OweElecSumMMNew=0, G2TotalyuNew=100, G2PreElecCountMMNew=1, WSElecAmountMM=1, MMElecAmountMM=1, G2TotalhuOld=0, G2ElecCostMMCount =1, MOweElecSumMMOld=0, ZOweElecCountMMOld=0, SElecCostMMCount =1, MOweElecCountMMOld=0, WGElecCostMMSum =0, WGElecLogMMCount=1, TotalAllyuOld=4283, MElecCostMMCount =1, MMPreElecCountMMOld=0, ZElecCostMMSum =1, ZOweElecCountMMNew=0, ZTotalyuNew=1, MSTotalhuOld=0, STotalyuNew=0, MMTotalyuNew=1, MMElecLogMMSum=0, WMElecCostMMSum =1, ZPreElecSumMMOld=0, G2PreElecSumMMOld=0, WGTotalyuOld=0, MSOweElecCountMMNew=0, TotalPreyuOld=4283, G3TotalyuOld=0, WMElecCostMMCount =1, G1PreElecCountMMOld=0, WGElecCostMMCount =1, STotalhuOld=0, G3PreElecCountMMOld=0, SPreElecSumMMOld=0, MMTotalhuOld=0, MElecLogMMCount=3, MSTotalyuNew=1, MTotalhuNew=1, MTotalyuNew=-1, G1TotalyuNew=100, WGPreElecCountMMNew=1, G3ElecCostMMSum =1, MMElecCostMMSum =1, ZTotalhuOld=0, G1PreElecSumMMOld=0, G3OweElecCountMMNew=1, G1TotalhuOld=0, WGOweElecSumMMOld=0, MSPreElecCountMMNew=1, TotalOweyuNew=-2, G1ElecCostMMCount =1, TotalPrehuOld=1, G3OweElecSumMMNew=-1, G1ElecCostMMSum =100, MOweElecSumMMNew=-1, WMPreElecCountMMNew=1, TotalOwehuOld=0, WSPreElecCountMMNew=1, ZPreElecCountMMOld=0, WGPreElecSumMMNew=0, G2TotalyuOld=0, TotalAllyuNew=202, MMPreElecSumMMNew=1, TotalAllhuOld=1, MSElecLogMMSum=0, MSOweElecSumMMNew=0, STotalyuOld=0, SPreElecCountMMOld=0, WMElecLogMMSum=60, ZElecAmountMM=1, WGElecLogMMSum=10, WMOweElecCountMMNew=0, MMTotalyuOld=0, WSElecLogMMCount=1, type=2, MSTotalhuNew=1, WSElecCostMMSum =0, WSElecLogMMSum=80, ZElecCostMMCount =1, WSTotalyuOld=0, SElecAmountMM=1, G2ElecLogMMCount=1, ZPreElecSumMMNew=1, MPreElecSumMMNew=0, G2ElecCostMMSum =100, MMOweElecSumMMOld=0, MSElecCostMMCount =1, TotalLogyu=542, ZTotalhuNew=1, G3ElecCostMMCount =1, SPreElecSumMMNew=0, MMElecCostMMCount =1, TotalLoghu=9, G3PreElecCountMMNew=0, TotalOweyuOld=0, MMPreElecSumMMOld=0, G3OweElecSumMMOld=0, MTotalhuOld=1, ZOweElecSumMMNew=0, SOweElecSumMMNew=0, G1TotalyuOld=0, TotalPrehuNew=9, ZPreElecCountMMNew=1, WSPreElecCountMMOld=0, SOweElecCountMMOld=0, G1ElecLogMMSum=80, WSElecCostMMCount =1, G3TotalhuNew=1, G3ElecLogMMSum=90, G1OweElecSumMMOld=0, WMTotalhuNew=1, MPreElecCountMMNew=0, WMPreElecCountMMOld=0, WGTotalhuNew=1, G2ElecLogMMSum=70, MSOweElecSumMMOld=0, SElecLogMMCount=0, TotalAllhuNew=11, SElecCostMMSum =0, G3ElecLogMMCount=1, WMOweElecSumMMOld=0, MSPreElecSumMMOld=0, SPreElecCountMMNew=1, G2TotalhuNew=1, WSPreElecSumMMNew=0, MMOweElecSumMMNew=0, MPreElecSumMMOld=4283, MMElecLogMMCount=0, WMElecLogMMCount=1, WSTotalyuNew=0, MElecCostMMSum =1, G1TotalhuNew=1, WMPreElecSumMMNew=1, WSOweElecSumMMOld=0, MMOweElecCountMMOld=0, ZElecLogMMCount=0, G2OweElecCountMMNew=0, WGOweElecCountMMOld=0, WMTotalyuNew=1, G1OweElecCountMMOld=0, AmountTotalMM=11, WSTotalhuOld=0, SOweElecCountMMNew=0, WSOweElecCountMMOld=0, SOweElecSumMMOld=0, WMTotalhuOld=0, G3PreElecSumMMOld=0, G2PreElecCountMMOld=0, G2OweElecSumMMOld=0, MElecAmountMM=1, MPreElecCountMMOld=1, WMOweElecCountMMOld=0, MOweElecCountMMNew=1, G1OweElecSumMMNew=0, G1ElecLogMMCount=1}
2019-05-16 17:58:01 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-16 17:58:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 17:58:04 -HTTP METHOD : GET
2019-05-16 17:58:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 17:58:04 -参数 : []
2019-05-16 17:58:04 -耗时 : 0
2019-05-16 17:58:04 -返回值 : system/dept/deptTree
2019-05-16 17:58:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 17:58:04 -HTTP METHOD : GET
2019-05-16 17:58:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 17:58:04 -参数 : []
2019-05-16 17:58:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 17:58:04 -==> Parameters: 
2019-05-16 17:58:04 -<==      Total: 3
2019-05-16 17:58:04 -耗时 : 5
2019-05-16 17:58:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 17:58:06 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-16 17:58:06 -HTTP METHOD : POST
2019-05-16 17:58:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-16 17:58:06 -参数 : [com.bootdo.elec.vo.ElecVo@6393dbc0, com.bootdo.moneyLog.vo.ElecLogVo@75bb27f5]
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 1(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 2(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 3(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 4(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 5(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 6(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 7(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 8(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 9(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 10(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-16 17:58:06 -==> Parameters: 2019-03(String), 11(String), 3(String)
2019-05-16 17:58:06 -<==      Total: 1
2019-05-16 17:58:06 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-16 17:58:06 -==> Parameters: 
2019-05-16 17:58:06 -<==      Total: 2
2019-05-16 17:58:06 -耗时 : 284
2019-05-16 17:58:06 -返回值 : {G1PreElecCountMMNew=0, WMOweElecSumMMNew=0, MSElecLogMMCount=0, G3TotalyuNew=0, MSPreElecSumMMNew=0, MSOweElecCountMMOld=0, TotalPreyuNew=0, WGTotalyuNew=0, TotalCostyu=0, WGTotalhuOld=0, G2PreElecSumMMNew=0, G3TotalhuOld=0, WSPreElecSumMMOld=0, TotalOwehuNew=0, TotalCosthu=0, G1ElecAmountMM=0, G2ElecAmountMM=0, MSElecAmountMM=0, WMPreElecSumMMOld=0, MSTotalyuOld=0, G3ElecAmountMM=0, STotalhuNew=0, MTotalyuOld=0, WGPreElecCountMMOld=0, MMTotalhuNew=0, ZOweElecSumMMOld=0, MMPreElecCountMMNew=0, ZTotalyuOld=0, MMOweElecCountMMNew=0, WMTotalyuOld=0, G2OweElecCountMMOld=0, WSTotalhuNew=0, SElecLogMMSum=20, WGElecAmountMM=0, ZElecLogMMSum=0, G1PreElecSumMMNew=0, WMElecAmountMM=0, G3OweElecCountMMOld=0, WGOweElecCountMMNew=0, MElecLogMMSum=0, MSPreElecCountMMOld=0, WSOweElecSumMMNew=0, G1OweElecCountMMNew=0, WSOweElecCountMMNew=0, WGOweElecSumMMNew=0, G3PreElecSumMMNew=0, WGPreElecSumMMOld=0, MSElecCostMMSum =0, G2OweElecSumMMNew=0, G2TotalyuNew=0, G2PreElecCountMMNew=0, WSElecAmountMM=0, MMElecAmountMM=0, G2TotalhuOld=0, G2ElecCostMMCount =0, MOweElecSumMMOld=0, ZOweElecCountMMOld=0, SElecCostMMCount =0, MOweElecCountMMOld=0, WGElecCostMMSum =0, WGElecLogMMCount=0, TotalAllyuOld=0, MElecCostMMCount =0, MMPreElecCountMMOld=0, ZElecCostMMSum =0, ZOweElecCountMMNew=0, ZTotalyuNew=0, MSTotalhuOld=0, STotalyuNew=0, MMTotalyuNew=0, MMElecLogMMSum=0, WMElecCostMMSum =0, ZPreElecSumMMOld=0, G2PreElecSumMMOld=0, WGTotalyuOld=0, MSOweElecCountMMNew=0, TotalPreyuOld=0, G3TotalyuOld=0, WMElecCostMMCount =0, G1PreElecCountMMOld=0, WGElecCostMMCount =0, STotalhuOld=0, G3PreElecCountMMOld=0, SPreElecSumMMOld=0, MMTotalhuOld=0, MElecLogMMCount=0, MSTotalyuNew=0, MTotalhuNew=0, MTotalyuNew=0, G1TotalyuNew=0, WGPreElecCountMMNew=0, G3ElecCostMMSum =0, MMElecCostMMSum =0, ZTotalhuOld=0, G1PreElecSumMMOld=0, G3OweElecCountMMNew=0, G1TotalhuOld=0, WGOweElecSumMMOld=0, MSPreElecCountMMNew=0, TotalOweyuNew=0, G1ElecCostMMCount =0, TotalPrehuOld=0, G3OweElecSumMMNew=0, G1ElecCostMMSum =0, MOweElecSumMMNew=0, WMPreElecCountMMNew=0, TotalOwehuOld=0, WSPreElecCountMMNew=0, ZPreElecCountMMOld=0, WGPreElecSumMMNew=0, G2TotalyuOld=0, TotalAllyuNew=0, MMPreElecSumMMNew=0, TotalAllhuOld=0, MSElecLogMMSum=0, MSOweElecSumMMNew=0, STotalyuOld=0, SPreElecCountMMOld=0, WMElecLogMMSum=0, ZElecAmountMM=0, WGElecLogMMSum=0, WMOweElecCountMMNew=0, MMTotalyuOld=0, WSElecLogMMCount=0, type=3, MSTotalhuNew=0, WSElecCostMMSum =0, WSElecLogMMSum=0, ZElecCostMMCount =0, WSTotalyuOld=0, SElecAmountMM=0, G2ElecLogMMCount=0, ZPreElecSumMMNew=0, MPreElecSumMMNew=0, G2ElecCostMMSum =0, MMOweElecSumMMOld=0, MSElecCostMMCount =0, TotalLogyu=20, ZTotalhuNew=0, G3ElecCostMMCount =0, SPreElecSumMMNew=0, MMElecCostMMCount =0, TotalLoghu=1, G3PreElecCountMMNew=0, TotalOweyuOld=0, MMPreElecSumMMOld=0, G3OweElecSumMMOld=0, MTotalhuOld=0, ZOweElecSumMMNew=0, SOweElecSumMMNew=0, G1TotalyuOld=0, TotalPrehuNew=0, ZPreElecCountMMNew=0, WSPreElecCountMMOld=0, SOweElecCountMMOld=0, G1ElecLogMMSum=0, WSElecCostMMCount =0, G3TotalhuNew=0, G3ElecLogMMSum=0, G1OweElecSumMMOld=0, WMTotalhuNew=0, MPreElecCountMMNew=0, WMPreElecCountMMOld=0, WGTotalhuNew=0, G2ElecLogMMSum=0, MSOweElecSumMMOld=0, SElecLogMMCount=1, TotalAllhuNew=0, SElecCostMMSum =0, G3ElecLogMMCount=0, WMOweElecSumMMOld=0, MSPreElecSumMMOld=0, SPreElecCountMMNew=0, G2TotalhuNew=0, WSPreElecSumMMNew=0, MMOweElecSumMMNew=0, MPreElecSumMMOld=0, MMElecLogMMCount=0, WMElecLogMMCount=0, WSTotalyuNew=0, MElecCostMMSum =0, G1TotalhuNew=0, WMPreElecSumMMNew=0, WSOweElecSumMMOld=0, MMOweElecCountMMOld=0, ZElecLogMMCount=0, G2OweElecCountMMNew=0, WGOweElecCountMMOld=0, WMTotalyuNew=0, G1OweElecCountMMOld=0, AmountTotalMM=0, WSTotalhuOld=0, SOweElecCountMMNew=0, WSOweElecCountMMOld=0, SOweElecSumMMOld=0, WMTotalhuOld=0, G3PreElecSumMMOld=0, G2PreElecCountMMOld=0, G2OweElecSumMMOld=0, MElecAmountMM=0, MPreElecCountMMOld=0, WMOweElecCountMMOld=0, MOweElecCountMMNew=0, G1OweElecSumMMNew=0, G1ElecLogMMCount=0}
2019-05-16 19:40:57 -Starting BootdoApplication on PC-201905091110 with PID 9960 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 19:40:57 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 19:40:57 -The following profiles are active: dev
2019-05-16 19:40:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 19:40:58 CST 2019]; root of context hierarchy
2019-05-16 19:41:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 19:41:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9594011c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:41:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$87ed2fc3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:41:08 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:41:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:41:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:41:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 19:41:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 19:41:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:41:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:41:09 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:41:09 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:41:11 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 19:41:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 19:41:11 -Starting service [Tomcat]
2019-05-16 19:41:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 19:41:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 19:41:11 -Initializing Spring embedded WebApplicationContext
2019-05-16 19:41:11 -Root WebApplicationContext: initialization completed in 13774 ms
2019-05-16 19:41:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 19:41:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 19:41:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 19:41:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 19:41:13 -Filter xssFilter was not registered (disabled)
2019-05-16 19:41:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 19:41:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 19:41:13 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 19:41:13 -Servlet dispatcherServlet mapped to [/]
2019-05-16 19:41:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 19:40:58 CST 2019]; root of context hierarchy
2019-05-16 19:41:19 -Using default implementation for ThreadExecutor
2019-05-16 19:41:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 19:41:19 -Quartz Scheduler v.2.2.1 created.
2019-05-16 19:41:19 -RAMJobStore initialized.
2019-05-16 19:41:19 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 19:41:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 19:41:19 -Quartz scheduler version: 2.2.1
2019-05-16 19:41:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1753475d
2019-05-16 19:41:20 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 19:41:20 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 19:41:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:41:23 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 19:41:23 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:41:23 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 19:41:23 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 19:41:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 19:41:23 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:41:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 19:41:23 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:41:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 19:41:23 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:41:23 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 19:41:23 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 19:41:23 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 19:41:23 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 19:41:23 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 19:41:23 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 19:41:23 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:41:23 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:41:23 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 19:41:23 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 19:41:23 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 19:41:23 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 19:41:23 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 19:41:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 19:41:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 19:41:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 19:41:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 19:41:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 19:41:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 19:41:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 19:41:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 19:41:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 19:41:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 19:41:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 19:41:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 19:41:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 19:41:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 19:41:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 19:41:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 19:41:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 19:41:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 19:41:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 19:41:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 19:41:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 19:41:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 19:41:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 19:41:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 19:41:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 19:41:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:41:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 19:41:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:41:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 19:41:23 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:41:23 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:41:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 19:41:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 19:41:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 19:41:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 19:41:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 19:41:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 19:41:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 19:41:23 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 19:41:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 19:41:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 19:41:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 19:41:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 19:41:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 19:41:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 19:41:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 19:41:23 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 19:41:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 19:41:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 19:41:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 19:41:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 19:41:23 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 19:41:23 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 19:41:23 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 19:41:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 19:41:23 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 19:41:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 19:41:23 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 19:41:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 19:41:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 19:41:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 19:41:23 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 19:41:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 19:41:23 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 19:41:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 19:41:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 19:41:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 19:41:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 19:41:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 19:41:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 19:41:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 19:41:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 19:41:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 19:41:23 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 19:41:23 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 19:41:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 19:41:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 19:41:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 19:41:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 19:41:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 19:41:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 19:41:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 19:41:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 19:41:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 19:41:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 19:41:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 19:41:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 19:41:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 19:41:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 19:41:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 19:41:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 19:41:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 19:41:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 19:41:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 19:41:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 19:41:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 19:41:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 19:41:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 19:41:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 19:41:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 19:41:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 19:41:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 19:41:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 19:41:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 19:41:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 19:41:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 19:41:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 19:41:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 19:41:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 19:41:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 19:41:23 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 19:41:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 19:41:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 19:41:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 19:41:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 19:41:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:41:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 19:41:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:41:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 19:41:23 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:41:23 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 19:41:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 19:41:23 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 19:41:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 19:41:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 19:41:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 19:41:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 19:41:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 19:41:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 19:41:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 19:41:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:41:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 19:40:58 CST 2019]; root of context hierarchy
2019-05-16 19:41:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:41:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:41:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:41:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 19:41:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 19:41:30 -Registering beans for JMX exposure on startup
2019-05-16 19:41:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 19:41:31 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 19:41:31 -Starting beans in phase 2147483647
2019-05-16 19:41:31 -Context refreshed
2019-05-16 19:41:31 -Found 1 custom documentation plugin(s)
2019-05-16 19:41:31 -Scanning for api listing references
2019-05-16 19:41:32 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 19:41:32 -Generating unique operation named: removeUsingPOST_1
2019-05-16 19:41:32 -Generating unique operation named: addUsingGET_1
2019-05-16 19:41:32 -Generating unique operation named: editUsingGET_1
2019-05-16 19:41:32 -Generating unique operation named: listUsingGET_1
2019-05-16 19:41:32 -Generating unique operation named: removeUsingPOST_2
2019-05-16 19:41:32 -Generating unique operation named: removeUsingPOST_3
2019-05-16 19:41:32 -Generating unique operation named: saveUsingPOST_1
2019-05-16 19:41:32 -Generating unique operation named: updateUsingGET_1
2019-05-16 19:41:32 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 19:41:32 -Generating unique operation named: updateUsingPOST_1
2019-05-16 19:41:32 -Generating unique operation named: updateUsingPUT_1
2019-05-16 19:41:32 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 19:41:32 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 19:41:32 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 19:41:32 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 19:41:32 -Generating unique operation named: addUsingGET_2
2019-05-16 19:41:32 -Generating unique operation named: editUsingGET_2
2019-05-16 19:41:32 -Generating unique operation named: listUsingGET_2
2019-05-16 19:41:32 -Generating unique operation named: removeUsingPOST_4
2019-05-16 19:41:32 -Generating unique operation named: removeUsingPOST_5
2019-05-16 19:41:32 -Generating unique operation named: saveUsingPOST_2
2019-05-16 19:41:32 -Generating unique operation named: updateUsingPOST_2
2019-05-16 19:41:32 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 19:41:32 -Generating unique operation named: addUsingGET_3
2019-05-16 19:41:32 -Generating unique operation named: editUsingGET_3
2019-05-16 19:41:32 -Generating unique operation named: listUsingGET_3
2019-05-16 19:41:32 -Generating unique operation named: removeUsingPOST_6
2019-05-16 19:41:32 -Generating unique operation named: removeUsingPOST_7
2019-05-16 19:41:33 -Generating unique operation named: saveUsingPOST_3
2019-05-16 19:41:33 -Generating unique operation named: updateUsingGET_2
2019-05-16 19:41:33 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPOST_3
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPUT_2
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 19:41:33 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 19:41:33 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 19:41:33 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 19:41:33 -Generating unique operation named: addUsingGET_4
2019-05-16 19:41:33 -Generating unique operation named: editUsingGET_4
2019-05-16 19:41:33 -Generating unique operation named: listUsingGET_4
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_8
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_9
2019-05-16 19:41:33 -Generating unique operation named: saveUsingPOST_4
2019-05-16 19:41:33 -Generating unique operation named: updateUsingGET_3
2019-05-16 19:41:33 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPOST_4
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPUT_3
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 19:41:33 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 19:41:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 19:41:33 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 19:41:33 -Generating unique operation named: ElecUsingGET_1
2019-05-16 19:41:33 -Generating unique operation named: addUsingGET_5
2019-05-16 19:41:33 -Generating unique operation named: editUsingGET_5
2019-05-16 19:41:33 -Generating unique operation named: listUsingGET_5
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_10
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_11
2019-05-16 19:41:33 -Generating unique operation named: saveUsingPOST_5
2019-05-16 19:41:33 -Generating unique operation named: updateUsingGET_4
2019-05-16 19:41:33 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPOST_5
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPUT_4
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 19:41:33 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 19:41:33 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 19:41:33 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 19:41:33 -Generating unique operation named: editUsingGET_6
2019-05-16 19:41:33 -Generating unique operation named: listUsingGET_6
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPOST_6
2019-05-16 19:41:33 -Generating unique operation named: addUsingGET_6
2019-05-16 19:41:33 -Generating unique operation named: editUsingGET_7
2019-05-16 19:41:33 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 19:41:33 -Generating unique operation named: listUsingGET_7
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_12
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_13
2019-05-16 19:41:33 -Generating unique operation named: saveUsingPOST_6
2019-05-16 19:41:33 -Generating unique operation named: updateUsingGET_5
2019-05-16 19:41:33 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPOST_7
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPUT_5
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 19:41:33 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 19:41:33 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 19:41:33 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 19:41:33 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 19:41:33 -Generating unique operation named: addUsingGET_7
2019-05-16 19:41:33 -Generating unique operation named: editUsingGET_8
2019-05-16 19:41:33 -Generating unique operation named: listUsingGET_8
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_14
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_15
2019-05-16 19:41:33 -Generating unique operation named: saveUsingPOST_7
2019-05-16 19:41:33 -Generating unique operation named: updateUsingGET_6
2019-05-16 19:41:33 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPOST_8
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPUT_6
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 19:41:33 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 19:41:33 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 19:41:33 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 19:41:33 -Generating unique operation named: addUsingGET_8
2019-05-16 19:41:33 -Generating unique operation named: editUsingGET_9
2019-05-16 19:41:33 -Generating unique operation named: listUsingGET_9
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_16
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_17
2019-05-16 19:41:33 -Generating unique operation named: saveUsingPOST_8
2019-05-16 19:41:33 -Generating unique operation named: updateUsingGET_7
2019-05-16 19:41:33 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPOST_9
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPUT_7
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 19:41:33 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 19:41:33 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 19:41:33 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 19:41:33 -Generating unique operation named: addUsingGET_9
2019-05-16 19:41:33 -Generating unique operation named: editUsingGET_10
2019-05-16 19:41:33 -Generating unique operation named: infoUsingGET_1
2019-05-16 19:41:33 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 19:41:33 -Generating unique operation named: infoUsingPOST_1
2019-05-16 19:41:33 -Generating unique operation named: infoUsingPUT_1
2019-05-16 19:41:33 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 19:41:33 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 19:41:33 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 19:41:33 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 19:41:33 -Generating unique operation named: listUsingGET_10
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_18
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_19
2019-05-16 19:41:33 -Generating unique operation named: saveUsingPOST_9
2019-05-16 19:41:33 -Generating unique operation named: updateUsingPOST_10
2019-05-16 19:41:33 -Generating unique operation named: listUsingGET_11
2019-05-16 19:41:33 -Generating unique operation named: removeUsingPOST_20
2019-05-16 19:41:33 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 19:41:33 -Generating unique operation named: addUsingGET_10
2019-05-16 19:41:33 -Generating unique operation named: editUsingGET_11
2019-05-16 19:41:34 -Generating unique operation named: listUsingGET_12
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_21
2019-05-16 19:41:34 -Generating unique operation named: saveUsingPOST_10
2019-05-16 19:41:34 -Generating unique operation named: treeUsingGET_1
2019-05-16 19:41:34 -Generating unique operation named: treeUsingGET_2
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPOST_11
2019-05-16 19:41:34 -Generating unique operation named: addUsingGET_11
2019-05-16 19:41:34 -Generating unique operation named: editUsingGET_12
2019-05-16 19:41:34 -Generating unique operation named: listUsingGET_13
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_22
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_23
2019-05-16 19:41:34 -Generating unique operation named: saveUsingPOST_11
2019-05-16 19:41:34 -Generating unique operation named: updateUsingGET_8
2019-05-16 19:41:34 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPOST_12
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPUT_8
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 19:41:34 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 19:41:34 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 19:41:34 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 19:41:34 -Generating unique operation named: addUsingGET_12
2019-05-16 19:41:34 -Generating unique operation named: editUsingGET_13
2019-05-16 19:41:34 -Generating unique operation named: listUsingGET_14
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_24
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_25
2019-05-16 19:41:34 -Generating unique operation named: saveUsingPOST_12
2019-05-16 19:41:34 -Generating unique operation named: updateUsingGET_9
2019-05-16 19:41:34 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPOST_13
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPUT_9
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 19:41:34 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 19:41:34 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 19:41:34 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 19:41:34 -Generating unique operation named: addUsingGET_13
2019-05-16 19:41:34 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 19:41:34 -Generating unique operation named: editUsingGET_14
2019-05-16 19:41:34 -Generating unique operation named: listUsingGET_15
2019-05-16 19:41:34 -Generating unique operation named: saveUsingPOST_13
2019-05-16 19:41:34 -Generating unique operation named: saveUsingPOST_14
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPOST_14
2019-05-16 19:41:34 -Generating unique operation named: listUsingGET_16
2019-05-16 19:41:34 -Generating unique operation named: listUsingHEAD_1
2019-05-16 19:41:34 -Generating unique operation named: listUsingPOST_1
2019-05-16 19:41:34 -Generating unique operation named: listUsingPUT_1
2019-05-16 19:41:34 -Generating unique operation named: listUsingPATCH_1
2019-05-16 19:41:34 -Generating unique operation named: listUsingDELETE_1
2019-05-16 19:41:34 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 19:41:34 -Generating unique operation named: listUsingTRACE_1
2019-05-16 19:41:34 -Generating unique operation named: countDDUsingGET_1
2019-05-16 19:41:34 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 19:41:34 -Generating unique operation named: addUsingGET_14
2019-05-16 19:41:34 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 19:41:34 -Generating unique operation named: editUsingGET_15
2019-05-16 19:41:34 -Generating unique operation named: listUsingGET_17
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_26
2019-05-16 19:41:34 -Generating unique operation named: saveUsingPOST_15
2019-05-16 19:41:34 -Generating unique operation named: treeUsingGET_3
2019-05-16 19:41:34 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPOST_15
2019-05-16 19:41:34 -Generating unique operation named: addUsingGET_15
2019-05-16 19:41:34 -Generating unique operation named: editUsingGET_16
2019-05-16 19:41:34 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 19:41:34 -Generating unique operation named: listUsingGET_18
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_27
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_28
2019-05-16 19:41:34 -Generating unique operation named: saveUsingPOST_16
2019-05-16 19:41:34 -Generating unique operation named: updateUsingGET_10
2019-05-16 19:41:34 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPOST_16
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPUT_10
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 19:41:34 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 19:41:34 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 19:41:34 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 19:41:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 19:41:34 -Generating unique operation named: addUsingGET_16
2019-05-16 19:41:34 -Generating unique operation named: editUsingGET_17
2019-05-16 19:41:34 -Generating unique operation named: listUsingGET_19
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_29
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_30
2019-05-16 19:41:34 -Generating unique operation named: saveUsingPOST_17
2019-05-16 19:41:34 -Generating unique operation named: updateUsingGET_11
2019-05-16 19:41:34 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPOST_17
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPUT_11
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 19:41:34 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 19:41:34 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 19:41:34 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 19:41:34 -Generating unique operation named: addUsingGET_17
2019-05-16 19:41:34 -Generating unique operation named: editUsingGET_18
2019-05-16 19:41:34 -Generating unique operation named: listUsingGET_20
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_31
2019-05-16 19:41:34 -Generating unique operation named: removeUsingPOST_32
2019-05-16 19:41:34 -Generating unique operation named: saveUsingPOST_18
2019-05-16 19:41:34 -Generating unique operation named: updateUsingGET_12
2019-05-16 19:41:34 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPOST_18
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPUT_12
2019-05-16 19:41:34 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 19:41:34 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 19:41:35 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 19:41:35 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 19:41:35 -Starting Quartz Scheduler now
2019-05-16 19:41:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 19:41:35 -Starting...
2019-05-16 19:41:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 19:41:35 -Started.
2019-05-16 19:41:35 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 19:41:35 -Using a shared selector for servlet write/read
2019-05-16 19:41:35 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 19:41:35 -Started BootdoApplication in 38.593 seconds (JVM running for 39.422)
2019-05-16 19:41:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 19:41:36 -==> Parameters: 
2019-05-16 19:41:36 -<==      Total: 1
2019-05-16 19:42:24 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-16 19:42:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 19:42:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 19:42:32 -FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms
2019-05-16 19:42:32 -Enabling session validation scheduler...
2019-05-16 19:42:32 -请求地址 : http://localhost:8081/
2019-05-16 19:42:32 -HTTP METHOD : GET
2019-05-16 19:42:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-05-16 19:42:32 -参数 : [{}]
2019-05-16 19:42:32 -耗时 : 6
2019-05-16 19:42:32 -返回值 : redirect:/index
2019-05-16 19:42:32 -请求地址 : http://localhost:8081/login;JSESSIONID=8da946b5-e3ec-47e8-8001-f1e09421f2e3
2019-05-16 19:42:32 -HTTP METHOD : GET
2019-05-16 19:42:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 19:42:32 -参数 : [{}]
2019-05-16 19:42:32 -耗时 : 0
2019-05-16 19:42:32 -返回值 : login
2019-05-16 19:42:34 -请求地址 : http://localhost:8081/getVerify
2019-05-16 19:42:34 -HTTP METHOD : GET
2019-05-16 19:42:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 19:42:34 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@caf99a6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2686643]
2019-05-16 19:42:38 -4946
2019-05-16 19:42:39 -耗时 : 4566
2019-05-16 19:42:39 -返回值 : null
2019-05-16 19:42:57 -请求地址 : http://localhost:8081/login
2019-05-16 19:42:57 -HTTP METHOD : POST
2019-05-16 19:42:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 19:42:57 -参数 : [admin, 111111, 4946, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c363df0]
2019-05-16 19:42:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 19:42:57 -==> Parameters: admin(String)
2019-05-16 19:42:57 -<==      Total: 1
2019-05-16 19:42:57 -耗时 : 101
2019-05-16 19:42:57 -返回值 : {msg=操作成功, code=0}
2019-05-16 19:42:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 19:42:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:42:57 -==> Parameters: 1(Long), admin(String), 登录(String), 101(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 19:42:57.507(Timestamp)
2019-05-16 19:42:57 -<==    Updates: 1
2019-05-16 19:42:57 -请求地址 : http://localhost:8081/index
2019-05-16 19:42:57 -HTTP METHOD : GET
2019-05-16 19:42:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 19:42:57 -参数 : [{}]
2019-05-16 19:42:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 19:42:58 -==> Parameters: 1(Long)
2019-05-16 19:42:58 -<==      Total: 49
2019-05-16 19:42:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 19:42:58 -==> Parameters: 138(Long)
2019-05-16 19:42:58 -<==      Total: 1
2019-05-16 19:42:58 -耗时 : 385
2019-05-16 19:42:58 -返回值 : index_v1
2019-05-16 19:42:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:42:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 386(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 19:42:58.295(Timestamp)
2019-05-16 19:42:58 -请求地址 : http://localhost:8081/main
2019-05-16 19:42:58 -HTTP METHOD : GET
2019-05-16 19:42:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:42:58 -参数 : []
2019-05-16 19:42:58 -耗时 : 1
2019-05-16 19:42:58 -返回值 : main
2019-05-16 19:42:58 -<==    Updates: 1
2019-05-16 19:43:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 19:43:00 -HTTP METHOD : GET
2019-05-16 19:43:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 19:43:00 -参数 : []
2019-05-16 19:43:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 19:43:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 19:43:00 -<==      Total: 0
2019-05-16 19:43:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 19:43:00 -==> Parameters: 1(Long), 0(String)
2019-05-16 19:43:00 -<==      Total: 1
2019-05-16 19:43:00 -耗时 : 92
2019-05-16 19:43:00 -返回值 : com.bootdo.common.utils.PageUtils@257b8a65
2019-05-16 19:43:00 -请求地址 : http://localhost:8081/main
2019-05-16 19:43:00 -HTTP METHOD : GET
2019-05-16 19:43:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:43:00 -参数 : []
2019-05-16 19:43:00 -耗时 : 1
2019-05-16 19:43:00 -返回值 : main
2019-05-16 19:43:14 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 19:43:14 -==> Parameters: 1(Long)
2019-05-16 19:43:14 -<==      Total: 93
2019-05-16 19:43:14 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 19:43:14 -HTTP METHOD : GET
2019-05-16 19:43:14 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 19:43:14 -参数 : []
2019-05-16 19:43:14 -耗时 : 1
2019-05-16 19:43:14 -返回值 : water/waterPrice/waterPrice
2019-05-16 19:43:15 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 19:43:15 -HTTP METHOD : GET
2019-05-16 19:43:15 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 19:43:15 -参数 : [{limit=10, offset=0}]
2019-05-16 19:43:15 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 19:43:15 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 19:43:15 -<==      Total: 2
2019-05-16 19:43:15 -==>  Preparing: select count(*) from water_price 
2019-05-16 19:43:15 -==> Parameters: 
2019-05-16 19:43:15 -<==      Total: 1
2019-05-16 19:43:15 -耗时 : 25
2019-05-16 19:43:15 -返回值 : com.bootdo.common.utils.PageUtils@3bbe95b6
2019-05-16 19:49:34 -请求地址 : http://localhost:8081/index
2019-05-16 19:49:34 -HTTP METHOD : GET
2019-05-16 19:49:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 19:49:34 -参数 : [{}]
2019-05-16 19:49:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 19:49:34 -==> Parameters: 1(Long)
2019-05-16 19:49:34 -<==      Total: 49
2019-05-16 19:49:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 19:49:34 -==> Parameters: 138(Long)
2019-05-16 19:49:34 -<==      Total: 1
2019-05-16 19:49:34 -耗时 : 26
2019-05-16 19:49:34 -返回值 : index_v1
2019-05-16 19:49:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:49:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 19:49:34.75(Timestamp)
2019-05-16 19:49:34 -<==    Updates: 1
2019-05-16 19:49:34 -请求地址 : http://localhost:8081/main
2019-05-16 19:49:34 -HTTP METHOD : GET
2019-05-16 19:49:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:49:34 -参数 : []
2019-05-16 19:49:34 -耗时 : 1
2019-05-16 19:49:34 -返回值 : main
2019-05-16 19:49:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 19:49:35 -HTTP METHOD : GET
2019-05-16 19:49:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 19:49:35 -参数 : []
2019-05-16 19:49:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 19:49:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 19:49:35 -<==      Total: 0
2019-05-16 19:49:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 19:49:35 -==> Parameters: 1(Long), 0(String)
2019-05-16 19:49:35 -<==      Total: 1
2019-05-16 19:49:35 -耗时 : 10
2019-05-16 19:49:35 -返回值 : com.bootdo.common.utils.PageUtils@5411ffae
2019-05-16 19:49:35 -请求地址 : http://localhost:8081/main
2019-05-16 19:49:35 -HTTP METHOD : GET
2019-05-16 19:49:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:49:35 -参数 : []
2019-05-16 19:49:35 -耗时 : 0
2019-05-16 19:49:35 -返回值 : main
2019-05-16 19:49:37 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 19:49:37 -HTTP METHOD : GET
2019-05-16 19:49:37 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 19:49:37 -参数 : []
2019-05-16 19:49:37 -耗时 : 0
2019-05-16 19:49:37 -返回值 : water/waterPrice/waterPrice
2019-05-16 19:49:37 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 19:49:37 -HTTP METHOD : GET
2019-05-16 19:49:37 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 19:49:37 -参数 : [{limit=10, offset=0}]
2019-05-16 19:49:37 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 19:49:37 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 19:49:37 -<==      Total: 2
2019-05-16 19:49:37 -==>  Preparing: select count(*) from water_price 
2019-05-16 19:49:37 -==> Parameters: 
2019-05-16 19:49:37 -<==      Total: 1
2019-05-16 19:49:37 -耗时 : 9
2019-05-16 19:49:37 -返回值 : com.bootdo.common.utils.PageUtils@10be55fd
2019-05-16 19:49:54 -请求地址 : http://localhost:8081/login;JSESSIONID=b91faf55-536d-4a7e-9abd-08841d81db97
2019-05-16 19:49:54 -HTTP METHOD : GET
2019-05-16 19:49:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 19:49:54 -参数 : [{}]
2019-05-16 19:49:54 -耗时 : 1
2019-05-16 19:49:54 -返回值 : login
2019-05-16 19:49:55 -请求地址 : http://localhost:8081/getVerify
2019-05-16 19:49:55 -HTTP METHOD : GET
2019-05-16 19:49:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 19:49:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@8af168c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1c081c2c]
2019-05-16 19:49:55 -2744
2019-05-16 19:49:55 -耗时 : 30
2019-05-16 19:49:55 -返回值 : null
2019-05-16 19:49:55 -请求地址 : http://localhost:8081/login
2019-05-16 19:49:55 -HTTP METHOD : GET
2019-05-16 19:49:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 19:49:55 -参数 : [{}]
2019-05-16 19:49:55 -耗时 : 1
2019-05-16 19:49:55 -返回值 : login
2019-05-16 19:50:00 -请求地址 : http://localhost:8081/login
2019-05-16 19:50:00 -HTTP METHOD : POST
2019-05-16 19:50:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 19:50:00 -参数 : [admin, 111111, 2744, org.apache.shiro.web.servlet.ShiroHttpServletRequest@673e08c7]
2019-05-16 19:50:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 19:50:00 -==> Parameters: admin(String)
2019-05-16 19:50:00 -<==      Total: 1
2019-05-16 19:50:00 -耗时 : 10
2019-05-16 19:50:00 -返回值 : {msg=操作成功, code=0}
2019-05-16 19:50:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:50:00 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 19:50:00.84(Timestamp)
2019-05-16 19:50:00 -请求地址 : http://localhost:8081/index
2019-05-16 19:50:00 -HTTP METHOD : GET
2019-05-16 19:50:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 19:50:00 -参数 : [{}]
2019-05-16 19:50:00 -<==    Updates: 1
2019-05-16 19:50:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 19:50:00 -==> Parameters: 1(Long)
2019-05-16 19:50:00 -<==      Total: 49
2019-05-16 19:50:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 19:50:00 -==> Parameters: 138(Long)
2019-05-16 19:50:00 -<==      Total: 1
2019-05-16 19:50:00 -耗时 : 42
2019-05-16 19:50:00 -返回值 : index_v1
2019-05-16 19:50:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:50:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 19:50:00.917(Timestamp)
2019-05-16 19:50:00 -<==    Updates: 1
2019-05-16 19:50:01 -请求地址 : http://localhost:8081/main
2019-05-16 19:50:01 -HTTP METHOD : GET
2019-05-16 19:50:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:50:01 -参数 : []
2019-05-16 19:50:01 -耗时 : 0
2019-05-16 19:50:01 -返回值 : main
2019-05-16 19:50:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 19:50:01 -HTTP METHOD : GET
2019-05-16 19:50:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 19:50:01 -参数 : []
2019-05-16 19:50:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 19:50:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 19:50:01 -<==      Total: 0
2019-05-16 19:50:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 19:50:01 -==> Parameters: 1(Long), 0(String)
2019-05-16 19:50:01 -<==      Total: 1
2019-05-16 19:50:01 -耗时 : 9
2019-05-16 19:50:01 -返回值 : com.bootdo.common.utils.PageUtils@1cf9b902
2019-05-16 19:50:01 -请求地址 : http://localhost:8081/main
2019-05-16 19:50:01 -HTTP METHOD : GET
2019-05-16 19:50:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:50:01 -参数 : []
2019-05-16 19:50:01 -耗时 : 1
2019-05-16 19:50:01 -返回值 : main
2019-05-16 19:50:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 19:50:07 -==> Parameters: 1(Long)
2019-05-16 19:50:07 -<==      Total: 93
2019-05-16 19:50:07 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 19:50:07 -HTTP METHOD : GET
2019-05-16 19:50:07 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 19:50:07 -参数 : []
2019-05-16 19:50:07 -耗时 : 0
2019-05-16 19:50:07 -返回值 : water/waterPrice/waterPrice
2019-05-16 19:50:07 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 19:50:07 -HTTP METHOD : GET
2019-05-16 19:50:07 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 19:50:07 -参数 : [{limit=10, offset=0}]
2019-05-16 19:50:07 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 19:50:07 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 19:50:07 -<==      Total: 2
2019-05-16 19:50:07 -==>  Preparing: select count(*) from water_price 
2019-05-16 19:50:07 -==> Parameters: 
2019-05-16 19:50:07 -<==      Total: 1
2019-05-16 19:50:07 -耗时 : 8
2019-05-16 19:50:07 -返回值 : com.bootdo.common.utils.PageUtils@a7fa6b4
2019-05-16 19:51:43 -Starting BootdoApplication on PC-201905091110 with PID 38976 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 19:51:43 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 19:51:43 -The following profiles are active: dev
2019-05-16 19:51:44 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e3967ea: startup date [Thu May 16 19:51:44 CST 2019]; root of context hierarchy
2019-05-16 19:51:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 19:51:48 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71fd8325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:51:48 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6456b1cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:51:49 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:51:49 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:51:49 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:51:49 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 19:51:49 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 19:51:49 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:51:49 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:51:49 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:51:49 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:51:50 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 19:51:50 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 19:51:50 -Starting service [Tomcat]
2019-05-16 19:51:50 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 19:51:50 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 19:51:50 -Initializing Spring embedded WebApplicationContext
2019-05-16 19:51:50 -Root WebApplicationContext: initialization completed in 6758 ms
2019-05-16 19:51:51 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 19:51:51 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 19:51:51 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 19:51:51 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 19:51:51 -Filter xssFilter was not registered (disabled)
2019-05-16 19:51:51 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 19:51:51 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 19:51:51 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 19:51:51 -Servlet dispatcherServlet mapped to [/]
2019-05-16 19:51:55 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e3967ea: startup date [Thu May 16 19:51:44 CST 2019]; root of context hierarchy
2019-05-16 19:51:55 -Using default implementation for ThreadExecutor
2019-05-16 19:51:55 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 19:51:55 -Quartz Scheduler v.2.2.1 created.
2019-05-16 19:51:55 -RAMJobStore initialized.
2019-05-16 19:51:55 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 19:51:55 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 19:51:55 -Quartz scheduler version: 2.2.1
2019-05-16 19:51:55 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@50a7c72b
2019-05-16 19:51:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 19:51:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 19:51:58 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 19:51:58 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:51:58 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 19:51:58 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:51:58 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 19:51:58 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 19:51:58 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:51:58 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 19:51:58 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:51:58 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 19:51:58 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:51:58 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 19:51:58 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 19:51:58 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 19:51:58 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 19:51:58 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 19:51:58 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:51:58 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 19:51:58 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:51:58 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 19:51:58 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 19:51:58 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 19:51:58 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 19:51:58 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 19:51:58 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 19:51:58 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 19:51:58 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 19:51:58 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 19:51:58 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 19:51:58 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 19:51:58 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 19:51:58 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 19:51:58 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 19:51:58 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 19:51:58 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 19:51:58 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 19:51:58 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 19:51:58 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 19:51:58 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 19:51:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 19:51:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 19:51:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 19:51:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 19:51:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 19:51:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 19:51:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 19:51:58 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 19:51:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 19:51:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 19:51:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 19:51:58 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 19:51:58 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 19:51:58 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 19:51:58 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 19:51:58 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:51:58 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 19:51:58 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:51:58 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 19:51:58 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:51:58 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:51:58 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 19:51:58 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 19:51:58 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 19:51:58 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 19:51:58 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 19:51:58 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 19:51:58 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 19:51:58 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 19:51:58 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 19:51:58 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 19:51:58 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 19:51:58 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 19:51:58 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 19:51:58 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 19:51:58 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 19:51:58 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 19:51:58 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 19:51:58 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 19:51:58 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 19:51:58 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 19:51:58 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 19:51:58 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 19:51:58 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 19:51:58 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 19:51:58 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 19:51:58 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:58 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 19:51:58 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 19:51:58 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 19:51:58 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 19:51:58 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 19:51:58 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 19:51:58 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 19:51:58 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 19:51:58 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 19:51:58 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 19:51:58 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 19:51:58 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 19:51:58 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 19:51:58 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 19:51:58 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 19:51:58 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 19:51:58 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 19:51:58 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:58 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 19:51:58 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 19:51:58 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:58 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 19:51:58 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 19:51:58 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:59 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 19:51:59 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 19:51:59 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 19:51:59 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 19:51:59 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:59 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 19:51:59 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 19:51:59 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 19:51:59 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:59 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 19:51:59 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 19:51:59 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 19:51:59 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 19:51:59 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 19:51:59 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 19:51:59 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 19:51:59 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 19:51:59 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 19:51:59 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 19:51:59 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:59 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 19:51:59 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 19:51:59 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 19:51:59 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 19:51:59 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:59 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 19:51:59 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 19:51:59 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 19:51:59 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 19:51:59 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 19:51:59 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 19:51:59 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 19:51:59 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 19:51:59 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 19:51:59 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 19:51:59 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 19:51:59 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 19:51:59 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 19:51:59 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 19:51:59 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 19:51:59 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:59 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 19:51:59 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 19:51:59 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:59 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 19:51:59 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 19:51:59 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 19:51:59 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 19:51:59 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 19:51:59 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 19:51:59 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 19:51:59 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 19:51:59 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 19:51:59 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 19:51:59 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 19:51:59 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 19:51:59 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 19:51:59 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 19:51:59 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:59 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 19:51:59 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:59 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 19:51:59 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:59 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 19:51:59 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 19:51:59 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 19:51:59 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 19:51:59 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 19:51:59 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 19:51:59 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:51:59 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 19:51:59 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 19:51:59 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:51:59 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 19:51:59 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 19:51:59 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 19:51:59 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:51:59 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 19:51:59 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 19:51:59 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 19:51:59 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 19:51:59 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 19:51:59 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 19:51:59 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 19:52:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:52:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2e3967ea: startup date [Thu May 16 19:51:44 CST 2019]; root of context hierarchy
2019-05-16 19:52:00 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:52:00 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:52:00 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:52:00 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 19:52:00 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 19:52:02 -Registering beans for JMX exposure on startup
2019-05-16 19:52:02 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 19:52:02 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 19:52:02 -Starting beans in phase 2147483647
2019-05-16 19:52:02 -Context refreshed
2019-05-16 19:52:02 -Found 1 custom documentation plugin(s)
2019-05-16 19:52:02 -Scanning for api listing references
2019-05-16 19:52:03 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 19:52:03 -Generating unique operation named: removeUsingPOST_1
2019-05-16 19:52:03 -Generating unique operation named: addUsingGET_1
2019-05-16 19:52:03 -Generating unique operation named: editUsingGET_1
2019-05-16 19:52:03 -Generating unique operation named: listUsingGET_1
2019-05-16 19:52:03 -Generating unique operation named: removeUsingPOST_2
2019-05-16 19:52:03 -Generating unique operation named: removeUsingPOST_3
2019-05-16 19:52:03 -Generating unique operation named: saveUsingPOST_1
2019-05-16 19:52:03 -Generating unique operation named: updateUsingGET_1
2019-05-16 19:52:03 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPOST_1
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPUT_1
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 19:52:03 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 19:52:03 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 19:52:03 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 19:52:03 -Generating unique operation named: addUsingGET_2
2019-05-16 19:52:03 -Generating unique operation named: editUsingGET_2
2019-05-16 19:52:03 -Generating unique operation named: listUsingGET_2
2019-05-16 19:52:03 -Generating unique operation named: removeUsingPOST_4
2019-05-16 19:52:03 -Generating unique operation named: removeUsingPOST_5
2019-05-16 19:52:03 -Generating unique operation named: saveUsingPOST_2
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPOST_2
2019-05-16 19:52:03 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 19:52:03 -Generating unique operation named: addUsingGET_3
2019-05-16 19:52:03 -Generating unique operation named: editUsingGET_3
2019-05-16 19:52:03 -Generating unique operation named: listUsingGET_3
2019-05-16 19:52:03 -Generating unique operation named: removeUsingPOST_6
2019-05-16 19:52:03 -Generating unique operation named: removeUsingPOST_7
2019-05-16 19:52:03 -Generating unique operation named: saveUsingPOST_3
2019-05-16 19:52:03 -Generating unique operation named: updateUsingGET_2
2019-05-16 19:52:03 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPOST_3
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPUT_2
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 19:52:03 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 19:52:03 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 19:52:03 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 19:52:03 -Generating unique operation named: addUsingGET_4
2019-05-16 19:52:03 -Generating unique operation named: editUsingGET_4
2019-05-16 19:52:03 -Generating unique operation named: listUsingGET_4
2019-05-16 19:52:03 -Generating unique operation named: removeUsingPOST_8
2019-05-16 19:52:03 -Generating unique operation named: removeUsingPOST_9
2019-05-16 19:52:03 -Generating unique operation named: saveUsingPOST_4
2019-05-16 19:52:03 -Generating unique operation named: updateUsingGET_3
2019-05-16 19:52:03 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPOST_4
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPUT_3
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 19:52:03 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 19:52:03 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 19:52:03 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 19:52:03 -Generating unique operation named: ElecUsingGET_1
2019-05-16 19:52:03 -Generating unique operation named: addUsingGET_5
2019-05-16 19:52:03 -Generating unique operation named: editUsingGET_5
2019-05-16 19:52:03 -Generating unique operation named: listUsingGET_5
2019-05-16 19:52:03 -Generating unique operation named: removeUsingPOST_10
2019-05-16 19:52:03 -Generating unique operation named: removeUsingPOST_11
2019-05-16 19:52:03 -Generating unique operation named: saveUsingPOST_5
2019-05-16 19:52:03 -Generating unique operation named: updateUsingGET_4
2019-05-16 19:52:03 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPOST_5
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPUT_4
2019-05-16 19:52:03 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 19:52:03 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 19:52:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 19:52:04 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 19:52:04 -Generating unique operation named: editUsingGET_6
2019-05-16 19:52:04 -Generating unique operation named: listUsingGET_6
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPOST_6
2019-05-16 19:52:04 -Generating unique operation named: addUsingGET_6
2019-05-16 19:52:04 -Generating unique operation named: editUsingGET_7
2019-05-16 19:52:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 19:52:04 -Generating unique operation named: listUsingGET_7
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_12
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_13
2019-05-16 19:52:04 -Generating unique operation named: saveUsingPOST_6
2019-05-16 19:52:04 -Generating unique operation named: updateUsingGET_5
2019-05-16 19:52:04 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPOST_7
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPUT_5
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 19:52:04 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 19:52:04 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 19:52:04 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 19:52:04 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 19:52:04 -Generating unique operation named: addUsingGET_7
2019-05-16 19:52:04 -Generating unique operation named: editUsingGET_8
2019-05-16 19:52:04 -Generating unique operation named: listUsingGET_8
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_14
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_15
2019-05-16 19:52:04 -Generating unique operation named: saveUsingPOST_7
2019-05-16 19:52:04 -Generating unique operation named: updateUsingGET_6
2019-05-16 19:52:04 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPOST_8
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPUT_6
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 19:52:04 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 19:52:04 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 19:52:04 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 19:52:04 -Generating unique operation named: addUsingGET_8
2019-05-16 19:52:04 -Generating unique operation named: editUsingGET_9
2019-05-16 19:52:04 -Generating unique operation named: listUsingGET_9
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_16
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_17
2019-05-16 19:52:04 -Generating unique operation named: saveUsingPOST_8
2019-05-16 19:52:04 -Generating unique operation named: updateUsingGET_7
2019-05-16 19:52:04 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPOST_9
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPUT_7
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 19:52:04 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 19:52:04 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 19:52:04 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 19:52:04 -Generating unique operation named: addUsingGET_9
2019-05-16 19:52:04 -Generating unique operation named: editUsingGET_10
2019-05-16 19:52:04 -Generating unique operation named: infoUsingGET_1
2019-05-16 19:52:04 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 19:52:04 -Generating unique operation named: infoUsingPOST_1
2019-05-16 19:52:04 -Generating unique operation named: infoUsingPUT_1
2019-05-16 19:52:04 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 19:52:04 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 19:52:04 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 19:52:04 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 19:52:04 -Generating unique operation named: listUsingGET_10
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_18
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_19
2019-05-16 19:52:04 -Generating unique operation named: saveUsingPOST_9
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPOST_10
2019-05-16 19:52:04 -Generating unique operation named: listUsingGET_11
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_20
2019-05-16 19:52:04 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 19:52:04 -Generating unique operation named: addUsingGET_10
2019-05-16 19:52:04 -Generating unique operation named: editUsingGET_11
2019-05-16 19:52:04 -Generating unique operation named: listUsingGET_12
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_21
2019-05-16 19:52:04 -Generating unique operation named: saveUsingPOST_10
2019-05-16 19:52:04 -Generating unique operation named: treeUsingGET_1
2019-05-16 19:52:04 -Generating unique operation named: treeUsingGET_2
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPOST_11
2019-05-16 19:52:04 -Generating unique operation named: addUsingGET_11
2019-05-16 19:52:04 -Generating unique operation named: editUsingGET_12
2019-05-16 19:52:04 -Generating unique operation named: listUsingGET_13
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_22
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_23
2019-05-16 19:52:04 -Generating unique operation named: saveUsingPOST_11
2019-05-16 19:52:04 -Generating unique operation named: updateUsingGET_8
2019-05-16 19:52:04 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPOST_12
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPUT_8
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 19:52:04 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 19:52:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 19:52:04 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 19:52:04 -Generating unique operation named: addUsingGET_12
2019-05-16 19:52:04 -Generating unique operation named: editUsingGET_13
2019-05-16 19:52:04 -Generating unique operation named: listUsingGET_14
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_24
2019-05-16 19:52:04 -Generating unique operation named: removeUsingPOST_25
2019-05-16 19:52:04 -Generating unique operation named: saveUsingPOST_12
2019-05-16 19:52:04 -Generating unique operation named: updateUsingGET_9
2019-05-16 19:52:04 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPOST_13
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPUT_9
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 19:52:04 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 19:52:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 19:52:04 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 19:52:04 -Generating unique operation named: addUsingGET_13
2019-05-16 19:52:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 19:52:04 -Generating unique operation named: editUsingGET_14
2019-05-16 19:52:04 -Generating unique operation named: listUsingGET_15
2019-05-16 19:52:04 -Generating unique operation named: saveUsingPOST_13
2019-05-16 19:52:04 -Generating unique operation named: saveUsingPOST_14
2019-05-16 19:52:04 -Generating unique operation named: updateUsingPOST_14
2019-05-16 19:52:05 -Generating unique operation named: listUsingGET_16
2019-05-16 19:52:05 -Generating unique operation named: listUsingHEAD_1
2019-05-16 19:52:05 -Generating unique operation named: listUsingPOST_1
2019-05-16 19:52:05 -Generating unique operation named: listUsingPUT_1
2019-05-16 19:52:05 -Generating unique operation named: listUsingPATCH_1
2019-05-16 19:52:05 -Generating unique operation named: listUsingDELETE_1
2019-05-16 19:52:05 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 19:52:05 -Generating unique operation named: listUsingTRACE_1
2019-05-16 19:52:05 -Generating unique operation named: countDDUsingGET_1
2019-05-16 19:52:05 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 19:52:05 -Generating unique operation named: addUsingGET_14
2019-05-16 19:52:05 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 19:52:05 -Generating unique operation named: editUsingGET_15
2019-05-16 19:52:05 -Generating unique operation named: listUsingGET_17
2019-05-16 19:52:05 -Generating unique operation named: removeUsingPOST_26
2019-05-16 19:52:05 -Generating unique operation named: saveUsingPOST_15
2019-05-16 19:52:05 -Generating unique operation named: treeUsingGET_3
2019-05-16 19:52:05 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 19:52:05 -Generating unique operation named: updateUsingPOST_15
2019-05-16 19:52:05 -Generating unique operation named: addUsingGET_15
2019-05-16 19:52:05 -Generating unique operation named: editUsingGET_16
2019-05-16 19:52:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 19:52:05 -Generating unique operation named: listUsingGET_18
2019-05-16 19:52:05 -Generating unique operation named: removeUsingPOST_27
2019-05-16 19:52:05 -Generating unique operation named: removeUsingPOST_28
2019-05-16 19:52:05 -Generating unique operation named: saveUsingPOST_16
2019-05-16 19:52:05 -Generating unique operation named: updateUsingGET_10
2019-05-16 19:52:05 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 19:52:05 -Generating unique operation named: updateUsingPOST_16
2019-05-16 19:52:05 -Generating unique operation named: updateUsingPUT_10
2019-05-16 19:52:05 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 19:52:05 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 19:52:05 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 19:52:05 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 19:52:05 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 19:52:05 -Generating unique operation named: addUsingGET_16
2019-05-16 19:52:05 -Generating unique operation named: editUsingGET_17
2019-05-16 19:52:05 -Generating unique operation named: listUsingGET_19
2019-05-16 19:52:05 -Generating unique operation named: removeUsingPOST_29
2019-05-16 19:52:05 -Generating unique operation named: removeUsingPOST_30
2019-05-16 19:52:05 -Generating unique operation named: saveUsingPOST_17
2019-05-16 19:52:05 -Generating unique operation named: updateUsingGET_11
2019-05-16 19:52:05 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 19:52:05 -Generating unique operation named: updateUsingPOST_17
2019-05-16 19:52:05 -Generating unique operation named: updateUsingPUT_11
2019-05-16 19:52:05 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 19:52:05 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 19:52:05 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 19:52:05 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 19:52:05 -Generating unique operation named: addUsingGET_17
2019-05-16 19:52:05 -Generating unique operation named: editUsingGET_18
2019-05-16 19:52:05 -Generating unique operation named: listUsingGET_20
2019-05-16 19:52:05 -Generating unique operation named: removeUsingPOST_31
2019-05-16 19:52:05 -Generating unique operation named: removeUsingPOST_32
2019-05-16 19:52:05 -Generating unique operation named: saveUsingPOST_18
2019-05-16 19:52:05 -Generating unique operation named: updateUsingGET_12
2019-05-16 19:52:05 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 19:52:05 -Generating unique operation named: updateUsingPOST_18
2019-05-16 19:52:05 -Generating unique operation named: updateUsingPUT_12
2019-05-16 19:52:05 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 19:52:05 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 19:52:05 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 19:52:05 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 19:52:05 -Starting Quartz Scheduler now
2019-05-16 19:52:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 19:52:05 -Starting...
2019-05-16 19:52:05 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 19:52:05 -Started.
2019-05-16 19:52:05 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 19:52:05 -Using a shared selector for servlet write/read
2019-05-16 19:52:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 19:52:05 -Started BootdoApplication in 22.662 seconds (JVM running for 23.379)
2019-05-16 19:52:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 19:52:05 -==> Parameters: 
2019-05-16 19:52:05 -<==      Total: 1
2019-05-16 19:52:13 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 19:52:13 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 19:52:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 77 ms
2019-05-16 19:52:13 -Enabling session validation scheduler...
2019-05-16 19:52:13 -请求地址 : http://localhost:8081/login;JSESSIONID=63a8c3bd-a102-4682-9c20-641934d833a6
2019-05-16 19:52:13 -HTTP METHOD : GET
2019-05-16 19:52:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 19:52:13 -参数 : [{}]
2019-05-16 19:52:13 -耗时 : 6
2019-05-16 19:52:13 -返回值 : login
2019-05-16 19:52:15 -请求地址 : http://localhost:8081/getVerify
2019-05-16 19:52:15 -HTTP METHOD : GET
2019-05-16 19:52:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 19:52:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@569d59dc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3be44e8d]
2019-05-16 19:52:16 -4924
2019-05-16 19:52:16 -耗时 : 540
2019-05-16 19:52:16 -返回值 : null
2019-05-16 19:52:16 -请求地址 : http://localhost:8081/login
2019-05-16 19:52:16 -HTTP METHOD : GET
2019-05-16 19:52:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 19:52:16 -参数 : [{}]
2019-05-16 19:52:16 -耗时 : 1
2019-05-16 19:52:16 -返回值 : login
2019-05-16 19:52:21 -请求地址 : http://localhost:8081/login
2019-05-16 19:52:21 -HTTP METHOD : POST
2019-05-16 19:52:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 19:52:21 -参数 : [admin, 111111, 4924, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7ad84fd0]
2019-05-16 19:52:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 19:52:21 -==> Parameters: admin(String)
2019-05-16 19:52:21 -<==      Total: 1
2019-05-16 19:52:21 -耗时 : 117
2019-05-16 19:52:21 -返回值 : {msg=操作成功, code=0}
2019-05-16 19:52:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 19:52:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:52:21 -==> Parameters: 1(Long), admin(String), 登录(String), 117(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 19:52:21.555(Timestamp)
2019-05-16 19:52:21 -<==    Updates: 1
2019-05-16 19:52:21 -请求地址 : http://localhost:8081/index
2019-05-16 19:52:21 -HTTP METHOD : GET
2019-05-16 19:52:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 19:52:21 -参数 : [{}]
2019-05-16 19:52:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 19:52:21 -==> Parameters: 1(Long)
2019-05-16 19:52:21 -<==      Total: 49
2019-05-16 19:52:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 19:52:21 -==> Parameters: 138(Long)
2019-05-16 19:52:21 -<==      Total: 1
2019-05-16 19:52:21 -耗时 : 131
2019-05-16 19:52:21 -返回值 : index_v1
2019-05-16 19:52:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:52:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 131(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 19:52:21.868(Timestamp)
2019-05-16 19:52:21 -<==    Updates: 1
2019-05-16 19:52:22 -请求地址 : http://localhost:8081/main
2019-05-16 19:52:22 -HTTP METHOD : GET
2019-05-16 19:52:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:52:22 -参数 : []
2019-05-16 19:52:22 -耗时 : 0
2019-05-16 19:52:22 -返回值 : main
2019-05-16 19:52:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 19:52:22 -HTTP METHOD : GET
2019-05-16 19:52:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 19:52:22 -参数 : []
2019-05-16 19:52:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 19:52:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 19:52:22 -<==      Total: 0
2019-05-16 19:52:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 19:52:22 -==> Parameters: 1(Long), 0(String)
2019-05-16 19:52:22 -<==      Total: 1
2019-05-16 19:52:22 -耗时 : 29
2019-05-16 19:52:22 -返回值 : com.bootdo.common.utils.PageUtils@5e27230d
2019-05-16 19:52:22 -请求地址 : http://localhost:8081/main
2019-05-16 19:52:22 -HTTP METHOD : GET
2019-05-16 19:52:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:52:22 -参数 : []
2019-05-16 19:52:22 -耗时 : 0
2019-05-16 19:52:22 -返回值 : main
2019-05-16 19:52:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 19:52:25 -==> Parameters: 1(Long)
2019-05-16 19:52:25 -<==      Total: 93
2019-05-16 19:52:25 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 19:52:25 -HTTP METHOD : GET
2019-05-16 19:52:25 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 19:52:25 -参数 : []
2019-05-16 19:52:25 -耗时 : 0
2019-05-16 19:52:25 -返回值 : water/waterPrice/waterPrice
2019-05-16 19:52:26 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 19:52:26 -HTTP METHOD : GET
2019-05-16 19:52:26 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 19:52:26 -参数 : [{limit=10, offset=0}]
2019-05-16 19:52:26 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 19:52:26 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 19:52:26 -<==      Total: 2
2019-05-16 19:52:26 -==>  Preparing: select count(*) from water_price 
2019-05-16 19:52:26 -==> Parameters: 
2019-05-16 19:52:26 -<==      Total: 1
2019-05-16 19:52:26 -耗时 : 27
2019-05-16 19:52:26 -返回值 : com.bootdo.common.utils.PageUtils@10a78b52
2019-05-16 19:52:59 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-05-16 19:53:09 -请求地址 : http://localhost:8081/login;JSESSIONID=d5116501-04f1-4f82-bf65-0d410c65d7f0
2019-05-16 19:53:09 -HTTP METHOD : GET
2019-05-16 19:53:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 19:53:09 -参数 : [{}]
2019-05-16 19:53:09 -耗时 : 0
2019-05-16 19:53:09 -返回值 : login
2019-05-16 19:53:09 -请求地址 : http://localhost:8081/getVerify
2019-05-16 19:53:09 -HTTP METHOD : GET
2019-05-16 19:53:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 19:53:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7245c186, org.apache.shiro.web.servlet.ShiroHttpServletResponse@14d87cf3]
2019-05-16 19:53:09 -7064
2019-05-16 19:53:09 -耗时 : 62
2019-05-16 19:53:09 -返回值 : null
2019-05-16 19:53:10 -请求地址 : http://localhost:8081/login
2019-05-16 19:53:10 -HTTP METHOD : GET
2019-05-16 19:53:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 19:53:10 -参数 : [{}]
2019-05-16 19:53:10 -耗时 : 1
2019-05-16 19:53:10 -返回值 : login
2019-05-16 19:53:16 -请求地址 : http://localhost:8081/login
2019-05-16 19:53:16 -HTTP METHOD : POST
2019-05-16 19:53:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 19:53:16 -参数 : [admin, 111111, 7064, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f3e3e78]
2019-05-16 19:53:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 19:53:16 -==> Parameters: admin(String)
2019-05-16 19:53:16 -<==      Total: 1
2019-05-16 19:53:16 -耗时 : 7
2019-05-16 19:53:16 -返回值 : {msg=操作成功, code=0}
2019-05-16 19:53:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:53:16 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 19:53:16.218(Timestamp)
2019-05-16 19:53:16 -请求地址 : http://localhost:8081/index
2019-05-16 19:53:16 -HTTP METHOD : GET
2019-05-16 19:53:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 19:53:16 -参数 : [{}]
2019-05-16 19:53:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 19:53:16 -==> Parameters: 1(Long)
2019-05-16 19:53:16 -<==      Total: 49
2019-05-16 19:53:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 19:53:16 -==> Parameters: 138(Long)
2019-05-16 19:53:16 -<==    Updates: 1
2019-05-16 19:53:16 -<==      Total: 1
2019-05-16 19:53:16 -耗时 : 103
2019-05-16 19:53:16 -返回值 : index_v1
2019-05-16 19:53:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:53:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 103(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 19:53:16.36(Timestamp)
2019-05-16 19:53:16 -请求地址 : http://localhost:8081/main
2019-05-16 19:53:16 -HTTP METHOD : GET
2019-05-16 19:53:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:53:16 -参数 : []
2019-05-16 19:53:16 -耗时 : 4
2019-05-16 19:53:16 -返回值 : main
2019-05-16 19:53:16 -<==    Updates: 1
2019-05-16 19:53:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 19:53:16 -HTTP METHOD : GET
2019-05-16 19:53:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 19:53:16 -参数 : []
2019-05-16 19:53:16 -请求地址 : http://localhost:8081/main
2019-05-16 19:53:16 -HTTP METHOD : GET
2019-05-16 19:53:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:53:16 -参数 : []
2019-05-16 19:53:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 19:53:16 -耗时 : 0
2019-05-16 19:53:16 -返回值 : main
2019-05-16 19:53:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 19:53:16 -<==      Total: 0
2019-05-16 19:53:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 19:53:16 -==> Parameters: 1(Long), 0(String)
2019-05-16 19:53:16 -<==      Total: 1
2019-05-16 19:53:16 -耗时 : 7
2019-05-16 19:53:16 -返回值 : com.bootdo.common.utils.PageUtils@652ad4b1
2019-05-16 19:53:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 19:53:19 -==> Parameters: 1(Long)
2019-05-16 19:53:19 -<==      Total: 93
2019-05-16 19:53:19 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 19:53:19 -HTTP METHOD : GET
2019-05-16 19:53:19 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 19:53:19 -参数 : []
2019-05-16 19:53:19 -耗时 : 1
2019-05-16 19:53:19 -返回值 : water/waterPrice/waterPrice
2019-05-16 19:53:20 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 19:53:20 -HTTP METHOD : GET
2019-05-16 19:53:20 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 19:53:20 -参数 : [{limit=10, offset=0}]
2019-05-16 19:53:20 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 19:53:20 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 19:53:20 -<==      Total: 2
2019-05-16 19:53:20 -==>  Preparing: select count(*) from water_price 
2019-05-16 19:53:20 -==> Parameters: 
2019-05-16 19:53:20 -<==      Total: 1
2019-05-16 19:53:20 -耗时 : 15
2019-05-16 19:53:20 -返回值 : com.bootdo.common.utils.PageUtils@20c7c7de
2019-05-16 19:54:15 -请求地址 : http://localhost:8081/index
2019-05-16 19:54:15 -HTTP METHOD : GET
2019-05-16 19:54:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 19:54:15 -参数 : [{}]
2019-05-16 19:54:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 19:54:15 -==> Parameters: 1(Long)
2019-05-16 19:54:15 -<==      Total: 49
2019-05-16 19:54:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 19:54:15 -==> Parameters: 138(Long)
2019-05-16 19:54:15 -<==      Total: 1
2019-05-16 19:54:15 -耗时 : 26
2019-05-16 19:54:15 -返回值 : index_v1
2019-05-16 19:54:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:54:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 19:54:15.302(Timestamp)
2019-05-16 19:54:15 -<==    Updates: 1
2019-05-16 19:54:15 -请求地址 : http://localhost:8081/main
2019-05-16 19:54:15 -HTTP METHOD : GET
2019-05-16 19:54:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:54:15 -参数 : []
2019-05-16 19:54:15 -耗时 : 0
2019-05-16 19:54:15 -返回值 : main
2019-05-16 19:54:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 19:54:15 -HTTP METHOD : GET
2019-05-16 19:54:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 19:54:15 -参数 : []
2019-05-16 19:54:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 19:54:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 19:54:15 -<==      Total: 0
2019-05-16 19:54:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 19:54:15 -==> Parameters: 1(Long), 0(String)
2019-05-16 19:54:15 -<==      Total: 1
2019-05-16 19:54:15 -耗时 : 5
2019-05-16 19:54:15 -返回值 : com.bootdo.common.utils.PageUtils@ea2a481
2019-05-16 19:54:15 -请求地址 : http://localhost:8081/main
2019-05-16 19:54:15 -HTTP METHOD : GET
2019-05-16 19:54:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:54:15 -参数 : []
2019-05-16 19:54:15 -耗时 : 1
2019-05-16 19:54:15 -返回值 : main
2019-05-16 19:54:17 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 19:54:17 -HTTP METHOD : GET
2019-05-16 19:54:17 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 19:54:17 -参数 : []
2019-05-16 19:54:17 -耗时 : 0
2019-05-16 19:54:17 -返回值 : water/waterPrice/waterPrice
2019-05-16 19:54:18 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 19:54:18 -HTTP METHOD : GET
2019-05-16 19:54:18 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 19:54:18 -参数 : [{limit=10, offset=0}]
2019-05-16 19:54:18 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 19:54:18 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 19:54:18 -<==      Total: 2
2019-05-16 19:54:18 -==>  Preparing: select count(*) from water_price 
2019-05-16 19:54:18 -==> Parameters: 
2019-05-16 19:54:18 -<==      Total: 1
2019-05-16 19:54:18 -耗时 : 7
2019-05-16 19:54:18 -返回值 : com.bootdo.common.utils.PageUtils@3fb4bb5a
2019-05-16 19:54:34 -请求地址 : http://localhost:8081/login;JSESSIONID=4512b350-aea3-494e-abd2-72afcfddbc01
2019-05-16 19:54:34 -HTTP METHOD : GET
2019-05-16 19:54:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 19:54:34 -参数 : [{}]
2019-05-16 19:54:34 -耗时 : 0
2019-05-16 19:54:34 -返回值 : login
2019-05-16 19:54:34 -请求地址 : http://localhost:8081/getVerify
2019-05-16 19:54:34 -HTTP METHOD : GET
2019-05-16 19:54:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 19:54:34 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5ee976a7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3053eeb4]
2019-05-16 19:54:34 -4892
2019-05-16 19:54:34 -耗时 : 9
2019-05-16 19:54:34 -返回值 : null
2019-05-16 19:54:34 -请求地址 : http://localhost:8081/login
2019-05-16 19:54:34 -HTTP METHOD : GET
2019-05-16 19:54:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 19:54:34 -参数 : [{}]
2019-05-16 19:54:34 -耗时 : 0
2019-05-16 19:54:34 -返回值 : login
2019-05-16 19:54:40 -请求地址 : http://localhost:8081/login
2019-05-16 19:54:40 -HTTP METHOD : POST
2019-05-16 19:54:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 19:54:40 -参数 : [admin, 111111, 4892, org.apache.shiro.web.servlet.ShiroHttpServletRequest@556d6671]
2019-05-16 19:54:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 19:54:40 -==> Parameters: admin(String)
2019-05-16 19:54:40 -<==      Total: 1
2019-05-16 19:54:40 -耗时 : 7
2019-05-16 19:54:40 -返回值 : {msg=操作成功, code=0}
2019-05-16 19:54:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:54:40 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 19:54:40.153(Timestamp)
2019-05-16 19:54:40 -请求地址 : http://localhost:8081/index
2019-05-16 19:54:40 -HTTP METHOD : GET
2019-05-16 19:54:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 19:54:40 -参数 : [{}]
2019-05-16 19:54:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 19:54:40 -==> Parameters: 1(Long)
2019-05-16 19:54:40 -<==    Updates: 1
2019-05-16 19:54:40 -<==      Total: 49
2019-05-16 19:54:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 19:54:40 -==> Parameters: 138(Long)
2019-05-16 19:54:40 -<==      Total: 1
2019-05-16 19:54:40 -耗时 : 25
2019-05-16 19:54:40 -返回值 : index_v1
2019-05-16 19:54:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:54:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 19:54:40.203(Timestamp)
2019-05-16 19:54:40 -<==    Updates: 1
2019-05-16 19:54:40 -请求地址 : http://localhost:8081/main
2019-05-16 19:54:40 -HTTP METHOD : GET
2019-05-16 19:54:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:54:40 -参数 : []
2019-05-16 19:54:40 -耗时 : 0
2019-05-16 19:54:40 -返回值 : main
2019-05-16 19:54:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 19:54:40 -HTTP METHOD : GET
2019-05-16 19:54:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 19:54:40 -参数 : []
2019-05-16 19:54:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 19:54:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 19:54:40 -<==      Total: 0
2019-05-16 19:54:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 19:54:40 -==> Parameters: 1(Long), 0(String)
2019-05-16 19:54:40 -<==      Total: 1
2019-05-16 19:54:40 -耗时 : 8
2019-05-16 19:54:40 -返回值 : com.bootdo.common.utils.PageUtils@3732cad0
2019-05-16 19:54:40 -请求地址 : http://localhost:8081/main
2019-05-16 19:54:40 -HTTP METHOD : GET
2019-05-16 19:54:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:54:40 -参数 : []
2019-05-16 19:54:40 -耗时 : 1
2019-05-16 19:54:40 -返回值 : main
2019-05-16 19:54:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 19:54:42 -==> Parameters: 1(Long)
2019-05-16 19:54:42 -<==      Total: 93
2019-05-16 19:54:42 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 19:54:42 -HTTP METHOD : GET
2019-05-16 19:54:42 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 19:54:42 -参数 : []
2019-05-16 19:54:42 -耗时 : 0
2019-05-16 19:54:42 -返回值 : water/waterPrice/waterPrice
2019-05-16 19:54:43 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 19:54:43 -HTTP METHOD : GET
2019-05-16 19:54:43 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 19:54:43 -参数 : [{limit=10, offset=0}]
2019-05-16 19:54:43 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 19:54:43 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 19:54:43 -<==      Total: 2
2019-05-16 19:54:43 -==>  Preparing: select count(*) from water_price 
2019-05-16 19:54:43 -==> Parameters: 
2019-05-16 19:54:43 -<==      Total: 1
2019-05-16 19:54:43 -耗时 : 7
2019-05-16 19:54:43 -返回值 : com.bootdo.common.utils.PageUtils@7aab324b
2019-05-16 19:58:55 -Starting BootdoApplication on PC-201905091110 with PID 31888 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 19:58:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 19:58:55 -The following profiles are active: dev
2019-05-16 19:58:56 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 19:58:56 CST 2019]; root of context hierarchy
2019-05-16 19:58:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 19:59:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:59:00 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:59:01 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:59:01 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:59:01 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:59:01 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 19:59:01 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 19:59:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:59:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:59:01 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:59:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 19:59:02 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 19:59:02 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 19:59:02 -Starting service [Tomcat]
2019-05-16 19:59:02 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 19:59:02 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 19:59:02 -Initializing Spring embedded WebApplicationContext
2019-05-16 19:59:02 -Root WebApplicationContext: initialization completed in 6681 ms
2019-05-16 19:59:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 19:59:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 19:59:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 19:59:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 19:59:03 -Filter xssFilter was not registered (disabled)
2019-05-16 19:59:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 19:59:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 19:59:03 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 19:59:03 -Servlet dispatcherServlet mapped to [/]
2019-05-16 19:59:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 19:58:56 CST 2019]; root of context hierarchy
2019-05-16 19:59:08 -Using default implementation for ThreadExecutor
2019-05-16 19:59:08 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 19:59:08 -Quartz Scheduler v.2.2.1 created.
2019-05-16 19:59:08 -RAMJobStore initialized.
2019-05-16 19:59:08 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 19:59:08 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 19:59:08 -Quartz scheduler version: 2.2.1
2019-05-16 19:59:08 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7e18ced7
2019-05-16 19:59:08 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 19:59:08 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 19:59:10 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 19:59:10 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:59:10 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 19:59:10 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:59:10 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 19:59:10 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 19:59:10 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:59:10 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 19:59:10 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:59:10 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 19:59:10 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:59:10 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 19:59:10 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 19:59:10 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 19:59:10 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 19:59:10 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 19:59:10 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:59:10 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 19:59:10 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 19:59:10 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 19:59:10 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 19:59:10 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 19:59:10 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 19:59:10 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 19:59:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 19:59:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 19:59:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 19:59:10 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 19:59:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 19:59:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 19:59:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 19:59:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 19:59:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 19:59:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 19:59:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 19:59:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 19:59:10 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 19:59:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 19:59:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 19:59:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 19:59:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 19:59:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 19:59:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 19:59:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 19:59:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 19:59:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 19:59:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 19:59:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 19:59:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 19:59:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 19:59:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 19:59:10 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 19:59:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 19:59:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 19:59:10 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 19:59:10 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 19:59:10 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:10 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 19:59:10 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 19:59:10 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 19:59:10 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:10 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 19:59:10 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 19:59:10 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 19:59:10 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:59:11 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 19:59:11 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:59:11 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:59:11 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 19:59:11 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 19:59:11 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:11 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 19:59:11 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:11 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 19:59:11 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 19:59:11 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 19:59:11 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 19:59:11 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 19:59:11 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 19:59:11 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:11 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 19:59:11 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 19:59:11 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 19:59:11 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 19:59:11 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 19:59:11 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 19:59:11 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:11 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 19:59:11 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:11 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 19:59:11 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 19:59:11 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 19:59:11 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 19:59:11 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 19:59:11 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 19:59:11 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:11 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 19:59:11 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 19:59:11 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 19:59:11 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 19:59:11 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 19:59:11 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 19:59:11 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 19:59:11 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 19:59:11 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 19:59:11 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 19:59:11 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 19:59:11 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 19:59:11 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 19:59:11 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 19:59:11 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 19:59:11 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 19:59:11 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 19:59:11 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 19:59:11 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 19:59:11 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 19:59:11 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 19:59:11 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 19:59:11 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 19:59:11 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 19:59:11 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:11 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 19:59:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 19:59:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 19:59:11 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 19:59:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 19:59:11 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 19:59:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 19:59:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 19:59:11 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 19:59:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 19:59:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 19:59:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 19:59:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 19:59:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 19:59:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 19:59:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 19:59:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 19:59:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 19:59:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 19:59:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 19:59:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 19:59:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 19:59:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 19:59:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 19:59:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 19:59:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 19:59:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 19:59:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 19:59:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 19:59:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 19:59:11 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 19:59:11 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 19:59:11 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 19:59:11 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:11 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 19:59:11 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:11 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 19:59:11 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 19:59:11 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 19:59:11 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 19:59:11 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 19:59:11 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 19:59:11 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 19:59:11 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 19:59:11 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 19:59:11 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 19:59:11 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 19:59:11 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 19:59:11 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 19:59:11 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 19:59:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 19:59:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 19:59:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 19:59:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 19:59:11 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 19:59:11 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 19:59:11 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 19:59:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:59:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 19:58:56 CST 2019]; root of context hierarchy
2019-05-16 19:59:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:59:12 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:59:12 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 19:59:12 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 19:59:12 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 19:59:14 -Registering beans for JMX exposure on startup
2019-05-16 19:59:14 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 19:59:14 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 19:59:14 -Starting beans in phase 2147483647
2019-05-16 19:59:14 -Context refreshed
2019-05-16 19:59:14 -Found 1 custom documentation plugin(s)
2019-05-16 19:59:14 -Scanning for api listing references
2019-05-16 19:59:15 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 19:59:15 -Generating unique operation named: removeUsingPOST_1
2019-05-16 19:59:15 -Generating unique operation named: addUsingGET_1
2019-05-16 19:59:15 -Generating unique operation named: editUsingGET_1
2019-05-16 19:59:15 -Generating unique operation named: listUsingGET_1
2019-05-16 19:59:15 -Generating unique operation named: removeUsingPOST_2
2019-05-16 19:59:15 -Generating unique operation named: removeUsingPOST_3
2019-05-16 19:59:15 -Generating unique operation named: saveUsingPOST_1
2019-05-16 19:59:15 -Generating unique operation named: updateUsingGET_1
2019-05-16 19:59:15 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPOST_1
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPUT_1
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 19:59:15 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 19:59:15 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 19:59:15 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 19:59:15 -Generating unique operation named: addUsingGET_2
2019-05-16 19:59:15 -Generating unique operation named: editUsingGET_2
2019-05-16 19:59:15 -Generating unique operation named: listUsingGET_2
2019-05-16 19:59:15 -Generating unique operation named: removeUsingPOST_4
2019-05-16 19:59:15 -Generating unique operation named: removeUsingPOST_5
2019-05-16 19:59:15 -Generating unique operation named: saveUsingPOST_2
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPOST_2
2019-05-16 19:59:15 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 19:59:15 -Generating unique operation named: addUsingGET_3
2019-05-16 19:59:15 -Generating unique operation named: editUsingGET_3
2019-05-16 19:59:15 -Generating unique operation named: listUsingGET_3
2019-05-16 19:59:15 -Generating unique operation named: removeUsingPOST_6
2019-05-16 19:59:15 -Generating unique operation named: removeUsingPOST_7
2019-05-16 19:59:15 -Generating unique operation named: saveUsingPOST_3
2019-05-16 19:59:15 -Generating unique operation named: updateUsingGET_2
2019-05-16 19:59:15 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPOST_3
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPUT_2
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 19:59:15 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 19:59:15 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 19:59:15 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 19:59:15 -Generating unique operation named: addUsingGET_4
2019-05-16 19:59:15 -Generating unique operation named: editUsingGET_4
2019-05-16 19:59:15 -Generating unique operation named: listUsingGET_4
2019-05-16 19:59:15 -Generating unique operation named: removeUsingPOST_8
2019-05-16 19:59:15 -Generating unique operation named: removeUsingPOST_9
2019-05-16 19:59:15 -Generating unique operation named: saveUsingPOST_4
2019-05-16 19:59:15 -Generating unique operation named: updateUsingGET_3
2019-05-16 19:59:15 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPOST_4
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPUT_3
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 19:59:15 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 19:59:15 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 19:59:15 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 19:59:15 -Generating unique operation named: ElecUsingGET_1
2019-05-16 19:59:15 -Generating unique operation named: addUsingGET_5
2019-05-16 19:59:15 -Generating unique operation named: editUsingGET_5
2019-05-16 19:59:15 -Generating unique operation named: listUsingGET_5
2019-05-16 19:59:15 -Generating unique operation named: removeUsingPOST_10
2019-05-16 19:59:15 -Generating unique operation named: removeUsingPOST_11
2019-05-16 19:59:15 -Generating unique operation named: saveUsingPOST_5
2019-05-16 19:59:15 -Generating unique operation named: updateUsingGET_4
2019-05-16 19:59:15 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPOST_5
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPUT_4
2019-05-16 19:59:15 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 19:59:15 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 19:59:16 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 19:59:16 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 19:59:16 -Generating unique operation named: editUsingGET_6
2019-05-16 19:59:16 -Generating unique operation named: listUsingGET_6
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPOST_6
2019-05-16 19:59:16 -Generating unique operation named: addUsingGET_6
2019-05-16 19:59:16 -Generating unique operation named: editUsingGET_7
2019-05-16 19:59:16 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 19:59:16 -Generating unique operation named: listUsingGET_7
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_12
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_13
2019-05-16 19:59:16 -Generating unique operation named: saveUsingPOST_6
2019-05-16 19:59:16 -Generating unique operation named: updateUsingGET_5
2019-05-16 19:59:16 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPOST_7
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPUT_5
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 19:59:16 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 19:59:16 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 19:59:16 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 19:59:16 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 19:59:16 -Generating unique operation named: addUsingGET_7
2019-05-16 19:59:16 -Generating unique operation named: editUsingGET_8
2019-05-16 19:59:16 -Generating unique operation named: listUsingGET_8
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_14
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_15
2019-05-16 19:59:16 -Generating unique operation named: saveUsingPOST_7
2019-05-16 19:59:16 -Generating unique operation named: updateUsingGET_6
2019-05-16 19:59:16 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPOST_8
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPUT_6
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 19:59:16 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 19:59:16 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 19:59:16 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 19:59:16 -Generating unique operation named: addUsingGET_8
2019-05-16 19:59:16 -Generating unique operation named: editUsingGET_9
2019-05-16 19:59:16 -Generating unique operation named: listUsingGET_9
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_16
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_17
2019-05-16 19:59:16 -Generating unique operation named: saveUsingPOST_8
2019-05-16 19:59:16 -Generating unique operation named: updateUsingGET_7
2019-05-16 19:59:16 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPOST_9
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPUT_7
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 19:59:16 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 19:59:16 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 19:59:16 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 19:59:16 -Generating unique operation named: addUsingGET_9
2019-05-16 19:59:16 -Generating unique operation named: editUsingGET_10
2019-05-16 19:59:16 -Generating unique operation named: infoUsingGET_1
2019-05-16 19:59:16 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 19:59:16 -Generating unique operation named: infoUsingPOST_1
2019-05-16 19:59:16 -Generating unique operation named: infoUsingPUT_1
2019-05-16 19:59:16 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 19:59:16 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 19:59:16 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 19:59:16 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 19:59:16 -Generating unique operation named: listUsingGET_10
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_18
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_19
2019-05-16 19:59:16 -Generating unique operation named: saveUsingPOST_9
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPOST_10
2019-05-16 19:59:16 -Generating unique operation named: listUsingGET_11
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_20
2019-05-16 19:59:16 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 19:59:16 -Generating unique operation named: addUsingGET_10
2019-05-16 19:59:16 -Generating unique operation named: editUsingGET_11
2019-05-16 19:59:16 -Generating unique operation named: listUsingGET_12
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_21
2019-05-16 19:59:16 -Generating unique operation named: saveUsingPOST_10
2019-05-16 19:59:16 -Generating unique operation named: treeUsingGET_1
2019-05-16 19:59:16 -Generating unique operation named: treeUsingGET_2
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPOST_11
2019-05-16 19:59:16 -Generating unique operation named: addUsingGET_11
2019-05-16 19:59:16 -Generating unique operation named: editUsingGET_12
2019-05-16 19:59:16 -Generating unique operation named: listUsingGET_13
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_22
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_23
2019-05-16 19:59:16 -Generating unique operation named: saveUsingPOST_11
2019-05-16 19:59:16 -Generating unique operation named: updateUsingGET_8
2019-05-16 19:59:16 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPOST_12
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPUT_8
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 19:59:16 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 19:59:16 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 19:59:16 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 19:59:16 -Generating unique operation named: addUsingGET_12
2019-05-16 19:59:16 -Generating unique operation named: editUsingGET_13
2019-05-16 19:59:16 -Generating unique operation named: listUsingGET_14
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_24
2019-05-16 19:59:16 -Generating unique operation named: removeUsingPOST_25
2019-05-16 19:59:16 -Generating unique operation named: saveUsingPOST_12
2019-05-16 19:59:16 -Generating unique operation named: updateUsingGET_9
2019-05-16 19:59:16 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPOST_13
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPUT_9
2019-05-16 19:59:16 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 19:59:16 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 19:59:16 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 19:59:16 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 19:59:16 -Generating unique operation named: addUsingGET_13
2019-05-16 19:59:16 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 19:59:16 -Generating unique operation named: editUsingGET_14
2019-05-16 19:59:16 -Generating unique operation named: listUsingGET_15
2019-05-16 19:59:17 -Generating unique operation named: saveUsingPOST_13
2019-05-16 19:59:17 -Generating unique operation named: saveUsingPOST_14
2019-05-16 19:59:17 -Generating unique operation named: updateUsingPOST_14
2019-05-16 19:59:17 -Generating unique operation named: listUsingGET_16
2019-05-16 19:59:17 -Generating unique operation named: listUsingHEAD_1
2019-05-16 19:59:17 -Generating unique operation named: listUsingPOST_1
2019-05-16 19:59:17 -Generating unique operation named: listUsingPUT_1
2019-05-16 19:59:17 -Generating unique operation named: listUsingPATCH_1
2019-05-16 19:59:17 -Generating unique operation named: listUsingDELETE_1
2019-05-16 19:59:17 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 19:59:17 -Generating unique operation named: listUsingTRACE_1
2019-05-16 19:59:17 -Generating unique operation named: countDDUsingGET_1
2019-05-16 19:59:17 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 19:59:17 -Generating unique operation named: addUsingGET_14
2019-05-16 19:59:17 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 19:59:17 -Generating unique operation named: editUsingGET_15
2019-05-16 19:59:17 -Generating unique operation named: listUsingGET_17
2019-05-16 19:59:17 -Generating unique operation named: removeUsingPOST_26
2019-05-16 19:59:17 -Generating unique operation named: saveUsingPOST_15
2019-05-16 19:59:17 -Generating unique operation named: treeUsingGET_3
2019-05-16 19:59:17 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 19:59:17 -Generating unique operation named: updateUsingPOST_15
2019-05-16 19:59:17 -Generating unique operation named: addUsingGET_15
2019-05-16 19:59:17 -Generating unique operation named: editUsingGET_16
2019-05-16 19:59:17 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 19:59:17 -Generating unique operation named: listUsingGET_18
2019-05-16 19:59:17 -Generating unique operation named: removeUsingPOST_27
2019-05-16 19:59:17 -Generating unique operation named: removeUsingPOST_28
2019-05-16 19:59:17 -Generating unique operation named: saveUsingPOST_16
2019-05-16 19:59:17 -Generating unique operation named: updateUsingGET_10
2019-05-16 19:59:17 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 19:59:17 -Generating unique operation named: updateUsingPOST_16
2019-05-16 19:59:17 -Generating unique operation named: updateUsingPUT_10
2019-05-16 19:59:17 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 19:59:17 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 19:59:17 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 19:59:17 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 19:59:17 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 19:59:17 -Generating unique operation named: addUsingGET_16
2019-05-16 19:59:17 -Generating unique operation named: editUsingGET_17
2019-05-16 19:59:17 -Generating unique operation named: listUsingGET_19
2019-05-16 19:59:17 -Generating unique operation named: removeUsingPOST_29
2019-05-16 19:59:17 -Generating unique operation named: removeUsingPOST_30
2019-05-16 19:59:17 -Generating unique operation named: saveUsingPOST_17
2019-05-16 19:59:17 -Generating unique operation named: updateUsingGET_11
2019-05-16 19:59:17 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 19:59:17 -Generating unique operation named: updateUsingPOST_17
2019-05-16 19:59:17 -Generating unique operation named: updateUsingPUT_11
2019-05-16 19:59:17 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 19:59:17 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 19:59:17 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 19:59:17 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 19:59:17 -Generating unique operation named: addUsingGET_17
2019-05-16 19:59:17 -Generating unique operation named: editUsingGET_18
2019-05-16 19:59:17 -Generating unique operation named: listUsingGET_20
2019-05-16 19:59:17 -Generating unique operation named: removeUsingPOST_31
2019-05-16 19:59:17 -Generating unique operation named: removeUsingPOST_32
2019-05-16 19:59:17 -Generating unique operation named: saveUsingPOST_18
2019-05-16 19:59:17 -Generating unique operation named: updateUsingGET_12
2019-05-16 19:59:17 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 19:59:17 -Generating unique operation named: updateUsingPOST_18
2019-05-16 19:59:17 -Generating unique operation named: updateUsingPUT_12
2019-05-16 19:59:17 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 19:59:17 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 19:59:17 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 19:59:17 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 19:59:17 -Starting Quartz Scheduler now
2019-05-16 19:59:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 19:59:17 -Starting...
2019-05-16 19:59:17 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 19:59:17 -Started.
2019-05-16 19:59:17 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 19:59:17 -Using a shared selector for servlet write/read
2019-05-16 19:59:17 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 19:59:17 -Started BootdoApplication in 22.728 seconds (JVM running for 23.457)
2019-05-16 19:59:17 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 19:59:17 -==> Parameters: 
2019-05-16 19:59:17 -<==      Total: 1
2019-05-16 19:59:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 19:59:24 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 19:59:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2019-05-16 19:59:24 -Enabling session validation scheduler...
2019-05-16 19:59:24 -请求地址 : http://localhost:8081/login;JSESSIONID=66c747f1-f02b-441a-9715-9a27e6e28b32
2019-05-16 19:59:24 -HTTP METHOD : GET
2019-05-16 19:59:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 19:59:24 -参数 : [{}]
2019-05-16 19:59:24 -耗时 : 5
2019-05-16 19:59:24 -返回值 : login
2019-05-16 19:59:26 -请求地址 : http://localhost:8081/getVerify
2019-05-16 19:59:26 -HTTP METHOD : GET
2019-05-16 19:59:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 19:59:26 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2fcb9d94, org.apache.shiro.web.servlet.ShiroHttpServletResponse@63de8e37]
2019-05-16 19:59:26 -3904
2019-05-16 19:59:26 -耗时 : 482
2019-05-16 19:59:26 -返回值 : null
2019-05-16 19:59:26 -请求地址 : http://localhost:8081/login
2019-05-16 19:59:26 -HTTP METHOD : GET
2019-05-16 19:59:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 19:59:26 -参数 : [{}]
2019-05-16 19:59:26 -耗时 : 1
2019-05-16 19:59:26 -返回值 : login
2019-05-16 19:59:32 -请求地址 : http://localhost:8081/login
2019-05-16 19:59:32 -HTTP METHOD : POST
2019-05-16 19:59:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 19:59:32 -参数 : [admin, 111111, 3904, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6d89c74c]
2019-05-16 19:59:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 19:59:32 -==> Parameters: admin(String)
2019-05-16 19:59:32 -<==      Total: 1
2019-05-16 19:59:32 -耗时 : 105
2019-05-16 19:59:32 -返回值 : {msg=操作成功, code=0}
2019-05-16 19:59:32 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 19:59:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:59:32 -==> Parameters: 1(Long), admin(String), 登录(String), 106(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 19:59:32.404(Timestamp)
2019-05-16 19:59:32 -<==    Updates: 1
2019-05-16 19:59:32 -请求地址 : http://localhost:8081/index
2019-05-16 19:59:32 -HTTP METHOD : GET
2019-05-16 19:59:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 19:59:32 -参数 : [{}]
2019-05-16 19:59:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 19:59:32 -==> Parameters: 1(Long)
2019-05-16 19:59:32 -<==      Total: 49
2019-05-16 19:59:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 19:59:32 -==> Parameters: 138(Long)
2019-05-16 19:59:32 -<==      Total: 1
2019-05-16 19:59:32 -耗时 : 159
2019-05-16 19:59:32 -返回值 : index_v1
2019-05-16 19:59:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 19:59:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 159(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 19:59:32.684(Timestamp)
2019-05-16 19:59:32 -<==    Updates: 1
2019-05-16 19:59:32 -请求地址 : http://localhost:8081/main
2019-05-16 19:59:32 -HTTP METHOD : GET
2019-05-16 19:59:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:59:32 -参数 : []
2019-05-16 19:59:32 -耗时 : 0
2019-05-16 19:59:32 -返回值 : main
2019-05-16 19:59:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 19:59:33 -HTTP METHOD : GET
2019-05-16 19:59:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 19:59:33 -参数 : []
2019-05-16 19:59:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 19:59:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 19:59:33 -<==      Total: 0
2019-05-16 19:59:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 19:59:33 -==> Parameters: 1(Long), 0(String)
2019-05-16 19:59:33 -<==      Total: 1
2019-05-16 19:59:33 -耗时 : 39
2019-05-16 19:59:33 -返回值 : com.bootdo.common.utils.PageUtils@1798e443
2019-05-16 19:59:33 -请求地址 : http://localhost:8081/main
2019-05-16 19:59:33 -HTTP METHOD : GET
2019-05-16 19:59:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 19:59:33 -参数 : []
2019-05-16 19:59:33 -耗时 : 0
2019-05-16 19:59:33 -返回值 : main
2019-05-16 19:59:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 19:59:37 -==> Parameters: 1(Long)
2019-05-16 19:59:37 -<==      Total: 93
2019-05-16 19:59:37 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 19:59:37 -HTTP METHOD : GET
2019-05-16 19:59:37 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 19:59:37 -参数 : []
2019-05-16 19:59:37 -耗时 : 1
2019-05-16 19:59:37 -返回值 : water/waterPrice/waterPrice
2019-05-16 19:59:38 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 19:59:38 -HTTP METHOD : GET
2019-05-16 19:59:38 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 19:59:38 -参数 : [{limit=10, offset=0}]
2019-05-16 19:59:38 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 19:59:38 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 19:59:38 -<==      Total: 2
2019-05-16 19:59:38 -==>  Preparing: select count(*) from water_price 
2019-05-16 19:59:38 -==> Parameters: 
2019-05-16 19:59:38 -<==      Total: 1
2019-05-16 19:59:38 -耗时 : 33
2019-05-16 19:59:38 -返回值 : com.bootdo.common.utils.PageUtils@4d3b18ab
2019-05-16 20:00:11 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-05-16 20:13:30 -Starting BootdoApplication on PC-201905091110 with PID 3672 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 20:13:30 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 20:13:30 -The following profiles are active: dev
2019-05-16 20:13:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 20:13:31 CST 2019]; root of context hierarchy
2019-05-16 20:13:34 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 20:13:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$71fd8325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:13:36 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6456b1cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:13:37 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:13:37 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:13:37 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:13:37 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 20:13:37 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 20:13:37 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:13:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:13:37 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:13:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:13:38 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 20:13:38 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 20:13:38 -Starting service [Tomcat]
2019-05-16 20:13:38 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 20:13:38 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 20:13:39 -Initializing Spring embedded WebApplicationContext
2019-05-16 20:13:39 -Root WebApplicationContext: initialization completed in 8100 ms
2019-05-16 20:13:39 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 20:13:39 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 20:13:39 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 20:13:39 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 20:13:39 -Filter xssFilter was not registered (disabled)
2019-05-16 20:13:39 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 20:13:39 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 20:13:39 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 20:13:39 -Servlet dispatcherServlet mapped to [/]
2019-05-16 20:13:44 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 20:13:31 CST 2019]; root of context hierarchy
2019-05-16 20:13:45 -Using default implementation for ThreadExecutor
2019-05-16 20:13:45 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 20:13:45 -Quartz Scheduler v.2.2.1 created.
2019-05-16 20:13:45 -RAMJobStore initialized.
2019-05-16 20:13:45 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 20:13:45 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 20:13:45 -Quartz scheduler version: 2.2.1
2019-05-16 20:13:45 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@221b77d7
2019-05-16 20:13:45 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 20:13:45 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 20:13:48 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 20:13:48 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:13:48 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 20:13:48 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:13:48 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 20:13:48 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 20:13:48 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 20:13:48 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:13:48 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:13:48 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 20:13:48 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:13:48 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 20:13:48 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 20:13:48 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 20:13:48 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 20:13:48 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 20:13:48 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:13:48 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 20:13:48 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:13:48 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 20:13:48 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 20:13:48 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 20:13:48 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 20:13:48 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 20:13:48 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 20:13:48 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 20:13:48 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 20:13:48 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 20:13:48 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 20:13:48 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 20:13:48 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 20:13:48 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 20:13:48 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 20:13:48 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 20:13:48 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 20:13:48 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 20:13:48 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 20:13:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 20:13:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 20:13:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 20:13:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 20:13:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 20:13:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 20:13:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 20:13:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 20:13:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 20:13:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 20:13:48 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 20:13:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 20:13:48 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:13:48 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 20:13:48 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:13:48 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:13:48 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:13:48 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 20:13:48 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 20:13:48 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 20:13:48 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 20:13:48 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 20:13:48 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 20:13:48 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 20:13:48 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 20:13:48 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 20:13:48 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 20:13:48 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 20:13:48 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 20:13:48 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 20:13:48 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 20:13:48 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 20:13:48 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 20:13:48 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 20:13:48 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 20:13:48 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 20:13:48 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 20:13:48 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 20:13:48 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 20:13:48 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 20:13:48 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 20:13:48 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 20:13:48 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 20:13:48 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 20:13:48 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 20:13:48 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 20:13:48 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 20:13:48 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 20:13:48 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 20:13:48 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 20:13:48 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 20:13:48 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 20:13:48 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 20:13:48 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 20:13:48 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 20:13:48 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 20:13:48 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 20:13:48 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 20:13:48 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 20:13:48 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 20:13:48 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 20:13:48 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 20:13:48 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 20:13:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 20:13:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 20:13:48 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 20:13:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 20:13:48 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 20:13:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 20:13:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 20:13:48 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 20:13:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 20:13:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 20:13:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 20:13:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 20:13:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 20:13:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 20:13:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 20:13:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 20:13:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 20:13:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 20:13:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 20:13:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 20:13:48 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 20:13:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 20:13:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 20:13:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 20:13:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 20:13:48 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 20:13:48 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 20:13:48 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 20:13:48 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 20:13:48 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 20:13:48 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 20:13:48 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 20:13:48 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 20:13:48 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 20:13:48 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 20:13:48 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 20:13:48 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 20:13:48 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 20:13:48 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 20:13:48 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:13:48 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 20:13:48 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 20:13:48 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:13:48 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 20:13:48 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 20:13:48 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:13:48 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 20:13:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 20:13:48 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 20:13:48 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 20:13:48 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 20:13:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 20:13:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 20:13:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 20:13:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:13:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 20:13:31 CST 2019]; root of context hierarchy
2019-05-16 20:13:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:13:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:13:50 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:13:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 20:13:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 20:13:51 -Registering beans for JMX exposure on startup
2019-05-16 20:13:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 20:13:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 20:13:51 -Starting beans in phase 2147483647
2019-05-16 20:13:51 -Context refreshed
2019-05-16 20:13:51 -Found 1 custom documentation plugin(s)
2019-05-16 20:13:51 -Scanning for api listing references
2019-05-16 20:13:52 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 20:13:52 -Generating unique operation named: removeUsingPOST_1
2019-05-16 20:13:52 -Generating unique operation named: addUsingGET_1
2019-05-16 20:13:52 -Generating unique operation named: editUsingGET_1
2019-05-16 20:13:52 -Generating unique operation named: listUsingGET_1
2019-05-16 20:13:52 -Generating unique operation named: removeUsingPOST_2
2019-05-16 20:13:52 -Generating unique operation named: removeUsingPOST_3
2019-05-16 20:13:52 -Generating unique operation named: saveUsingPOST_1
2019-05-16 20:13:52 -Generating unique operation named: updateUsingGET_1
2019-05-16 20:13:52 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 20:13:52 -Generating unique operation named: updateUsingPOST_1
2019-05-16 20:13:52 -Generating unique operation named: updateUsingPUT_1
2019-05-16 20:13:52 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 20:13:52 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 20:13:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 20:13:52 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 20:13:52 -Generating unique operation named: addUsingGET_2
2019-05-16 20:13:52 -Generating unique operation named: editUsingGET_2
2019-05-16 20:13:52 -Generating unique operation named: listUsingGET_2
2019-05-16 20:13:52 -Generating unique operation named: removeUsingPOST_4
2019-05-16 20:13:52 -Generating unique operation named: removeUsingPOST_5
2019-05-16 20:13:52 -Generating unique operation named: saveUsingPOST_2
2019-05-16 20:13:52 -Generating unique operation named: updateUsingPOST_2
2019-05-16 20:13:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 20:13:52 -Generating unique operation named: addUsingGET_3
2019-05-16 20:13:52 -Generating unique operation named: editUsingGET_3
2019-05-16 20:13:52 -Generating unique operation named: listUsingGET_3
2019-05-16 20:13:52 -Generating unique operation named: removeUsingPOST_6
2019-05-16 20:13:52 -Generating unique operation named: removeUsingPOST_7
2019-05-16 20:13:52 -Generating unique operation named: saveUsingPOST_3
2019-05-16 20:13:52 -Generating unique operation named: updateUsingGET_2
2019-05-16 20:13:52 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 20:13:52 -Generating unique operation named: updateUsingPOST_3
2019-05-16 20:13:52 -Generating unique operation named: updateUsingPUT_2
2019-05-16 20:13:52 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 20:13:52 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 20:13:52 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 20:13:52 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 20:13:52 -Generating unique operation named: addUsingGET_4
2019-05-16 20:13:52 -Generating unique operation named: editUsingGET_4
2019-05-16 20:13:52 -Generating unique operation named: listUsingGET_4
2019-05-16 20:13:52 -Generating unique operation named: removeUsingPOST_8
2019-05-16 20:13:52 -Generating unique operation named: removeUsingPOST_9
2019-05-16 20:13:52 -Generating unique operation named: saveUsingPOST_4
2019-05-16 20:13:52 -Generating unique operation named: updateUsingGET_3
2019-05-16 20:13:52 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 20:13:52 -Generating unique operation named: updateUsingPOST_4
2019-05-16 20:13:52 -Generating unique operation named: updateUsingPUT_3
2019-05-16 20:13:52 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 20:13:52 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 20:13:52 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 20:13:53 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 20:13:53 -Generating unique operation named: ElecUsingGET_1
2019-05-16 20:13:53 -Generating unique operation named: addUsingGET_5
2019-05-16 20:13:53 -Generating unique operation named: editUsingGET_5
2019-05-16 20:13:53 -Generating unique operation named: listUsingGET_5
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_10
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_11
2019-05-16 20:13:53 -Generating unique operation named: saveUsingPOST_5
2019-05-16 20:13:53 -Generating unique operation named: updateUsingGET_4
2019-05-16 20:13:53 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPOST_5
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPUT_4
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 20:13:53 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 20:13:53 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 20:13:53 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 20:13:53 -Generating unique operation named: editUsingGET_6
2019-05-16 20:13:53 -Generating unique operation named: listUsingGET_6
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPOST_6
2019-05-16 20:13:53 -Generating unique operation named: addUsingGET_6
2019-05-16 20:13:53 -Generating unique operation named: editUsingGET_7
2019-05-16 20:13:53 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 20:13:53 -Generating unique operation named: listUsingGET_7
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_12
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_13
2019-05-16 20:13:53 -Generating unique operation named: saveUsingPOST_6
2019-05-16 20:13:53 -Generating unique operation named: updateUsingGET_5
2019-05-16 20:13:53 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPOST_7
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPUT_5
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 20:13:53 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 20:13:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 20:13:53 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 20:13:53 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 20:13:53 -Generating unique operation named: addUsingGET_7
2019-05-16 20:13:53 -Generating unique operation named: editUsingGET_8
2019-05-16 20:13:53 -Generating unique operation named: listUsingGET_8
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_14
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_15
2019-05-16 20:13:53 -Generating unique operation named: saveUsingPOST_7
2019-05-16 20:13:53 -Generating unique operation named: updateUsingGET_6
2019-05-16 20:13:53 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPOST_8
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPUT_6
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 20:13:53 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 20:13:53 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 20:13:53 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 20:13:53 -Generating unique operation named: addUsingGET_8
2019-05-16 20:13:53 -Generating unique operation named: editUsingGET_9
2019-05-16 20:13:53 -Generating unique operation named: listUsingGET_9
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_16
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_17
2019-05-16 20:13:53 -Generating unique operation named: saveUsingPOST_8
2019-05-16 20:13:53 -Generating unique operation named: updateUsingGET_7
2019-05-16 20:13:53 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPOST_9
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPUT_7
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 20:13:53 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 20:13:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 20:13:53 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 20:13:53 -Generating unique operation named: addUsingGET_9
2019-05-16 20:13:53 -Generating unique operation named: editUsingGET_10
2019-05-16 20:13:53 -Generating unique operation named: infoUsingGET_1
2019-05-16 20:13:53 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 20:13:53 -Generating unique operation named: infoUsingPOST_1
2019-05-16 20:13:53 -Generating unique operation named: infoUsingPUT_1
2019-05-16 20:13:53 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 20:13:53 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 20:13:53 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 20:13:53 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 20:13:53 -Generating unique operation named: listUsingGET_10
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_18
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_19
2019-05-16 20:13:53 -Generating unique operation named: saveUsingPOST_9
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPOST_10
2019-05-16 20:13:53 -Generating unique operation named: listUsingGET_11
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_20
2019-05-16 20:13:53 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 20:13:53 -Generating unique operation named: addUsingGET_10
2019-05-16 20:13:53 -Generating unique operation named: editUsingGET_11
2019-05-16 20:13:53 -Generating unique operation named: listUsingGET_12
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_21
2019-05-16 20:13:53 -Generating unique operation named: saveUsingPOST_10
2019-05-16 20:13:53 -Generating unique operation named: treeUsingGET_1
2019-05-16 20:13:53 -Generating unique operation named: treeUsingGET_2
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPOST_11
2019-05-16 20:13:53 -Generating unique operation named: addUsingGET_11
2019-05-16 20:13:53 -Generating unique operation named: editUsingGET_12
2019-05-16 20:13:53 -Generating unique operation named: listUsingGET_13
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_22
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_23
2019-05-16 20:13:53 -Generating unique operation named: saveUsingPOST_11
2019-05-16 20:13:53 -Generating unique operation named: updateUsingGET_8
2019-05-16 20:13:53 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPOST_12
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPUT_8
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 20:13:53 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 20:13:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 20:13:53 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 20:13:53 -Generating unique operation named: addUsingGET_12
2019-05-16 20:13:53 -Generating unique operation named: editUsingGET_13
2019-05-16 20:13:53 -Generating unique operation named: listUsingGET_14
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_24
2019-05-16 20:13:53 -Generating unique operation named: removeUsingPOST_25
2019-05-16 20:13:53 -Generating unique operation named: saveUsingPOST_12
2019-05-16 20:13:53 -Generating unique operation named: updateUsingGET_9
2019-05-16 20:13:53 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPOST_13
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPUT_9
2019-05-16 20:13:53 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 20:13:53 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 20:13:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 20:13:53 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 20:13:53 -Generating unique operation named: addUsingGET_13
2019-05-16 20:13:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 20:13:54 -Generating unique operation named: editUsingGET_14
2019-05-16 20:13:54 -Generating unique operation named: listUsingGET_15
2019-05-16 20:13:54 -Generating unique operation named: saveUsingPOST_13
2019-05-16 20:13:54 -Generating unique operation named: saveUsingPOST_14
2019-05-16 20:13:54 -Generating unique operation named: updateUsingPOST_14
2019-05-16 20:13:54 -Generating unique operation named: listUsingGET_16
2019-05-16 20:13:54 -Generating unique operation named: listUsingHEAD_1
2019-05-16 20:13:54 -Generating unique operation named: listUsingPOST_1
2019-05-16 20:13:54 -Generating unique operation named: listUsingPUT_1
2019-05-16 20:13:54 -Generating unique operation named: listUsingPATCH_1
2019-05-16 20:13:54 -Generating unique operation named: listUsingDELETE_1
2019-05-16 20:13:54 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 20:13:54 -Generating unique operation named: listUsingTRACE_1
2019-05-16 20:13:54 -Generating unique operation named: countDDUsingGET_1
2019-05-16 20:13:54 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 20:13:54 -Generating unique operation named: addUsingGET_14
2019-05-16 20:13:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 20:13:54 -Generating unique operation named: editUsingGET_15
2019-05-16 20:13:54 -Generating unique operation named: listUsingGET_17
2019-05-16 20:13:54 -Generating unique operation named: removeUsingPOST_26
2019-05-16 20:13:54 -Generating unique operation named: saveUsingPOST_15
2019-05-16 20:13:54 -Generating unique operation named: treeUsingGET_3
2019-05-16 20:13:54 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 20:13:54 -Generating unique operation named: updateUsingPOST_15
2019-05-16 20:13:54 -Generating unique operation named: addUsingGET_15
2019-05-16 20:13:54 -Generating unique operation named: editUsingGET_16
2019-05-16 20:13:54 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 20:13:54 -Generating unique operation named: listUsingGET_18
2019-05-16 20:13:54 -Generating unique operation named: removeUsingPOST_27
2019-05-16 20:13:54 -Generating unique operation named: removeUsingPOST_28
2019-05-16 20:13:54 -Generating unique operation named: saveUsingPOST_16
2019-05-16 20:13:54 -Generating unique operation named: updateUsingGET_10
2019-05-16 20:13:54 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 20:13:54 -Generating unique operation named: updateUsingPOST_16
2019-05-16 20:13:54 -Generating unique operation named: updateUsingPUT_10
2019-05-16 20:13:54 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 20:13:54 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 20:13:54 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 20:13:54 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 20:13:54 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 20:13:54 -Generating unique operation named: addUsingGET_16
2019-05-16 20:13:54 -Generating unique operation named: editUsingGET_17
2019-05-16 20:13:54 -Generating unique operation named: listUsingGET_19
2019-05-16 20:13:54 -Generating unique operation named: removeUsingPOST_29
2019-05-16 20:13:54 -Generating unique operation named: removeUsingPOST_30
2019-05-16 20:13:54 -Generating unique operation named: saveUsingPOST_17
2019-05-16 20:13:54 -Generating unique operation named: updateUsingGET_11
2019-05-16 20:13:54 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 20:13:54 -Generating unique operation named: updateUsingPOST_17
2019-05-16 20:13:54 -Generating unique operation named: updateUsingPUT_11
2019-05-16 20:13:54 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 20:13:54 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 20:13:54 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 20:13:54 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 20:13:54 -Generating unique operation named: addUsingGET_17
2019-05-16 20:13:54 -Generating unique operation named: editUsingGET_18
2019-05-16 20:13:54 -Generating unique operation named: listUsingGET_20
2019-05-16 20:13:54 -Generating unique operation named: removeUsingPOST_31
2019-05-16 20:13:54 -Generating unique operation named: removeUsingPOST_32
2019-05-16 20:13:54 -Generating unique operation named: saveUsingPOST_18
2019-05-16 20:13:54 -Generating unique operation named: updateUsingGET_12
2019-05-16 20:13:54 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 20:13:54 -Generating unique operation named: updateUsingPOST_18
2019-05-16 20:13:54 -Generating unique operation named: updateUsingPUT_12
2019-05-16 20:13:54 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 20:13:54 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 20:13:54 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 20:13:54 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 20:13:54 -Starting Quartz Scheduler now
2019-05-16 20:13:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 20:13:54 -Starting...
2019-05-16 20:13:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 20:13:54 -Started.
2019-05-16 20:13:54 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 20:13:54 -Using a shared selector for servlet write/read
2019-05-16 20:13:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 20:13:54 -Started BootdoApplication in 24.935 seconds (JVM running for 25.683)
2019-05-16 20:13:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 20:13:54 -==> Parameters: 
2019-05-16 20:13:54 -<==      Total: 1
2019-05-16 20:14:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 20:14:18 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 20:14:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
2019-05-16 20:14:19 -Enabling session validation scheduler...
2019-05-16 20:14:19 -请求地址 : http://localhost:8081/login;JSESSIONID=ffc271ff-f6d3-4bf2-96b8-e354e608917d
2019-05-16 20:14:19 -HTTP METHOD : GET
2019-05-16 20:14:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 20:14:19 -参数 : [{}]
2019-05-16 20:14:19 -耗时 : 20
2019-05-16 20:14:19 -返回值 : login
2019-05-16 20:14:20 -请求地址 : http://localhost:8081/getVerify
2019-05-16 20:14:20 -HTTP METHOD : GET
2019-05-16 20:14:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 20:14:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@753beded, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3a7700e0]
2019-05-16 20:14:20 -4153
2019-05-16 20:14:21 -耗时 : 504
2019-05-16 20:14:21 -返回值 : null
2019-05-16 20:14:21 -请求地址 : http://localhost:8081/login
2019-05-16 20:14:21 -HTTP METHOD : GET
2019-05-16 20:14:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 20:14:21 -参数 : [{}]
2019-05-16 20:14:21 -耗时 : 1
2019-05-16 20:14:21 -返回值 : login
2019-05-16 20:14:27 -请求地址 : http://localhost:8081/login
2019-05-16 20:14:27 -HTTP METHOD : POST
2019-05-16 20:14:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 20:14:27 -参数 : [admin, 111111, 4153, org.apache.shiro.web.servlet.ShiroHttpServletRequest@57257acd]
2019-05-16 20:14:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 20:14:27 -==> Parameters: admin(String)
2019-05-16 20:14:27 -<==      Total: 1
2019-05-16 20:14:27 -耗时 : 84
2019-05-16 20:14:27 -返回值 : {msg=操作成功, code=0}
2019-05-16 20:14:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 20:14:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:14:27 -==> Parameters: 1(Long), admin(String), 登录(String), 84(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 20:14:27.249(Timestamp)
2019-05-16 20:14:27 -<==    Updates: 1
2019-05-16 20:14:27 -请求地址 : http://localhost:8081/index
2019-05-16 20:14:27 -HTTP METHOD : GET
2019-05-16 20:14:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:14:27 -参数 : [{}]
2019-05-16 20:14:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:14:27 -==> Parameters: 1(Long)
2019-05-16 20:14:27 -<==      Total: 49
2019-05-16 20:14:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:14:27 -==> Parameters: 138(Long)
2019-05-16 20:14:27 -<==      Total: 1
2019-05-16 20:14:27 -耗时 : 106
2019-05-16 20:14:27 -返回值 : index_v1
2019-05-16 20:14:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:14:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 107(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:14:27.47(Timestamp)
2019-05-16 20:14:27 -<==    Updates: 1
2019-05-16 20:14:27 -请求地址 : http://localhost:8081/main
2019-05-16 20:14:27 -HTTP METHOD : GET
2019-05-16 20:14:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:14:27 -参数 : []
2019-05-16 20:14:27 -耗时 : 0
2019-05-16 20:14:27 -返回值 : main
2019-05-16 20:14:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:14:28 -HTTP METHOD : GET
2019-05-16 20:14:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:14:28 -参数 : []
2019-05-16 20:14:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:14:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:14:28 -<==      Total: 0
2019-05-16 20:14:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:14:28 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:14:28 -<==      Total: 1
2019-05-16 20:14:28 -耗时 : 50
2019-05-16 20:14:28 -返回值 : com.bootdo.common.utils.PageUtils@43acacec
2019-05-16 20:14:28 -请求地址 : http://localhost:8081/main
2019-05-16 20:14:28 -HTTP METHOD : GET
2019-05-16 20:14:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:14:28 -参数 : []
2019-05-16 20:14:28 -耗时 : 0
2019-05-16 20:14:28 -返回值 : main
2019-05-16 20:14:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 20:14:29 -==> Parameters: 1(Long)
2019-05-16 20:14:29 -<==      Total: 93
2019-05-16 20:14:29 -请求地址 : http://localhost:8081/water/waterUpLoad
2019-05-16 20:14:29 -HTTP METHOD : GET
2019-05-16 20:14:29 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad
2019-05-16 20:14:29 -参数 : []
2019-05-16 20:14:29 -耗时 : 1
2019-05-16 20:14:29 -返回值 : water/waterUpLoad/waterUpLoad
2019-05-16 20:14:30 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:14:30 -HTTP METHOD : GET
2019-05-16 20:14:30 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:14:30 -参数 : []
2019-05-16 20:14:30 -耗时 : 1
2019-05-16 20:14:30 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:14:30 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:14:30 -HTTP METHOD : GET
2019-05-16 20:14:30 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:14:30 -参数 : [{limit=10, offset=0}]
2019-05-16 20:14:30 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:14:30 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:14:30 -<==      Total: 2
2019-05-16 20:14:30 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:14:30 -==> Parameters: 
2019-05-16 20:14:30 -<==      Total: 1
2019-05-16 20:14:30 -耗时 : 25
2019-05-16 20:14:30 -返回值 : com.bootdo.common.utils.PageUtils@3ea44d04
2019-05-16 20:14:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-16 20:20:25 -请求地址 : http://localhost:8081/index
2019-05-16 20:20:25 -HTTP METHOD : GET
2019-05-16 20:20:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:20:25 -参数 : [{}]
2019-05-16 20:20:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:20:25 -==> Parameters: 1(Long)
2019-05-16 20:20:25 -<==      Total: 49
2019-05-16 20:20:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:20:25 -==> Parameters: 138(Long)
2019-05-16 20:20:25 -<==      Total: 1
2019-05-16 20:20:25 -耗时 : 30
2019-05-16 20:20:25 -返回值 : index_v1
2019-05-16 20:20:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:20:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:20:25.841(Timestamp)
2019-05-16 20:20:25 -请求地址 : http://localhost:8081/main
2019-05-16 20:20:25 -HTTP METHOD : GET
2019-05-16 20:20:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:20:25 -参数 : []
2019-05-16 20:20:25 -耗时 : 1
2019-05-16 20:20:25 -返回值 : main
2019-05-16 20:20:26 -<==    Updates: 1
2019-05-16 20:20:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:20:26 -HTTP METHOD : GET
2019-05-16 20:20:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:20:26 -参数 : []
2019-05-16 20:20:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:20:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:20:26 -<==      Total: 0
2019-05-16 20:20:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:20:26 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:20:26 -<==      Total: 1
2019-05-16 20:20:26 -耗时 : 11
2019-05-16 20:20:26 -返回值 : com.bootdo.common.utils.PageUtils@7a935b41
2019-05-16 20:20:26 -请求地址 : http://localhost:8081/main
2019-05-16 20:20:26 -HTTP METHOD : GET
2019-05-16 20:20:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:20:26 -参数 : []
2019-05-16 20:20:26 -耗时 : 0
2019-05-16 20:20:26 -返回值 : main
2019-05-16 20:20:29 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:20:29 -HTTP METHOD : GET
2019-05-16 20:20:29 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:20:29 -参数 : []
2019-05-16 20:20:29 -耗时 : 1
2019-05-16 20:20:29 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:20:29 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:20:29 -HTTP METHOD : GET
2019-05-16 20:20:29 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:20:29 -参数 : [{limit=10, offset=0}]
2019-05-16 20:20:29 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:20:29 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:20:29 -<==      Total: 2
2019-05-16 20:20:29 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:20:29 -==> Parameters: 
2019-05-16 20:20:29 -<==      Total: 1
2019-05-16 20:20:29 -耗时 : 9
2019-05-16 20:20:29 -返回值 : com.bootdo.common.utils.PageUtils@7dc6405b
2019-05-16 20:20:55 -请求地址 : http://localhost:8081/index
2019-05-16 20:20:55 -HTTP METHOD : GET
2019-05-16 20:20:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:20:55 -参数 : [{}]
2019-05-16 20:20:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:20:55 -==> Parameters: 1(Long)
2019-05-16 20:20:55 -<==      Total: 49
2019-05-16 20:20:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:20:55 -==> Parameters: 138(Long)
2019-05-16 20:20:55 -<==      Total: 1
2019-05-16 20:20:55 -耗时 : 27
2019-05-16 20:20:55 -返回值 : index_v1
2019-05-16 20:20:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:20:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:20:55.469(Timestamp)
2019-05-16 20:20:55 -<==    Updates: 1
2019-05-16 20:20:55 -请求地址 : http://localhost:8081/main
2019-05-16 20:20:55 -HTTP METHOD : GET
2019-05-16 20:20:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:20:55 -参数 : []
2019-05-16 20:20:55 -耗时 : 0
2019-05-16 20:20:55 -返回值 : main
2019-05-16 20:20:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:20:55 -HTTP METHOD : GET
2019-05-16 20:20:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:20:55 -参数 : []
2019-05-16 20:20:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:20:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:20:55 -<==      Total: 0
2019-05-16 20:20:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:20:55 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:20:55 -<==      Total: 1
2019-05-16 20:20:55 -耗时 : 6
2019-05-16 20:20:55 -返回值 : com.bootdo.common.utils.PageUtils@5e0ed11a
2019-05-16 20:20:55 -请求地址 : http://localhost:8081/main
2019-05-16 20:20:55 -HTTP METHOD : GET
2019-05-16 20:20:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:20:55 -参数 : []
2019-05-16 20:20:55 -耗时 : 0
2019-05-16 20:20:55 -返回值 : main
2019-05-16 20:20:57 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:20:57 -HTTP METHOD : GET
2019-05-16 20:20:57 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:20:57 -参数 : []
2019-05-16 20:20:57 -耗时 : 0
2019-05-16 20:20:57 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:20:57 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:20:57 -HTTP METHOD : GET
2019-05-16 20:20:57 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:20:57 -参数 : [{limit=10, offset=0}]
2019-05-16 20:20:57 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:20:57 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:20:57 -<==      Total: 2
2019-05-16 20:20:57 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:20:57 -==> Parameters: 
2019-05-16 20:20:57 -<==      Total: 1
2019-05-16 20:20:57 -耗时 : 7
2019-05-16 20:20:57 -返回值 : com.bootdo.common.utils.PageUtils@353573e4
2019-05-16 20:21:16 -请求地址 : http://localhost:8081/index
2019-05-16 20:21:16 -HTTP METHOD : GET
2019-05-16 20:21:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:21:16 -参数 : [{}]
2019-05-16 20:21:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:21:16 -==> Parameters: 1(Long)
2019-05-16 20:21:16 -<==      Total: 49
2019-05-16 20:21:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:21:16 -==> Parameters: 138(Long)
2019-05-16 20:21:16 -<==      Total: 1
2019-05-16 20:21:16 -耗时 : 20
2019-05-16 20:21:16 -返回值 : index_v1
2019-05-16 20:21:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:21:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:21:16.44(Timestamp)
2019-05-16 20:21:16 -请求地址 : http://localhost:8081/main
2019-05-16 20:21:16 -HTTP METHOD : GET
2019-05-16 20:21:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:21:16 -参数 : []
2019-05-16 20:21:16 -耗时 : 0
2019-05-16 20:21:16 -返回值 : main
2019-05-16 20:21:16 -<==    Updates: 1
2019-05-16 20:21:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:21:16 -HTTP METHOD : GET
2019-05-16 20:21:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:21:16 -参数 : []
2019-05-16 20:21:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:21:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:21:16 -<==      Total: 0
2019-05-16 20:21:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:21:16 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:21:16 -<==      Total: 1
2019-05-16 20:21:16 -耗时 : 9
2019-05-16 20:21:16 -返回值 : com.bootdo.common.utils.PageUtils@2fd24980
2019-05-16 20:21:16 -请求地址 : http://localhost:8081/main
2019-05-16 20:21:16 -HTTP METHOD : GET
2019-05-16 20:21:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:21:16 -参数 : []
2019-05-16 20:21:16 -耗时 : 0
2019-05-16 20:21:16 -返回值 : main
2019-05-16 20:21:18 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:21:18 -HTTP METHOD : GET
2019-05-16 20:21:18 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:21:18 -参数 : []
2019-05-16 20:21:18 -耗时 : 0
2019-05-16 20:21:18 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:21:18 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:21:18 -HTTP METHOD : GET
2019-05-16 20:21:18 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:21:18 -参数 : [{limit=10, offset=0}]
2019-05-16 20:21:18 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:21:18 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:21:18 -<==      Total: 2
2019-05-16 20:21:18 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:21:18 -==> Parameters: 
2019-05-16 20:21:18 -<==      Total: 1
2019-05-16 20:21:18 -耗时 : 6
2019-05-16 20:21:18 -返回值 : com.bootdo.common.utils.PageUtils@746c8659
2019-05-16 20:21:44 -请求地址 : http://localhost:8081/login;JSESSIONID=d49ddfc4-7189-4e2e-9209-71d7b5c29622
2019-05-16 20:21:44 -HTTP METHOD : GET
2019-05-16 20:21:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 20:21:44 -参数 : [{}]
2019-05-16 20:21:44 -耗时 : 0
2019-05-16 20:21:44 -返回值 : login
2019-05-16 20:21:44 -请求地址 : http://localhost:8081/getVerify
2019-05-16 20:21:44 -HTTP METHOD : GET
2019-05-16 20:21:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 20:21:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@f8c846a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@322f5252]
2019-05-16 20:21:44 -6012
2019-05-16 20:21:44 -耗时 : 15
2019-05-16 20:21:44 -返回值 : null
2019-05-16 20:21:44 -请求地址 : http://localhost:8081/login
2019-05-16 20:21:44 -HTTP METHOD : GET
2019-05-16 20:21:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 20:21:44 -参数 : [{}]
2019-05-16 20:21:44 -耗时 : 0
2019-05-16 20:21:44 -返回值 : login
2019-05-16 20:21:50 -请求地址 : http://localhost:8081/login
2019-05-16 20:21:50 -HTTP METHOD : POST
2019-05-16 20:21:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 20:21:50 -参数 : [admin, 111111, 6012, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5f52307a]
2019-05-16 20:21:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 20:21:50 -==> Parameters: admin(String)
2019-05-16 20:21:50 -<==      Total: 1
2019-05-16 20:21:50 -耗时 : 10
2019-05-16 20:21:50 -返回值 : {msg=操作成功, code=0}
2019-05-16 20:21:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:21:50 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 20:21:50.561(Timestamp)
2019-05-16 20:21:50 -请求地址 : http://localhost:8081/index
2019-05-16 20:21:50 -HTTP METHOD : GET
2019-05-16 20:21:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:21:50 -参数 : [{}]
2019-05-16 20:21:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:21:50 -==> Parameters: 1(Long)
2019-05-16 20:21:50 -<==      Total: 49
2019-05-16 20:21:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:21:50 -==> Parameters: 138(Long)
2019-05-16 20:21:50 -<==      Total: 1
2019-05-16 20:21:50 -耗时 : 180
2019-05-16 20:21:50 -返回值 : index_v1
2019-05-16 20:21:50 -<==    Updates: 1
2019-05-16 20:21:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:21:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 181(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:21:50.769(Timestamp)
2019-05-16 20:21:50 -<==    Updates: 1
2019-05-16 20:21:50 -请求地址 : http://localhost:8081/main
2019-05-16 20:21:50 -HTTP METHOD : GET
2019-05-16 20:21:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:21:50 -参数 : []
2019-05-16 20:21:50 -耗时 : 0
2019-05-16 20:21:50 -返回值 : main
2019-05-16 20:21:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:21:51 -HTTP METHOD : GET
2019-05-16 20:21:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:21:51 -参数 : []
2019-05-16 20:21:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:21:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:21:51 -<==      Total: 0
2019-05-16 20:21:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:21:51 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:21:51 -<==      Total: 1
2019-05-16 20:21:51 -耗时 : 6
2019-05-16 20:21:51 -返回值 : com.bootdo.common.utils.PageUtils@535a07c3
2019-05-16 20:21:51 -请求地址 : http://localhost:8081/main
2019-05-16 20:21:51 -HTTP METHOD : GET
2019-05-16 20:21:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:21:51 -参数 : []
2019-05-16 20:21:51 -耗时 : 0
2019-05-16 20:21:51 -返回值 : main
2019-05-16 20:21:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 20:21:53 -==> Parameters: 1(Long)
2019-05-16 20:21:53 -<==      Total: 93
2019-05-16 20:21:53 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:21:53 -HTTP METHOD : GET
2019-05-16 20:21:53 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:21:53 -参数 : []
2019-05-16 20:21:53 -耗时 : 1
2019-05-16 20:21:53 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:21:53 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:21:53 -HTTP METHOD : GET
2019-05-16 20:21:53 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:21:53 -参数 : [{limit=10, offset=0}]
2019-05-16 20:21:53 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:21:53 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:21:53 -<==      Total: 2
2019-05-16 20:21:53 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:21:53 -==> Parameters: 
2019-05-16 20:21:53 -<==      Total: 1
2019-05-16 20:21:53 -耗时 : 6
2019-05-16 20:21:53 -返回值 : com.bootdo.common.utils.PageUtils@3bd3c4c3
2019-05-16 20:22:29 -请求地址 : http://localhost:8081/index
2019-05-16 20:22:29 -HTTP METHOD : GET
2019-05-16 20:22:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:22:29 -参数 : [{}]
2019-05-16 20:22:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:22:29 -==> Parameters: 1(Long)
2019-05-16 20:22:29 -<==      Total: 49
2019-05-16 20:22:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:22:29 -==> Parameters: 138(Long)
2019-05-16 20:22:29 -<==      Total: 1
2019-05-16 20:22:29 -耗时 : 23
2019-05-16 20:22:29 -返回值 : index_v1
2019-05-16 20:22:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:22:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:22:29.28(Timestamp)
2019-05-16 20:22:29 -请求地址 : http://localhost:8081/main
2019-05-16 20:22:29 -HTTP METHOD : GET
2019-05-16 20:22:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:22:29 -参数 : []
2019-05-16 20:22:29 -耗时 : 0
2019-05-16 20:22:29 -返回值 : main
2019-05-16 20:22:29 -<==    Updates: 1
2019-05-16 20:22:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:22:29 -HTTP METHOD : GET
2019-05-16 20:22:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:22:29 -参数 : []
2019-05-16 20:22:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:22:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:22:29 -<==      Total: 0
2019-05-16 20:22:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:22:29 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:22:29 -<==      Total: 1
2019-05-16 20:22:29 -耗时 : 8
2019-05-16 20:22:29 -返回值 : com.bootdo.common.utils.PageUtils@2b35a874
2019-05-16 20:22:29 -请求地址 : http://localhost:8081/main
2019-05-16 20:22:29 -HTTP METHOD : GET
2019-05-16 20:22:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:22:29 -参数 : []
2019-05-16 20:22:29 -耗时 : 0
2019-05-16 20:22:29 -返回值 : main
2019-05-16 20:22:31 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:22:31 -HTTP METHOD : GET
2019-05-16 20:22:31 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:22:31 -参数 : []
2019-05-16 20:22:31 -耗时 : 0
2019-05-16 20:22:31 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:22:32 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:22:32 -HTTP METHOD : GET
2019-05-16 20:22:32 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:22:32 -参数 : [{limit=10, offset=0}]
2019-05-16 20:22:32 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:22:32 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:22:32 -<==      Total: 2
2019-05-16 20:22:32 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:22:32 -==> Parameters: 
2019-05-16 20:22:32 -<==      Total: 1
2019-05-16 20:22:32 -耗时 : 5
2019-05-16 20:22:32 -返回值 : com.bootdo.common.utils.PageUtils@6e54c9a6
2019-05-16 20:22:50 -请求地址 : http://localhost:8081/login;JSESSIONID=d355e475-09ef-48cd-ab84-a28cce24c9b3
2019-05-16 20:22:50 -HTTP METHOD : GET
2019-05-16 20:22:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 20:22:50 -参数 : [{}]
2019-05-16 20:22:50 -耗时 : 0
2019-05-16 20:22:50 -返回值 : login
2019-05-16 20:22:50 -请求地址 : http://localhost:8081/getVerify
2019-05-16 20:22:50 -HTTP METHOD : GET
2019-05-16 20:22:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 20:22:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@450226e3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5ea17672]
2019-05-16 20:22:50 -5993
2019-05-16 20:22:50 -耗时 : 10
2019-05-16 20:22:50 -返回值 : null
2019-05-16 20:22:51 -请求地址 : http://localhost:8081/login
2019-05-16 20:22:51 -HTTP METHOD : GET
2019-05-16 20:22:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 20:22:51 -参数 : [{}]
2019-05-16 20:22:51 -耗时 : 1
2019-05-16 20:22:51 -返回值 : login
2019-05-16 20:22:55 -请求地址 : http://localhost:8081/login
2019-05-16 20:22:55 -HTTP METHOD : POST
2019-05-16 20:22:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 20:22:55 -参数 : [admin, 111111, 5993, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5342b1a1]
2019-05-16 20:22:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 20:22:55 -==> Parameters: admin(String)
2019-05-16 20:22:55 -<==      Total: 1
2019-05-16 20:22:55 -耗时 : 8
2019-05-16 20:22:55 -返回值 : {msg=操作成功, code=0}
2019-05-16 20:22:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:22:55 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 20:22:55.467(Timestamp)
2019-05-16 20:22:55 -请求地址 : http://localhost:8081/index
2019-05-16 20:22:55 -HTTP METHOD : GET
2019-05-16 20:22:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:22:55 -参数 : [{}]
2019-05-16 20:22:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:22:55 -==> Parameters: 1(Long)
2019-05-16 20:22:55 -<==      Total: 49
2019-05-16 20:22:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:22:55 -==> Parameters: 138(Long)
2019-05-16 20:22:55 -<==      Total: 1
2019-05-16 20:22:55 -耗时 : 28
2019-05-16 20:22:55 -返回值 : index_v1
2019-05-16 20:22:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:22:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:22:55.521(Timestamp)
2019-05-16 20:22:55 -<==    Updates: 1
2019-05-16 20:22:55 -请求地址 : http://localhost:8081/main
2019-05-16 20:22:55 -HTTP METHOD : GET
2019-05-16 20:22:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:22:55 -参数 : []
2019-05-16 20:22:55 -耗时 : 1
2019-05-16 20:22:55 -返回值 : main
2019-05-16 20:22:55 -<==    Updates: 1
2019-05-16 20:22:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:22:55 -HTTP METHOD : GET
2019-05-16 20:22:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:22:55 -参数 : []
2019-05-16 20:22:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:22:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:22:55 -<==      Total: 0
2019-05-16 20:22:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:22:55 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:22:55 -<==      Total: 1
2019-05-16 20:22:55 -耗时 : 9
2019-05-16 20:22:55 -返回值 : com.bootdo.common.utils.PageUtils@993f113
2019-05-16 20:22:55 -请求地址 : http://localhost:8081/main
2019-05-16 20:22:55 -HTTP METHOD : GET
2019-05-16 20:22:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:22:55 -参数 : []
2019-05-16 20:22:55 -耗时 : 1
2019-05-16 20:22:55 -返回值 : main
2019-05-16 20:22:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 20:22:59 -==> Parameters: 1(Long)
2019-05-16 20:22:59 -<==      Total: 93
2019-05-16 20:22:59 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:22:59 -HTTP METHOD : GET
2019-05-16 20:22:59 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:22:59 -参数 : []
2019-05-16 20:22:59 -耗时 : 1
2019-05-16 20:22:59 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:23:00 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:23:00 -HTTP METHOD : GET
2019-05-16 20:23:00 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:23:00 -参数 : [{limit=10, offset=0}]
2019-05-16 20:23:00 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:23:00 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:23:00 -<==      Total: 2
2019-05-16 20:23:00 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:23:00 -==> Parameters: 
2019-05-16 20:23:00 -<==      Total: 1
2019-05-16 20:23:00 -耗时 : 25
2019-05-16 20:23:00 -返回值 : com.bootdo.common.utils.PageUtils@63c83a8f
2019-05-16 20:23:14 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-16 20:23:14 -HTTP METHOD : GET
2019-05-16 20:23:14 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-16 20:23:14 -参数 : []
2019-05-16 20:23:14 -耗时 : 1
2019-05-16 20:23:14 -返回值 : heat/heatPrice/heatPrice
2019-05-16 20:23:15 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-16 20:23:15 -HTTP METHOD : GET
2019-05-16 20:23:15 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-16 20:23:15 -参数 : [{limit=10, offset=0}]
2019-05-16 20:23:15 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-16 20:23:15 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:23:15 -<==      Total: 2
2019-05-16 20:23:15 -==>  Preparing: select count(*) from heat_price 
2019-05-16 20:23:15 -==> Parameters: 
2019-05-16 20:23:15 -<==      Total: 1
2019-05-16 20:23:15 -耗时 : 28
2019-05-16 20:23:15 -返回值 : com.bootdo.common.utils.PageUtils@3ddf9d97
2019-05-16 20:23:23 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-16 20:23:23 -HTTP METHOD : GET
2019-05-16 20:23:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-16 20:23:23 -参数 : []
2019-05-16 20:23:23 -耗时 : 1
2019-05-16 20:23:23 -返回值 : elec/elecPrice/elecPrice
2019-05-16 20:23:23 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-16 20:23:23 -HTTP METHOD : GET
2019-05-16 20:23:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-16 20:23:23 -参数 : [{limit=10, offset=0}]
2019-05-16 20:23:23 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-16 20:23:23 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:23:23 -<==      Total: 2
2019-05-16 20:23:23 -==>  Preparing: select count(*) from elec_price 
2019-05-16 20:23:23 -==> Parameters: 
2019-05-16 20:23:23 -<==      Total: 1
2019-05-16 20:23:23 -耗时 : 21
2019-05-16 20:23:23 -返回值 : com.bootdo.common.utils.PageUtils@3748ff5
2019-05-16 20:24:32 -请求地址 : http://localhost:8081/index
2019-05-16 20:24:32 -HTTP METHOD : GET
2019-05-16 20:24:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:24:32 -参数 : [{}]
2019-05-16 20:24:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:24:32 -==> Parameters: 1(Long)
2019-05-16 20:24:32 -<==      Total: 49
2019-05-16 20:24:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:24:32 -==> Parameters: 138(Long)
2019-05-16 20:24:32 -<==      Total: 1
2019-05-16 20:24:32 -耗时 : 19
2019-05-16 20:24:32 -返回值 : index_v1
2019-05-16 20:24:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:24:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:24:32.834(Timestamp)
2019-05-16 20:24:32 -<==    Updates: 1
2019-05-16 20:24:32 -请求地址 : http://localhost:8081/main
2019-05-16 20:24:32 -HTTP METHOD : GET
2019-05-16 20:24:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:24:32 -参数 : []
2019-05-16 20:24:32 -耗时 : 0
2019-05-16 20:24:32 -返回值 : main
2019-05-16 20:24:33 -请求地址 : http://localhost:8081/main
2019-05-16 20:24:33 -HTTP METHOD : GET
2019-05-16 20:24:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:24:33 -参数 : []
2019-05-16 20:24:33 -耗时 : 0
2019-05-16 20:24:33 -返回值 : main
2019-05-16 20:24:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:24:33 -HTTP METHOD : GET
2019-05-16 20:24:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:24:33 -参数 : []
2019-05-16 20:24:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:24:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:24:33 -<==      Total: 0
2019-05-16 20:24:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:24:33 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:24:33 -<==      Total: 1
2019-05-16 20:24:33 -耗时 : 10
2019-05-16 20:24:33 -返回值 : com.bootdo.common.utils.PageUtils@6f455682
2019-05-16 20:24:35 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:24:35 -HTTP METHOD : GET
2019-05-16 20:24:35 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:24:35 -参数 : []
2019-05-16 20:24:35 -耗时 : 1
2019-05-16 20:24:35 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:24:35 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:24:35 -HTTP METHOD : GET
2019-05-16 20:24:35 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:24:35 -参数 : [{limit=10, offset=0}]
2019-05-16 20:24:35 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:24:35 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:24:35 -<==      Total: 2
2019-05-16 20:24:35 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:24:35 -==> Parameters: 
2019-05-16 20:24:35 -<==      Total: 1
2019-05-16 20:24:35 -耗时 : 9
2019-05-16 20:24:35 -返回值 : com.bootdo.common.utils.PageUtils@4f3ad6e2
2019-05-16 20:25:52 -请求地址 : http://localhost:8081/index
2019-05-16 20:25:52 -HTTP METHOD : GET
2019-05-16 20:25:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:25:52 -参数 : [{}]
2019-05-16 20:25:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:25:52 -==> Parameters: 1(Long)
2019-05-16 20:25:52 -<==      Total: 49
2019-05-16 20:25:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:25:52 -==> Parameters: 138(Long)
2019-05-16 20:25:52 -<==      Total: 1
2019-05-16 20:25:52 -耗时 : 17
2019-05-16 20:25:52 -返回值 : index_v1
2019-05-16 20:25:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:25:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:25:52.807(Timestamp)
2019-05-16 20:25:52 -请求地址 : http://localhost:8081/main
2019-05-16 20:25:52 -HTTP METHOD : GET
2019-05-16 20:25:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:25:52 -参数 : []
2019-05-16 20:25:52 -耗时 : 0
2019-05-16 20:25:52 -返回值 : main
2019-05-16 20:25:52 -<==    Updates: 1
2019-05-16 20:25:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:25:53 -HTTP METHOD : GET
2019-05-16 20:25:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:25:53 -参数 : []
2019-05-16 20:25:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:25:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:25:53 -<==      Total: 0
2019-05-16 20:25:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:25:53 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:25:53 -<==      Total: 1
2019-05-16 20:25:53 -耗时 : 22
2019-05-16 20:25:53 -返回值 : com.bootdo.common.utils.PageUtils@41274a65
2019-05-16 20:25:53 -请求地址 : http://localhost:8081/main
2019-05-16 20:25:53 -HTTP METHOD : GET
2019-05-16 20:25:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:25:53 -参数 : []
2019-05-16 20:25:53 -耗时 : 1
2019-05-16 20:25:53 -返回值 : main
2019-05-16 20:25:55 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:25:55 -HTTP METHOD : GET
2019-05-16 20:25:55 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:25:55 -参数 : []
2019-05-16 20:25:55 -耗时 : 0
2019-05-16 20:25:55 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:25:55 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:25:55 -HTTP METHOD : GET
2019-05-16 20:25:55 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:25:55 -参数 : [{limit=10, offset=0}]
2019-05-16 20:25:55 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:25:55 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:25:55 -<==      Total: 2
2019-05-16 20:25:55 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:25:55 -==> Parameters: 
2019-05-16 20:25:55 -<==      Total: 1
2019-05-16 20:25:55 -耗时 : 10
2019-05-16 20:25:55 -返回值 : com.bootdo.common.utils.PageUtils@3806e29c
2019-05-16 20:28:20 -请求地址 : http://localhost:8081/index
2019-05-16 20:28:20 -HTTP METHOD : GET
2019-05-16 20:28:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:28:20 -参数 : [{}]
2019-05-16 20:28:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:28:20 -==> Parameters: 1(Long)
2019-05-16 20:28:20 -<==      Total: 49
2019-05-16 20:28:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:28:20 -==> Parameters: 138(Long)
2019-05-16 20:28:20 -<==      Total: 1
2019-05-16 20:28:20 -耗时 : 18
2019-05-16 20:28:20 -返回值 : index_v1
2019-05-16 20:28:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:28:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:28:20.062(Timestamp)
2019-05-16 20:28:20 -请求地址 : http://localhost:8081/main
2019-05-16 20:28:20 -HTTP METHOD : GET
2019-05-16 20:28:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:28:20 -参数 : []
2019-05-16 20:28:20 -耗时 : 0
2019-05-16 20:28:20 -返回值 : main
2019-05-16 20:28:20 -<==    Updates: 1
2019-05-16 20:28:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:28:20 -HTTP METHOD : GET
2019-05-16 20:28:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:28:20 -参数 : []
2019-05-16 20:28:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:28:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:28:20 -<==      Total: 0
2019-05-16 20:28:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:28:20 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:28:20 -<==      Total: 1
2019-05-16 20:28:20 -耗时 : 7
2019-05-16 20:28:20 -返回值 : com.bootdo.common.utils.PageUtils@15865e1
2019-05-16 20:28:20 -请求地址 : http://localhost:8081/main
2019-05-16 20:28:20 -HTTP METHOD : GET
2019-05-16 20:28:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:28:20 -参数 : []
2019-05-16 20:28:20 -耗时 : 1
2019-05-16 20:28:20 -返回值 : main
2019-05-16 20:28:22 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:28:22 -HTTP METHOD : GET
2019-05-16 20:28:22 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:28:22 -参数 : []
2019-05-16 20:28:22 -耗时 : 1
2019-05-16 20:28:22 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:28:22 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:28:22 -HTTP METHOD : GET
2019-05-16 20:28:22 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:28:22 -参数 : [{limit=10, offset=0}]
2019-05-16 20:28:22 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:28:22 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:28:22 -<==      Total: 2
2019-05-16 20:28:22 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:28:22 -==> Parameters: 
2019-05-16 20:28:22 -<==      Total: 1
2019-05-16 20:28:22 -耗时 : 6
2019-05-16 20:28:22 -返回值 : com.bootdo.common.utils.PageUtils@6b76862a
2019-05-16 20:32:03 -请求地址 : http://localhost:8081/index
2019-05-16 20:32:03 -HTTP METHOD : GET
2019-05-16 20:32:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:32:03 -参数 : [{}]
2019-05-16 20:32:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:32:03 -==> Parameters: 1(Long)
2019-05-16 20:32:03 -<==      Total: 49
2019-05-16 20:32:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:32:03 -==> Parameters: 138(Long)
2019-05-16 20:32:03 -<==      Total: 1
2019-05-16 20:32:03 -耗时 : 19
2019-05-16 20:32:03 -返回值 : index_v1
2019-05-16 20:32:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:32:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:32:03.638(Timestamp)
2019-05-16 20:32:03 -请求地址 : http://localhost:8081/main
2019-05-16 20:32:03 -HTTP METHOD : GET
2019-05-16 20:32:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:32:03 -参数 : []
2019-05-16 20:32:03 -耗时 : 1
2019-05-16 20:32:03 -返回值 : main
2019-05-16 20:32:03 -<==    Updates: 1
2019-05-16 20:32:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:32:03 -HTTP METHOD : GET
2019-05-16 20:32:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:32:03 -参数 : []
2019-05-16 20:32:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:32:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:32:03 -<==      Total: 0
2019-05-16 20:32:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:32:03 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:32:03 -<==      Total: 1
2019-05-16 20:32:03 -耗时 : 5
2019-05-16 20:32:03 -返回值 : com.bootdo.common.utils.PageUtils@39aea015
2019-05-16 20:32:03 -请求地址 : http://localhost:8081/main
2019-05-16 20:32:03 -HTTP METHOD : GET
2019-05-16 20:32:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:32:03 -参数 : []
2019-05-16 20:32:03 -耗时 : 0
2019-05-16 20:32:03 -返回值 : main
2019-05-16 20:32:08 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-16 20:32:08 -HTTP METHOD : GET
2019-05-16 20:32:08 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-16 20:32:08 -参数 : []
2019-05-16 20:32:08 -耗时 : 0
2019-05-16 20:32:08 -返回值 : heat/heatPrice/heatPrice
2019-05-16 20:32:09 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-16 20:32:09 -HTTP METHOD : GET
2019-05-16 20:32:09 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-16 20:32:09 -参数 : [{limit=10, offset=0}]
2019-05-16 20:32:09 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-16 20:32:09 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:32:09 -<==      Total: 2
2019-05-16 20:32:09 -==>  Preparing: select count(*) from heat_price 
2019-05-16 20:32:09 -==> Parameters: 
2019-05-16 20:32:09 -<==      Total: 1
2019-05-16 20:32:09 -耗时 : 6
2019-05-16 20:32:09 -返回值 : com.bootdo.common.utils.PageUtils@15db5ddd
2019-05-16 20:36:42 -请求地址 : http://localhost:8081/index
2019-05-16 20:36:42 -HTTP METHOD : GET
2019-05-16 20:36:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:36:42 -参数 : [{}]
2019-05-16 20:36:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:36:42 -==> Parameters: 1(Long)
2019-05-16 20:36:42 -<==      Total: 49
2019-05-16 20:36:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:36:42 -==> Parameters: 138(Long)
2019-05-16 20:36:42 -<==      Total: 1
2019-05-16 20:36:42 -耗时 : 14
2019-05-16 20:36:42 -返回值 : index_v1
2019-05-16 20:36:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:36:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:36:42.441(Timestamp)
2019-05-16 20:36:42 -<==    Updates: 1
2019-05-16 20:36:42 -请求地址 : http://localhost:8081/main
2019-05-16 20:36:42 -HTTP METHOD : GET
2019-05-16 20:36:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:36:42 -参数 : []
2019-05-16 20:36:42 -耗时 : 0
2019-05-16 20:36:42 -返回值 : main
2019-05-16 20:36:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:36:42 -HTTP METHOD : GET
2019-05-16 20:36:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:36:42 -参数 : []
2019-05-16 20:36:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:36:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:36:42 -<==      Total: 0
2019-05-16 20:36:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:36:42 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:36:42 -<==      Total: 1
2019-05-16 20:36:42 -耗时 : 6
2019-05-16 20:36:42 -返回值 : com.bootdo.common.utils.PageUtils@d4296a
2019-05-16 20:36:42 -请求地址 : http://localhost:8081/main
2019-05-16 20:36:42 -HTTP METHOD : GET
2019-05-16 20:36:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:36:42 -参数 : []
2019-05-16 20:36:42 -耗时 : 1
2019-05-16 20:36:42 -返回值 : main
2019-05-16 20:36:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 20:36:45 -==> Parameters: 1(Long)
2019-05-16 20:36:45 -<==      Total: 93
2019-05-16 20:36:45 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-16 20:36:45 -HTTP METHOD : GET
2019-05-16 20:36:45 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-16 20:36:45 -参数 : []
2019-05-16 20:36:45 -耗时 : 1
2019-05-16 20:36:45 -返回值 : heat/heatPrice/heatPrice
2019-05-16 20:36:45 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-16 20:36:45 -HTTP METHOD : GET
2019-05-16 20:36:45 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-16 20:36:45 -参数 : [{limit=10, offset=0}]
2019-05-16 20:36:45 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-16 20:36:45 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:36:45 -<==      Total: 2
2019-05-16 20:36:45 -==>  Preparing: select count(*) from heat_price 
2019-05-16 20:36:45 -==> Parameters: 
2019-05-16 20:36:45 -<==      Total: 1
2019-05-16 20:36:45 -耗时 : 7
2019-05-16 20:36:45 -返回值 : com.bootdo.common.utils.PageUtils@303629ef
2019-05-16 20:37:04 -请求地址 : http://localhost:8081/login;JSESSIONID=2855c893-2d75-4b41-8ea8-c883ba3e8437
2019-05-16 20:37:04 -HTTP METHOD : GET
2019-05-16 20:37:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 20:37:04 -参数 : [{}]
2019-05-16 20:37:04 -耗时 : 1
2019-05-16 20:37:04 -返回值 : login
2019-05-16 20:37:05 -请求地址 : http://localhost:8081/getVerify
2019-05-16 20:37:05 -HTTP METHOD : GET
2019-05-16 20:37:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 20:37:05 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7b3d541f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@112c1c80]
2019-05-16 20:37:05 -0597
2019-05-16 20:37:05 -耗时 : 12
2019-05-16 20:37:05 -返回值 : null
2019-05-16 20:37:05 -请求地址 : http://localhost:8081/login
2019-05-16 20:37:05 -HTTP METHOD : GET
2019-05-16 20:37:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 20:37:05 -参数 : [{}]
2019-05-16 20:37:05 -耗时 : 1
2019-05-16 20:37:05 -返回值 : login
2019-05-16 20:37:11 -请求地址 : http://localhost:8081/login
2019-05-16 20:37:11 -HTTP METHOD : POST
2019-05-16 20:37:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 20:37:11 -参数 : [admin, 111111, 0597, org.apache.shiro.web.servlet.ShiroHttpServletRequest@d8e658c]
2019-05-16 20:37:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 20:37:11 -==> Parameters: admin(String)
2019-05-16 20:37:11 -<==      Total: 1
2019-05-16 20:37:11 -耗时 : 7
2019-05-16 20:37:11 -返回值 : {msg=操作成功, code=0}
2019-05-16 20:37:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:37:11 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 20:37:11.648(Timestamp)
2019-05-16 20:37:11 -请求地址 : http://localhost:8081/index
2019-05-16 20:37:11 -HTTP METHOD : GET
2019-05-16 20:37:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:37:11 -参数 : [{}]
2019-05-16 20:37:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:37:11 -==> Parameters: 1(Long)
2019-05-16 20:37:11 -<==      Total: 49
2019-05-16 20:37:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:37:11 -==> Parameters: 138(Long)
2019-05-16 20:37:11 -<==      Total: 1
2019-05-16 20:37:11 -耗时 : 17
2019-05-16 20:37:11 -返回值 : index_v1
2019-05-16 20:37:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:37:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:37:11.696(Timestamp)
2019-05-16 20:37:11 -<==    Updates: 1
2019-05-16 20:37:11 -请求地址 : http://localhost:8081/main
2019-05-16 20:37:11 -HTTP METHOD : GET
2019-05-16 20:37:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:37:11 -参数 : []
2019-05-16 20:37:11 -耗时 : 1
2019-05-16 20:37:11 -返回值 : main
2019-05-16 20:37:11 -<==    Updates: 1
2019-05-16 20:37:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:37:12 -HTTP METHOD : GET
2019-05-16 20:37:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:37:12 -参数 : []
2019-05-16 20:37:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:37:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:37:12 -<==      Total: 0
2019-05-16 20:37:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:37:12 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:37:12 -<==      Total: 1
2019-05-16 20:37:12 -耗时 : 9
2019-05-16 20:37:12 -返回值 : com.bootdo.common.utils.PageUtils@27e7029b
2019-05-16 20:37:12 -请求地址 : http://localhost:8081/main
2019-05-16 20:37:12 -HTTP METHOD : GET
2019-05-16 20:37:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:37:12 -参数 : []
2019-05-16 20:37:12 -耗时 : 0
2019-05-16 20:37:12 -返回值 : main
2019-05-16 20:37:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 20:37:15 -==> Parameters: 1(Long)
2019-05-16 20:37:15 -<==      Total: 93
2019-05-16 20:37:15 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-16 20:37:15 -HTTP METHOD : GET
2019-05-16 20:37:15 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-16 20:37:15 -参数 : []
2019-05-16 20:37:15 -耗时 : 1
2019-05-16 20:37:15 -返回值 : heat/heatPrice/heatPrice
2019-05-16 20:37:16 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-16 20:37:16 -HTTP METHOD : GET
2019-05-16 20:37:16 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-16 20:37:16 -参数 : [{limit=10, offset=0}]
2019-05-16 20:37:16 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-16 20:37:16 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:37:16 -<==      Total: 2
2019-05-16 20:37:16 -==>  Preparing: select count(*) from heat_price 
2019-05-16 20:37:16 -==> Parameters: 
2019-05-16 20:37:16 -<==      Total: 1
2019-05-16 20:37:16 -耗时 : 7
2019-05-16 20:37:16 -返回值 : com.bootdo.common.utils.PageUtils@310a5695
2019-05-16 20:37:56 -请求地址 : http://localhost:8081/index
2019-05-16 20:37:56 -HTTP METHOD : GET
2019-05-16 20:37:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:37:56 -参数 : [{}]
2019-05-16 20:37:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:37:56 -==> Parameters: 1(Long)
2019-05-16 20:37:56 -<==      Total: 49
2019-05-16 20:37:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:37:56 -==> Parameters: 138(Long)
2019-05-16 20:37:56 -<==      Total: 1
2019-05-16 20:37:56 -耗时 : 16
2019-05-16 20:37:56 -返回值 : index_v1
2019-05-16 20:37:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:37:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:37:56.688(Timestamp)
2019-05-16 20:37:56 -请求地址 : http://localhost:8081/main
2019-05-16 20:37:56 -HTTP METHOD : GET
2019-05-16 20:37:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:37:56 -参数 : []
2019-05-16 20:37:56 -耗时 : 1
2019-05-16 20:37:56 -返回值 : main
2019-05-16 20:37:56 -<==    Updates: 1
2019-05-16 20:37:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:37:57 -HTTP METHOD : GET
2019-05-16 20:37:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:37:57 -参数 : []
2019-05-16 20:37:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:37:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:37:57 -<==      Total: 0
2019-05-16 20:37:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:37:57 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:37:57 -<==      Total: 1
2019-05-16 20:37:57 -耗时 : 5
2019-05-16 20:37:57 -返回值 : com.bootdo.common.utils.PageUtils@70df6dfa
2019-05-16 20:37:57 -请求地址 : http://localhost:8081/main
2019-05-16 20:37:57 -HTTP METHOD : GET
2019-05-16 20:37:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:37:57 -参数 : []
2019-05-16 20:37:57 -耗时 : 0
2019-05-16 20:37:57 -返回值 : main
2019-05-16 20:37:59 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-16 20:37:59 -HTTP METHOD : GET
2019-05-16 20:37:59 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-16 20:37:59 -参数 : []
2019-05-16 20:37:59 -耗时 : 0
2019-05-16 20:37:59 -返回值 : heat/heatPrice/heatPrice
2019-05-16 20:38:00 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-16 20:38:00 -HTTP METHOD : GET
2019-05-16 20:38:00 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-16 20:38:00 -参数 : [{limit=10, offset=0}]
2019-05-16 20:38:00 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-16 20:38:00 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:38:00 -<==      Total: 2
2019-05-16 20:38:00 -==>  Preparing: select count(*) from heat_price 
2019-05-16 20:38:00 -==> Parameters: 
2019-05-16 20:38:00 -<==      Total: 1
2019-05-16 20:38:00 -耗时 : 6
2019-05-16 20:38:00 -返回值 : com.bootdo.common.utils.PageUtils@666e4b4a
2019-05-16 20:40:21 -请求地址 : http://localhost:8081/index
2019-05-16 20:40:21 -HTTP METHOD : GET
2019-05-16 20:40:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:40:21 -参数 : [{}]
2019-05-16 20:40:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:40:21 -==> Parameters: 1(Long)
2019-05-16 20:40:21 -<==      Total: 49
2019-05-16 20:40:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:40:21 -==> Parameters: 138(Long)
2019-05-16 20:40:21 -<==      Total: 1
2019-05-16 20:40:21 -耗时 : 15
2019-05-16 20:40:21 -返回值 : index_v1
2019-05-16 20:40:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:40:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:40:21.734(Timestamp)
2019-05-16 20:40:21 -请求地址 : http://localhost:8081/main
2019-05-16 20:40:21 -HTTP METHOD : GET
2019-05-16 20:40:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:40:21 -参数 : []
2019-05-16 20:40:21 -耗时 : 0
2019-05-16 20:40:21 -返回值 : main
2019-05-16 20:40:21 -<==    Updates: 1
2019-05-16 20:40:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:40:21 -HTTP METHOD : GET
2019-05-16 20:40:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:40:21 -参数 : []
2019-05-16 20:40:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:40:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:40:21 -<==      Total: 0
2019-05-16 20:40:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:40:21 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:40:21 -<==      Total: 1
2019-05-16 20:40:21 -耗时 : 7
2019-05-16 20:40:21 -返回值 : com.bootdo.common.utils.PageUtils@5ab4fda1
2019-05-16 20:40:22 -请求地址 : http://localhost:8081/main
2019-05-16 20:40:22 -HTTP METHOD : GET
2019-05-16 20:40:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:40:22 -参数 : []
2019-05-16 20:40:22 -耗时 : 2
2019-05-16 20:40:22 -返回值 : main
2019-05-16 20:40:24 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-16 20:40:24 -HTTP METHOD : GET
2019-05-16 20:40:24 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-16 20:40:24 -参数 : []
2019-05-16 20:40:24 -耗时 : 0
2019-05-16 20:40:24 -返回值 : heat/heatPrice/heatPrice
2019-05-16 20:40:25 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-16 20:40:25 -HTTP METHOD : GET
2019-05-16 20:40:25 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-16 20:40:25 -参数 : [{limit=10, offset=0}]
2019-05-16 20:40:25 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-16 20:40:25 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:40:25 -<==      Total: 2
2019-05-16 20:40:25 -==>  Preparing: select count(*) from heat_price 
2019-05-16 20:40:25 -==> Parameters: 
2019-05-16 20:40:25 -<==      Total: 1
2019-05-16 20:40:25 -耗时 : 5
2019-05-16 20:40:25 -返回值 : com.bootdo.common.utils.PageUtils@11b720bb
2019-05-16 20:41:40 -Starting BootdoApplication on PC-201905091110 with PID 18208 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 20:41:40 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 20:41:40 -The following profiles are active: dev
2019-05-16 20:41:40 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 20:41:40 CST 2019]; root of context hierarchy
2019-05-16 20:41:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 20:41:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4b53e4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:41:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c70e6cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:41:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:41:45 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:41:46 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:41:46 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 20:41:46 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 20:41:46 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:41:46 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:41:46 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:41:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:41:47 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 20:41:47 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 20:41:47 -Starting service [Tomcat]
2019-05-16 20:41:47 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 20:41:47 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 20:41:47 -Initializing Spring embedded WebApplicationContext
2019-05-16 20:41:47 -Root WebApplicationContext: initialization completed in 6751 ms
2019-05-16 20:41:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 20:41:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 20:41:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 20:41:47 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 20:41:47 -Filter xssFilter was not registered (disabled)
2019-05-16 20:41:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 20:41:47 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 20:41:47 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 20:41:47 -Servlet dispatcherServlet mapped to [/]
2019-05-16 20:41:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 20:41:40 CST 2019]; root of context hierarchy
2019-05-16 20:41:52 -Using default implementation for ThreadExecutor
2019-05-16 20:41:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 20:41:52 -Quartz Scheduler v.2.2.1 created.
2019-05-16 20:41:52 -RAMJobStore initialized.
2019-05-16 20:41:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 20:41:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 20:41:52 -Quartz scheduler version: 2.2.1
2019-05-16 20:41:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@563317c1
2019-05-16 20:41:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 20:41:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 20:41:54 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 20:41:54 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:41:54 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 20:41:54 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:41:54 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 20:41:54 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 20:41:54 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:41:54 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 20:41:54 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:41:54 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 20:41:54 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 20:41:54 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:41:54 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 20:41:54 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 20:41:54 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 20:41:54 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 20:41:54 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 20:41:54 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:41:54 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 20:41:54 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:41:54 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 20:41:54 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 20:41:54 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:54 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 20:41:54 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 20:41:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 20:41:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 20:41:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 20:41:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 20:41:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 20:41:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 20:41:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 20:41:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 20:41:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 20:41:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 20:41:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 20:41:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 20:41:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 20:41:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 20:41:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 20:41:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 20:41:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 20:41:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 20:41:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 20:41:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 20:41:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 20:41:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 20:41:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 20:41:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 20:41:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 20:41:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:41:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 20:41:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:41:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 20:41:55 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:41:55 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:41:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 20:41:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 20:41:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 20:41:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 20:41:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 20:41:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 20:41:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 20:41:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 20:41:55 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 20:41:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 20:41:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 20:41:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 20:41:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 20:41:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 20:41:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 20:41:55 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 20:41:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 20:41:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 20:41:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 20:41:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 20:41:55 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 20:41:55 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 20:41:55 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 20:41:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 20:41:55 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 20:41:55 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 20:41:55 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 20:41:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 20:41:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 20:41:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 20:41:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 20:41:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 20:41:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 20:41:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 20:41:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 20:41:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 20:41:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 20:41:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 20:41:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 20:41:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 20:41:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 20:41:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 20:41:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 20:41:55 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 20:41:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 20:41:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 20:41:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 20:41:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 20:41:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 20:41:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 20:41:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 20:41:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 20:41:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 20:41:55 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 20:41:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 20:41:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 20:41:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 20:41:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 20:41:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 20:41:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 20:41:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 20:41:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 20:41:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 20:41:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 20:41:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 20:41:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 20:41:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 20:41:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 20:41:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 20:41:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 20:41:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 20:41:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 20:41:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 20:41:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 20:41:55 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 20:41:55 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 20:41:55 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 20:41:55 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 20:41:55 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 20:41:55 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 20:41:55 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 20:41:55 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 20:41:55 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 20:41:55 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 20:41:55 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:41:55 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 20:41:55 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 20:41:55 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:41:55 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 20:41:55 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 20:41:55 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 20:41:55 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:41:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 20:41:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 20:41:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 20:41:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 20:41:55 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 20:41:55 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 20:41:55 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 20:41:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:41:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 20:41:40 CST 2019]; root of context hierarchy
2019-05-16 20:41:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:41:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:41:57 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:41:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 20:41:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 20:42:00 -Registering beans for JMX exposure on startup
2019-05-16 20:42:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 20:42:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 20:42:00 -Starting beans in phase 2147483647
2019-05-16 20:42:00 -Context refreshed
2019-05-16 20:42:00 -Found 1 custom documentation plugin(s)
2019-05-16 20:42:01 -Scanning for api listing references
2019-05-16 20:42:01 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 20:42:01 -Generating unique operation named: removeUsingPOST_1
2019-05-16 20:42:01 -Generating unique operation named: addUsingGET_1
2019-05-16 20:42:01 -Generating unique operation named: editUsingGET_1
2019-05-16 20:42:01 -Generating unique operation named: listUsingGET_1
2019-05-16 20:42:01 -Generating unique operation named: removeUsingPOST_2
2019-05-16 20:42:01 -Generating unique operation named: removeUsingPOST_3
2019-05-16 20:42:01 -Generating unique operation named: saveUsingPOST_1
2019-05-16 20:42:01 -Generating unique operation named: updateUsingGET_1
2019-05-16 20:42:01 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 20:42:01 -Generating unique operation named: updateUsingPOST_1
2019-05-16 20:42:01 -Generating unique operation named: updateUsingPUT_1
2019-05-16 20:42:01 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 20:42:01 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 20:42:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 20:42:01 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 20:42:01 -Generating unique operation named: addUsingGET_2
2019-05-16 20:42:01 -Generating unique operation named: editUsingGET_2
2019-05-16 20:42:01 -Generating unique operation named: listUsingGET_2
2019-05-16 20:42:01 -Generating unique operation named: removeUsingPOST_4
2019-05-16 20:42:01 -Generating unique operation named: removeUsingPOST_5
2019-05-16 20:42:01 -Generating unique operation named: saveUsingPOST_2
2019-05-16 20:42:01 -Generating unique operation named: updateUsingPOST_2
2019-05-16 20:42:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 20:42:01 -Generating unique operation named: addUsingGET_3
2019-05-16 20:42:01 -Generating unique operation named: editUsingGET_3
2019-05-16 20:42:01 -Generating unique operation named: listUsingGET_3
2019-05-16 20:42:01 -Generating unique operation named: removeUsingPOST_6
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_7
2019-05-16 20:42:02 -Generating unique operation named: saveUsingPOST_3
2019-05-16 20:42:02 -Generating unique operation named: updateUsingGET_2
2019-05-16 20:42:02 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPOST_3
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPUT_2
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 20:42:02 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 20:42:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 20:42:02 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 20:42:02 -Generating unique operation named: addUsingGET_4
2019-05-16 20:42:02 -Generating unique operation named: editUsingGET_4
2019-05-16 20:42:02 -Generating unique operation named: listUsingGET_4
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_8
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_9
2019-05-16 20:42:02 -Generating unique operation named: saveUsingPOST_4
2019-05-16 20:42:02 -Generating unique operation named: updateUsingGET_3
2019-05-16 20:42:02 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPOST_4
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPUT_3
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 20:42:02 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 20:42:02 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 20:42:02 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 20:42:02 -Generating unique operation named: ElecUsingGET_1
2019-05-16 20:42:02 -Generating unique operation named: addUsingGET_5
2019-05-16 20:42:02 -Generating unique operation named: editUsingGET_5
2019-05-16 20:42:02 -Generating unique operation named: listUsingGET_5
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_10
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_11
2019-05-16 20:42:02 -Generating unique operation named: saveUsingPOST_5
2019-05-16 20:42:02 -Generating unique operation named: updateUsingGET_4
2019-05-16 20:42:02 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPOST_5
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPUT_4
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 20:42:02 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 20:42:02 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 20:42:02 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 20:42:02 -Generating unique operation named: editUsingGET_6
2019-05-16 20:42:02 -Generating unique operation named: listUsingGET_6
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPOST_6
2019-05-16 20:42:02 -Generating unique operation named: addUsingGET_6
2019-05-16 20:42:02 -Generating unique operation named: editUsingGET_7
2019-05-16 20:42:02 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 20:42:02 -Generating unique operation named: listUsingGET_7
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_12
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_13
2019-05-16 20:42:02 -Generating unique operation named: saveUsingPOST_6
2019-05-16 20:42:02 -Generating unique operation named: updateUsingGET_5
2019-05-16 20:42:02 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPOST_7
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPUT_5
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 20:42:02 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 20:42:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 20:42:02 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 20:42:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 20:42:02 -Generating unique operation named: addUsingGET_7
2019-05-16 20:42:02 -Generating unique operation named: editUsingGET_8
2019-05-16 20:42:02 -Generating unique operation named: listUsingGET_8
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_14
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_15
2019-05-16 20:42:02 -Generating unique operation named: saveUsingPOST_7
2019-05-16 20:42:02 -Generating unique operation named: updateUsingGET_6
2019-05-16 20:42:02 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPOST_8
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPUT_6
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 20:42:02 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 20:42:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 20:42:02 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 20:42:02 -Generating unique operation named: addUsingGET_8
2019-05-16 20:42:02 -Generating unique operation named: editUsingGET_9
2019-05-16 20:42:02 -Generating unique operation named: listUsingGET_9
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_16
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_17
2019-05-16 20:42:02 -Generating unique operation named: saveUsingPOST_8
2019-05-16 20:42:02 -Generating unique operation named: updateUsingGET_7
2019-05-16 20:42:02 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPOST_9
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPUT_7
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 20:42:02 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 20:42:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 20:42:02 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 20:42:02 -Generating unique operation named: addUsingGET_9
2019-05-16 20:42:02 -Generating unique operation named: editUsingGET_10
2019-05-16 20:42:02 -Generating unique operation named: infoUsingGET_1
2019-05-16 20:42:02 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 20:42:02 -Generating unique operation named: infoUsingPOST_1
2019-05-16 20:42:02 -Generating unique operation named: infoUsingPUT_1
2019-05-16 20:42:02 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 20:42:02 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 20:42:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 20:42:02 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 20:42:02 -Generating unique operation named: listUsingGET_10
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_18
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_19
2019-05-16 20:42:02 -Generating unique operation named: saveUsingPOST_9
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPOST_10
2019-05-16 20:42:02 -Generating unique operation named: listUsingGET_11
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_20
2019-05-16 20:42:02 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 20:42:02 -Generating unique operation named: addUsingGET_10
2019-05-16 20:42:02 -Generating unique operation named: editUsingGET_11
2019-05-16 20:42:02 -Generating unique operation named: listUsingGET_12
2019-05-16 20:42:02 -Generating unique operation named: removeUsingPOST_21
2019-05-16 20:42:02 -Generating unique operation named: saveUsingPOST_10
2019-05-16 20:42:02 -Generating unique operation named: treeUsingGET_1
2019-05-16 20:42:02 -Generating unique operation named: treeUsingGET_2
2019-05-16 20:42:02 -Generating unique operation named: updateUsingPOST_11
2019-05-16 20:42:02 -Generating unique operation named: addUsingGET_11
2019-05-16 20:42:02 -Generating unique operation named: editUsingGET_12
2019-05-16 20:42:02 -Generating unique operation named: listUsingGET_13
2019-05-16 20:42:03 -Generating unique operation named: removeUsingPOST_22
2019-05-16 20:42:03 -Generating unique operation named: removeUsingPOST_23
2019-05-16 20:42:03 -Generating unique operation named: saveUsingPOST_11
2019-05-16 20:42:03 -Generating unique operation named: updateUsingGET_8
2019-05-16 20:42:03 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPOST_12
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPUT_8
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 20:42:03 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 20:42:03 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 20:42:03 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 20:42:03 -Generating unique operation named: addUsingGET_12
2019-05-16 20:42:03 -Generating unique operation named: editUsingGET_13
2019-05-16 20:42:03 -Generating unique operation named: listUsingGET_14
2019-05-16 20:42:03 -Generating unique operation named: removeUsingPOST_24
2019-05-16 20:42:03 -Generating unique operation named: removeUsingPOST_25
2019-05-16 20:42:03 -Generating unique operation named: saveUsingPOST_12
2019-05-16 20:42:03 -Generating unique operation named: updateUsingGET_9
2019-05-16 20:42:03 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPOST_13
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPUT_9
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 20:42:03 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 20:42:03 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 20:42:03 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 20:42:03 -Generating unique operation named: addUsingGET_13
2019-05-16 20:42:03 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 20:42:03 -Generating unique operation named: editUsingGET_14
2019-05-16 20:42:03 -Generating unique operation named: listUsingGET_15
2019-05-16 20:42:03 -Generating unique operation named: saveUsingPOST_13
2019-05-16 20:42:03 -Generating unique operation named: saveUsingPOST_14
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPOST_14
2019-05-16 20:42:03 -Generating unique operation named: listUsingGET_16
2019-05-16 20:42:03 -Generating unique operation named: listUsingHEAD_1
2019-05-16 20:42:03 -Generating unique operation named: listUsingPOST_1
2019-05-16 20:42:03 -Generating unique operation named: listUsingPUT_1
2019-05-16 20:42:03 -Generating unique operation named: listUsingPATCH_1
2019-05-16 20:42:03 -Generating unique operation named: listUsingDELETE_1
2019-05-16 20:42:03 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 20:42:03 -Generating unique operation named: listUsingTRACE_1
2019-05-16 20:42:03 -Generating unique operation named: countDDUsingGET_1
2019-05-16 20:42:03 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 20:42:03 -Generating unique operation named: addUsingGET_14
2019-05-16 20:42:03 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 20:42:03 -Generating unique operation named: editUsingGET_15
2019-05-16 20:42:03 -Generating unique operation named: listUsingGET_17
2019-05-16 20:42:03 -Generating unique operation named: removeUsingPOST_26
2019-05-16 20:42:03 -Generating unique operation named: saveUsingPOST_15
2019-05-16 20:42:03 -Generating unique operation named: treeUsingGET_3
2019-05-16 20:42:03 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPOST_15
2019-05-16 20:42:03 -Generating unique operation named: addUsingGET_15
2019-05-16 20:42:03 -Generating unique operation named: editUsingGET_16
2019-05-16 20:42:03 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 20:42:03 -Generating unique operation named: listUsingGET_18
2019-05-16 20:42:03 -Generating unique operation named: removeUsingPOST_27
2019-05-16 20:42:03 -Generating unique operation named: removeUsingPOST_28
2019-05-16 20:42:03 -Generating unique operation named: saveUsingPOST_16
2019-05-16 20:42:03 -Generating unique operation named: updateUsingGET_10
2019-05-16 20:42:03 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPOST_16
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPUT_10
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 20:42:03 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 20:42:03 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 20:42:03 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 20:42:03 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 20:42:03 -Generating unique operation named: addUsingGET_16
2019-05-16 20:42:03 -Generating unique operation named: editUsingGET_17
2019-05-16 20:42:03 -Generating unique operation named: listUsingGET_19
2019-05-16 20:42:03 -Generating unique operation named: removeUsingPOST_29
2019-05-16 20:42:03 -Generating unique operation named: removeUsingPOST_30
2019-05-16 20:42:03 -Generating unique operation named: saveUsingPOST_17
2019-05-16 20:42:03 -Generating unique operation named: updateUsingGET_11
2019-05-16 20:42:03 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPOST_17
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPUT_11
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 20:42:03 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 20:42:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 20:42:03 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 20:42:03 -Generating unique operation named: addUsingGET_17
2019-05-16 20:42:03 -Generating unique operation named: editUsingGET_18
2019-05-16 20:42:03 -Generating unique operation named: listUsingGET_20
2019-05-16 20:42:03 -Generating unique operation named: removeUsingPOST_31
2019-05-16 20:42:03 -Generating unique operation named: removeUsingPOST_32
2019-05-16 20:42:03 -Generating unique operation named: saveUsingPOST_18
2019-05-16 20:42:03 -Generating unique operation named: updateUsingGET_12
2019-05-16 20:42:03 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPOST_18
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPUT_12
2019-05-16 20:42:03 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 20:42:03 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 20:42:03 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 20:42:03 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 20:42:04 -Starting Quartz Scheduler now
2019-05-16 20:42:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 20:42:04 -Starting...
2019-05-16 20:42:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 20:42:04 -Started.
2019-05-16 20:42:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 20:42:04 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:22)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-05-16 20:42:04 -Pausing ProtocolHandler ["http-nio-8081"]
2019-05-16 20:42:04 -Stopping service [Tomcat]
2019-05-16 20:42:04 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-05-16 20:42:04 -Stopping ProtocolHandler ["http-nio-8081"]
2019-05-16 20:42:04 -Destroying ProtocolHandler ["http-nio-8081"]
2019-05-16 20:42:04 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-16 20:42:04 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-05-16 20:42:04 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 20:41:40 CST 2019]; root of context hierarchy
2019-05-16 20:42:04 -Stopping beans in phase 2147483647
2019-05-16 20:42:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-05-16 20:42:04 -Stopping...
2019-05-16 20:42:04 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 20:42:04 -Stopped.
2019-05-16 20:42:04 -Unregistering JMX-exposed beans on shutdown
2019-05-16 20:42:04 -Unregistering JMX-exposed beans
2019-05-16 20:42:04 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-05-16 20:42:04 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-05-16 20:42:04 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-05-16 20:42:04 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-05-16 20:42:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-05-16 20:42:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-05-16 20:42:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-05-16 20:42:04 -Shutting down Quartz Scheduler
2019-05-16 20:44:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 15 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(15)-CONNECTED(15)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 177], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 29], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 429]
2019-05-16 20:46:46 -Starting BootdoApplication on PC-201905091110 with PID 38444 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 20:46:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 20:46:46 -The following profiles are active: dev
2019-05-16 20:46:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 20:46:46 CST 2019]; root of context hierarchy
2019-05-16 20:46:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 20:46:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:46:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:46:51 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:46:52 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:46:52 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:46:52 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 20:46:52 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 20:46:52 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:46:52 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:46:52 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:46:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 20:46:52 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 20:46:52 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 20:46:52 -Starting service [Tomcat]
2019-05-16 20:46:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 20:46:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 20:46:53 -Initializing Spring embedded WebApplicationContext
2019-05-16 20:46:53 -Root WebApplicationContext: initialization completed in 6799 ms
2019-05-16 20:46:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 20:46:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 20:46:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 20:46:53 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 20:46:53 -Filter xssFilter was not registered (disabled)
2019-05-16 20:46:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 20:46:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 20:46:53 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 20:46:53 -Servlet dispatcherServlet mapped to [/]
2019-05-16 20:46:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 20:46:46 CST 2019]; root of context hierarchy
2019-05-16 20:46:58 -Using default implementation for ThreadExecutor
2019-05-16 20:46:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 20:46:58 -Quartz Scheduler v.2.2.1 created.
2019-05-16 20:46:58 -RAMJobStore initialized.
2019-05-16 20:46:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 20:46:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 20:46:58 -Quartz scheduler version: 2.2.1
2019-05-16 20:46:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@305b43ca
2019-05-16 20:46:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 20:46:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 20:47:00 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:47:00 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 20:47:00 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:47:00 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 20:47:00 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 20:47:00 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 20:47:00 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 20:47:00 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:47:00 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 20:47:00 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:47:00 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:47:00 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 20:47:00 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 20:47:00 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 20:47:00 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 20:47:00 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 20:47:00 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:47:00 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 20:47:00 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 20:47:00 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 20:47:00 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 20:47:00 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 20:47:00 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 20:47:00 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 20:47:00 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:00 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 20:47:00 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 20:47:00 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 20:47:00 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 20:47:00 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:00 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 20:47:00 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 20:47:00 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 20:47:00 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 20:47:00 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 20:47:00 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:00 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 20:47:00 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 20:47:00 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 20:47:00 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 20:47:00 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:00 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 20:47:00 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 20:47:00 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 20:47:00 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:00 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 20:47:00 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:00 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 20:47:00 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 20:47:00 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 20:47:00 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 20:47:00 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 20:47:00 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 20:47:00 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 20:47:00 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 20:47:00 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 20:47:00 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:00 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 20:47:00 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 20:47:00 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:00 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 20:47:00 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 20:47:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 20:47:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 20:47:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 20:47:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 20:47:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:47:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 20:47:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:47:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:47:01 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 20:47:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 20:47:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 20:47:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 20:47:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 20:47:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 20:47:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 20:47:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 20:47:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 20:47:01 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 20:47:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 20:47:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 20:47:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 20:47:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 20:47:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 20:47:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 20:47:01 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 20:47:01 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 20:47:01 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 20:47:01 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 20:47:01 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 20:47:01 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 20:47:01 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 20:47:01 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 20:47:01 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 20:47:01 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 20:47:01 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 20:47:01 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 20:47:01 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 20:47:01 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 20:47:01 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 20:47:01 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 20:47:01 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 20:47:01 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 20:47:01 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 20:47:01 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 20:47:01 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 20:47:01 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 20:47:01 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 20:47:01 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 20:47:01 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 20:47:01 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 20:47:01 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 20:47:01 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 20:47:01 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 20:47:01 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 20:47:01 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 20:47:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 20:47:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 20:47:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 20:47:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 20:47:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 20:47:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 20:47:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 20:47:01 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 20:47:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 20:47:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 20:47:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 20:47:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 20:47:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 20:47:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 20:47:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 20:47:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 20:47:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 20:47:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 20:47:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 20:47:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 20:47:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 20:47:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 20:47:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 20:47:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 20:47:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 20:47:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 20:47:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 20:47:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 20:47:01 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 20:47:01 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 20:47:01 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 20:47:01 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 20:47:01 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 20:47:01 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 20:47:01 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 20:47:01 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 20:47:01 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 20:47:01 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 20:47:01 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 20:47:01 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 20:47:01 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 20:47:01 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 20:47:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 20:47:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 20:47:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 20:47:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 20:47:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 20:47:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 20:47:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 20:47:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 20:47:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 20:47:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 20:47:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 20:47:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 20:47:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:47:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 20:46:46 CST 2019]; root of context hierarchy
2019-05-16 20:47:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:47:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:47:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 20:47:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 20:47:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 20:47:04 -Registering beans for JMX exposure on startup
2019-05-16 20:47:04 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 20:47:04 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 20:47:04 -Starting beans in phase 2147483647
2019-05-16 20:47:04 -Context refreshed
2019-05-16 20:47:04 -Found 1 custom documentation plugin(s)
2019-05-16 20:47:04 -Scanning for api listing references
2019-05-16 20:47:05 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 20:47:05 -Generating unique operation named: removeUsingPOST_1
2019-05-16 20:47:05 -Generating unique operation named: addUsingGET_1
2019-05-16 20:47:05 -Generating unique operation named: editUsingGET_1
2019-05-16 20:47:05 -Generating unique operation named: listUsingGET_1
2019-05-16 20:47:05 -Generating unique operation named: removeUsingPOST_2
2019-05-16 20:47:05 -Generating unique operation named: removeUsingPOST_3
2019-05-16 20:47:05 -Generating unique operation named: saveUsingPOST_1
2019-05-16 20:47:05 -Generating unique operation named: updateUsingGET_1
2019-05-16 20:47:05 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 20:47:05 -Generating unique operation named: updateUsingPOST_1
2019-05-16 20:47:05 -Generating unique operation named: updateUsingPUT_1
2019-05-16 20:47:05 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 20:47:05 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 20:47:05 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 20:47:05 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 20:47:05 -Generating unique operation named: addUsingGET_2
2019-05-16 20:47:05 -Generating unique operation named: editUsingGET_2
2019-05-16 20:47:05 -Generating unique operation named: listUsingGET_2
2019-05-16 20:47:05 -Generating unique operation named: removeUsingPOST_4
2019-05-16 20:47:05 -Generating unique operation named: removeUsingPOST_5
2019-05-16 20:47:05 -Generating unique operation named: saveUsingPOST_2
2019-05-16 20:47:05 -Generating unique operation named: updateUsingPOST_2
2019-05-16 20:47:05 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 20:47:05 -Generating unique operation named: addUsingGET_3
2019-05-16 20:47:05 -Generating unique operation named: editUsingGET_3
2019-05-16 20:47:05 -Generating unique operation named: listUsingGET_3
2019-05-16 20:47:05 -Generating unique operation named: removeUsingPOST_6
2019-05-16 20:47:05 -Generating unique operation named: removeUsingPOST_7
2019-05-16 20:47:05 -Generating unique operation named: saveUsingPOST_3
2019-05-16 20:47:05 -Generating unique operation named: updateUsingGET_2
2019-05-16 20:47:05 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 20:47:05 -Generating unique operation named: updateUsingPOST_3
2019-05-16 20:47:05 -Generating unique operation named: updateUsingPUT_2
2019-05-16 20:47:05 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 20:47:05 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 20:47:05 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 20:47:05 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 20:47:05 -Generating unique operation named: addUsingGET_4
2019-05-16 20:47:05 -Generating unique operation named: editUsingGET_4
2019-05-16 20:47:05 -Generating unique operation named: listUsingGET_4
2019-05-16 20:47:05 -Generating unique operation named: removeUsingPOST_8
2019-05-16 20:47:05 -Generating unique operation named: removeUsingPOST_9
2019-05-16 20:47:05 -Generating unique operation named: saveUsingPOST_4
2019-05-16 20:47:05 -Generating unique operation named: updateUsingGET_3
2019-05-16 20:47:05 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 20:47:05 -Generating unique operation named: updateUsingPOST_4
2019-05-16 20:47:05 -Generating unique operation named: updateUsingPUT_3
2019-05-16 20:47:05 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 20:47:05 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 20:47:05 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 20:47:05 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 20:47:05 -Generating unique operation named: ElecUsingGET_1
2019-05-16 20:47:05 -Generating unique operation named: addUsingGET_5
2019-05-16 20:47:05 -Generating unique operation named: editUsingGET_5
2019-05-16 20:47:05 -Generating unique operation named: listUsingGET_5
2019-05-16 20:47:05 -Generating unique operation named: removeUsingPOST_10
2019-05-16 20:47:05 -Generating unique operation named: removeUsingPOST_11
2019-05-16 20:47:05 -Generating unique operation named: saveUsingPOST_5
2019-05-16 20:47:05 -Generating unique operation named: updateUsingGET_4
2019-05-16 20:47:05 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 20:47:05 -Generating unique operation named: updateUsingPOST_5
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPUT_4
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 20:47:06 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 20:47:06 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 20:47:06 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 20:47:06 -Generating unique operation named: editUsingGET_6
2019-05-16 20:47:06 -Generating unique operation named: listUsingGET_6
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPOST_6
2019-05-16 20:47:06 -Generating unique operation named: addUsingGET_6
2019-05-16 20:47:06 -Generating unique operation named: editUsingGET_7
2019-05-16 20:47:06 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 20:47:06 -Generating unique operation named: listUsingGET_7
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_12
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_13
2019-05-16 20:47:06 -Generating unique operation named: saveUsingPOST_6
2019-05-16 20:47:06 -Generating unique operation named: updateUsingGET_5
2019-05-16 20:47:06 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPOST_7
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPUT_5
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 20:47:06 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 20:47:06 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 20:47:06 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 20:47:06 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 20:47:06 -Generating unique operation named: addUsingGET_7
2019-05-16 20:47:06 -Generating unique operation named: editUsingGET_8
2019-05-16 20:47:06 -Generating unique operation named: listUsingGET_8
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_14
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_15
2019-05-16 20:47:06 -Generating unique operation named: saveUsingPOST_7
2019-05-16 20:47:06 -Generating unique operation named: updateUsingGET_6
2019-05-16 20:47:06 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPOST_8
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPUT_6
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 20:47:06 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 20:47:06 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 20:47:06 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 20:47:06 -Generating unique operation named: addUsingGET_8
2019-05-16 20:47:06 -Generating unique operation named: editUsingGET_9
2019-05-16 20:47:06 -Generating unique operation named: listUsingGET_9
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_16
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_17
2019-05-16 20:47:06 -Generating unique operation named: saveUsingPOST_8
2019-05-16 20:47:06 -Generating unique operation named: updateUsingGET_7
2019-05-16 20:47:06 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPOST_9
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPUT_7
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 20:47:06 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 20:47:06 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 20:47:06 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 20:47:06 -Generating unique operation named: addUsingGET_9
2019-05-16 20:47:06 -Generating unique operation named: editUsingGET_10
2019-05-16 20:47:06 -Generating unique operation named: infoUsingGET_1
2019-05-16 20:47:06 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 20:47:06 -Generating unique operation named: infoUsingPOST_1
2019-05-16 20:47:06 -Generating unique operation named: infoUsingPUT_1
2019-05-16 20:47:06 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 20:47:06 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 20:47:06 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 20:47:06 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 20:47:06 -Generating unique operation named: listUsingGET_10
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_18
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_19
2019-05-16 20:47:06 -Generating unique operation named: saveUsingPOST_9
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPOST_10
2019-05-16 20:47:06 -Generating unique operation named: listUsingGET_11
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_20
2019-05-16 20:47:06 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 20:47:06 -Generating unique operation named: addUsingGET_10
2019-05-16 20:47:06 -Generating unique operation named: editUsingGET_11
2019-05-16 20:47:06 -Generating unique operation named: listUsingGET_12
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_21
2019-05-16 20:47:06 -Generating unique operation named: saveUsingPOST_10
2019-05-16 20:47:06 -Generating unique operation named: treeUsingGET_1
2019-05-16 20:47:06 -Generating unique operation named: treeUsingGET_2
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPOST_11
2019-05-16 20:47:06 -Generating unique operation named: addUsingGET_11
2019-05-16 20:47:06 -Generating unique operation named: editUsingGET_12
2019-05-16 20:47:06 -Generating unique operation named: listUsingGET_13
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_22
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_23
2019-05-16 20:47:06 -Generating unique operation named: saveUsingPOST_11
2019-05-16 20:47:06 -Generating unique operation named: updateUsingGET_8
2019-05-16 20:47:06 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPOST_12
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPUT_8
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 20:47:06 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 20:47:06 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 20:47:06 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 20:47:06 -Generating unique operation named: addUsingGET_12
2019-05-16 20:47:06 -Generating unique operation named: editUsingGET_13
2019-05-16 20:47:06 -Generating unique operation named: listUsingGET_14
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_24
2019-05-16 20:47:06 -Generating unique operation named: removeUsingPOST_25
2019-05-16 20:47:06 -Generating unique operation named: saveUsingPOST_12
2019-05-16 20:47:06 -Generating unique operation named: updateUsingGET_9
2019-05-16 20:47:06 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPOST_13
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPUT_9
2019-05-16 20:47:06 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 20:47:06 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 20:47:06 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 20:47:06 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 20:47:06 -Generating unique operation named: addUsingGET_13
2019-05-16 20:47:06 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 20:47:06 -Generating unique operation named: editUsingGET_14
2019-05-16 20:47:06 -Generating unique operation named: listUsingGET_15
2019-05-16 20:47:07 -Generating unique operation named: saveUsingPOST_13
2019-05-16 20:47:07 -Generating unique operation named: saveUsingPOST_14
2019-05-16 20:47:07 -Generating unique operation named: updateUsingPOST_14
2019-05-16 20:47:07 -Generating unique operation named: listUsingGET_16
2019-05-16 20:47:07 -Generating unique operation named: listUsingHEAD_1
2019-05-16 20:47:07 -Generating unique operation named: listUsingPOST_1
2019-05-16 20:47:07 -Generating unique operation named: listUsingPUT_1
2019-05-16 20:47:07 -Generating unique operation named: listUsingPATCH_1
2019-05-16 20:47:07 -Generating unique operation named: listUsingDELETE_1
2019-05-16 20:47:07 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 20:47:07 -Generating unique operation named: listUsingTRACE_1
2019-05-16 20:47:07 -Generating unique operation named: countDDUsingGET_1
2019-05-16 20:47:07 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 20:47:07 -Generating unique operation named: addUsingGET_14
2019-05-16 20:47:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 20:47:07 -Generating unique operation named: editUsingGET_15
2019-05-16 20:47:07 -Generating unique operation named: listUsingGET_17
2019-05-16 20:47:07 -Generating unique operation named: removeUsingPOST_26
2019-05-16 20:47:07 -Generating unique operation named: saveUsingPOST_15
2019-05-16 20:47:07 -Generating unique operation named: treeUsingGET_3
2019-05-16 20:47:07 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 20:47:07 -Generating unique operation named: updateUsingPOST_15
2019-05-16 20:47:07 -Generating unique operation named: addUsingGET_15
2019-05-16 20:47:07 -Generating unique operation named: editUsingGET_16
2019-05-16 20:47:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 20:47:07 -Generating unique operation named: listUsingGET_18
2019-05-16 20:47:07 -Generating unique operation named: removeUsingPOST_27
2019-05-16 20:47:07 -Generating unique operation named: removeUsingPOST_28
2019-05-16 20:47:07 -Generating unique operation named: saveUsingPOST_16
2019-05-16 20:47:07 -Generating unique operation named: updateUsingGET_10
2019-05-16 20:47:07 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 20:47:07 -Generating unique operation named: updateUsingPOST_16
2019-05-16 20:47:07 -Generating unique operation named: updateUsingPUT_10
2019-05-16 20:47:07 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 20:47:07 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 20:47:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 20:47:07 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 20:47:07 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 20:47:07 -Generating unique operation named: addUsingGET_16
2019-05-16 20:47:07 -Generating unique operation named: editUsingGET_17
2019-05-16 20:47:07 -Generating unique operation named: listUsingGET_19
2019-05-16 20:47:07 -Generating unique operation named: removeUsingPOST_29
2019-05-16 20:47:07 -Generating unique operation named: removeUsingPOST_30
2019-05-16 20:47:07 -Generating unique operation named: saveUsingPOST_17
2019-05-16 20:47:07 -Generating unique operation named: updateUsingGET_11
2019-05-16 20:47:07 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 20:47:07 -Generating unique operation named: updateUsingPOST_17
2019-05-16 20:47:07 -Generating unique operation named: updateUsingPUT_11
2019-05-16 20:47:07 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 20:47:07 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 20:47:07 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 20:47:07 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 20:47:07 -Generating unique operation named: addUsingGET_17
2019-05-16 20:47:07 -Generating unique operation named: editUsingGET_18
2019-05-16 20:47:07 -Generating unique operation named: listUsingGET_20
2019-05-16 20:47:07 -Generating unique operation named: removeUsingPOST_31
2019-05-16 20:47:07 -Generating unique operation named: removeUsingPOST_32
2019-05-16 20:47:07 -Generating unique operation named: saveUsingPOST_18
2019-05-16 20:47:07 -Generating unique operation named: updateUsingGET_12
2019-05-16 20:47:07 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 20:47:07 -Generating unique operation named: updateUsingPOST_18
2019-05-16 20:47:07 -Generating unique operation named: updateUsingPUT_12
2019-05-16 20:47:07 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 20:47:07 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 20:47:07 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 20:47:07 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 20:47:07 -Starting Quartz Scheduler now
2019-05-16 20:47:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 20:47:07 -Starting...
2019-05-16 20:47:07 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 20:47:07 -Started.
2019-05-16 20:47:07 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 20:47:07 -Using a shared selector for servlet write/read
2019-05-16 20:47:07 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 20:47:07 -Started BootdoApplication in 22.191 seconds (JVM running for 22.907)
2019-05-16 20:47:07 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 20:47:07 -==> Parameters: 
2019-05-16 20:47:07 -<==      Total: 1
2019-05-16 20:48:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-16 20:53:33 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 20:53:33 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 20:53:33 -FrameworkServlet 'dispatcherServlet': initialization completed in 79 ms
2019-05-16 20:53:33 -Enabling session validation scheduler...
2019-05-16 20:53:33 -请求地址 : http://localhost:8081/login;JSESSIONID=c1c3a2c5-b85d-43e2-a66f-d83f4a50e446
2019-05-16 20:53:33 -HTTP METHOD : GET
2019-05-16 20:53:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 20:53:33 -参数 : [{}]
2019-05-16 20:53:33 -耗时 : 5
2019-05-16 20:53:33 -返回值 : login
2019-05-16 20:53:35 -请求地址 : http://localhost:8081/getVerify
2019-05-16 20:53:35 -HTTP METHOD : GET
2019-05-16 20:53:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 20:53:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@b77e7cb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@f48727d]
2019-05-16 20:53:35 -0667
2019-05-16 20:53:36 -耗时 : 836
2019-05-16 20:53:36 -返回值 : null
2019-05-16 20:53:36 -请求地址 : http://localhost:8081/login
2019-05-16 20:53:36 -HTTP METHOD : GET
2019-05-16 20:53:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 20:53:36 -参数 : [{}]
2019-05-16 20:53:36 -耗时 : 0
2019-05-16 20:53:36 -返回值 : login
2019-05-16 20:53:40 -请求地址 : http://localhost:8081/login
2019-05-16 20:53:40 -HTTP METHOD : POST
2019-05-16 20:53:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 20:53:40 -参数 : [admin, 111111, 0667, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6521f2ca]
2019-05-16 20:53:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 20:53:40 -==> Parameters: admin(String)
2019-05-16 20:53:40 -<==      Total: 1
2019-05-16 20:53:40 -耗时 : 122
2019-05-16 20:53:40 -返回值 : {msg=操作成功, code=0}
2019-05-16 20:53:40 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 20:53:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:53:40 -==> Parameters: 1(Long), admin(String), 登录(String), 122(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 20:53:40.861(Timestamp)
2019-05-16 20:53:40 -<==    Updates: 1
2019-05-16 20:53:40 -请求地址 : http://localhost:8081/index
2019-05-16 20:53:40 -HTTP METHOD : GET
2019-05-16 20:53:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:53:41 -参数 : [{}]
2019-05-16 20:53:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:53:41 -==> Parameters: 1(Long)
2019-05-16 20:53:41 -<==      Total: 49
2019-05-16 20:53:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:53:41 -==> Parameters: 138(Long)
2019-05-16 20:53:41 -<==      Total: 1
2019-05-16 20:53:41 -耗时 : 118
2019-05-16 20:53:41 -返回值 : index_v1
2019-05-16 20:53:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:53:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 120(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:53:41.189(Timestamp)
2019-05-16 20:53:41 -<==    Updates: 1
2019-05-16 20:53:41 -请求地址 : http://localhost:8081/main
2019-05-16 20:53:41 -HTTP METHOD : GET
2019-05-16 20:53:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:53:41 -参数 : []
2019-05-16 20:53:41 -耗时 : 0
2019-05-16 20:53:41 -返回值 : main
2019-05-16 20:53:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:53:41 -HTTP METHOD : GET
2019-05-16 20:53:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:53:41 -参数 : []
2019-05-16 20:53:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:53:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:53:41 -<==      Total: 0
2019-05-16 20:53:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:53:41 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:53:41 -<==      Total: 1
2019-05-16 20:53:41 -耗时 : 61
2019-05-16 20:53:41 -返回值 : com.bootdo.common.utils.PageUtils@f847658
2019-05-16 20:53:41 -请求地址 : http://localhost:8081/main
2019-05-16 20:53:41 -HTTP METHOD : GET
2019-05-16 20:53:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:53:41 -参数 : []
2019-05-16 20:53:41 -耗时 : 0
2019-05-16 20:53:41 -返回值 : main
2019-05-16 20:53:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 20:53:47 -==> Parameters: 1(Long)
2019-05-16 20:53:47 -<==      Total: 93
2019-05-16 20:53:47 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:53:47 -HTTP METHOD : GET
2019-05-16 20:53:47 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:53:47 -参数 : []
2019-05-16 20:53:47 -耗时 : 0
2019-05-16 20:53:47 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:53:47 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:53:47 -HTTP METHOD : GET
2019-05-16 20:53:47 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:53:47 -参数 : [{limit=10, offset=0}]
2019-05-16 20:53:48 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:53:48 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:53:48 -<==      Total: 2
2019-05-16 20:53:48 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:53:48 -==> Parameters: 
2019-05-16 20:53:48 -<==      Total: 1
2019-05-16 20:53:48 -耗时 : 27
2019-05-16 20:53:48 -返回值 : com.bootdo.common.utils.PageUtils@1335ef37
2019-05-16 20:54:02 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-16 20:54:02 -HTTP METHOD : GET
2019-05-16 20:54:02 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-16 20:54:02 -参数 : []
2019-05-16 20:54:02 -耗时 : 1
2019-05-16 20:54:02 -返回值 : heat/heatPrice/heatPrice
2019-05-16 20:54:02 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-16 20:54:02 -HTTP METHOD : GET
2019-05-16 20:54:02 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-16 20:54:02 -参数 : [{limit=10, offset=0}]
2019-05-16 20:54:03 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-16 20:54:03 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:54:03 -<==      Total: 2
2019-05-16 20:54:03 -==>  Preparing: select count(*) from heat_price 
2019-05-16 20:54:03 -==> Parameters: 
2019-05-16 20:54:03 -<==      Total: 1
2019-05-16 20:54:03 -耗时 : 59
2019-05-16 20:54:03 -返回值 : com.bootdo.common.utils.PageUtils@7dd39647
2019-05-16 20:57:52 -请求地址 : http://localhost:8081/index
2019-05-16 20:57:52 -HTTP METHOD : GET
2019-05-16 20:57:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 20:57:52 -参数 : [{}]
2019-05-16 20:57:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 20:57:52 -==> Parameters: 1(Long)
2019-05-16 20:57:52 -<==      Total: 49
2019-05-16 20:57:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 20:57:52 -==> Parameters: 138(Long)
2019-05-16 20:57:52 -<==      Total: 1
2019-05-16 20:57:52 -耗时 : 24
2019-05-16 20:57:52 -返回值 : index_v1
2019-05-16 20:57:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 20:57:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 20:57:52.251(Timestamp)
2019-05-16 20:57:52 -请求地址 : http://localhost:8081/main
2019-05-16 20:57:52 -HTTP METHOD : GET
2019-05-16 20:57:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:57:52 -参数 : []
2019-05-16 20:57:52 -耗时 : 1
2019-05-16 20:57:52 -返回值 : main
2019-05-16 20:57:52 -<==    Updates: 1
2019-05-16 20:57:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 20:57:52 -HTTP METHOD : GET
2019-05-16 20:57:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 20:57:52 -参数 : []
2019-05-16 20:57:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 20:57:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 20:57:52 -<==      Total: 0
2019-05-16 20:57:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 20:57:52 -==> Parameters: 1(Long), 0(String)
2019-05-16 20:57:52 -<==      Total: 1
2019-05-16 20:57:52 -耗时 : 10
2019-05-16 20:57:52 -返回值 : com.bootdo.common.utils.PageUtils@22035a19
2019-05-16 20:57:52 -请求地址 : http://localhost:8081/main
2019-05-16 20:57:52 -HTTP METHOD : GET
2019-05-16 20:57:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 20:57:52 -参数 : []
2019-05-16 20:57:52 -耗时 : 1
2019-05-16 20:57:52 -返回值 : main
2019-05-16 20:57:54 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-16 20:57:54 -HTTP METHOD : GET
2019-05-16 20:57:54 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-16 20:57:54 -参数 : []
2019-05-16 20:57:54 -耗时 : 0
2019-05-16 20:57:54 -返回值 : heat/heatPrice/heatPrice
2019-05-16 20:57:54 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-16 20:57:54 -HTTP METHOD : GET
2019-05-16 20:57:54 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-16 20:57:54 -参数 : [{limit=10, offset=0}]
2019-05-16 20:57:54 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-16 20:57:54 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:57:54 -<==      Total: 2
2019-05-16 20:57:54 -==>  Preparing: select count(*) from heat_price 
2019-05-16 20:57:54 -==> Parameters: 
2019-05-16 20:57:54 -<==      Total: 1
2019-05-16 20:57:54 -耗时 : 10
2019-05-16 20:57:54 -返回值 : com.bootdo.common.utils.PageUtils@5143e09b
2019-05-16 20:58:02 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 20:58:02 -HTTP METHOD : GET
2019-05-16 20:58:02 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 20:58:02 -参数 : []
2019-05-16 20:58:02 -耗时 : 1
2019-05-16 20:58:02 -返回值 : water/waterPrice/waterPrice
2019-05-16 20:58:02 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 20:58:02 -HTTP METHOD : GET
2019-05-16 20:58:02 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 20:58:02 -参数 : [{limit=10, offset=0}]
2019-05-16 20:58:02 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 20:58:02 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 20:58:02 -<==      Total: 2
2019-05-16 20:58:02 -==>  Preparing: select count(*) from water_price 
2019-05-16 20:58:02 -==> Parameters: 
2019-05-16 20:58:02 -<==      Total: 1
2019-05-16 20:58:02 -耗时 : 8
2019-05-16 20:58:02 -返回值 : com.bootdo.common.utils.PageUtils@3ad2f035
2019-05-16 21:00:06 -请求地址 : http://localhost:8081/index
2019-05-16 21:00:06 -HTTP METHOD : GET
2019-05-16 21:00:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:00:06 -参数 : [{}]
2019-05-16 21:00:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:00:06 -==> Parameters: 1(Long)
2019-05-16 21:00:06 -<==      Total: 49
2019-05-16 21:00:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:00:06 -==> Parameters: 138(Long)
2019-05-16 21:00:06 -<==      Total: 1
2019-05-16 21:00:06 -耗时 : 21
2019-05-16 21:00:06 -返回值 : index_v1
2019-05-16 21:00:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:00:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:00:06.707(Timestamp)
2019-05-16 21:00:06 -请求地址 : http://localhost:8081/main
2019-05-16 21:00:06 -HTTP METHOD : GET
2019-05-16 21:00:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:00:06 -参数 : []
2019-05-16 21:00:06 -耗时 : 0
2019-05-16 21:00:06 -返回值 : main
2019-05-16 21:00:06 -<==    Updates: 1
2019-05-16 21:00:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:00:06 -HTTP METHOD : GET
2019-05-16 21:00:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:00:06 -参数 : []
2019-05-16 21:00:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:00:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:00:06 -<==      Total: 0
2019-05-16 21:00:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:00:06 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:00:06 -<==      Total: 1
2019-05-16 21:00:06 -耗时 : 5
2019-05-16 21:00:06 -返回值 : com.bootdo.common.utils.PageUtils@6e69185
2019-05-16 21:00:06 -请求地址 : http://localhost:8081/main
2019-05-16 21:00:06 -HTTP METHOD : GET
2019-05-16 21:00:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:00:06 -参数 : []
2019-05-16 21:00:06 -耗时 : 1
2019-05-16 21:00:06 -返回值 : main
2019-05-16 21:00:09 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:00:09 -HTTP METHOD : GET
2019-05-16 21:00:09 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:00:09 -参数 : []
2019-05-16 21:00:09 -耗时 : 0
2019-05-16 21:00:09 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:00:10 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:00:10 -HTTP METHOD : GET
2019-05-16 21:00:10 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:00:10 -参数 : [{limit=10, offset=0}]
2019-05-16 21:00:10 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:00:10 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:00:10 -<==      Total: 2
2019-05-16 21:00:10 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:00:10 -==> Parameters: 
2019-05-16 21:00:10 -<==      Total: 1
2019-05-16 21:00:10 -耗时 : 7
2019-05-16 21:00:10 -返回值 : com.bootdo.common.utils.PageUtils@6ad939da
2019-05-16 21:00:18 -请求地址 : http://localhost:8081/index
2019-05-16 21:00:18 -HTTP METHOD : GET
2019-05-16 21:00:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:00:18 -参数 : [{}]
2019-05-16 21:00:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:00:18 -==> Parameters: 1(Long)
2019-05-16 21:00:18 -<==      Total: 49
2019-05-16 21:00:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:00:18 -==> Parameters: 138(Long)
2019-05-16 21:00:18 -<==      Total: 1
2019-05-16 21:00:18 -耗时 : 20
2019-05-16 21:00:18 -返回值 : index_v1
2019-05-16 21:00:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:00:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:00:18.469(Timestamp)
2019-05-16 21:00:18 -请求地址 : http://localhost:8081/main
2019-05-16 21:00:18 -HTTP METHOD : GET
2019-05-16 21:00:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:00:18 -参数 : []
2019-05-16 21:00:18 -耗时 : 1
2019-05-16 21:00:18 -返回值 : main
2019-05-16 21:00:18 -<==    Updates: 1
2019-05-16 21:00:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:00:18 -HTTP METHOD : GET
2019-05-16 21:00:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:00:18 -参数 : []
2019-05-16 21:00:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:00:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:00:18 -<==      Total: 0
2019-05-16 21:00:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:00:18 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:00:18 -<==      Total: 1
2019-05-16 21:00:18 -耗时 : 7
2019-05-16 21:00:18 -返回值 : com.bootdo.common.utils.PageUtils@40638ab1
2019-05-16 21:00:18 -请求地址 : http://localhost:8081/main
2019-05-16 21:00:18 -HTTP METHOD : GET
2019-05-16 21:00:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:00:18 -参数 : []
2019-05-16 21:00:18 -耗时 : 0
2019-05-16 21:00:18 -返回值 : main
2019-05-16 21:00:21 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:00:21 -HTTP METHOD : GET
2019-05-16 21:00:21 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:00:21 -参数 : []
2019-05-16 21:00:21 -耗时 : 0
2019-05-16 21:00:21 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:00:21 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:00:21 -HTTP METHOD : GET
2019-05-16 21:00:21 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:00:21 -参数 : [{limit=10, offset=0}]
2019-05-16 21:00:21 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:00:21 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:00:21 -<==      Total: 2
2019-05-16 21:00:21 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:00:21 -==> Parameters: 
2019-05-16 21:00:21 -<==      Total: 1
2019-05-16 21:00:21 -耗时 : 10
2019-05-16 21:00:21 -返回值 : com.bootdo.common.utils.PageUtils@723b2b8a
2019-05-16 21:00:58 -请求地址 : http://localhost:8081/index
2019-05-16 21:00:58 -HTTP METHOD : GET
2019-05-16 21:00:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:00:58 -参数 : [{}]
2019-05-16 21:00:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:00:58 -==> Parameters: 1(Long)
2019-05-16 21:00:58 -<==      Total: 49
2019-05-16 21:00:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:00:58 -==> Parameters: 138(Long)
2019-05-16 21:00:58 -<==      Total: 1
2019-05-16 21:00:58 -耗时 : 23
2019-05-16 21:00:58 -返回值 : index_v1
2019-05-16 21:00:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:00:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:00:58.945(Timestamp)
2019-05-16 21:00:59 -请求地址 : http://localhost:8081/main
2019-05-16 21:00:59 -HTTP METHOD : GET
2019-05-16 21:00:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:00:59 -参数 : []
2019-05-16 21:00:59 -耗时 : 1
2019-05-16 21:00:59 -返回值 : main
2019-05-16 21:00:59 -<==    Updates: 1
2019-05-16 21:00:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:00:59 -HTTP METHOD : GET
2019-05-16 21:00:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:00:59 -参数 : []
2019-05-16 21:00:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:00:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:00:59 -<==      Total: 0
2019-05-16 21:00:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:00:59 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:00:59 -<==      Total: 1
2019-05-16 21:00:59 -耗时 : 6
2019-05-16 21:00:59 -返回值 : com.bootdo.common.utils.PageUtils@bd0e278
2019-05-16 21:00:59 -请求地址 : http://localhost:8081/main
2019-05-16 21:00:59 -HTTP METHOD : GET
2019-05-16 21:00:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:00:59 -参数 : []
2019-05-16 21:00:59 -耗时 : 0
2019-05-16 21:00:59 -返回值 : main
2019-05-16 21:01:00 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:01:00 -HTTP METHOD : GET
2019-05-16 21:01:00 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:01:00 -参数 : []
2019-05-16 21:01:00 -耗时 : 1
2019-05-16 21:01:00 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:01:01 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:01:01 -HTTP METHOD : GET
2019-05-16 21:01:01 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:01:01 -参数 : [{limit=10, offset=0}]
2019-05-16 21:01:01 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:01:01 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:01:01 -<==      Total: 2
2019-05-16 21:01:01 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:01:01 -==> Parameters: 
2019-05-16 21:01:01 -<==      Total: 1
2019-05-16 21:01:01 -耗时 : 7
2019-05-16 21:01:01 -返回值 : com.bootdo.common.utils.PageUtils@7ff5b112
2019-05-16 21:01:04 -请求地址 : http://localhost:8081/index
2019-05-16 21:01:04 -HTTP METHOD : GET
2019-05-16 21:01:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:01:04 -参数 : [{}]
2019-05-16 21:01:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:01:04 -==> Parameters: 1(Long)
2019-05-16 21:01:04 -<==      Total: 49
2019-05-16 21:01:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:01:04 -==> Parameters: 138(Long)
2019-05-16 21:01:04 -<==      Total: 1
2019-05-16 21:01:04 -耗时 : 23
2019-05-16 21:01:04 -返回值 : index_v1
2019-05-16 21:01:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:01:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:01:04.842(Timestamp)
2019-05-16 21:01:04 -请求地址 : http://localhost:8081/main
2019-05-16 21:01:04 -HTTP METHOD : GET
2019-05-16 21:01:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:01:04 -参数 : []
2019-05-16 21:01:04 -耗时 : 1
2019-05-16 21:01:04 -返回值 : main
2019-05-16 21:01:04 -<==    Updates: 1
2019-05-16 21:01:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:01:04 -HTTP METHOD : GET
2019-05-16 21:01:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:01:04 -参数 : []
2019-05-16 21:01:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:01:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:01:04 -<==      Total: 0
2019-05-16 21:01:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:01:04 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:01:04 -<==      Total: 1
2019-05-16 21:01:04 -耗时 : 6
2019-05-16 21:01:04 -返回值 : com.bootdo.common.utils.PageUtils@517c3b07
2019-05-16 21:01:05 -请求地址 : http://localhost:8081/main
2019-05-16 21:01:05 -HTTP METHOD : GET
2019-05-16 21:01:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:01:05 -参数 : []
2019-05-16 21:01:05 -耗时 : 0
2019-05-16 21:01:05 -返回值 : main
2019-05-16 21:01:08 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:01:08 -HTTP METHOD : GET
2019-05-16 21:01:08 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:01:08 -参数 : []
2019-05-16 21:01:08 -耗时 : 0
2019-05-16 21:01:08 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:01:08 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:01:08 -HTTP METHOD : GET
2019-05-16 21:01:08 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:01:08 -参数 : [{limit=10, offset=0}]
2019-05-16 21:01:08 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:01:08 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:01:08 -<==      Total: 2
2019-05-16 21:01:08 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:01:08 -==> Parameters: 
2019-05-16 21:01:08 -<==      Total: 1
2019-05-16 21:01:08 -耗时 : 7
2019-05-16 21:01:08 -返回值 : com.bootdo.common.utils.PageUtils@59e479ab
2019-05-16 21:01:24 -请求地址 : http://localhost:8081/login;JSESSIONID=4031a959-3d86-404d-b9b1-b5611a16be82
2019-05-16 21:01:24 -HTTP METHOD : GET
2019-05-16 21:01:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 21:01:24 -参数 : [{}]
2019-05-16 21:01:24 -耗时 : 1
2019-05-16 21:01:24 -返回值 : login
2019-05-16 21:01:24 -请求地址 : http://localhost:8081/getVerify
2019-05-16 21:01:24 -HTTP METHOD : GET
2019-05-16 21:01:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 21:01:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4bd06212, org.apache.shiro.web.servlet.ShiroHttpServletResponse@25193981]
2019-05-16 21:01:24 -5114
2019-05-16 21:01:25 -耗时 : 19
2019-05-16 21:01:25 -返回值 : null
2019-05-16 21:01:25 -请求地址 : http://localhost:8081/login
2019-05-16 21:01:25 -HTTP METHOD : GET
2019-05-16 21:01:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 21:01:25 -参数 : [{}]
2019-05-16 21:01:25 -耗时 : 0
2019-05-16 21:01:25 -返回值 : login
2019-05-16 21:01:31 -请求地址 : http://localhost:8081/login
2019-05-16 21:01:31 -HTTP METHOD : POST
2019-05-16 21:01:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 21:01:31 -参数 : [admin, 111111, 5114, org.apache.shiro.web.servlet.ShiroHttpServletRequest@71007ac]
2019-05-16 21:01:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 21:01:31 -==> Parameters: admin(String)
2019-05-16 21:01:31 -<==      Total: 1
2019-05-16 21:01:31 -耗时 : 6
2019-05-16 21:01:31 -返回值 : {msg=操作成功, code=0}
2019-05-16 21:01:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:01:31 -==> Parameters: 1(Long), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 21:01:31.147(Timestamp)
2019-05-16 21:01:31 -请求地址 : http://localhost:8081/index
2019-05-16 21:01:31 -HTTP METHOD : GET
2019-05-16 21:01:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:01:31 -参数 : [{}]
2019-05-16 21:01:31 -<==    Updates: 1
2019-05-16 21:01:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:01:31 -==> Parameters: 1(Long)
2019-05-16 21:01:31 -<==      Total: 49
2019-05-16 21:01:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:01:31 -==> Parameters: 138(Long)
2019-05-16 21:01:31 -<==      Total: 1
2019-05-16 21:01:31 -耗时 : 78
2019-05-16 21:01:31 -返回值 : index_v1
2019-05-16 21:01:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:01:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 78(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:01:31.257(Timestamp)
2019-05-16 21:01:31 -<==    Updates: 1
2019-05-16 21:01:31 -请求地址 : http://localhost:8081/main
2019-05-16 21:01:31 -HTTP METHOD : GET
2019-05-16 21:01:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:01:31 -参数 : []
2019-05-16 21:01:31 -耗时 : 1
2019-05-16 21:01:31 -返回值 : main
2019-05-16 21:01:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:01:31 -HTTP METHOD : GET
2019-05-16 21:01:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:01:31 -参数 : []
2019-05-16 21:01:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:01:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:01:31 -请求地址 : http://localhost:8081/main
2019-05-16 21:01:31 -HTTP METHOD : GET
2019-05-16 21:01:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:01:31 -参数 : []
2019-05-16 21:01:31 -耗时 : 0
2019-05-16 21:01:31 -返回值 : main
2019-05-16 21:01:31 -<==      Total: 0
2019-05-16 21:01:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:01:31 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:01:31 -<==      Total: 1
2019-05-16 21:01:31 -耗时 : 99
2019-05-16 21:01:31 -返回值 : com.bootdo.common.utils.PageUtils@18cee635
2019-05-16 21:01:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 21:01:36 -==> Parameters: 1(Long)
2019-05-16 21:01:36 -<==      Total: 93
2019-05-16 21:01:36 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:01:36 -HTTP METHOD : GET
2019-05-16 21:01:36 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:01:36 -参数 : []
2019-05-16 21:01:36 -耗时 : 0
2019-05-16 21:01:36 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:01:37 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:01:37 -HTTP METHOD : GET
2019-05-16 21:01:37 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:01:37 -参数 : [{limit=10, offset=0}]
2019-05-16 21:01:37 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:01:37 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:01:37 -<==      Total: 2
2019-05-16 21:01:37 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:01:37 -==> Parameters: 
2019-05-16 21:01:37 -<==      Total: 1
2019-05-16 21:01:37 -耗时 : 9
2019-05-16 21:01:37 -返回值 : com.bootdo.common.utils.PageUtils@291ecb58
2019-05-16 21:02:31 -请求地址 : http://localhost:8081/index
2019-05-16 21:02:31 -HTTP METHOD : GET
2019-05-16 21:02:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:02:31 -参数 : [{}]
2019-05-16 21:02:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:02:31 -==> Parameters: 1(Long)
2019-05-16 21:02:31 -<==      Total: 49
2019-05-16 21:02:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:02:31 -==> Parameters: 138(Long)
2019-05-16 21:02:31 -<==      Total: 1
2019-05-16 21:02:31 -耗时 : 105
2019-05-16 21:02:31 -返回值 : index_v1
2019-05-16 21:02:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:02:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 105(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:02:31.757(Timestamp)
2019-05-16 21:02:31 -<==    Updates: 1
2019-05-16 21:02:31 -请求地址 : http://localhost:8081/main
2019-05-16 21:02:31 -HTTP METHOD : GET
2019-05-16 21:02:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:02:31 -参数 : []
2019-05-16 21:02:31 -耗时 : 0
2019-05-16 21:02:31 -返回值 : main
2019-05-16 21:02:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:02:32 -HTTP METHOD : GET
2019-05-16 21:02:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:02:32 -参数 : []
2019-05-16 21:02:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:02:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:02:32 -<==      Total: 0
2019-05-16 21:02:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:02:32 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:02:32 -<==      Total: 1
2019-05-16 21:02:32 -耗时 : 7
2019-05-16 21:02:32 -返回值 : com.bootdo.common.utils.PageUtils@27742bb7
2019-05-16 21:02:32 -请求地址 : http://localhost:8081/main
2019-05-16 21:02:32 -HTTP METHOD : GET
2019-05-16 21:02:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:02:32 -参数 : []
2019-05-16 21:02:32 -耗时 : 1
2019-05-16 21:02:32 -返回值 : main
2019-05-16 21:02:33 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:02:33 -HTTP METHOD : GET
2019-05-16 21:02:33 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:02:33 -参数 : []
2019-05-16 21:02:33 -耗时 : 1
2019-05-16 21:02:33 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:02:34 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:02:34 -HTTP METHOD : GET
2019-05-16 21:02:34 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:02:34 -参数 : [{limit=10, offset=0}]
2019-05-16 21:02:34 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:02:34 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:02:34 -<==      Total: 2
2019-05-16 21:02:34 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:02:34 -==> Parameters: 
2019-05-16 21:02:34 -<==      Total: 1
2019-05-16 21:02:34 -耗时 : 10
2019-05-16 21:02:34 -返回值 : com.bootdo.common.utils.PageUtils@43211019
2019-05-16 21:03:22 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-16 21:03:22 -HTTP METHOD : GET
2019-05-16 21:03:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-16 21:03:22 -参数 : []
2019-05-16 21:03:22 -耗时 : 0
2019-05-16 21:03:22 -返回值 : elec/elecPrice/elecPrice
2019-05-16 21:03:22 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-16 21:03:22 -HTTP METHOD : GET
2019-05-16 21:03:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-16 21:03:22 -参数 : [{limit=10, offset=0}]
2019-05-16 21:03:22 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-16 21:03:22 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:03:22 -<==      Total: 2
2019-05-16 21:03:22 -==>  Preparing: select count(*) from elec_price 
2019-05-16 21:03:22 -==> Parameters: 
2019-05-16 21:03:22 -<==      Total: 1
2019-05-16 21:03:22 -耗时 : 23
2019-05-16 21:03:22 -返回值 : com.bootdo.common.utils.PageUtils@7057d198
2019-05-16 21:05:53 -请求地址 : http://localhost:8081/index
2019-05-16 21:05:53 -HTTP METHOD : GET
2019-05-16 21:05:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:05:53 -参数 : [{}]
2019-05-16 21:05:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:05:53 -==> Parameters: 1(Long)
2019-05-16 21:05:53 -<==      Total: 49
2019-05-16 21:05:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:05:53 -==> Parameters: 138(Long)
2019-05-16 21:05:53 -<==      Total: 1
2019-05-16 21:05:53 -耗时 : 17
2019-05-16 21:05:53 -返回值 : index_v1
2019-05-16 21:05:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:05:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:05:53.876(Timestamp)
2019-05-16 21:05:53 -<==    Updates: 1
2019-05-16 21:05:53 -请求地址 : http://localhost:8081/main
2019-05-16 21:05:53 -HTTP METHOD : GET
2019-05-16 21:05:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:05:53 -参数 : []
2019-05-16 21:05:53 -耗时 : 0
2019-05-16 21:05:53 -返回值 : main
2019-05-16 21:05:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:05:54 -HTTP METHOD : GET
2019-05-16 21:05:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:05:54 -参数 : []
2019-05-16 21:05:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:05:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:05:54 -<==      Total: 0
2019-05-16 21:05:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:05:54 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:05:54 -<==      Total: 1
2019-05-16 21:05:54 -耗时 : 7
2019-05-16 21:05:54 -返回值 : com.bootdo.common.utils.PageUtils@6a0e3910
2019-05-16 21:05:54 -请求地址 : http://localhost:8081/main
2019-05-16 21:05:54 -HTTP METHOD : GET
2019-05-16 21:05:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:05:54 -参数 : []
2019-05-16 21:05:54 -耗时 : 1
2019-05-16 21:05:54 -返回值 : main
2019-05-16 21:05:57 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-16 21:05:57 -HTTP METHOD : GET
2019-05-16 21:05:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-16 21:05:57 -参数 : []
2019-05-16 21:05:57 -耗时 : 0
2019-05-16 21:05:57 -返回值 : elec/elecPrice/elecPrice
2019-05-16 21:05:57 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-16 21:05:57 -HTTP METHOD : GET
2019-05-16 21:05:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-16 21:05:57 -参数 : [{limit=10, offset=0}]
2019-05-16 21:05:57 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-16 21:05:57 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:05:57 -<==      Total: 2
2019-05-16 21:05:57 -==>  Preparing: select count(*) from elec_price 
2019-05-16 21:05:57 -==> Parameters: 
2019-05-16 21:05:57 -<==      Total: 1
2019-05-16 21:05:57 -耗时 : 7
2019-05-16 21:05:57 -返回值 : com.bootdo.common.utils.PageUtils@5662ba4a
2019-05-16 21:06:13 -请求地址 : http://localhost:8081/login;JSESSIONID=8b89df63-ecbb-404d-b2be-13c9e5b9be17
2019-05-16 21:06:13 -HTTP METHOD : GET
2019-05-16 21:06:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 21:06:13 -参数 : [{}]
2019-05-16 21:06:13 -耗时 : 0
2019-05-16 21:06:13 -返回值 : login
2019-05-16 21:06:14 -请求地址 : http://localhost:8081/getVerify
2019-05-16 21:06:14 -HTTP METHOD : GET
2019-05-16 21:06:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 21:06:14 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3ff8ecb7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7c8bb1e8]
2019-05-16 21:06:14 -0037
2019-05-16 21:06:14 -耗时 : 9
2019-05-16 21:06:14 -返回值 : null
2019-05-16 21:06:14 -请求地址 : http://localhost:8081/login
2019-05-16 21:06:14 -HTTP METHOD : GET
2019-05-16 21:06:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 21:06:14 -参数 : [{}]
2019-05-16 21:06:14 -耗时 : 1
2019-05-16 21:06:14 -返回值 : login
2019-05-16 21:06:18 -请求地址 : http://localhost:8081/login
2019-05-16 21:06:18 -HTTP METHOD : POST
2019-05-16 21:06:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 21:06:18 -参数 : [admin, 111111, 0037, org.apache.shiro.web.servlet.ShiroHttpServletRequest@53017e85]
2019-05-16 21:06:18 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 21:06:18 -==> Parameters: admin(String)
2019-05-16 21:06:18 -<==      Total: 1
2019-05-16 21:06:18 -耗时 : 71
2019-05-16 21:06:18 -返回值 : {msg=操作成功, code=0}
2019-05-16 21:06:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:06:18 -==> Parameters: 1(Long), admin(String), 登录(String), 71(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 21:06:18.125(Timestamp)
2019-05-16 21:06:18 -请求地址 : http://localhost:8081/index
2019-05-16 21:06:18 -HTTP METHOD : GET
2019-05-16 21:06:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:06:18 -参数 : [{}]
2019-05-16 21:06:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:06:18 -==> Parameters: 1(Long)
2019-05-16 21:06:18 -<==      Total: 49
2019-05-16 21:06:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:06:18 -==> Parameters: 138(Long)
2019-05-16 21:06:18 -<==    Updates: 1
2019-05-16 21:06:18 -<==      Total: 1
2019-05-16 21:06:18 -耗时 : 21
2019-05-16 21:06:18 -返回值 : index_v1
2019-05-16 21:06:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:06:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:06:18.164(Timestamp)
2019-05-16 21:06:18 -<==    Updates: 1
2019-05-16 21:06:18 -请求地址 : http://localhost:8081/main
2019-05-16 21:06:18 -HTTP METHOD : GET
2019-05-16 21:06:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:06:18 -参数 : []
2019-05-16 21:06:18 -耗时 : 0
2019-05-16 21:06:18 -返回值 : main
2019-05-16 21:06:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:06:18 -HTTP METHOD : GET
2019-05-16 21:06:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:06:18 -参数 : []
2019-05-16 21:06:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:06:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:06:18 -<==      Total: 0
2019-05-16 21:06:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:06:18 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:06:18 -<==      Total: 1
2019-05-16 21:06:18 -耗时 : 47
2019-05-16 21:06:18 -返回值 : com.bootdo.common.utils.PageUtils@67e97858
2019-05-16 21:06:18 -请求地址 : http://localhost:8081/main
2019-05-16 21:06:18 -HTTP METHOD : GET
2019-05-16 21:06:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:06:18 -参数 : []
2019-05-16 21:06:18 -耗时 : 1
2019-05-16 21:06:18 -返回值 : main
2019-05-16 21:06:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 21:06:21 -==> Parameters: 1(Long)
2019-05-16 21:06:21 -<==      Total: 93
2019-05-16 21:06:21 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-16 21:06:21 -HTTP METHOD : GET
2019-05-16 21:06:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-16 21:06:21 -参数 : []
2019-05-16 21:06:21 -耗时 : 0
2019-05-16 21:06:21 -返回值 : elec/elecPrice/elecPrice
2019-05-16 21:06:21 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-16 21:06:21 -HTTP METHOD : GET
2019-05-16 21:06:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-16 21:06:21 -参数 : [{limit=10, offset=0}]
2019-05-16 21:06:21 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-16 21:06:21 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:06:21 -<==      Total: 2
2019-05-16 21:06:21 -==>  Preparing: select count(*) from elec_price 
2019-05-16 21:06:21 -==> Parameters: 
2019-05-16 21:06:21 -<==      Total: 1
2019-05-16 21:06:21 -耗时 : 8
2019-05-16 21:06:21 -返回值 : com.bootdo.common.utils.PageUtils@65aad390
2019-05-16 21:08:48 -请求地址 : http://localhost:8081/index
2019-05-16 21:08:48 -HTTP METHOD : GET
2019-05-16 21:08:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:08:48 -参数 : [{}]
2019-05-16 21:08:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:08:48 -==> Parameters: 1(Long)
2019-05-16 21:08:48 -<==      Total: 49
2019-05-16 21:08:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:08:48 -==> Parameters: 138(Long)
2019-05-16 21:08:48 -<==      Total: 1
2019-05-16 21:08:48 -耗时 : 17
2019-05-16 21:08:48 -返回值 : index_v1
2019-05-16 21:08:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:08:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:08:48.309(Timestamp)
2019-05-16 21:08:48 -请求地址 : http://localhost:8081/main
2019-05-16 21:08:48 -HTTP METHOD : GET
2019-05-16 21:08:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:08:48 -参数 : []
2019-05-16 21:08:48 -耗时 : 1
2019-05-16 21:08:48 -返回值 : main
2019-05-16 21:08:48 -<==    Updates: 1
2019-05-16 21:08:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:08:48 -HTTP METHOD : GET
2019-05-16 21:08:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:08:48 -参数 : []
2019-05-16 21:08:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:08:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:08:48 -<==      Total: 0
2019-05-16 21:08:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:08:48 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:08:48 -<==      Total: 1
2019-05-16 21:08:48 -耗时 : 8
2019-05-16 21:08:48 -返回值 : com.bootdo.common.utils.PageUtils@2f578585
2019-05-16 21:08:48 -请求地址 : http://localhost:8081/main
2019-05-16 21:08:48 -HTTP METHOD : GET
2019-05-16 21:08:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:08:48 -参数 : []
2019-05-16 21:08:48 -耗时 : 0
2019-05-16 21:08:48 -返回值 : main
2019-05-16 21:09:06 -Starting BootdoApplication on PC-201905091110 with PID 6480 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 21:09:06 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 21:09:06 -The following profiles are active: dev
2019-05-16 21:09:07 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 21:09:07 CST 2019]; root of context hierarchy
2019-05-16 21:09:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 21:09:11 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$918fd747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:09:11 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$83e905ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:09:11 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:09:12 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:09:12 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:09:12 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 21:09:12 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 21:09:12 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:09:12 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:09:12 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:09:12 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:09:13 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 21:09:13 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 21:09:13 -Starting service [Tomcat]
2019-05-16 21:09:13 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 21:09:13 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 21:09:13 -Initializing Spring embedded WebApplicationContext
2019-05-16 21:09:13 -Root WebApplicationContext: initialization completed in 6475 ms
2019-05-16 21:09:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 21:09:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 21:09:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 21:09:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 21:09:13 -Filter xssFilter was not registered (disabled)
2019-05-16 21:09:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 21:09:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 21:09:13 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 21:09:13 -Servlet dispatcherServlet mapped to [/]
2019-05-16 21:09:17 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 21:09:07 CST 2019]; root of context hierarchy
2019-05-16 21:09:18 -Using default implementation for ThreadExecutor
2019-05-16 21:09:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 21:09:18 -Quartz Scheduler v.2.2.1 created.
2019-05-16 21:09:18 -RAMJobStore initialized.
2019-05-16 21:09:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 21:09:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 21:09:18 -Quartz scheduler version: 2.2.1
2019-05-16 21:09:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6e0d16a4
2019-05-16 21:09:18 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 21:09:18 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 21:09:20 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:20 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 21:09:20 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:09:20 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:20 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:09:20 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 21:09:20 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 21:09:20 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:20 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 21:09:20 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 21:09:20 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:09:20 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:20 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 21:09:20 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:09:21 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:09:21 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 21:09:21 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 21:09:21 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 21:09:21 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 21:09:21 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 21:09:21 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:09:21 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 21:09:21 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:09:21 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 21:09:21 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 21:09:21 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 21:09:21 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 21:09:21 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 21:09:21 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 21:09:21 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 21:09:21 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 21:09:21 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 21:09:21 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 21:09:21 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 21:09:21 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 21:09:21 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 21:09:21 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 21:09:21 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 21:09:21 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 21:09:21 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 21:09:21 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 21:09:21 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 21:09:21 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 21:09:21 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 21:09:21 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 21:09:21 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 21:09:21 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 21:09:21 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 21:09:21 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 21:09:21 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 21:09:21 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 21:09:21 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 21:09:21 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 21:09:21 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:09:21 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 21:09:21 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:09:21 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:09:21 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 21:09:21 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:09:21 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 21:09:21 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 21:09:21 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 21:09:21 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 21:09:21 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 21:09:21 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 21:09:21 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 21:09:21 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 21:09:21 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 21:09:21 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 21:09:21 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 21:09:21 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 21:09:21 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 21:09:21 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 21:09:21 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 21:09:21 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 21:09:21 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 21:09:21 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 21:09:21 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 21:09:21 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 21:09:21 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 21:09:21 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 21:09:21 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 21:09:21 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 21:09:21 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 21:09:21 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 21:09:21 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 21:09:21 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 21:09:21 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 21:09:21 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 21:09:21 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 21:09:21 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 21:09:21 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 21:09:21 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 21:09:21 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 21:09:21 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 21:09:21 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 21:09:21 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 21:09:21 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 21:09:21 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 21:09:21 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 21:09:21 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 21:09:21 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 21:09:21 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 21:09:21 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 21:09:21 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 21:09:21 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 21:09:21 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 21:09:21 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 21:09:21 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 21:09:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 21:09:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 21:09:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 21:09:21 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 21:09:21 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 21:09:21 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 21:09:21 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 21:09:21 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 21:09:21 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 21:09:21 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 21:09:21 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 21:09:21 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 21:09:21 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 21:09:21 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 21:09:21 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 21:09:21 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 21:09:21 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 21:09:21 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 21:09:21 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 21:09:21 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 21:09:21 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 21:09:21 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 21:09:21 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 21:09:21 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 21:09:21 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 21:09:21 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 21:09:21 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 21:09:21 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 21:09:21 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 21:09:21 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 21:09:21 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 21:09:21 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 21:09:21 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 21:09:21 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 21:09:21 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:09:21 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 21:09:21 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 21:09:21 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:09:21 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 21:09:21 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:09:21 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 21:09:21 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 21:09:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 21:09:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 21:09:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 21:09:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 21:09:21 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 21:09:21 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 21:09:21 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 21:09:22 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:09:22 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 21:09:07 CST 2019]; root of context hierarchy
2019-05-16 21:09:22 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:09:22 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:09:22 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:09:22 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 21:09:22 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 21:09:24 -Registering beans for JMX exposure on startup
2019-05-16 21:09:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 21:09:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 21:09:24 -Starting beans in phase 2147483647
2019-05-16 21:09:24 -Context refreshed
2019-05-16 21:09:24 -Found 1 custom documentation plugin(s)
2019-05-16 21:09:24 -Scanning for api listing references
2019-05-16 21:09:24 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 21:09:24 -Generating unique operation named: removeUsingPOST_1
2019-05-16 21:09:24 -Generating unique operation named: addUsingGET_1
2019-05-16 21:09:24 -Generating unique operation named: editUsingGET_1
2019-05-16 21:09:25 -Generating unique operation named: listUsingGET_1
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_2
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_3
2019-05-16 21:09:25 -Generating unique operation named: saveUsingPOST_1
2019-05-16 21:09:25 -Generating unique operation named: updateUsingGET_1
2019-05-16 21:09:25 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPOST_1
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPUT_1
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 21:09:25 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 21:09:25 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 21:09:25 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 21:09:25 -Generating unique operation named: addUsingGET_2
2019-05-16 21:09:25 -Generating unique operation named: editUsingGET_2
2019-05-16 21:09:25 -Generating unique operation named: listUsingGET_2
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_4
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_5
2019-05-16 21:09:25 -Generating unique operation named: saveUsingPOST_2
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPOST_2
2019-05-16 21:09:25 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 21:09:25 -Generating unique operation named: addUsingGET_3
2019-05-16 21:09:25 -Generating unique operation named: editUsingGET_3
2019-05-16 21:09:25 -Generating unique operation named: listUsingGET_3
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_6
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_7
2019-05-16 21:09:25 -Generating unique operation named: saveUsingPOST_3
2019-05-16 21:09:25 -Generating unique operation named: updateUsingGET_2
2019-05-16 21:09:25 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPOST_3
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPUT_2
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 21:09:25 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 21:09:25 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 21:09:25 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 21:09:25 -Generating unique operation named: addUsingGET_4
2019-05-16 21:09:25 -Generating unique operation named: editUsingGET_4
2019-05-16 21:09:25 -Generating unique operation named: listUsingGET_4
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_8
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_9
2019-05-16 21:09:25 -Generating unique operation named: saveUsingPOST_4
2019-05-16 21:09:25 -Generating unique operation named: updateUsingGET_3
2019-05-16 21:09:25 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPOST_4
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPUT_3
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 21:09:25 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 21:09:25 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 21:09:25 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 21:09:25 -Generating unique operation named: ElecUsingGET_1
2019-05-16 21:09:25 -Generating unique operation named: addUsingGET_5
2019-05-16 21:09:25 -Generating unique operation named: editUsingGET_5
2019-05-16 21:09:25 -Generating unique operation named: listUsingGET_5
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_10
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_11
2019-05-16 21:09:25 -Generating unique operation named: saveUsingPOST_5
2019-05-16 21:09:25 -Generating unique operation named: updateUsingGET_4
2019-05-16 21:09:25 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPOST_5
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPUT_4
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 21:09:25 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 21:09:25 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 21:09:25 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 21:09:25 -Generating unique operation named: editUsingGET_6
2019-05-16 21:09:25 -Generating unique operation named: listUsingGET_6
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPOST_6
2019-05-16 21:09:25 -Generating unique operation named: addUsingGET_6
2019-05-16 21:09:25 -Generating unique operation named: editUsingGET_7
2019-05-16 21:09:25 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 21:09:25 -Generating unique operation named: listUsingGET_7
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_12
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_13
2019-05-16 21:09:25 -Generating unique operation named: saveUsingPOST_6
2019-05-16 21:09:25 -Generating unique operation named: updateUsingGET_5
2019-05-16 21:09:25 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPOST_7
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPUT_5
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 21:09:25 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 21:09:25 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 21:09:25 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 21:09:25 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 21:09:25 -Generating unique operation named: addUsingGET_7
2019-05-16 21:09:25 -Generating unique operation named: editUsingGET_8
2019-05-16 21:09:25 -Generating unique operation named: listUsingGET_8
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_14
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_15
2019-05-16 21:09:25 -Generating unique operation named: saveUsingPOST_7
2019-05-16 21:09:25 -Generating unique operation named: updateUsingGET_6
2019-05-16 21:09:25 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPOST_8
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPUT_6
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 21:09:25 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 21:09:25 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 21:09:25 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 21:09:25 -Generating unique operation named: addUsingGET_8
2019-05-16 21:09:25 -Generating unique operation named: editUsingGET_9
2019-05-16 21:09:25 -Generating unique operation named: listUsingGET_9
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_16
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_17
2019-05-16 21:09:25 -Generating unique operation named: saveUsingPOST_8
2019-05-16 21:09:25 -Generating unique operation named: updateUsingGET_7
2019-05-16 21:09:25 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPOST_9
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPUT_7
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 21:09:25 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 21:09:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 21:09:25 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 21:09:25 -Generating unique operation named: addUsingGET_9
2019-05-16 21:09:25 -Generating unique operation named: editUsingGET_10
2019-05-16 21:09:25 -Generating unique operation named: infoUsingGET_1
2019-05-16 21:09:25 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 21:09:25 -Generating unique operation named: infoUsingPOST_1
2019-05-16 21:09:25 -Generating unique operation named: infoUsingPUT_1
2019-05-16 21:09:25 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 21:09:25 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 21:09:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 21:09:25 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 21:09:25 -Generating unique operation named: listUsingGET_10
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_18
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_19
2019-05-16 21:09:25 -Generating unique operation named: saveUsingPOST_9
2019-05-16 21:09:25 -Generating unique operation named: updateUsingPOST_10
2019-05-16 21:09:25 -Generating unique operation named: listUsingGET_11
2019-05-16 21:09:25 -Generating unique operation named: removeUsingPOST_20
2019-05-16 21:09:25 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 21:09:26 -Generating unique operation named: addUsingGET_10
2019-05-16 21:09:26 -Generating unique operation named: editUsingGET_11
2019-05-16 21:09:26 -Generating unique operation named: listUsingGET_12
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_21
2019-05-16 21:09:26 -Generating unique operation named: saveUsingPOST_10
2019-05-16 21:09:26 -Generating unique operation named: treeUsingGET_1
2019-05-16 21:09:26 -Generating unique operation named: treeUsingGET_2
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPOST_11
2019-05-16 21:09:26 -Generating unique operation named: addUsingGET_11
2019-05-16 21:09:26 -Generating unique operation named: editUsingGET_12
2019-05-16 21:09:26 -Generating unique operation named: listUsingGET_13
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_22
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_23
2019-05-16 21:09:26 -Generating unique operation named: saveUsingPOST_11
2019-05-16 21:09:26 -Generating unique operation named: updateUsingGET_8
2019-05-16 21:09:26 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPOST_12
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPUT_8
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 21:09:26 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 21:09:26 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 21:09:26 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 21:09:26 -Generating unique operation named: addUsingGET_12
2019-05-16 21:09:26 -Generating unique operation named: editUsingGET_13
2019-05-16 21:09:26 -Generating unique operation named: listUsingGET_14
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_24
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_25
2019-05-16 21:09:26 -Generating unique operation named: saveUsingPOST_12
2019-05-16 21:09:26 -Generating unique operation named: updateUsingGET_9
2019-05-16 21:09:26 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPOST_13
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPUT_9
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 21:09:26 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 21:09:26 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 21:09:26 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 21:09:26 -Generating unique operation named: addUsingGET_13
2019-05-16 21:09:26 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 21:09:26 -Generating unique operation named: editUsingGET_14
2019-05-16 21:09:26 -Generating unique operation named: listUsingGET_15
2019-05-16 21:09:26 -Generating unique operation named: saveUsingPOST_13
2019-05-16 21:09:26 -Generating unique operation named: saveUsingPOST_14
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPOST_14
2019-05-16 21:09:26 -Generating unique operation named: listUsingGET_16
2019-05-16 21:09:26 -Generating unique operation named: listUsingHEAD_1
2019-05-16 21:09:26 -Generating unique operation named: listUsingPOST_1
2019-05-16 21:09:26 -Generating unique operation named: listUsingPUT_1
2019-05-16 21:09:26 -Generating unique operation named: listUsingPATCH_1
2019-05-16 21:09:26 -Generating unique operation named: listUsingDELETE_1
2019-05-16 21:09:26 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 21:09:26 -Generating unique operation named: listUsingTRACE_1
2019-05-16 21:09:26 -Generating unique operation named: countDDUsingGET_1
2019-05-16 21:09:26 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 21:09:26 -Generating unique operation named: addUsingGET_14
2019-05-16 21:09:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 21:09:26 -Generating unique operation named: editUsingGET_15
2019-05-16 21:09:26 -Generating unique operation named: listUsingGET_17
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_26
2019-05-16 21:09:26 -Generating unique operation named: saveUsingPOST_15
2019-05-16 21:09:26 -Generating unique operation named: treeUsingGET_3
2019-05-16 21:09:26 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPOST_15
2019-05-16 21:09:26 -Generating unique operation named: addUsingGET_15
2019-05-16 21:09:26 -Generating unique operation named: editUsingGET_16
2019-05-16 21:09:26 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 21:09:26 -Generating unique operation named: listUsingGET_18
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_27
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_28
2019-05-16 21:09:26 -Generating unique operation named: saveUsingPOST_16
2019-05-16 21:09:26 -Generating unique operation named: updateUsingGET_10
2019-05-16 21:09:26 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPOST_16
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPUT_10
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 21:09:26 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 21:09:26 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 21:09:26 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 21:09:26 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 21:09:26 -Generating unique operation named: addUsingGET_16
2019-05-16 21:09:26 -Generating unique operation named: editUsingGET_17
2019-05-16 21:09:26 -Generating unique operation named: listUsingGET_19
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_29
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_30
2019-05-16 21:09:26 -Generating unique operation named: saveUsingPOST_17
2019-05-16 21:09:26 -Generating unique operation named: updateUsingGET_11
2019-05-16 21:09:26 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPOST_17
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPUT_11
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 21:09:26 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 21:09:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 21:09:26 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 21:09:26 -Generating unique operation named: addUsingGET_17
2019-05-16 21:09:26 -Generating unique operation named: editUsingGET_18
2019-05-16 21:09:26 -Generating unique operation named: listUsingGET_20
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_31
2019-05-16 21:09:26 -Generating unique operation named: removeUsingPOST_32
2019-05-16 21:09:26 -Generating unique operation named: saveUsingPOST_18
2019-05-16 21:09:26 -Generating unique operation named: updateUsingGET_12
2019-05-16 21:09:26 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPOST_18
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPUT_12
2019-05-16 21:09:26 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 21:09:26 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 21:09:26 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 21:09:26 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 21:09:26 -Starting Quartz Scheduler now
2019-05-16 21:09:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 21:09:26 -Starting...
2019-05-16 21:09:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 21:09:26 -Started.
2019-05-16 21:09:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 21:09:26 -Using a shared selector for servlet write/read
2019-05-16 21:09:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 21:09:26 -Started BootdoApplication in 21.015 seconds (JVM running for 21.776)
2019-05-16 21:09:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 21:09:27 -==> Parameters: 
2019-05-16 21:09:27 -<==      Total: 1
2019-05-16 21:10:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 21:10:12 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 21:10:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 76 ms
2019-05-16 21:10:12 -Enabling session validation scheduler...
2019-05-16 21:10:12 -请求地址 : http://localhost:8081/login;JSESSIONID=fe943b51-c0c7-46cf-875e-a426e720d94f
2019-05-16 21:10:12 -HTTP METHOD : GET
2019-05-16 21:10:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 21:10:12 -参数 : [{}]
2019-05-16 21:10:12 -耗时 : 5
2019-05-16 21:10:12 -返回值 : login
2019-05-16 21:10:13 -请求地址 : http://localhost:8081/getVerify
2019-05-16 21:10:13 -HTTP METHOD : GET
2019-05-16 21:10:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 21:10:13 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@43367221, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4df19437]
2019-05-16 21:10:14 -7269
2019-05-16 21:10:14 -耗时 : 474
2019-05-16 21:10:14 -返回值 : null
2019-05-16 21:10:20 -请求地址 : http://localhost:8081/login
2019-05-16 21:10:20 -HTTP METHOD : POST
2019-05-16 21:10:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 21:10:20 -参数 : [admin, 111111, 7269, org.apache.shiro.web.servlet.ShiroHttpServletRequest@36bc1bc]
2019-05-16 21:10:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 21:10:20 -==> Parameters: admin(String)
2019-05-16 21:10:20 -<==      Total: 1
2019-05-16 21:10:20 -耗时 : 90
2019-05-16 21:10:20 -返回值 : {msg=操作成功, code=0}
2019-05-16 21:10:20 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 21:10:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:10:20 -==> Parameters: 1(Long), admin(String), 登录(String), 90(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 21:10:20.361(Timestamp)
2019-05-16 21:10:20 -请求地址 : http://localhost:8081/index
2019-05-16 21:10:20 -HTTP METHOD : GET
2019-05-16 21:10:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:10:20 -参数 : [{}]
2019-05-16 21:10:20 -<==    Updates: 1
2019-05-16 21:10:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:10:20 -==> Parameters: 1(Long)
2019-05-16 21:10:20 -<==      Total: 49
2019-05-16 21:10:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:10:20 -==> Parameters: 138(Long)
2019-05-16 21:10:20 -<==      Total: 1
2019-05-16 21:10:20 -耗时 : 127
2019-05-16 21:10:20 -返回值 : index_v1
2019-05-16 21:10:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:10:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 127(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:10:20.64(Timestamp)
2019-05-16 21:10:20 -<==    Updates: 1
2019-05-16 21:10:20 -请求地址 : http://localhost:8081/main
2019-05-16 21:10:20 -HTTP METHOD : GET
2019-05-16 21:10:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:10:20 -参数 : []
2019-05-16 21:10:20 -耗时 : 0
2019-05-16 21:10:20 -返回值 : main
2019-05-16 21:10:21 -请求地址 : http://localhost:8081/main
2019-05-16 21:10:21 -HTTP METHOD : GET
2019-05-16 21:10:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:10:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:10:21 -HTTP METHOD : GET
2019-05-16 21:10:21 -参数 : []
2019-05-16 21:10:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:10:21 -耗时 : 0
2019-05-16 21:10:21 -参数 : []
2019-05-16 21:10:21 -返回值 : main
2019-05-16 21:10:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:10:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:10:21 -<==      Total: 0
2019-05-16 21:10:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:10:21 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:10:21 -<==      Total: 1
2019-05-16 21:10:21 -耗时 : 42
2019-05-16 21:10:21 -返回值 : com.bootdo.common.utils.PageUtils@30e87e20
2019-05-16 21:10:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-05-16 21:10:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 21:10:22 -==> Parameters: 1(Long)
2019-05-16 21:10:22 -<==      Total: 93
2019-05-16 21:10:22 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-16 21:10:22 -HTTP METHOD : GET
2019-05-16 21:10:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-16 21:10:22 -参数 : []
2019-05-16 21:10:22 -耗时 : 0
2019-05-16 21:10:22 -返回值 : elec/elecPrice/elecPrice
2019-05-16 21:10:23 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-16 21:10:23 -HTTP METHOD : GET
2019-05-16 21:10:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-16 21:10:23 -参数 : [{limit=10, offset=0}]
2019-05-16 21:10:23 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-16 21:10:23 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:10:23 -<==      Total: 2
2019-05-16 21:10:23 -==>  Preparing: select count(*) from elec_price 
2019-05-16 21:10:23 -==> Parameters: 
2019-05-16 21:10:23 -<==      Total: 1
2019-05-16 21:10:23 -耗时 : 27
2019-05-16 21:10:23 -返回值 : com.bootdo.common.utils.PageUtils@ccbaef1
2019-05-16 21:19:53 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:19:53 -HTTP METHOD : GET
2019-05-16 21:19:53 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:19:53 -参数 : []
2019-05-16 21:19:53 -耗时 : 0
2019-05-16 21:19:53 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:19:54 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:19:54 -HTTP METHOD : GET
2019-05-16 21:19:54 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:19:54 -参数 : [{limit=10, offset=0}]
2019-05-16 21:19:54 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:19:54 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:19:54 -<==      Total: 2
2019-05-16 21:19:54 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:19:54 -==> Parameters: 
2019-05-16 21:19:54 -<==      Total: 1
2019-05-16 21:19:54 -耗时 : 27
2019-05-16 21:19:54 -返回值 : com.bootdo.common.utils.PageUtils@77926bd2
2019-05-16 21:19:59 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-16 21:19:59 -HTTP METHOD : GET
2019-05-16 21:19:59 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-16 21:19:59 -参数 : [1, {}]
2019-05-16 21:19:59 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-16 21:19:59 -==> Parameters: 1(Long)
2019-05-16 21:19:59 -<==      Total: 1
2019-05-16 21:19:59 -耗时 : 5
2019-05-16 21:19:59 -返回值 : water/waterPrice/edit
2019-05-16 21:20:12 -请求地址 : http://localhost:8081/water/waterPrice/update
2019-05-16 21:20:12 -HTTP METHOD : POST
2019-05-16 21:20:12 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.update
2019-05-16 21:20:12 -参数 : [com.bootdo.water.domain.WaterPriceDO@2843cb6f]
2019-05-16 21:20:12 -==>  Preparing: update water_price SET `water_org` = ?, `m_water` = ?, `s1_water` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-16 21:20:12 -==> Parameters: 2(String), 7(BigDecimal), 10(BigDecimal), 2019-03(String), 1(Long), 2019-05-16 21:20:12.556(Timestamp), 1(Long), (String), 1(Long)
2019-05-16 21:20:12 -<==    Updates: 1
2019-05-16 21:20:12 -==>  Preparing: update water SET `water_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `water_type` = '1' 
2019-05-16 21:20:12 -==> Parameters: 7(BigDecimal), 1(Long), 2019-05-16 21:20:12.556(Timestamp), 1(Long), (String), 2(String), 2019-03(String)
2019-05-16 21:20:12 -<==    Updates: 3
2019-05-16 21:20:12 -耗时 : 281
2019-05-16 21:20:12 -返回值 : {msg=操作成功, code=0}
2019-05-16 21:20:12 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:20:12 -HTTP METHOD : GET
2019-05-16 21:20:12 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:20:12 -参数 : [{limit=10, offset=0}]
2019-05-16 21:20:12 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:20:12 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:20:12 -<==      Total: 2
2019-05-16 21:20:12 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:20:12 -==> Parameters: 
2019-05-16 21:20:12 -<==      Total: 1
2019-05-16 21:20:12 -耗时 : 10
2019-05-16 21:20:12 -返回值 : com.bootdo.common.utils.PageUtils@1af9253d
2019-05-16 21:21:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 21:21:19 -==> Parameters: 1(Long)
2019-05-16 21:21:19 -<==      Total: 93
2019-05-16 21:21:19 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-16 21:21:19 -HTTP METHOD : GET
2019-05-16 21:21:19 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-16 21:21:19 -参数 : [1, {}]
2019-05-16 21:21:19 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-16 21:21:19 -==> Parameters: 1(Long)
2019-05-16 21:21:19 -<==      Total: 1
2019-05-16 21:21:19 -耗时 : 8
2019-05-16 21:21:19 -返回值 : water/waterPrice/edit
2019-05-16 21:21:27 -请求地址 : http://localhost:8081/water/waterPrice/update
2019-05-16 21:21:27 -HTTP METHOD : POST
2019-05-16 21:21:27 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.update
2019-05-16 21:21:27 -参数 : [com.bootdo.water.domain.WaterPriceDO@e670cba]
2019-05-16 21:21:27 -==>  Preparing: update water_price SET `water_org` = ?, `m_water` = ?, `s1_water` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-16 21:21:27 -==> Parameters: 2(String), 7(BigDecimal), 15(BigDecimal), (String), 1(Long), 2019-05-16 21:21:27.421(Timestamp), 1(Long), (String), 1(Long)
2019-05-16 21:21:27 -<==    Updates: 1
2019-05-16 21:21:27 -==>  Preparing: update water SET `water_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `water_type` = '1' 
2019-05-16 21:21:27 -==> Parameters: 7(BigDecimal), 1(Long), 2019-05-16 21:21:27.421(Timestamp), 1(Long), (String), 2(String), (String)
2019-05-16 21:21:27 -<==    Updates: 0
2019-05-16 21:21:27 -耗时 : 156
2019-05-16 21:21:27 -返回值 : {msg=操作失败, code=1}
2019-05-16 21:21:43 -请求地址 : http://localhost:8081/water/waterPrice/update
2019-05-16 21:21:43 -HTTP METHOD : POST
2019-05-16 21:21:43 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.update
2019-05-16 21:21:43 -参数 : [com.bootdo.water.domain.WaterPriceDO@1018f475]
2019-05-16 21:21:43 -==>  Preparing: update water_price SET `water_org` = ?, `m_water` = ?, `s1_water` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-16 21:21:43 -==> Parameters: 2(String), 9(BigDecimal), 15(BigDecimal), 2019-03(String), 1(Long), 2019-05-16 21:21:43.546(Timestamp), 1(Long), (String), 1(Long)
2019-05-16 21:21:43 -<==    Updates: 1
2019-05-16 21:21:43 -==>  Preparing: update water SET `water_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `water_type` = '1' 
2019-05-16 21:21:43 -==> Parameters: 9(BigDecimal), 1(Long), 2019-05-16 21:21:43.546(Timestamp), 1(Long), (String), 2(String), 2019-03(String)
2019-05-16 21:21:43 -<==    Updates: 3
2019-05-16 21:21:43 -耗时 : 104
2019-05-16 21:21:43 -返回值 : {msg=操作成功, code=0}
2019-05-16 21:21:43 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:21:43 -HTTP METHOD : GET
2019-05-16 21:21:43 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:21:43 -参数 : [{limit=10, offset=0}]
2019-05-16 21:21:43 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:21:43 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:21:43 -<==      Total: 2
2019-05-16 21:21:43 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:21:43 -==> Parameters: 
2019-05-16 21:21:43 -<==      Total: 1
2019-05-16 21:21:43 -耗时 : 7
2019-05-16 21:21:43 -返回值 : com.bootdo.common.utils.PageUtils@1996d50b
2019-05-16 21:36:40 -Starting BootdoApplication on PC-201905091110 with PID 40204 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 21:36:40 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 21:36:40 -The following profiles are active: dev
2019-05-16 21:36:40 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 21:36:40 CST 2019]; root of context hierarchy
2019-05-16 21:36:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 21:36:45 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c41ba62b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:36:45 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b674d4d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:36:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:36:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:36:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:36:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 21:36:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 21:36:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:36:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:36:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:36:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:36:48 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 21:36:48 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 21:36:48 -Starting service [Tomcat]
2019-05-16 21:36:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 21:36:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 21:36:48 -Initializing Spring embedded WebApplicationContext
2019-05-16 21:36:48 -Root WebApplicationContext: initialization completed in 7666 ms
2019-05-16 21:36:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 21:36:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 21:36:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 21:36:48 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 21:36:48 -Filter xssFilter was not registered (disabled)
2019-05-16 21:36:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 21:36:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 21:36:48 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 21:36:48 -Servlet dispatcherServlet mapped to [/]
2019-05-16 21:36:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 21:36:40 CST 2019]; root of context hierarchy
2019-05-16 21:36:53 -Using default implementation for ThreadExecutor
2019-05-16 21:36:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 21:36:53 -Quartz Scheduler v.2.2.1 created.
2019-05-16 21:36:53 -RAMJobStore initialized.
2019-05-16 21:36:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 21:36:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 21:36:53 -Quartz scheduler version: 2.2.1
2019-05-16 21:36:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-05-16 21:36:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 21:36:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 21:36:57 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 21:36:57 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:36:57 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:36:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 21:36:57 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 21:36:57 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 21:36:57 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:36:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 21:36:57 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 21:36:57 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:36:57 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 21:36:57 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:36:57 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 21:36:57 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 21:36:57 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 21:36:57 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 21:36:57 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:36:57 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 21:36:57 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:36:57 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 21:36:57 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 21:36:57 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 21:36:57 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 21:36:57 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 21:36:57 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 21:36:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 21:36:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 21:36:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 21:36:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 21:36:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 21:36:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 21:36:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 21:36:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 21:36:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 21:36:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 21:36:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 21:36:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 21:36:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 21:36:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 21:36:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 21:36:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 21:36:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 21:36:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 21:36:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 21:36:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 21:36:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 21:36:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 21:36:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 21:36:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 21:36:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:36:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 21:36:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:36:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 21:36:57 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:36:57 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:36:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 21:36:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 21:36:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 21:36:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 21:36:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 21:36:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 21:36:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 21:36:57 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 21:36:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 21:36:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 21:36:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 21:36:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 21:36:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 21:36:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 21:36:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 21:36:57 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 21:36:57 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 21:36:57 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 21:36:57 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 21:36:57 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 21:36:57 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 21:36:57 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 21:36:57 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 21:36:57 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 21:36:57 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 21:36:57 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 21:36:57 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 21:36:57 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 21:36:57 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 21:36:57 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 21:36:57 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 21:36:57 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 21:36:57 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 21:36:57 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 21:36:57 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 21:36:57 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 21:36:57 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 21:36:57 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 21:36:57 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 21:36:57 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 21:36:57 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 21:36:57 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 21:36:57 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 21:36:57 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 21:36:57 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 21:36:57 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 21:36:57 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 21:36:57 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 21:36:57 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 21:36:57 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 21:36:57 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 21:36:57 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 21:36:57 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 21:36:57 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 21:36:57 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 21:36:57 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 21:36:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 21:36:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 21:36:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 21:36:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 21:36:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 21:36:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 21:36:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 21:36:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 21:36:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 21:36:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 21:36:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 21:36:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 21:36:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 21:36:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 21:36:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 21:36:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 21:36:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 21:36:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 21:36:57 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 21:36:57 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 21:36:57 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 21:36:57 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 21:36:57 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 21:36:57 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 21:36:57 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 21:36:57 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 21:36:57 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 21:36:57 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 21:36:57 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:36:57 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 21:36:57 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 21:36:57 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:36:57 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 21:36:57 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:36:57 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 21:36:57 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 21:36:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 21:36:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 21:36:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 21:36:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 21:36:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 21:36:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 21:36:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 21:36:58 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:36:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 21:36:40 CST 2019]; root of context hierarchy
2019-05-16 21:36:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:36:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:36:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:36:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 21:36:59 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 21:37:02 -Registering beans for JMX exposure on startup
2019-05-16 21:37:02 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 21:37:02 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 21:37:02 -Starting beans in phase 2147483647
2019-05-16 21:37:02 -Context refreshed
2019-05-16 21:37:02 -Found 1 custom documentation plugin(s)
2019-05-16 21:37:03 -Scanning for api listing references
2019-05-16 21:37:03 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 21:37:03 -Generating unique operation named: removeUsingPOST_1
2019-05-16 21:37:03 -Generating unique operation named: addUsingGET_1
2019-05-16 21:37:03 -Generating unique operation named: editUsingGET_1
2019-05-16 21:37:03 -Generating unique operation named: listUsingGET_1
2019-05-16 21:37:03 -Generating unique operation named: removeUsingPOST_2
2019-05-16 21:37:03 -Generating unique operation named: removeUsingPOST_3
2019-05-16 21:37:03 -Generating unique operation named: saveUsingPOST_1
2019-05-16 21:37:03 -Generating unique operation named: updateUsingGET_1
2019-05-16 21:37:03 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 21:37:03 -Generating unique operation named: updateUsingPOST_1
2019-05-16 21:37:03 -Generating unique operation named: updateUsingPUT_1
2019-05-16 21:37:03 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 21:37:03 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 21:37:03 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 21:37:03 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 21:37:03 -Generating unique operation named: addUsingGET_2
2019-05-16 21:37:03 -Generating unique operation named: editUsingGET_2
2019-05-16 21:37:03 -Generating unique operation named: listUsingGET_2
2019-05-16 21:37:03 -Generating unique operation named: removeUsingPOST_4
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_5
2019-05-16 21:37:04 -Generating unique operation named: saveUsingPOST_2
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPOST_2
2019-05-16 21:37:04 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 21:37:04 -Generating unique operation named: addUsingGET_3
2019-05-16 21:37:04 -Generating unique operation named: editUsingGET_3
2019-05-16 21:37:04 -Generating unique operation named: listUsingGET_3
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_6
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_7
2019-05-16 21:37:04 -Generating unique operation named: saveUsingPOST_3
2019-05-16 21:37:04 -Generating unique operation named: updateUsingGET_2
2019-05-16 21:37:04 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPOST_3
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPUT_2
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 21:37:04 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 21:37:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 21:37:04 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 21:37:04 -Generating unique operation named: addUsingGET_4
2019-05-16 21:37:04 -Generating unique operation named: editUsingGET_4
2019-05-16 21:37:04 -Generating unique operation named: listUsingGET_4
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_8
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_9
2019-05-16 21:37:04 -Generating unique operation named: saveUsingPOST_4
2019-05-16 21:37:04 -Generating unique operation named: updateUsingGET_3
2019-05-16 21:37:04 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPOST_4
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPUT_3
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 21:37:04 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 21:37:04 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 21:37:04 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 21:37:04 -Generating unique operation named: ElecUsingGET_1
2019-05-16 21:37:04 -Generating unique operation named: addUsingGET_5
2019-05-16 21:37:04 -Generating unique operation named: editUsingGET_5
2019-05-16 21:37:04 -Generating unique operation named: listUsingGET_5
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_10
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_11
2019-05-16 21:37:04 -Generating unique operation named: saveUsingPOST_5
2019-05-16 21:37:04 -Generating unique operation named: updateUsingGET_4
2019-05-16 21:37:04 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPOST_5
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPUT_4
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 21:37:04 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 21:37:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 21:37:04 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 21:37:04 -Generating unique operation named: editUsingGET_6
2019-05-16 21:37:04 -Generating unique operation named: listUsingGET_6
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPOST_6
2019-05-16 21:37:04 -Generating unique operation named: addUsingGET_6
2019-05-16 21:37:04 -Generating unique operation named: editUsingGET_7
2019-05-16 21:37:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 21:37:04 -Generating unique operation named: listUsingGET_7
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_12
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_13
2019-05-16 21:37:04 -Generating unique operation named: saveUsingPOST_6
2019-05-16 21:37:04 -Generating unique operation named: updateUsingGET_5
2019-05-16 21:37:04 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPOST_7
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPUT_5
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 21:37:04 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 21:37:04 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 21:37:04 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 21:37:04 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 21:37:04 -Generating unique operation named: addUsingGET_7
2019-05-16 21:37:04 -Generating unique operation named: editUsingGET_8
2019-05-16 21:37:04 -Generating unique operation named: listUsingGET_8
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_14
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_15
2019-05-16 21:37:04 -Generating unique operation named: saveUsingPOST_7
2019-05-16 21:37:04 -Generating unique operation named: updateUsingGET_6
2019-05-16 21:37:04 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPOST_8
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPUT_6
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 21:37:04 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 21:37:04 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 21:37:04 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 21:37:04 -Generating unique operation named: addUsingGET_8
2019-05-16 21:37:04 -Generating unique operation named: editUsingGET_9
2019-05-16 21:37:04 -Generating unique operation named: listUsingGET_9
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_16
2019-05-16 21:37:04 -Generating unique operation named: removeUsingPOST_17
2019-05-16 21:37:04 -Generating unique operation named: saveUsingPOST_8
2019-05-16 21:37:04 -Generating unique operation named: updateUsingGET_7
2019-05-16 21:37:04 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPOST_9
2019-05-16 21:37:04 -Generating unique operation named: updateUsingPUT_7
2019-05-16 21:37:05 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 21:37:05 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 21:37:05 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 21:37:05 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 21:37:05 -Generating unique operation named: addUsingGET_9
2019-05-16 21:37:05 -Generating unique operation named: editUsingGET_10
2019-05-16 21:37:05 -Generating unique operation named: infoUsingGET_1
2019-05-16 21:37:05 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 21:37:05 -Generating unique operation named: infoUsingPOST_1
2019-05-16 21:37:05 -Generating unique operation named: infoUsingPUT_1
2019-05-16 21:37:05 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 21:37:05 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 21:37:05 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 21:37:05 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 21:37:05 -Generating unique operation named: listUsingGET_10
2019-05-16 21:37:05 -Generating unique operation named: removeUsingPOST_18
2019-05-16 21:37:05 -Generating unique operation named: removeUsingPOST_19
2019-05-16 21:37:05 -Generating unique operation named: saveUsingPOST_9
2019-05-16 21:37:05 -Generating unique operation named: updateUsingPOST_10
2019-05-16 21:37:05 -Generating unique operation named: listUsingGET_11
2019-05-16 21:37:05 -Generating unique operation named: removeUsingPOST_20
2019-05-16 21:37:05 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 21:37:05 -Generating unique operation named: addUsingGET_10
2019-05-16 21:37:05 -Generating unique operation named: editUsingGET_11
2019-05-16 21:37:05 -Generating unique operation named: listUsingGET_12
2019-05-16 21:37:05 -Generating unique operation named: removeUsingPOST_21
2019-05-16 21:37:05 -Generating unique operation named: saveUsingPOST_10
2019-05-16 21:37:05 -Generating unique operation named: treeUsingGET_1
2019-05-16 21:37:05 -Generating unique operation named: treeUsingGET_2
2019-05-16 21:37:05 -Generating unique operation named: updateUsingPOST_11
2019-05-16 21:37:05 -Generating unique operation named: addUsingGET_11
2019-05-16 21:37:05 -Generating unique operation named: editUsingGET_12
2019-05-16 21:37:05 -Generating unique operation named: listUsingGET_13
2019-05-16 21:37:05 -Generating unique operation named: removeUsingPOST_22
2019-05-16 21:37:05 -Generating unique operation named: removeUsingPOST_23
2019-05-16 21:37:05 -Generating unique operation named: saveUsingPOST_11
2019-05-16 21:37:05 -Generating unique operation named: updateUsingGET_8
2019-05-16 21:37:05 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 21:37:05 -Generating unique operation named: updateUsingPOST_12
2019-05-16 21:37:05 -Generating unique operation named: updateUsingPUT_8
2019-05-16 21:37:05 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 21:37:05 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 21:37:05 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 21:37:05 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 21:37:05 -Generating unique operation named: addUsingGET_12
2019-05-16 21:37:05 -Generating unique operation named: editUsingGET_13
2019-05-16 21:37:05 -Generating unique operation named: listUsingGET_14
2019-05-16 21:37:05 -Generating unique operation named: removeUsingPOST_24
2019-05-16 21:37:05 -Generating unique operation named: removeUsingPOST_25
2019-05-16 21:37:05 -Generating unique operation named: saveUsingPOST_12
2019-05-16 21:37:05 -Generating unique operation named: updateUsingGET_9
2019-05-16 21:37:05 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 21:37:05 -Generating unique operation named: updateUsingPOST_13
2019-05-16 21:37:05 -Generating unique operation named: updateUsingPUT_9
2019-05-16 21:37:05 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 21:37:05 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 21:37:05 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 21:37:05 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 21:37:05 -Generating unique operation named: addUsingGET_13
2019-05-16 21:37:05 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 21:37:05 -Generating unique operation named: editUsingGET_14
2019-05-16 21:37:05 -Generating unique operation named: listUsingGET_15
2019-05-16 21:37:05 -Generating unique operation named: saveUsingPOST_13
2019-05-16 21:37:05 -Generating unique operation named: saveUsingPOST_14
2019-05-16 21:37:05 -Generating unique operation named: updateUsingPOST_14
2019-05-16 21:37:05 -Generating unique operation named: listUsingGET_16
2019-05-16 21:37:05 -Generating unique operation named: listUsingHEAD_1
2019-05-16 21:37:05 -Generating unique operation named: listUsingPOST_1
2019-05-16 21:37:05 -Generating unique operation named: listUsingPUT_1
2019-05-16 21:37:05 -Generating unique operation named: listUsingPATCH_1
2019-05-16 21:37:05 -Generating unique operation named: listUsingDELETE_1
2019-05-16 21:37:05 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 21:37:05 -Generating unique operation named: listUsingTRACE_1
2019-05-16 21:37:05 -Generating unique operation named: countDDUsingGET_1
2019-05-16 21:37:05 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 21:37:05 -Generating unique operation named: addUsingGET_14
2019-05-16 21:37:06 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 21:37:06 -Generating unique operation named: editUsingGET_15
2019-05-16 21:37:06 -Generating unique operation named: listUsingGET_17
2019-05-16 21:37:06 -Generating unique operation named: removeUsingPOST_26
2019-05-16 21:37:06 -Generating unique operation named: saveUsingPOST_15
2019-05-16 21:37:06 -Generating unique operation named: treeUsingGET_3
2019-05-16 21:37:06 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 21:37:06 -Generating unique operation named: updateUsingPOST_15
2019-05-16 21:37:06 -Generating unique operation named: addUsingGET_15
2019-05-16 21:37:06 -Generating unique operation named: editUsingGET_16
2019-05-16 21:37:06 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 21:37:06 -Generating unique operation named: listUsingGET_18
2019-05-16 21:37:06 -Generating unique operation named: removeUsingPOST_27
2019-05-16 21:37:06 -Generating unique operation named: removeUsingPOST_28
2019-05-16 21:37:06 -Generating unique operation named: saveUsingPOST_16
2019-05-16 21:37:06 -Generating unique operation named: updateUsingGET_10
2019-05-16 21:37:06 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 21:37:06 -Generating unique operation named: updateUsingPOST_16
2019-05-16 21:37:06 -Generating unique operation named: updateUsingPUT_10
2019-05-16 21:37:06 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 21:37:06 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 21:37:06 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 21:37:06 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 21:37:06 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 21:37:06 -Generating unique operation named: addUsingGET_16
2019-05-16 21:37:06 -Generating unique operation named: editUsingGET_17
2019-05-16 21:37:06 -Generating unique operation named: listUsingGET_19
2019-05-16 21:37:06 -Generating unique operation named: removeUsingPOST_29
2019-05-16 21:37:06 -Generating unique operation named: removeUsingPOST_30
2019-05-16 21:37:06 -Generating unique operation named: saveUsingPOST_17
2019-05-16 21:37:06 -Generating unique operation named: updateUsingGET_11
2019-05-16 21:37:06 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 21:37:06 -Generating unique operation named: updateUsingPOST_17
2019-05-16 21:37:06 -Generating unique operation named: updateUsingPUT_11
2019-05-16 21:37:06 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 21:37:06 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 21:37:06 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 21:37:06 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 21:37:06 -Generating unique operation named: addUsingGET_17
2019-05-16 21:37:06 -Generating unique operation named: editUsingGET_18
2019-05-16 21:37:06 -Generating unique operation named: listUsingGET_20
2019-05-16 21:37:06 -Generating unique operation named: removeUsingPOST_31
2019-05-16 21:37:06 -Generating unique operation named: removeUsingPOST_32
2019-05-16 21:37:06 -Generating unique operation named: saveUsingPOST_18
2019-05-16 21:37:06 -Generating unique operation named: updateUsingGET_12
2019-05-16 21:37:06 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 21:37:06 -Generating unique operation named: updateUsingPOST_18
2019-05-16 21:37:06 -Generating unique operation named: updateUsingPUT_12
2019-05-16 21:37:06 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 21:37:06 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 21:37:06 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 21:37:06 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 21:37:06 -Starting Quartz Scheduler now
2019-05-16 21:37:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 21:37:06 -Starting...
2019-05-16 21:37:06 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 21:37:06 -Started.
2019-05-16 21:37:06 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 21:37:06 -Using a shared selector for servlet write/read
2019-05-16 21:37:06 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 21:37:06 -Started BootdoApplication in 27.321 seconds (JVM running for 28.104)
2019-05-16 21:37:06 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 21:37:07 -==> Parameters: 
2019-05-16 21:37:07 -<==      Total: 1
2019-05-16 21:37:14 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 21:37:14 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 21:37:14 -FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2019-05-16 21:37:14 -Enabling session validation scheduler...
2019-05-16 21:37:14 -请求地址 : http://localhost:8081/login;JSESSIONID=9623952c-59ae-4cb4-93f8-ad80823576af
2019-05-16 21:37:14 -HTTP METHOD : GET
2019-05-16 21:37:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 21:37:14 -参数 : [{}]
2019-05-16 21:37:14 -耗时 : 4
2019-05-16 21:37:14 -返回值 : login
2019-05-16 21:37:15 -请求地址 : http://localhost:8081/getVerify
2019-05-16 21:37:15 -HTTP METHOD : GET
2019-05-16 21:37:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 21:37:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b71dc79, org.apache.shiro.web.servlet.ShiroHttpServletResponse@55b62967]
2019-05-16 21:37:16 -1578
2019-05-16 21:37:16 -耗时 : 610
2019-05-16 21:37:16 -返回值 : null
2019-05-16 21:37:16 -请求地址 : http://localhost:8081/login
2019-05-16 21:37:16 -HTTP METHOD : GET
2019-05-16 21:37:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 21:37:16 -参数 : [{}]
2019-05-16 21:37:16 -耗时 : 0
2019-05-16 21:37:16 -返回值 : login
2019-05-16 21:37:21 -请求地址 : http://localhost:8081/login
2019-05-16 21:37:21 -HTTP METHOD : POST
2019-05-16 21:37:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 21:37:21 -参数 : [admin, 111111, 1578, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6b76862a]
2019-05-16 21:37:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 21:37:21 -==> Parameters: admin(String)
2019-05-16 21:37:21 -<==      Total: 1
2019-05-16 21:37:21 -耗时 : 107
2019-05-16 21:37:21 -返回值 : {msg=操作成功, code=0}
2019-05-16 21:37:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 21:37:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:37:21 -==> Parameters: 1(Long), admin(String), 登录(String), 107(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 21:37:21.389(Timestamp)
2019-05-16 21:37:21 -<==    Updates: 1
2019-05-16 21:37:21 -请求地址 : http://localhost:8081/index
2019-05-16 21:37:21 -HTTP METHOD : GET
2019-05-16 21:37:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:37:21 -参数 : [{}]
2019-05-16 21:37:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:37:21 -==> Parameters: 1(Long)
2019-05-16 21:37:21 -<==      Total: 49
2019-05-16 21:37:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:37:21 -==> Parameters: 138(Long)
2019-05-16 21:37:21 -<==      Total: 1
2019-05-16 21:37:21 -耗时 : 131
2019-05-16 21:37:21 -返回值 : index_v1
2019-05-16 21:37:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:37:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 131(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:37:21.649(Timestamp)
2019-05-16 21:37:21 -<==    Updates: 1
2019-05-16 21:37:21 -请求地址 : http://localhost:8081/main
2019-05-16 21:37:21 -HTTP METHOD : GET
2019-05-16 21:37:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:37:21 -参数 : []
2019-05-16 21:37:21 -耗时 : 1
2019-05-16 21:37:21 -返回值 : main
2019-05-16 21:37:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:37:22 -HTTP METHOD : GET
2019-05-16 21:37:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:37:22 -参数 : []
2019-05-16 21:37:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:37:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:37:22 -<==      Total: 0
2019-05-16 21:37:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:37:22 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:37:22 -<==      Total: 1
2019-05-16 21:37:22 -耗时 : 33
2019-05-16 21:37:22 -返回值 : com.bootdo.common.utils.PageUtils@47036e8c
2019-05-16 21:37:22 -请求地址 : http://localhost:8081/main
2019-05-16 21:37:22 -HTTP METHOD : GET
2019-05-16 21:37:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:37:22 -参数 : []
2019-05-16 21:37:22 -耗时 : 1
2019-05-16 21:37:22 -返回值 : main
2019-05-16 21:37:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 21:37:25 -==> Parameters: 1(Long)
2019-05-16 21:37:25 -<==      Total: 93
2019-05-16 21:37:25 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:37:25 -HTTP METHOD : GET
2019-05-16 21:37:25 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:37:25 -参数 : []
2019-05-16 21:37:25 -耗时 : 1
2019-05-16 21:37:25 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:37:26 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:37:26 -HTTP METHOD : GET
2019-05-16 21:37:26 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:37:26 -参数 : [{limit=10, offset=0}]
2019-05-16 21:37:26 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:37:26 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:37:26 -<==      Total: 2
2019-05-16 21:37:26 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:37:26 -==> Parameters: 
2019-05-16 21:37:26 -<==      Total: 1
2019-05-16 21:37:26 -耗时 : 30
2019-05-16 21:37:26 -返回值 : com.bootdo.common.utils.PageUtils@3d642e0b
2019-05-16 21:37:29 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-16 21:37:29 -HTTP METHOD : GET
2019-05-16 21:37:29 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-16 21:37:29 -参数 : [1, {}]
2019-05-16 21:37:29 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-16 21:37:29 -==> Parameters: 1(Long)
2019-05-16 21:37:29 -<==      Total: 1
2019-05-16 21:37:29 -耗时 : 10
2019-05-16 21:37:29 -返回值 : water/waterPrice/edit
2019-05-16 21:37:54 -请求地址 : http://localhost:8081/water/waterPrice/update
2019-05-16 21:37:54 -HTTP METHOD : POST
2019-05-16 21:37:54 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.update
2019-05-16 21:37:54 -参数 : [com.bootdo.water.domain.WaterPriceDO@4d263cf9]
2019-05-16 21:37:54 -==>  Preparing: update water_price SET `water_org` = ?, `m_water` = ?, `s1_water` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-16 21:37:54 -==> Parameters: 2(String), 3(BigDecimal), 18(BigDecimal), (String), 1(Long), 2019-05-16 21:37:54.194(Timestamp), 1(Long), (String), 1(Long)
2019-05-16 21:37:54 -<==    Updates: 1
2019-05-16 21:37:54 -==>  Preparing: update water SET `water_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `water_type` = '1' 
2019-05-16 21:37:54 -==> Parameters: 3(BigDecimal), 1(Long), 2019-05-16 21:37:54.194(Timestamp), 1(Long), (String), 2(String), (String)
2019-05-16 21:37:54 -<==    Updates: 0
2019-05-16 21:37:54 -==>  Preparing: update water SET `water_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `water_type` = '2' 
2019-05-16 21:37:54 -==> Parameters: 18(BigDecimal), 1(Long), 2019-05-16 21:37:54.194(Timestamp), 1(Long), (String), 2(String), (String)
2019-05-16 21:37:54 -<==    Updates: 0
2019-05-16 21:37:54 -==>  Preparing: update water SET `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `water_type` = '3' 
2019-05-16 21:37:54 -==> Parameters: 1(Long), 2019-05-16 21:37:54.194(Timestamp), 1(Long), (String), 2(String), (String)
2019-05-16 21:37:54 -<==    Updates: 0
2019-05-16 21:37:54 -==>  Preparing: update water SET `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `water_type` = '4' 
2019-05-16 21:37:54 -==> Parameters: 1(Long), 2019-05-16 21:37:54.194(Timestamp), 1(Long), (String), 2(String), (String)
2019-05-16 21:37:54 -<==    Updates: 0
2019-05-16 21:37:54 -耗时 : 107
2019-05-16 21:37:54 -返回值 : {msg=操作成功, code=0}
2019-05-16 21:37:54 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:37:54 -HTTP METHOD : GET
2019-05-16 21:37:54 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:37:54 -参数 : [{limit=10, offset=0}]
2019-05-16 21:37:54 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:37:54 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:37:54 -<==      Total: 2
2019-05-16 21:37:54 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:37:54 -==> Parameters: 
2019-05-16 21:37:54 -<==      Total: 1
2019-05-16 21:37:54 -耗时 : 9
2019-05-16 21:37:54 -返回值 : com.bootdo.common.utils.PageUtils@a183445
2019-05-16 21:37:58 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-05-16 21:38:13 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-16 21:38:13 -HTTP METHOD : GET
2019-05-16 21:38:13 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-16 21:38:13 -参数 : [1, {}]
2019-05-16 21:38:13 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-16 21:38:13 -==> Parameters: 1(Long)
2019-05-16 21:38:13 -<==      Total: 1
2019-05-16 21:38:13 -耗时 : 6
2019-05-16 21:38:13 -返回值 : water/waterPrice/edit
2019-05-16 21:38:34 -请求地址 : http://localhost:8081/water/waterPrice/update
2019-05-16 21:38:34 -HTTP METHOD : POST
2019-05-16 21:38:34 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.update
2019-05-16 21:38:34 -参数 : [com.bootdo.water.domain.WaterPriceDO@2a8331c2]
2019-05-16 21:38:34 -==>  Preparing: update water_price SET `water_org` = ?, `m_water` = ?, `s1_water` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-16 21:38:34 -==> Parameters: 2(String), 1(BigDecimal), 11(BigDecimal), 2019-03(String), 1(Long), 2019-05-16 21:38:34.944(Timestamp), 1(Long), (String), 1(Long)
2019-05-16 21:38:35 -<==    Updates: 1
2019-05-16 21:38:35 -==>  Preparing: update water SET `water_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `water_type` = '1' 
2019-05-16 21:38:35 -==> Parameters: 1(BigDecimal), 1(Long), 2019-05-16 21:38:34.944(Timestamp), 1(Long), (String), 2(String), 2019-03(String)
2019-05-16 21:38:35 -<==    Updates: 3
2019-05-16 21:38:35 -==>  Preparing: update water SET `water_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `water_type` = '2' 
2019-05-16 21:38:35 -==> Parameters: 11(BigDecimal), 1(Long), 2019-05-16 21:38:34.944(Timestamp), 1(Long), (String), 2(String), 2019-03(String)
2019-05-16 21:38:35 -<==    Updates: 1
2019-05-16 21:38:35 -==>  Preparing: update water SET `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `water_type` = '3' 
2019-05-16 21:38:35 -==> Parameters: 1(Long), 2019-05-16 21:38:34.944(Timestamp), 1(Long), (String), 2(String), 2019-03(String)
2019-05-16 21:38:35 -<==    Updates: 0
2019-05-16 21:38:35 -==>  Preparing: update water SET `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `water_type` = '4' 
2019-05-16 21:38:35 -==> Parameters: 1(Long), 2019-05-16 21:38:34.944(Timestamp), 1(Long), (String), 2(String), 2019-03(String)
2019-05-16 21:38:35 -<==    Updates: 0
2019-05-16 21:38:35 -耗时 : 241
2019-05-16 21:38:35 -返回值 : {msg=操作成功, code=0}
2019-05-16 21:38:35 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:38:35 -HTTP METHOD : GET
2019-05-16 21:38:35 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:38:35 -参数 : [{limit=10, offset=0}]
2019-05-16 21:38:35 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:38:35 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:38:35 -<==      Total: 2
2019-05-16 21:38:35 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:38:35 -==> Parameters: 
2019-05-16 21:38:35 -<==      Total: 1
2019-05-16 21:38:35 -耗时 : 7
2019-05-16 21:38:35 -返回值 : com.bootdo.common.utils.PageUtils@62396da6
2019-05-16 21:41:45 -请求地址 : http://localhost:8081/index
2019-05-16 21:41:45 -HTTP METHOD : GET
2019-05-16 21:41:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:41:45 -参数 : [{}]
2019-05-16 21:41:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:41:45 -==> Parameters: 1(Long)
2019-05-16 21:41:45 -<==      Total: 49
2019-05-16 21:41:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:41:45 -==> Parameters: 138(Long)
2019-05-16 21:41:45 -<==      Total: 1
2019-05-16 21:41:45 -耗时 : 23
2019-05-16 21:41:45 -返回值 : index_v1
2019-05-16 21:41:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:41:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:41:45.847(Timestamp)
2019-05-16 21:41:45 -<==    Updates: 1
2019-05-16 21:41:45 -请求地址 : http://localhost:8081/main
2019-05-16 21:41:45 -HTTP METHOD : GET
2019-05-16 21:41:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:41:45 -参数 : []
2019-05-16 21:41:45 -耗时 : 0
2019-05-16 21:41:45 -返回值 : main
2019-05-16 21:41:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:41:46 -HTTP METHOD : GET
2019-05-16 21:41:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:41:46 -参数 : []
2019-05-16 21:41:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:41:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:41:46 -<==      Total: 0
2019-05-16 21:41:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:41:46 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:41:46 -<==      Total: 1
2019-05-16 21:41:46 -耗时 : 10
2019-05-16 21:41:46 -返回值 : com.bootdo.common.utils.PageUtils@6809b9ee
2019-05-16 21:41:46 -请求地址 : http://localhost:8081/main
2019-05-16 21:41:46 -HTTP METHOD : GET
2019-05-16 21:41:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:41:46 -参数 : []
2019-05-16 21:41:46 -耗时 : 2
2019-05-16 21:41:46 -返回值 : main
2019-05-16 21:41:49 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:41:49 -HTTP METHOD : GET
2019-05-16 21:41:49 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:41:49 -参数 : []
2019-05-16 21:41:49 -耗时 : 0
2019-05-16 21:41:49 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:41:49 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:41:49 -HTTP METHOD : GET
2019-05-16 21:41:49 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:41:49 -参数 : [{limit=10, offset=0}]
2019-05-16 21:41:49 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:41:49 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:41:49 -<==      Total: 2
2019-05-16 21:41:49 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:41:49 -==> Parameters: 
2019-05-16 21:41:49 -<==      Total: 1
2019-05-16 21:41:49 -耗时 : 7
2019-05-16 21:41:49 -返回值 : com.bootdo.common.utils.PageUtils@4c88fc56
2019-05-16 21:41:51 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-16 21:41:51 -HTTP METHOD : GET
2019-05-16 21:41:51 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-16 21:41:51 -参数 : [1, {}]
2019-05-16 21:41:51 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-16 21:41:51 -==> Parameters: 1(Long)
2019-05-16 21:41:51 -<==      Total: 1
2019-05-16 21:41:51 -耗时 : 4
2019-05-16 21:41:51 -返回值 : water/waterPrice/edit
2019-05-16 21:42:15 -请求地址 : http://localhost:8081/index
2019-05-16 21:42:15 -HTTP METHOD : GET
2019-05-16 21:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:42:15 -参数 : [{}]
2019-05-16 21:42:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:42:15 -==> Parameters: 1(Long)
2019-05-16 21:42:15 -<==      Total: 49
2019-05-16 21:42:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:42:15 -==> Parameters: 138(Long)
2019-05-16 21:42:15 -<==      Total: 1
2019-05-16 21:42:15 -耗时 : 31
2019-05-16 21:42:15 -返回值 : index_v1
2019-05-16 21:42:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:42:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:42:15.382(Timestamp)
2019-05-16 21:42:15 -请求地址 : http://localhost:8081/main
2019-05-16 21:42:15 -HTTP METHOD : GET
2019-05-16 21:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:42:15 -参数 : []
2019-05-16 21:42:15 -耗时 : 1
2019-05-16 21:42:15 -返回值 : main
2019-05-16 21:42:15 -<==    Updates: 1
2019-05-16 21:42:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:42:15 -HTTP METHOD : GET
2019-05-16 21:42:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:42:15 -参数 : []
2019-05-16 21:42:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:42:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:42:15 -<==      Total: 0
2019-05-16 21:42:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:42:15 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:42:15 -<==      Total: 1
2019-05-16 21:42:15 -耗时 : 5
2019-05-16 21:42:15 -返回值 : com.bootdo.common.utils.PageUtils@49d021d0
2019-05-16 21:42:15 -请求地址 : http://localhost:8081/main
2019-05-16 21:42:15 -HTTP METHOD : GET
2019-05-16 21:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:42:15 -参数 : []
2019-05-16 21:42:15 -耗时 : 0
2019-05-16 21:42:15 -返回值 : main
2019-05-16 21:42:17 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:42:17 -HTTP METHOD : GET
2019-05-16 21:42:17 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:42:17 -参数 : []
2019-05-16 21:42:17 -耗时 : 0
2019-05-16 21:42:17 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:42:18 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:42:18 -HTTP METHOD : GET
2019-05-16 21:42:18 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:42:18 -参数 : [{limit=10, offset=0}]
2019-05-16 21:42:18 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:42:18 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:42:18 -<==      Total: 2
2019-05-16 21:42:18 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:42:18 -==> Parameters: 
2019-05-16 21:42:18 -<==      Total: 1
2019-05-16 21:42:18 -耗时 : 7
2019-05-16 21:42:18 -返回值 : com.bootdo.common.utils.PageUtils@29aad97b
2019-05-16 21:42:19 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-16 21:42:19 -HTTP METHOD : GET
2019-05-16 21:42:19 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-16 21:42:19 -参数 : [1, {}]
2019-05-16 21:42:19 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-16 21:42:19 -==> Parameters: 1(Long)
2019-05-16 21:42:19 -<==      Total: 1
2019-05-16 21:42:19 -耗时 : 4
2019-05-16 21:42:19 -返回值 : water/waterPrice/edit
2019-05-16 21:42:58 -请求地址 : http://localhost:8081/index
2019-05-16 21:42:58 -HTTP METHOD : GET
2019-05-16 21:42:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:42:58 -参数 : [{}]
2019-05-16 21:42:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:42:58 -==> Parameters: 1(Long)
2019-05-16 21:42:58 -<==      Total: 49
2019-05-16 21:42:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:42:58 -==> Parameters: 138(Long)
2019-05-16 21:42:58 -<==      Total: 1
2019-05-16 21:42:58 -耗时 : 22
2019-05-16 21:42:58 -返回值 : index_v1
2019-05-16 21:42:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:42:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:42:58.867(Timestamp)
2019-05-16 21:42:58 -请求地址 : http://localhost:8081/main
2019-05-16 21:42:58 -HTTP METHOD : GET
2019-05-16 21:42:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:42:58 -参数 : []
2019-05-16 21:42:58 -耗时 : 0
2019-05-16 21:42:58 -返回值 : main
2019-05-16 21:42:58 -<==    Updates: 1
2019-05-16 21:42:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:42:59 -HTTP METHOD : GET
2019-05-16 21:42:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:42:59 -参数 : []
2019-05-16 21:42:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:42:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:42:59 -<==      Total: 0
2019-05-16 21:42:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:42:59 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:42:59 -<==      Total: 1
2019-05-16 21:42:59 -耗时 : 10
2019-05-16 21:42:59 -返回值 : com.bootdo.common.utils.PageUtils@48128beb
2019-05-16 21:42:59 -请求地址 : http://localhost:8081/main
2019-05-16 21:42:59 -HTTP METHOD : GET
2019-05-16 21:42:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:42:59 -参数 : []
2019-05-16 21:42:59 -耗时 : 0
2019-05-16 21:42:59 -返回值 : main
2019-05-16 21:43:01 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:43:01 -HTTP METHOD : GET
2019-05-16 21:43:01 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:43:01 -参数 : []
2019-05-16 21:43:01 -耗时 : 1
2019-05-16 21:43:01 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:43:01 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:43:01 -HTTP METHOD : GET
2019-05-16 21:43:01 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:43:01 -参数 : [{limit=10, offset=0}]
2019-05-16 21:43:01 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:43:01 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:43:01 -<==      Total: 2
2019-05-16 21:43:01 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:43:01 -==> Parameters: 
2019-05-16 21:43:01 -<==      Total: 1
2019-05-16 21:43:01 -耗时 : 8
2019-05-16 21:43:01 -返回值 : com.bootdo.common.utils.PageUtils@1984895e
2019-05-16 21:43:04 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-16 21:43:04 -HTTP METHOD : GET
2019-05-16 21:43:04 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-16 21:43:04 -参数 : [1, {}]
2019-05-16 21:43:04 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-16 21:43:04 -==> Parameters: 1(Long)
2019-05-16 21:43:04 -<==      Total: 1
2019-05-16 21:43:04 -耗时 : 3
2019-05-16 21:43:04 -返回值 : water/waterPrice/edit
2019-05-16 21:43:46 -Starting BootdoApplication on PC-201905091110 with PID 8796 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 21:43:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 21:43:46 -The following profiles are active: dev
2019-05-16 21:43:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 21:43:46 CST 2019]; root of context hierarchy
2019-05-16 21:43:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 21:43:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a353192e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:43:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$95ac47d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:43:52 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:43:52 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:43:52 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:43:52 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 21:43:52 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 21:43:52 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:43:52 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:43:52 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:43:52 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 21:43:53 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 21:43:53 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 21:43:53 -Starting service [Tomcat]
2019-05-16 21:43:53 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 21:43:53 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 21:43:53 -Initializing Spring embedded WebApplicationContext
2019-05-16 21:43:53 -Root WebApplicationContext: initialization completed in 7679 ms
2019-05-16 21:43:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 21:43:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 21:43:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 21:43:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 21:43:54 -Filter xssFilter was not registered (disabled)
2019-05-16 21:43:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 21:43:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 21:43:54 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 21:43:54 -Servlet dispatcherServlet mapped to [/]
2019-05-16 21:43:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 21:43:46 CST 2019]; root of context hierarchy
2019-05-16 21:43:59 -Using default implementation for ThreadExecutor
2019-05-16 21:43:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 21:43:59 -Quartz Scheduler v.2.2.1 created.
2019-05-16 21:43:59 -RAMJobStore initialized.
2019-05-16 21:43:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 21:43:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 21:43:59 -Quartz scheduler version: 2.2.1
2019-05-16 21:43:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@27358a19
2019-05-16 21:44:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 21:44:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 21:44:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:44:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 21:44:02 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:44:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 21:44:02 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 21:44:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 21:44:02 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 21:44:02 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:44:02 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 21:44:02 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:44:02 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 21:44:02 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:44:02 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 21:44:02 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 21:44:02 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 21:44:02 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 21:44:02 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:44:02 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 21:44:02 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 21:44:02 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 21:44:02 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 21:44:02 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 21:44:02 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 21:44:02 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 21:44:02 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 21:44:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 21:44:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 21:44:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 21:44:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 21:44:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 21:44:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 21:44:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 21:44:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 21:44:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 21:44:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 21:44:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 21:44:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 21:44:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 21:44:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 21:44:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 21:44:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 21:44:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 21:44:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 21:44:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 21:44:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 21:44:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 21:44:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 21:44:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 21:44:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 21:44:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:44:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 21:44:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:44:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 21:44:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:44:02 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 21:44:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 21:44:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 21:44:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 21:44:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 21:44:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 21:44:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 21:44:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 21:44:02 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 21:44:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 21:44:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 21:44:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 21:44:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 21:44:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 21:44:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 21:44:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 21:44:02 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 21:44:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 21:44:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 21:44:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 21:44:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 21:44:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 21:44:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 21:44:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 21:44:02 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 21:44:02 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 21:44:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 21:44:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 21:44:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 21:44:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 21:44:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 21:44:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 21:44:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 21:44:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 21:44:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 21:44:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 21:44:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 21:44:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 21:44:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 21:44:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 21:44:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 21:44:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 21:44:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 21:44:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 21:44:02 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 21:44:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 21:44:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 21:44:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 21:44:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 21:44:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 21:44:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 21:44:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 21:44:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 21:44:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 21:44:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 21:44:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 21:44:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 21:44:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 21:44:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 21:44:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 21:44:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 21:44:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 21:44:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 21:44:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 21:44:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 21:44:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 21:44:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 21:44:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 21:44:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 21:44:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 21:44:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 21:44:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 21:44:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 21:44:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 21:44:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 21:44:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 21:44:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 21:44:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 21:44:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 21:44:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 21:44:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 21:44:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 21:44:02 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 21:44:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 21:44:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 21:44:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 21:44:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 21:44:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 21:44:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 21:44:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 21:44:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 21:44:03 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 21:44:03 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 21:44:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 21:44:03 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 21:44:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 21:44:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 21:44:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 21:44:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 21:44:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 21:44:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 21:44:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 21:44:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:44:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 21:43:46 CST 2019]; root of context hierarchy
2019-05-16 21:44:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:44:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:44:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 21:44:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 21:44:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 21:44:06 -Registering beans for JMX exposure on startup
2019-05-16 21:44:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 21:44:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 21:44:06 -Starting beans in phase 2147483647
2019-05-16 21:44:06 -Context refreshed
2019-05-16 21:44:06 -Found 1 custom documentation plugin(s)
2019-05-16 21:44:06 -Scanning for api listing references
2019-05-16 21:44:07 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 21:44:07 -Generating unique operation named: removeUsingPOST_1
2019-05-16 21:44:07 -Generating unique operation named: addUsingGET_1
2019-05-16 21:44:07 -Generating unique operation named: editUsingGET_1
2019-05-16 21:44:07 -Generating unique operation named: listUsingGET_1
2019-05-16 21:44:07 -Generating unique operation named: removeUsingPOST_2
2019-05-16 21:44:07 -Generating unique operation named: removeUsingPOST_3
2019-05-16 21:44:07 -Generating unique operation named: saveUsingPOST_1
2019-05-16 21:44:07 -Generating unique operation named: updateUsingGET_1
2019-05-16 21:44:07 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 21:44:07 -Generating unique operation named: updateUsingPOST_1
2019-05-16 21:44:07 -Generating unique operation named: updateUsingPUT_1
2019-05-16 21:44:07 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 21:44:07 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 21:44:08 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 21:44:08 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 21:44:08 -Generating unique operation named: addUsingGET_2
2019-05-16 21:44:08 -Generating unique operation named: editUsingGET_2
2019-05-16 21:44:08 -Generating unique operation named: listUsingGET_2
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_4
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_5
2019-05-16 21:44:08 -Generating unique operation named: saveUsingPOST_2
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPOST_2
2019-05-16 21:44:08 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 21:44:08 -Generating unique operation named: addUsingGET_3
2019-05-16 21:44:08 -Generating unique operation named: editUsingGET_3
2019-05-16 21:44:08 -Generating unique operation named: listUsingGET_3
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_6
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_7
2019-05-16 21:44:08 -Generating unique operation named: saveUsingPOST_3
2019-05-16 21:44:08 -Generating unique operation named: updateUsingGET_2
2019-05-16 21:44:08 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPOST_3
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPUT_2
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 21:44:08 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 21:44:08 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 21:44:08 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 21:44:08 -Generating unique operation named: addUsingGET_4
2019-05-16 21:44:08 -Generating unique operation named: editUsingGET_4
2019-05-16 21:44:08 -Generating unique operation named: listUsingGET_4
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_8
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_9
2019-05-16 21:44:08 -Generating unique operation named: saveUsingPOST_4
2019-05-16 21:44:08 -Generating unique operation named: updateUsingGET_3
2019-05-16 21:44:08 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPOST_4
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPUT_3
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 21:44:08 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 21:44:08 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 21:44:08 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 21:44:08 -Generating unique operation named: ElecUsingGET_1
2019-05-16 21:44:08 -Generating unique operation named: addUsingGET_5
2019-05-16 21:44:08 -Generating unique operation named: editUsingGET_5
2019-05-16 21:44:08 -Generating unique operation named: listUsingGET_5
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_10
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_11
2019-05-16 21:44:08 -Generating unique operation named: saveUsingPOST_5
2019-05-16 21:44:08 -Generating unique operation named: updateUsingGET_4
2019-05-16 21:44:08 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPOST_5
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPUT_4
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 21:44:08 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 21:44:08 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 21:44:08 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 21:44:08 -Generating unique operation named: editUsingGET_6
2019-05-16 21:44:08 -Generating unique operation named: listUsingGET_6
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPOST_6
2019-05-16 21:44:08 -Generating unique operation named: addUsingGET_6
2019-05-16 21:44:08 -Generating unique operation named: editUsingGET_7
2019-05-16 21:44:08 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 21:44:08 -Generating unique operation named: listUsingGET_7
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_12
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_13
2019-05-16 21:44:08 -Generating unique operation named: saveUsingPOST_6
2019-05-16 21:44:08 -Generating unique operation named: updateUsingGET_5
2019-05-16 21:44:08 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPOST_7
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPUT_5
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 21:44:08 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 21:44:08 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 21:44:08 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 21:44:08 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 21:44:08 -Generating unique operation named: addUsingGET_7
2019-05-16 21:44:08 -Generating unique operation named: editUsingGET_8
2019-05-16 21:44:08 -Generating unique operation named: listUsingGET_8
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_14
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_15
2019-05-16 21:44:08 -Generating unique operation named: saveUsingPOST_7
2019-05-16 21:44:08 -Generating unique operation named: updateUsingGET_6
2019-05-16 21:44:08 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPOST_8
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPUT_6
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 21:44:08 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 21:44:08 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 21:44:08 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 21:44:08 -Generating unique operation named: addUsingGET_8
2019-05-16 21:44:08 -Generating unique operation named: editUsingGET_9
2019-05-16 21:44:08 -Generating unique operation named: listUsingGET_9
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_16
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_17
2019-05-16 21:44:08 -Generating unique operation named: saveUsingPOST_8
2019-05-16 21:44:08 -Generating unique operation named: updateUsingGET_7
2019-05-16 21:44:08 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPOST_9
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPUT_7
2019-05-16 21:44:08 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 21:44:08 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 21:44:08 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 21:44:08 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 21:44:08 -Generating unique operation named: addUsingGET_9
2019-05-16 21:44:08 -Generating unique operation named: editUsingGET_10
2019-05-16 21:44:08 -Generating unique operation named: infoUsingGET_1
2019-05-16 21:44:08 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 21:44:08 -Generating unique operation named: infoUsingPOST_1
2019-05-16 21:44:08 -Generating unique operation named: infoUsingPUT_1
2019-05-16 21:44:08 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 21:44:08 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 21:44:08 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 21:44:08 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 21:44:08 -Generating unique operation named: listUsingGET_10
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_18
2019-05-16 21:44:08 -Generating unique operation named: removeUsingPOST_19
2019-05-16 21:44:08 -Generating unique operation named: saveUsingPOST_9
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPOST_10
2019-05-16 21:44:09 -Generating unique operation named: listUsingGET_11
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_20
2019-05-16 21:44:09 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 21:44:09 -Generating unique operation named: addUsingGET_10
2019-05-16 21:44:09 -Generating unique operation named: editUsingGET_11
2019-05-16 21:44:09 -Generating unique operation named: listUsingGET_12
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_21
2019-05-16 21:44:09 -Generating unique operation named: saveUsingPOST_10
2019-05-16 21:44:09 -Generating unique operation named: treeUsingGET_1
2019-05-16 21:44:09 -Generating unique operation named: treeUsingGET_2
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPOST_11
2019-05-16 21:44:09 -Generating unique operation named: addUsingGET_11
2019-05-16 21:44:09 -Generating unique operation named: editUsingGET_12
2019-05-16 21:44:09 -Generating unique operation named: listUsingGET_13
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_22
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_23
2019-05-16 21:44:09 -Generating unique operation named: saveUsingPOST_11
2019-05-16 21:44:09 -Generating unique operation named: updateUsingGET_8
2019-05-16 21:44:09 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPOST_12
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPUT_8
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 21:44:09 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 21:44:09 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 21:44:09 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 21:44:09 -Generating unique operation named: addUsingGET_12
2019-05-16 21:44:09 -Generating unique operation named: editUsingGET_13
2019-05-16 21:44:09 -Generating unique operation named: listUsingGET_14
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_24
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_25
2019-05-16 21:44:09 -Generating unique operation named: saveUsingPOST_12
2019-05-16 21:44:09 -Generating unique operation named: updateUsingGET_9
2019-05-16 21:44:09 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPOST_13
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPUT_9
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 21:44:09 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 21:44:09 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 21:44:09 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 21:44:09 -Generating unique operation named: addUsingGET_13
2019-05-16 21:44:09 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 21:44:09 -Generating unique operation named: editUsingGET_14
2019-05-16 21:44:09 -Generating unique operation named: listUsingGET_15
2019-05-16 21:44:09 -Generating unique operation named: saveUsingPOST_13
2019-05-16 21:44:09 -Generating unique operation named: saveUsingPOST_14
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPOST_14
2019-05-16 21:44:09 -Generating unique operation named: listUsingGET_16
2019-05-16 21:44:09 -Generating unique operation named: listUsingHEAD_1
2019-05-16 21:44:09 -Generating unique operation named: listUsingPOST_1
2019-05-16 21:44:09 -Generating unique operation named: listUsingPUT_1
2019-05-16 21:44:09 -Generating unique operation named: listUsingPATCH_1
2019-05-16 21:44:09 -Generating unique operation named: listUsingDELETE_1
2019-05-16 21:44:09 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 21:44:09 -Generating unique operation named: listUsingTRACE_1
2019-05-16 21:44:09 -Generating unique operation named: countDDUsingGET_1
2019-05-16 21:44:09 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 21:44:09 -Generating unique operation named: addUsingGET_14
2019-05-16 21:44:09 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 21:44:09 -Generating unique operation named: editUsingGET_15
2019-05-16 21:44:09 -Generating unique operation named: listUsingGET_17
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_26
2019-05-16 21:44:09 -Generating unique operation named: saveUsingPOST_15
2019-05-16 21:44:09 -Generating unique operation named: treeUsingGET_3
2019-05-16 21:44:09 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPOST_15
2019-05-16 21:44:09 -Generating unique operation named: addUsingGET_15
2019-05-16 21:44:09 -Generating unique operation named: editUsingGET_16
2019-05-16 21:44:09 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 21:44:09 -Generating unique operation named: listUsingGET_18
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_27
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_28
2019-05-16 21:44:09 -Generating unique operation named: saveUsingPOST_16
2019-05-16 21:44:09 -Generating unique operation named: updateUsingGET_10
2019-05-16 21:44:09 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPOST_16
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPUT_10
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 21:44:09 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 21:44:09 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 21:44:09 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 21:44:09 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 21:44:09 -Generating unique operation named: addUsingGET_16
2019-05-16 21:44:09 -Generating unique operation named: editUsingGET_17
2019-05-16 21:44:09 -Generating unique operation named: listUsingGET_19
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_29
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_30
2019-05-16 21:44:09 -Generating unique operation named: saveUsingPOST_17
2019-05-16 21:44:09 -Generating unique operation named: updateUsingGET_11
2019-05-16 21:44:09 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPOST_17
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPUT_11
2019-05-16 21:44:09 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 21:44:09 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 21:44:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 21:44:09 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 21:44:09 -Generating unique operation named: addUsingGET_17
2019-05-16 21:44:09 -Generating unique operation named: editUsingGET_18
2019-05-16 21:44:09 -Generating unique operation named: listUsingGET_20
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_31
2019-05-16 21:44:09 -Generating unique operation named: removeUsingPOST_32
2019-05-16 21:44:09 -Generating unique operation named: saveUsingPOST_18
2019-05-16 21:44:10 -Generating unique operation named: updateUsingGET_12
2019-05-16 21:44:10 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 21:44:10 -Generating unique operation named: updateUsingPOST_18
2019-05-16 21:44:10 -Generating unique operation named: updateUsingPUT_12
2019-05-16 21:44:10 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 21:44:10 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 21:44:10 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 21:44:10 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 21:44:10 -Starting Quartz Scheduler now
2019-05-16 21:44:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 21:44:10 -Starting...
2019-05-16 21:44:10 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 21:44:10 -Started.
2019-05-16 21:44:10 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 21:44:10 -Using a shared selector for servlet write/read
2019-05-16 21:44:10 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 21:44:10 -Started BootdoApplication in 25.215 seconds (JVM running for 25.978)
2019-05-16 21:44:10 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 21:44:10 -==> Parameters: 
2019-05-16 21:44:10 -<==      Total: 1
2019-05-16 21:44:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 21:44:15 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 21:44:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 78 ms
2019-05-16 21:44:15 -Enabling session validation scheduler...
2019-05-16 21:44:15 -请求地址 : http://localhost:8081/login;JSESSIONID=8edbc2a1-492c-4fca-8310-8ded5aff9d58
2019-05-16 21:44:15 -HTTP METHOD : GET
2019-05-16 21:44:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 21:44:15 -参数 : [{}]
2019-05-16 21:44:15 -耗时 : 4
2019-05-16 21:44:15 -返回值 : login
2019-05-16 21:44:16 -请求地址 : http://localhost:8081/getVerify
2019-05-16 21:44:16 -HTTP METHOD : GET
2019-05-16 21:44:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 21:44:16 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@37b30531, org.apache.shiro.web.servlet.ShiroHttpServletResponse@338c871f]
2019-05-16 21:44:17 -4007
2019-05-16 21:44:17 -耗时 : 533
2019-05-16 21:44:17 -返回值 : null
2019-05-16 21:44:21 -请求地址 : http://localhost:8081/login
2019-05-16 21:44:21 -HTTP METHOD : POST
2019-05-16 21:44:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 21:44:21 -参数 : [admin, 111111, 4007, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5fc4d77f]
2019-05-16 21:44:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 21:44:21 -==> Parameters: admin(String)
2019-05-16 21:44:21 -<==      Total: 1
2019-05-16 21:44:21 -耗时 : 208
2019-05-16 21:44:21 -返回值 : {msg=操作成功, code=0}
2019-05-16 21:44:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 21:44:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:44:21 -==> Parameters: 1(Long), admin(String), 登录(String), 209(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 21:44:21.979(Timestamp)
2019-05-16 21:44:22 -<==    Updates: 1
2019-05-16 21:44:22 -请求地址 : http://localhost:8081/index
2019-05-16 21:44:22 -HTTP METHOD : GET
2019-05-16 21:44:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:44:22 -参数 : [{}]
2019-05-16 21:44:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:44:22 -==> Parameters: 1(Long)
2019-05-16 21:44:22 -<==      Total: 49
2019-05-16 21:44:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:44:22 -==> Parameters: 138(Long)
2019-05-16 21:44:22 -<==      Total: 1
2019-05-16 21:44:22 -耗时 : 153
2019-05-16 21:44:22 -返回值 : index_v1
2019-05-16 21:44:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:44:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 153(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:44:22.256(Timestamp)
2019-05-16 21:44:22 -<==    Updates: 1
2019-05-16 21:44:22 -请求地址 : http://localhost:8081/main
2019-05-16 21:44:22 -HTTP METHOD : GET
2019-05-16 21:44:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:44:22 -参数 : []
2019-05-16 21:44:22 -耗时 : 0
2019-05-16 21:44:22 -返回值 : main
2019-05-16 21:44:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:44:22 -HTTP METHOD : GET
2019-05-16 21:44:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:44:22 -参数 : []
2019-05-16 21:44:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:44:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:44:22 -<==      Total: 0
2019-05-16 21:44:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:44:22 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:44:22 -<==      Total: 1
2019-05-16 21:44:22 -耗时 : 39
2019-05-16 21:44:22 -返回值 : com.bootdo.common.utils.PageUtils@7e41ca17
2019-05-16 21:44:22 -请求地址 : http://localhost:8081/main
2019-05-16 21:44:22 -HTTP METHOD : GET
2019-05-16 21:44:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:44:22 -参数 : []
2019-05-16 21:44:22 -耗时 : 0
2019-05-16 21:44:22 -返回值 : main
2019-05-16 21:44:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 21:44:24 -==> Parameters: 1(Long)
2019-05-16 21:44:24 -<==      Total: 93
2019-05-16 21:44:24 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:44:24 -HTTP METHOD : GET
2019-05-16 21:44:24 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:44:24 -参数 : []
2019-05-16 21:44:24 -耗时 : 0
2019-05-16 21:44:24 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:44:25 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:44:25 -HTTP METHOD : GET
2019-05-16 21:44:25 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:44:25 -参数 : [{limit=10, offset=0}]
2019-05-16 21:44:25 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:44:25 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:44:25 -<==      Total: 2
2019-05-16 21:44:25 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:44:25 -==> Parameters: 
2019-05-16 21:44:25 -<==      Total: 1
2019-05-16 21:44:25 -耗时 : 58
2019-05-16 21:44:25 -返回值 : com.bootdo.common.utils.PageUtils@345606fc
2019-05-16 21:44:26 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-16 21:44:26 -HTTP METHOD : GET
2019-05-16 21:44:26 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-16 21:44:26 -参数 : [1, {}]
2019-05-16 21:44:26 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-16 21:44:26 -==> Parameters: 1(Long)
2019-05-16 21:44:26 -<==      Total: 1
2019-05-16 21:44:26 -耗时 : 19
2019-05-16 21:44:26 -返回值 : water/waterPrice/edit
2019-05-16 21:44:38 -请求地址 : http://localhost:8081/water/water
2019-05-16 21:44:38 -HTTP METHOD : GET
2019-05-16 21:44:38 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-05-16 21:44:38 -参数 : []
2019-05-16 21:44:38 -耗时 : 0
2019-05-16 21:44:38 -返回值 : water/water/water
2019-05-16 21:44:38 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-16 21:44:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 21:44:38 -HTTP METHOD : GET
2019-05-16 21:44:38 -HTTP METHOD : GET
2019-05-16 21:44:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 21:44:38 -参数 : [waterType]
2019-05-16 21:44:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 21:44:38 -参数 : [userType]
2019-05-16 21:44:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 21:44:38 -==> Parameters: userType(String)
2019-05-16 21:44:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 21:44:38 -==> Parameters: waterType(String)
2019-05-16 21:44:38 -<==      Total: 4
2019-05-16 21:44:38 -耗时 : 59
2019-05-16 21:44:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 21:44:38 -<==      Total: 2
2019-05-16 21:44:38 -耗时 : 72
2019-05-16 21:44:38 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 21:44:38 -请求地址 : http://localhost:8081/water/water/list
2019-05-16 21:44:38 -HTTP METHOD : GET
2019-05-16 21:44:38 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-16 21:44:38 -参数 : [{limit=3, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-16 21:44:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-16 21:44:38 -==> Parameters: 0(Integer), 3(Integer)
2019-05-16 21:44:38 -<==      Total: 3
2019-05-16 21:44:38 -==>  Preparing: select count(*) from water 
2019-05-16 21:44:38 -==> Parameters: 
2019-05-16 21:44:38 -<==      Total: 1
2019-05-16 21:44:38 -耗时 : 50
2019-05-16 21:44:38 -返回值 : com.bootdo.common.utils.PageUtils@64fd683a
2019-05-16 21:44:41 -请求地址 : http://localhost:8081/water/water/edit/1
2019-05-16 21:44:41 -HTTP METHOD : GET
2019-05-16 21:44:41 -CLASS_METHOD : com.bootdo.water.controller.WaterController.edit
2019-05-16 21:44:41 -参数 : [1, {}]
2019-05-16 21:44:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water where id = ? 
2019-05-16 21:44:41 -==> Parameters: 1(Long)
2019-05-16 21:44:41 -<==      Total: 1
2019-05-16 21:44:41 -耗时 : 10
2019-05-16 21:44:41 -返回值 : water/water/edit
2019-05-16 21:44:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 21:44:42 -HTTP METHOD : GET
2019-05-16 21:44:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 21:44:42 -参数 : [userType]
2019-05-16 21:44:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 21:44:42 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-16 21:44:42 -HTTP METHOD : GET
2019-05-16 21:44:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 21:44:42 -参数 : [waterType]
2019-05-16 21:44:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 21:44:42 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-16 21:44:42 -HTTP METHOD : GET
2019-05-16 21:44:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 21:44:42 -参数 : [userState]
2019-05-16 21:44:42 -==> Parameters: waterType(String)
2019-05-16 21:44:42 -<==      Total: 2
2019-05-16 21:44:42 -==> Parameters: userType(String)
2019-05-16 21:44:42 -<==      Total: 4
2019-05-16 21:44:42 -耗时 : 14
2019-05-16 21:44:42 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 21:44:42 -耗时 : 24
2019-05-16 21:44:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 21:44:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 21:44:42 -==> Parameters: userState(String)
2019-05-16 21:44:42 -<==      Total: 2
2019-05-16 21:44:42 -耗时 : 42
2019-05-16 21:44:42 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 21:44:50 -请求地址 : http://localhost:8081/water/water/add
2019-05-16 21:44:50 -HTTP METHOD : GET
2019-05-16 21:44:50 -CLASS_METHOD : com.bootdo.water.controller.WaterController.add
2019-05-16 21:44:50 -参数 : []
2019-05-16 21:44:50 -耗时 : 1
2019-05-16 21:44:50 -返回值 : water/water/add
2019-05-16 21:44:50 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-16 21:44:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 21:44:50 -HTTP METHOD : GET
2019-05-16 21:44:50 -HTTP METHOD : GET
2019-05-16 21:44:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 21:44:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 21:44:50 -参数 : [userState]
2019-05-16 21:44:50 -参数 : [userType]
2019-05-16 21:44:50 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-16 21:44:50 -HTTP METHOD : GET
2019-05-16 21:44:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 21:44:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 21:44:50 -参数 : [waterType]
2019-05-16 21:44:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 21:44:50 -==> Parameters: userType(String)
2019-05-16 21:44:50 -==> Parameters: userState(String)
2019-05-16 21:44:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 21:44:50 -==> Parameters: waterType(String)
2019-05-16 21:44:50 -<==      Total: 4
2019-05-16 21:44:50 -耗时 : 10
2019-05-16 21:44:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 21:44:50 -<==      Total: 2
2019-05-16 21:44:50 -耗时 : 12
2019-05-16 21:44:50 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 21:44:50 -<==      Total: 2
2019-05-16 21:44:50 -耗时 : 16
2019-05-16 21:44:50 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 21:45:03 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 10]
2019-05-16 21:46:32 -请求地址 : http://localhost:8081/login;JSESSIONID=27ebf31a-d430-4147-8a23-0ec1676d0054
2019-05-16 21:46:32 -HTTP METHOD : GET
2019-05-16 21:46:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 21:46:32 -参数 : [{}]
2019-05-16 21:46:32 -耗时 : 1
2019-05-16 21:46:32 -返回值 : login
2019-05-16 21:46:32 -请求地址 : http://localhost:8081/getVerify
2019-05-16 21:46:32 -HTTP METHOD : GET
2019-05-16 21:46:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 21:46:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@486cdc8e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@25670b32]
2019-05-16 21:46:32 -0253
2019-05-16 21:46:32 -耗时 : 11
2019-05-16 21:46:32 -返回值 : null
2019-05-16 21:46:33 -请求地址 : http://localhost:8081/login
2019-05-16 21:46:33 -HTTP METHOD : GET
2019-05-16 21:46:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 21:46:33 -参数 : [{}]
2019-05-16 21:46:33 -耗时 : 1
2019-05-16 21:46:33 -返回值 : login
2019-05-16 21:46:37 -请求地址 : http://localhost:8081/login
2019-05-16 21:46:37 -HTTP METHOD : POST
2019-05-16 21:46:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 21:46:37 -参数 : [admin, 111111, 0253, org.apache.shiro.web.servlet.ShiroHttpServletRequest@13bfb4f6]
2019-05-16 21:46:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 21:46:37 -==> Parameters: admin(String)
2019-05-16 21:46:37 -<==      Total: 1
2019-05-16 21:46:37 -耗时 : 13
2019-05-16 21:46:37 -返回值 : {msg=操作成功, code=0}
2019-05-16 21:46:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:46:37 -==> Parameters: 1(Long), admin(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 21:46:37.05(Timestamp)
2019-05-16 21:46:37 -请求地址 : http://localhost:8081/index
2019-05-16 21:46:37 -HTTP METHOD : GET
2019-05-16 21:46:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 21:46:37 -参数 : [{}]
2019-05-16 21:46:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 21:46:37 -==> Parameters: 1(Long)
2019-05-16 21:46:37 -<==      Total: 49
2019-05-16 21:46:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 21:46:37 -==> Parameters: 138(Long)
2019-05-16 21:46:37 -<==      Total: 1
2019-05-16 21:46:37 -耗时 : 29
2019-05-16 21:46:37 -返回值 : index_v1
2019-05-16 21:46:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 21:46:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 21:46:37.113(Timestamp)
2019-05-16 21:46:37 -请求地址 : http://localhost:8081/main
2019-05-16 21:46:37 -HTTP METHOD : GET
2019-05-16 21:46:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:46:37 -参数 : []
2019-05-16 21:46:37 -耗时 : 0
2019-05-16 21:46:37 -返回值 : main
2019-05-16 21:46:37 -<==    Updates: 1
2019-05-16 21:46:37 -<==    Updates: 1
2019-05-16 21:46:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 21:46:37 -HTTP METHOD : GET
2019-05-16 21:46:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 21:46:37 -参数 : []
2019-05-16 21:46:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 21:46:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 21:46:37 -<==      Total: 0
2019-05-16 21:46:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 21:46:37 -==> Parameters: 1(Long), 0(String)
2019-05-16 21:46:37 -<==      Total: 1
2019-05-16 21:46:37 -耗时 : 7
2019-05-16 21:46:37 -返回值 : com.bootdo.common.utils.PageUtils@5e7290cd
2019-05-16 21:46:37 -请求地址 : http://localhost:8081/main
2019-05-16 21:46:37 -HTTP METHOD : GET
2019-05-16 21:46:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 21:46:37 -参数 : []
2019-05-16 21:46:37 -耗时 : 0
2019-05-16 21:46:37 -返回值 : main
2019-05-16 21:46:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 21:46:45 -==> Parameters: 1(Long)
2019-05-16 21:46:45 -<==      Total: 93
2019-05-16 21:46:45 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-16 21:46:45 -HTTP METHOD : GET
2019-05-16 21:46:45 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-16 21:46:45 -参数 : []
2019-05-16 21:46:45 -耗时 : 1
2019-05-16 21:46:45 -返回值 : water/waterPrice/waterPrice
2019-05-16 21:46:45 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-16 21:46:45 -HTTP METHOD : GET
2019-05-16 21:46:45 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-16 21:46:45 -参数 : [{limit=10, offset=0}]
2019-05-16 21:46:45 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-16 21:46:45 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 21:46:45 -<==      Total: 2
2019-05-16 21:46:45 -==>  Preparing: select count(*) from water_price 
2019-05-16 21:46:45 -==> Parameters: 
2019-05-16 21:46:45 -<==      Total: 1
2019-05-16 21:46:45 -耗时 : 11
2019-05-16 21:46:45 -返回值 : com.bootdo.common.utils.PageUtils@71470f2e
2019-05-16 21:46:50 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-16 21:46:50 -HTTP METHOD : GET
2019-05-16 21:46:50 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-16 21:46:50 -参数 : [1, {}]
2019-05-16 21:46:50 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-16 21:46:50 -==> Parameters: 1(Long)
2019-05-16 21:46:50 -<==      Total: 1
2019-05-16 21:46:50 -耗时 : 5
2019-05-16 21:46:50 -返回值 : water/waterPrice/edit
2019-05-16 21:47:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 21:47:09 -HTTP METHOD : GET
2019-05-16 21:47:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 21:47:09 -参数 : []
2019-05-16 21:47:09 -耗时 : 1
2019-05-16 21:47:09 -返回值 : system/dept/deptTree
2019-05-16 21:47:10 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 21:47:10 -HTTP METHOD : GET
2019-05-16 21:47:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 21:47:10 -参数 : []
2019-05-16 21:47:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 21:47:10 -==> Parameters: 
2019-05-16 21:47:10 -<==      Total: 3
2019-05-16 21:47:10 -耗时 : 22
2019-05-16 21:47:10 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 21:47:13 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 21:47:13 -HTTP METHOD : GET
2019-05-16 21:47:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 21:47:13 -参数 : []
2019-05-16 21:47:13 -耗时 : 0
2019-05-16 21:47:13 -返回值 : system/dept/deptTree
2019-05-16 21:47:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 21:47:13 -HTTP METHOD : GET
2019-05-16 21:47:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 21:47:13 -参数 : []
2019-05-16 21:47:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 21:47:13 -==> Parameters: 
2019-05-16 21:47:13 -<==      Total: 3
2019-05-16 21:47:13 -耗时 : 3
2019-05-16 21:47:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 21:47:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 21:47:15 -HTTP METHOD : GET
2019-05-16 21:47:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 21:47:15 -参数 : []
2019-05-16 21:47:15 -耗时 : 0
2019-05-16 21:47:15 -返回值 : system/dept/deptTree
2019-05-16 21:47:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 21:47:15 -HTTP METHOD : GET
2019-05-16 21:47:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 21:47:15 -参数 : []
2019-05-16 21:47:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 21:47:15 -==> Parameters: 
2019-05-16 21:47:15 -<==      Total: 3
2019-05-16 21:47:15 -耗时 : 4
2019-05-16 21:47:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 21:47:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-16 21:47:18 -HTTP METHOD : GET
2019-05-16 21:47:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-16 21:47:18 -参数 : []
2019-05-16 21:47:18 -耗时 : 1
2019-05-16 21:47:18 -返回值 : system/dept/deptTree
2019-05-16 21:47:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-16 21:47:18 -HTTP METHOD : GET
2019-05-16 21:47:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-16 21:47:18 -参数 : []
2019-05-16 21:47:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-16 21:47:18 -==> Parameters: 
2019-05-16 21:47:18 -<==      Total: 3
2019-05-16 21:47:18 -耗时 : 6
2019-05-16 21:47:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-16 22:01:37 -请求地址 : http://localhost:8081/index
2019-05-16 22:01:37 -HTTP METHOD : GET
2019-05-16 22:01:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 22:01:37 -参数 : [{}]
2019-05-16 22:01:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 22:01:37 -==> Parameters: 1(Long)
2019-05-16 22:01:37 -<==      Total: 49
2019-05-16 22:01:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 22:01:37 -==> Parameters: 138(Long)
2019-05-16 22:01:37 -<==      Total: 1
2019-05-16 22:01:37 -耗时 : 24
2019-05-16 22:01:37 -返回值 : index_v1
2019-05-16 22:01:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 22:01:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 22:01:37.69(Timestamp)
2019-05-16 22:01:37 -<==    Updates: 1
2019-05-16 22:01:37 -请求地址 : http://localhost:8081/main
2019-05-16 22:01:37 -HTTP METHOD : GET
2019-05-16 22:01:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 22:01:37 -参数 : []
2019-05-16 22:01:37 -耗时 : 0
2019-05-16 22:01:37 -返回值 : main
2019-05-16 22:01:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 22:01:38 -HTTP METHOD : GET
2019-05-16 22:01:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 22:01:38 -参数 : []
2019-05-16 22:01:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 22:01:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 22:01:38 -<==      Total: 0
2019-05-16 22:01:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 22:01:38 -==> Parameters: 1(Long), 0(String)
2019-05-16 22:01:38 -<==      Total: 1
2019-05-16 22:01:38 -耗时 : 8
2019-05-16 22:01:38 -返回值 : com.bootdo.common.utils.PageUtils@3f551f5d
2019-05-16 22:01:38 -请求地址 : http://localhost:8081/main
2019-05-16 22:01:38 -HTTP METHOD : GET
2019-05-16 22:01:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 22:01:38 -参数 : []
2019-05-16 22:01:38 -耗时 : 0
2019-05-16 22:01:38 -返回值 : main
2019-05-16 22:08:33 -Starting BootdoApplication on PC-201905091110 with PID 17596 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 22:08:33 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 22:08:33 -The following profiles are active: dev
2019-05-16 22:08:34 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 22:08:34 CST 2019]; root of context hierarchy
2019-05-16 22:08:37 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 22:08:39 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$afb22388] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:08:39 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a20b522f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:08:39 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:08:40 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:08:40 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:08:40 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 22:08:40 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 22:08:40 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:08:40 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:08:40 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:08:40 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:08:41 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 22:08:41 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 22:08:41 -Starting service [Tomcat]
2019-05-16 22:08:41 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 22:08:41 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 22:08:41 -Initializing Spring embedded WebApplicationContext
2019-05-16 22:08:41 -Root WebApplicationContext: initialization completed in 7659 ms
2019-05-16 22:08:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 22:08:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 22:08:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 22:08:42 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 22:08:42 -Filter xssFilter was not registered (disabled)
2019-05-16 22:08:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 22:08:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 22:08:42 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 22:08:42 -Servlet dispatcherServlet mapped to [/]
2019-05-16 22:08:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 22:08:34 CST 2019]; root of context hierarchy
2019-05-16 22:08:46 -Using default implementation for ThreadExecutor
2019-05-16 22:08:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 22:08:46 -Quartz Scheduler v.2.2.1 created.
2019-05-16 22:08:46 -RAMJobStore initialized.
2019-05-16 22:08:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 22:08:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 22:08:46 -Quartz scheduler version: 2.2.1
2019-05-16 22:08:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5d5d3a5c
2019-05-16 22:08:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 22:08:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 22:08:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 22:08:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:08:50 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:08:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 22:08:50 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 22:08:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 22:08:50 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 22:08:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:08:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 22:08:50 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:08:50 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 22:08:50 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:08:50 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 22:08:50 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 22:08:50 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 22:08:50 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 22:08:50 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 22:08:50 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:08:50 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:08:50 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 22:08:50 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 22:08:50 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 22:08:50 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 22:08:50 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 22:08:50 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 22:08:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 22:08:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 22:08:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 22:08:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 22:08:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 22:08:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 22:08:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 22:08:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 22:08:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 22:08:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 22:08:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 22:08:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 22:08:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 22:08:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 22:08:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 22:08:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 22:08:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 22:08:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 22:08:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 22:08:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 22:08:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 22:08:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 22:08:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 22:08:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 22:08:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:08:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 22:08:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:08:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 22:08:50 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:08:50 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:08:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 22:08:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 22:08:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 22:08:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 22:08:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 22:08:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 22:08:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 22:08:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 22:08:50 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 22:08:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 22:08:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 22:08:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 22:08:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 22:08:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 22:08:50 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 22:08:50 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 22:08:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 22:08:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 22:08:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 22:08:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 22:08:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 22:08:50 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 22:08:50 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 22:08:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 22:08:50 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 22:08:50 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 22:08:50 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 22:08:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 22:08:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 22:08:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 22:08:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 22:08:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 22:08:50 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 22:08:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 22:08:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 22:08:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 22:08:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 22:08:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 22:08:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 22:08:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 22:08:50 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 22:08:50 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 22:08:50 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 22:08:50 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 22:08:50 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 22:08:50 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 22:08:50 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 22:08:50 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 22:08:50 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 22:08:50 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 22:08:50 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 22:08:50 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 22:08:50 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 22:08:50 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 22:08:50 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 22:08:50 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 22:08:50 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 22:08:50 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 22:08:50 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 22:08:50 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 22:08:50 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 22:08:50 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 22:08:50 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 22:08:50 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 22:08:50 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 22:08:50 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 22:08:50 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 22:08:50 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 22:08:50 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 22:08:50 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 22:08:50 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 22:08:50 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 22:08:50 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 22:08:50 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 22:08:50 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 22:08:50 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 22:08:50 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 22:08:50 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 22:08:50 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 22:08:50 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 22:08:50 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 22:08:50 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 22:08:50 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 22:08:50 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 22:08:50 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:08:50 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 22:08:50 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 22:08:50 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:08:50 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 22:08:50 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 22:08:50 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 22:08:50 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:08:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 22:08:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 22:08:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 22:08:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 22:08:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 22:08:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 22:08:51 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 22:08:51 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:08:52 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Thu May 16 22:08:34 CST 2019]; root of context hierarchy
2019-05-16 22:08:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:08:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:08:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:08:52 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 22:08:52 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 22:08:54 -Registering beans for JMX exposure on startup
2019-05-16 22:08:54 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 22:08:54 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 22:08:54 -Starting beans in phase 2147483647
2019-05-16 22:08:54 -Context refreshed
2019-05-16 22:08:54 -Found 1 custom documentation plugin(s)
2019-05-16 22:08:54 -Scanning for api listing references
2019-05-16 22:08:54 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_1
2019-05-16 22:08:55 -Generating unique operation named: addUsingGET_1
2019-05-16 22:08:55 -Generating unique operation named: editUsingGET_1
2019-05-16 22:08:55 -Generating unique operation named: listUsingGET_1
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_2
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_3
2019-05-16 22:08:55 -Generating unique operation named: saveUsingPOST_1
2019-05-16 22:08:55 -Generating unique operation named: updateUsingGET_1
2019-05-16 22:08:55 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPOST_1
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPUT_1
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 22:08:55 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 22:08:55 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 22:08:55 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 22:08:55 -Generating unique operation named: addUsingGET_2
2019-05-16 22:08:55 -Generating unique operation named: editUsingGET_2
2019-05-16 22:08:55 -Generating unique operation named: listUsingGET_2
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_4
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_5
2019-05-16 22:08:55 -Generating unique operation named: saveUsingPOST_2
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPOST_2
2019-05-16 22:08:55 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 22:08:55 -Generating unique operation named: addUsingGET_3
2019-05-16 22:08:55 -Generating unique operation named: editUsingGET_3
2019-05-16 22:08:55 -Generating unique operation named: listUsingGET_3
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_6
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_7
2019-05-16 22:08:55 -Generating unique operation named: saveUsingPOST_3
2019-05-16 22:08:55 -Generating unique operation named: updateUsingGET_2
2019-05-16 22:08:55 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPOST_3
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPUT_2
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 22:08:55 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 22:08:55 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 22:08:55 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 22:08:55 -Generating unique operation named: addUsingGET_4
2019-05-16 22:08:55 -Generating unique operation named: editUsingGET_4
2019-05-16 22:08:55 -Generating unique operation named: listUsingGET_4
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_8
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_9
2019-05-16 22:08:55 -Generating unique operation named: saveUsingPOST_4
2019-05-16 22:08:55 -Generating unique operation named: updateUsingGET_3
2019-05-16 22:08:55 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPOST_4
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPUT_3
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 22:08:55 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 22:08:55 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 22:08:55 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 22:08:55 -Generating unique operation named: ElecUsingGET_1
2019-05-16 22:08:55 -Generating unique operation named: addUsingGET_5
2019-05-16 22:08:55 -Generating unique operation named: editUsingGET_5
2019-05-16 22:08:55 -Generating unique operation named: listUsingGET_5
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_10
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_11
2019-05-16 22:08:55 -Generating unique operation named: saveUsingPOST_5
2019-05-16 22:08:55 -Generating unique operation named: updateUsingGET_4
2019-05-16 22:08:55 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPOST_5
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPUT_4
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 22:08:55 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 22:08:55 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 22:08:55 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 22:08:55 -Generating unique operation named: editUsingGET_6
2019-05-16 22:08:55 -Generating unique operation named: listUsingGET_6
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPOST_6
2019-05-16 22:08:55 -Generating unique operation named: addUsingGET_6
2019-05-16 22:08:55 -Generating unique operation named: editUsingGET_7
2019-05-16 22:08:55 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 22:08:55 -Generating unique operation named: listUsingGET_7
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_12
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_13
2019-05-16 22:08:55 -Generating unique operation named: saveUsingPOST_6
2019-05-16 22:08:55 -Generating unique operation named: updateUsingGET_5
2019-05-16 22:08:55 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPOST_7
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPUT_5
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 22:08:55 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 22:08:55 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 22:08:55 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 22:08:55 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 22:08:55 -Generating unique operation named: addUsingGET_7
2019-05-16 22:08:55 -Generating unique operation named: editUsingGET_8
2019-05-16 22:08:55 -Generating unique operation named: listUsingGET_8
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_14
2019-05-16 22:08:55 -Generating unique operation named: removeUsingPOST_15
2019-05-16 22:08:55 -Generating unique operation named: saveUsingPOST_7
2019-05-16 22:08:55 -Generating unique operation named: updateUsingGET_6
2019-05-16 22:08:55 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPOST_8
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPUT_6
2019-05-16 22:08:55 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 22:08:56 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 22:08:56 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 22:08:56 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 22:08:56 -Generating unique operation named: addUsingGET_8
2019-05-16 22:08:56 -Generating unique operation named: editUsingGET_9
2019-05-16 22:08:56 -Generating unique operation named: listUsingGET_9
2019-05-16 22:08:56 -Generating unique operation named: removeUsingPOST_16
2019-05-16 22:08:56 -Generating unique operation named: removeUsingPOST_17
2019-05-16 22:08:56 -Generating unique operation named: saveUsingPOST_8
2019-05-16 22:08:56 -Generating unique operation named: updateUsingGET_7
2019-05-16 22:08:56 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 22:08:56 -Generating unique operation named: updateUsingPOST_9
2019-05-16 22:08:56 -Generating unique operation named: updateUsingPUT_7
2019-05-16 22:08:56 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 22:08:56 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 22:08:56 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 22:08:56 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 22:08:56 -Generating unique operation named: addUsingGET_9
2019-05-16 22:08:56 -Generating unique operation named: editUsingGET_10
2019-05-16 22:08:56 -Generating unique operation named: infoUsingGET_1
2019-05-16 22:08:56 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 22:08:56 -Generating unique operation named: infoUsingPOST_1
2019-05-16 22:08:56 -Generating unique operation named: infoUsingPUT_1
2019-05-16 22:08:56 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 22:08:56 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 22:08:56 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 22:08:56 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 22:08:56 -Generating unique operation named: listUsingGET_10
2019-05-16 22:08:56 -Generating unique operation named: removeUsingPOST_18
2019-05-16 22:08:56 -Generating unique operation named: removeUsingPOST_19
2019-05-16 22:08:56 -Generating unique operation named: saveUsingPOST_9
2019-05-16 22:08:56 -Generating unique operation named: updateUsingPOST_10
2019-05-16 22:08:56 -Generating unique operation named: listUsingGET_11
2019-05-16 22:08:56 -Generating unique operation named: removeUsingPOST_20
2019-05-16 22:08:56 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 22:08:56 -Generating unique operation named: addUsingGET_10
2019-05-16 22:08:56 -Generating unique operation named: editUsingGET_11
2019-05-16 22:08:56 -Generating unique operation named: listUsingGET_12
2019-05-16 22:08:56 -Generating unique operation named: removeUsingPOST_21
2019-05-16 22:08:56 -Generating unique operation named: saveUsingPOST_10
2019-05-16 22:08:56 -Generating unique operation named: treeUsingGET_1
2019-05-16 22:08:56 -Generating unique operation named: treeUsingGET_2
2019-05-16 22:08:56 -Generating unique operation named: updateUsingPOST_11
2019-05-16 22:08:56 -Generating unique operation named: addUsingGET_11
2019-05-16 22:08:56 -Generating unique operation named: editUsingGET_12
2019-05-16 22:08:56 -Generating unique operation named: listUsingGET_13
2019-05-16 22:08:56 -Generating unique operation named: removeUsingPOST_22
2019-05-16 22:08:56 -Generating unique operation named: removeUsingPOST_23
2019-05-16 22:08:56 -Generating unique operation named: saveUsingPOST_11
2019-05-16 22:08:56 -Generating unique operation named: updateUsingGET_8
2019-05-16 22:08:56 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 22:08:56 -Generating unique operation named: updateUsingPOST_12
2019-05-16 22:08:56 -Generating unique operation named: updateUsingPUT_8
2019-05-16 22:08:56 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 22:08:56 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 22:08:56 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 22:08:56 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 22:08:56 -Generating unique operation named: addUsingGET_12
2019-05-16 22:08:56 -Generating unique operation named: editUsingGET_13
2019-05-16 22:08:56 -Generating unique operation named: listUsingGET_14
2019-05-16 22:08:56 -Generating unique operation named: removeUsingPOST_24
2019-05-16 22:08:56 -Generating unique operation named: removeUsingPOST_25
2019-05-16 22:08:56 -Generating unique operation named: saveUsingPOST_12
2019-05-16 22:08:56 -Generating unique operation named: updateUsingGET_9
2019-05-16 22:08:56 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 22:08:56 -Generating unique operation named: updateUsingPOST_13
2019-05-16 22:08:56 -Generating unique operation named: updateUsingPUT_9
2019-05-16 22:08:56 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 22:08:56 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 22:08:56 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 22:08:56 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 22:08:56 -Generating unique operation named: addUsingGET_13
2019-05-16 22:08:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 22:08:56 -Generating unique operation named: editUsingGET_14
2019-05-16 22:08:57 -Generating unique operation named: listUsingGET_15
2019-05-16 22:08:57 -Generating unique operation named: saveUsingPOST_13
2019-05-16 22:08:57 -Generating unique operation named: saveUsingPOST_14
2019-05-16 22:08:57 -Generating unique operation named: updateUsingPOST_14
2019-05-16 22:08:57 -Generating unique operation named: listUsingGET_16
2019-05-16 22:08:57 -Generating unique operation named: listUsingHEAD_1
2019-05-16 22:08:57 -Generating unique operation named: listUsingPOST_1
2019-05-16 22:08:57 -Generating unique operation named: listUsingPUT_1
2019-05-16 22:08:57 -Generating unique operation named: listUsingPATCH_1
2019-05-16 22:08:57 -Generating unique operation named: listUsingDELETE_1
2019-05-16 22:08:57 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 22:08:57 -Generating unique operation named: listUsingTRACE_1
2019-05-16 22:08:57 -Generating unique operation named: countDDUsingGET_1
2019-05-16 22:08:57 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 22:08:57 -Generating unique operation named: addUsingGET_14
2019-05-16 22:08:57 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 22:08:57 -Generating unique operation named: editUsingGET_15
2019-05-16 22:08:57 -Generating unique operation named: listUsingGET_17
2019-05-16 22:08:57 -Generating unique operation named: removeUsingPOST_26
2019-05-16 22:08:57 -Generating unique operation named: saveUsingPOST_15
2019-05-16 22:08:57 -Generating unique operation named: treeUsingGET_3
2019-05-16 22:08:57 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 22:08:57 -Generating unique operation named: updateUsingPOST_15
2019-05-16 22:08:57 -Generating unique operation named: addUsingGET_15
2019-05-16 22:08:57 -Generating unique operation named: editUsingGET_16
2019-05-16 22:08:57 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 22:08:57 -Generating unique operation named: listUsingGET_18
2019-05-16 22:08:57 -Generating unique operation named: removeUsingPOST_27
2019-05-16 22:08:57 -Generating unique operation named: removeUsingPOST_28
2019-05-16 22:08:57 -Generating unique operation named: saveUsingPOST_16
2019-05-16 22:08:57 -Generating unique operation named: updateUsingGET_10
2019-05-16 22:08:57 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 22:08:57 -Generating unique operation named: updateUsingPOST_16
2019-05-16 22:08:57 -Generating unique operation named: updateUsingPUT_10
2019-05-16 22:08:57 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 22:08:57 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 22:08:57 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 22:08:57 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 22:08:57 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 22:08:57 -Generating unique operation named: addUsingGET_16
2019-05-16 22:08:57 -Generating unique operation named: editUsingGET_17
2019-05-16 22:08:57 -Generating unique operation named: listUsingGET_19
2019-05-16 22:08:57 -Generating unique operation named: removeUsingPOST_29
2019-05-16 22:08:57 -Generating unique operation named: removeUsingPOST_30
2019-05-16 22:08:57 -Generating unique operation named: saveUsingPOST_17
2019-05-16 22:08:57 -Generating unique operation named: updateUsingGET_11
2019-05-16 22:08:57 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 22:08:57 -Generating unique operation named: updateUsingPOST_17
2019-05-16 22:08:57 -Generating unique operation named: updateUsingPUT_11
2019-05-16 22:08:57 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 22:08:57 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 22:08:57 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 22:08:57 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 22:08:57 -Generating unique operation named: addUsingGET_17
2019-05-16 22:08:57 -Generating unique operation named: editUsingGET_18
2019-05-16 22:08:57 -Generating unique operation named: listUsingGET_20
2019-05-16 22:08:57 -Generating unique operation named: removeUsingPOST_31
2019-05-16 22:08:57 -Generating unique operation named: removeUsingPOST_32
2019-05-16 22:08:57 -Generating unique operation named: saveUsingPOST_18
2019-05-16 22:08:57 -Generating unique operation named: updateUsingGET_12
2019-05-16 22:08:57 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 22:08:57 -Generating unique operation named: updateUsingPOST_18
2019-05-16 22:08:57 -Generating unique operation named: updateUsingPUT_12
2019-05-16 22:08:57 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 22:08:57 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 22:08:57 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 22:08:57 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 22:08:57 -Starting Quartz Scheduler now
2019-05-16 22:08:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 22:08:57 -Starting...
2019-05-16 22:08:57 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 22:08:57 -Started.
2019-05-16 22:08:57 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 22:08:57 -Using a shared selector for servlet write/read
2019-05-16 22:08:57 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 22:08:57 -Started BootdoApplication in 24.966 seconds (JVM running for 25.723)
2019-05-16 22:08:57 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 22:08:58 -==> Parameters: 
2019-05-16 22:08:58 -<==      Total: 1
2019-05-16 22:09:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 22:09:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 22:09:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 54 ms
2019-05-16 22:09:06 -Enabling session validation scheduler...
2019-05-16 22:09:06 -请求地址 : http://localhost:8081/login;JSESSIONID=d55dbb3d-766c-4469-a6e1-7ce5b2c0f4e1
2019-05-16 22:09:06 -HTTP METHOD : GET
2019-05-16 22:09:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 22:09:06 -参数 : [{}]
2019-05-16 22:09:06 -耗时 : 6
2019-05-16 22:09:06 -返回值 : login
2019-05-16 22:09:07 -请求地址 : http://localhost:8081/getVerify
2019-05-16 22:09:07 -HTTP METHOD : GET
2019-05-16 22:09:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 22:09:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@32be429e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3681d011]
2019-05-16 22:09:08 -0533
2019-05-16 22:09:08 -耗时 : 563
2019-05-16 22:09:08 -返回值 : null
2019-05-16 22:09:13 -请求地址 : http://localhost:8081/login
2019-05-16 22:09:13 -HTTP METHOD : POST
2019-05-16 22:09:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 22:09:13 -参数 : [admin, 111111, 0533, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4ab953b7]
2019-05-16 22:09:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 22:09:13 -==> Parameters: admin(String)
2019-05-16 22:09:13 -<==      Total: 1
2019-05-16 22:09:13 -耗时 : 101
2019-05-16 22:09:13 -返回值 : {msg=操作成功, code=0}
2019-05-16 22:09:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 22:09:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 22:09:14 -==> Parameters: 1(Long), admin(String), 登录(String), 102(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 22:09:14.007(Timestamp)
2019-05-16 22:09:14 -请求地址 : http://localhost:8081/index
2019-05-16 22:09:14 -HTTP METHOD : GET
2019-05-16 22:09:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 22:09:14 -参数 : [{}]
2019-05-16 22:09:14 -<==    Updates: 1
2019-05-16 22:09:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 22:09:14 -==> Parameters: 1(Long)
2019-05-16 22:09:14 -<==      Total: 49
2019-05-16 22:09:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 22:09:14 -==> Parameters: 138(Long)
2019-05-16 22:09:14 -<==      Total: 1
2019-05-16 22:09:14 -耗时 : 127
2019-05-16 22:09:14 -返回值 : index_v1
2019-05-16 22:09:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 22:09:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 128(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 22:09:14.32(Timestamp)
2019-05-16 22:09:14 -<==    Updates: 1
2019-05-16 22:09:14 -请求地址 : http://localhost:8081/main
2019-05-16 22:09:14 -HTTP METHOD : GET
2019-05-16 22:09:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 22:09:14 -参数 : []
2019-05-16 22:09:14 -耗时 : 0
2019-05-16 22:09:14 -返回值 : main
2019-05-16 22:09:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 22:09:14 -HTTP METHOD : GET
2019-05-16 22:09:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 22:09:14 -参数 : []
2019-05-16 22:09:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 22:09:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 22:09:14 -<==      Total: 0
2019-05-16 22:09:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 22:09:14 -==> Parameters: 1(Long), 0(String)
2019-05-16 22:09:14 -<==      Total: 1
2019-05-16 22:09:14 -耗时 : 51
2019-05-16 22:09:14 -返回值 : com.bootdo.common.utils.PageUtils@48f5375
2019-05-16 22:09:14 -请求地址 : http://localhost:8081/main
2019-05-16 22:09:14 -HTTP METHOD : GET
2019-05-16 22:09:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 22:09:14 -参数 : []
2019-05-16 22:09:14 -耗时 : 1
2019-05-16 22:09:14 -返回值 : main
2019-05-16 22:09:18 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 22:09:18 -==> Parameters: 1(Long)
2019-05-16 22:09:18 -<==      Total: 93
2019-05-16 22:09:18 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-16 22:09:18 -HTTP METHOD : GET
2019-05-16 22:09:18 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-16 22:09:18 -参数 : []
2019-05-16 22:09:18 -耗时 : 0
2019-05-16 22:09:18 -返回值 : heat/heatPrice/heatPrice
2019-05-16 22:09:19 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-16 22:09:19 -HTTP METHOD : GET
2019-05-16 22:09:19 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-16 22:09:19 -参数 : [{limit=10, offset=0}]
2019-05-16 22:09:19 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-16 22:09:19 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 22:09:19 -<==      Total: 2
2019-05-16 22:09:19 -==>  Preparing: select count(*) from heat_price 
2019-05-16 22:09:19 -==> Parameters: 
2019-05-16 22:09:19 -<==      Total: 1
2019-05-16 22:09:19 -耗时 : 41
2019-05-16 22:09:19 -返回值 : com.bootdo.common.utils.PageUtils@12f48bec
2019-05-16 22:09:51 -请求地址 : http://localhost:8081/heat/heatPrice/edit/1
2019-05-16 22:09:51 -HTTP METHOD : GET
2019-05-16 22:09:51 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.edit
2019-05-16 22:09:51 -参数 : [1, {}]
2019-05-16 22:09:51 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price where id = ? 
2019-05-16 22:09:51 -==> Parameters: 1(Long)
2019-05-16 22:09:51 -<==      Total: 1
2019-05-16 22:09:51 -耗时 : 18
2019-05-16 22:09:51 -返回值 : heat/heatPrice/edit
2019-05-16 22:09:51 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-05-16 22:10:03 -请求地址 : http://localhost:8081/heat/heatPrice/update
2019-05-16 22:10:03 -HTTP METHOD : POST
2019-05-16 22:10:03 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.update
2019-05-16 22:10:03 -参数 : [com.bootdo.heat.domain.HeatPriceDO@72d9aae0]
2019-05-16 22:10:03 -==>  Preparing: update heat_price SET `heat_org` = ?, `m_heat` = ?, `s_heat` = ?, `gm_heat` = ?, `gs_heat` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-16 22:10:03 -==> Parameters: 2(String), 3.5(BigDecimal), 4.8(BigDecimal), 3.5(BigDecimal), 4.8(BigDecimal), 2019-03(String), 1(Long), 2019-05-16 22:10:03.016(Timestamp), 1(Long), (String), 1(Long)
2019-05-16 22:10:03 -<==    Updates: 1
2019-05-16 22:10:03 -==>  Preparing: update heat SET `heat_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `heat_type` = '1' 
2019-05-16 22:10:03 -==> Parameters: 3.5(BigDecimal), 1(Long), 2019-05-16 22:10:03.016(Timestamp), 1(Long), (String), 2(String), 2019-03(String)
2019-05-16 22:10:03 -<==    Updates: 3
2019-05-16 22:10:03 -==>  Preparing: update heat SET `heat_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `heat_type` = '2' 
2019-05-16 22:10:03 -==> Parameters: 4.8(BigDecimal), 1(Long), 2019-05-16 22:10:03.016(Timestamp), 1(Long), (String), 2(String), 2019-03(String)
2019-05-16 22:10:03 -<==    Updates: 2
2019-05-16 22:10:03 -==>  Preparing: update heat SET `heat_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `heat_type` = '3' 
2019-05-16 22:10:03 -==> Parameters: 3.5(BigDecimal), 1(Long), 2019-05-16 22:10:03.016(Timestamp), 1(Long), (String), 2(String), 2019-03(String)
2019-05-16 22:10:03 -<==    Updates: 1
2019-05-16 22:10:03 -==>  Preparing: update heat SET `heat_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `heat_type` = '4' 
2019-05-16 22:10:03 -==> Parameters: 4.8(BigDecimal), 1(Long), 2019-05-16 22:10:03.016(Timestamp), 1(Long), (String), 2(String), 2019-03(String)
2019-05-16 22:10:03 -<==    Updates: 1
2019-05-16 22:10:03 -耗时 : 266
2019-05-16 22:10:03 -返回值 : {msg=操作成功, code=0}
2019-05-16 22:10:03 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-16 22:10:03 -HTTP METHOD : GET
2019-05-16 22:10:03 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-16 22:10:03 -参数 : [{limit=10, offset=0}]
2019-05-16 22:10:03 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-16 22:10:03 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 22:10:03 -<==      Total: 2
2019-05-16 22:10:03 -==>  Preparing: select count(*) from heat_price 
2019-05-16 22:10:03 -==> Parameters: 
2019-05-16 22:10:03 -<==      Total: 1
2019-05-16 22:10:03 -耗时 : 9
2019-05-16 22:10:03 -返回值 : com.bootdo.common.utils.PageUtils@75c529b3
2019-05-16 22:10:41 -请求地址 : http://localhost:8081/heat/heatPrice/edit/1
2019-05-16 22:10:41 -HTTP METHOD : GET
2019-05-16 22:10:41 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.edit
2019-05-16 22:10:41 -参数 : [1, {}]
2019-05-16 22:10:41 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price where id = ? 
2019-05-16 22:10:41 -==> Parameters: 1(Long)
2019-05-16 22:10:41 -<==      Total: 1
2019-05-16 22:10:41 -耗时 : 7
2019-05-16 22:10:41 -返回值 : heat/heatPrice/edit
2019-05-16 22:10:52 -请求地址 : http://localhost:8081/heat/heatPrice/add
2019-05-16 22:10:52 -HTTP METHOD : GET
2019-05-16 22:10:52 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.add
2019-05-16 22:10:52 -参数 : []
2019-05-16 22:10:52 -耗时 : 0
2019-05-16 22:10:52 -返回值 : heat/heatPrice/add
2019-05-16 22:33:28 -Starting BootdoApplication on PC-201905091110 with PID 9916 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 22:33:28 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 22:33:28 -The following profiles are active: dev
2019-05-16 22:33:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 22:33:28 CST 2019]; root of context hierarchy
2019-05-16 22:33:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 22:33:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d159fff6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:33:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c3b32e9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:33:34 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:33:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:33:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:33:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 22:33:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 22:33:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:33:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:33:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:33:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:33:36 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 22:33:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 22:33:36 -Starting service [Tomcat]
2019-05-16 22:33:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 22:33:36 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 22:33:36 -Initializing Spring embedded WebApplicationContext
2019-05-16 22:33:36 -Root WebApplicationContext: initialization completed in 8138 ms
2019-05-16 22:33:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 22:33:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 22:33:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 22:33:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 22:33:37 -Filter xssFilter was not registered (disabled)
2019-05-16 22:33:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 22:33:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 22:33:37 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 22:33:37 -Servlet dispatcherServlet mapped to [/]
2019-05-16 22:33:41 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 22:33:28 CST 2019]; root of context hierarchy
2019-05-16 22:33:41 -Using default implementation for ThreadExecutor
2019-05-16 22:33:41 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 22:33:41 -Quartz Scheduler v.2.2.1 created.
2019-05-16 22:33:41 -RAMJobStore initialized.
2019-05-16 22:33:41 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 22:33:41 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 22:33:41 -Quartz scheduler version: 2.2.1
2019-05-16 22:33:41 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60928a61
2019-05-16 22:33:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 22:33:42 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 22:33:45 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 22:33:45 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:33:45 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 22:33:45 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:33:45 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 22:33:45 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 22:33:45 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:33:45 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 22:33:45 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 22:33:45 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:33:45 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 22:33:45 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:33:45 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 22:33:45 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 22:33:45 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 22:33:45 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 22:33:45 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:33:45 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 22:33:45 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:33:45 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 22:33:45 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 22:33:45 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 22:33:45 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 22:33:45 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 22:33:45 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 22:33:45 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 22:33:45 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 22:33:45 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 22:33:45 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 22:33:45 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 22:33:45 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 22:33:45 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 22:33:45 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 22:33:45 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 22:33:45 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 22:33:45 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 22:33:45 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 22:33:45 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 22:33:45 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 22:33:45 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 22:33:45 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 22:33:45 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 22:33:45 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 22:33:45 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 22:33:45 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 22:33:45 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 22:33:45 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 22:33:45 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 22:33:45 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 22:33:45 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:33:45 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 22:33:45 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:33:45 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 22:33:45 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:33:45 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:33:45 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 22:33:45 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 22:33:45 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 22:33:45 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 22:33:45 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 22:33:45 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 22:33:45 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 22:33:45 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 22:33:45 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 22:33:45 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 22:33:45 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 22:33:45 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 22:33:45 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 22:33:45 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 22:33:45 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 22:33:45 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 22:33:45 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 22:33:45 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 22:33:45 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 22:33:45 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 22:33:45 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 22:33:45 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 22:33:45 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 22:33:45 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 22:33:45 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 22:33:45 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 22:33:45 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 22:33:45 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 22:33:45 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 22:33:45 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 22:33:45 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 22:33:45 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 22:33:45 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 22:33:45 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 22:33:45 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 22:33:45 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 22:33:45 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 22:33:45 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 22:33:45 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 22:33:45 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 22:33:45 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 22:33:45 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 22:33:45 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 22:33:45 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 22:33:45 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 22:33:45 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 22:33:45 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 22:33:45 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 22:33:45 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 22:33:45 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 22:33:45 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 22:33:45 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 22:33:45 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 22:33:45 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 22:33:45 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 22:33:45 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 22:33:45 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 22:33:45 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 22:33:45 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 22:33:45 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 22:33:45 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 22:33:45 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 22:33:45 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 22:33:45 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 22:33:45 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 22:33:45 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 22:33:45 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 22:33:45 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 22:33:45 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 22:33:45 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 22:33:45 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 22:33:45 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 22:33:45 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 22:33:45 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 22:33:45 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 22:33:45 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 22:33:45 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 22:33:45 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 22:33:45 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 22:33:45 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 22:33:45 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 22:33:45 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 22:33:45 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 22:33:45 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 22:33:45 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:33:45 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 22:33:45 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:33:45 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 22:33:45 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:33:45 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 22:33:45 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 22:33:45 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 22:33:45 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 22:33:45 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 22:33:45 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 22:33:45 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 22:33:46 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 22:33:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 22:33:46 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 22:33:47 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:33:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 22:33:28 CST 2019]; root of context hierarchy
2019-05-16 22:33:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:33:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:33:47 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:33:47 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 22:33:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 22:33:49 -Registering beans for JMX exposure on startup
2019-05-16 22:33:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 22:33:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 22:33:49 -Starting beans in phase 2147483647
2019-05-16 22:33:49 -Context refreshed
2019-05-16 22:33:49 -Found 1 custom documentation plugin(s)
2019-05-16 22:33:49 -Scanning for api listing references
2019-05-16 22:33:50 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 22:33:50 -Generating unique operation named: removeUsingPOST_1
2019-05-16 22:33:50 -Generating unique operation named: addUsingGET_1
2019-05-16 22:33:50 -Generating unique operation named: editUsingGET_1
2019-05-16 22:33:50 -Generating unique operation named: listUsingGET_1
2019-05-16 22:33:50 -Generating unique operation named: removeUsingPOST_2
2019-05-16 22:33:50 -Generating unique operation named: removeUsingPOST_3
2019-05-16 22:33:50 -Generating unique operation named: saveUsingPOST_1
2019-05-16 22:33:50 -Generating unique operation named: updateUsingGET_1
2019-05-16 22:33:50 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 22:33:50 -Generating unique operation named: updateUsingPOST_1
2019-05-16 22:33:50 -Generating unique operation named: updateUsingPUT_1
2019-05-16 22:33:50 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 22:33:50 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 22:33:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 22:33:50 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 22:33:50 -Generating unique operation named: addUsingGET_2
2019-05-16 22:33:50 -Generating unique operation named: editUsingGET_2
2019-05-16 22:33:50 -Generating unique operation named: listUsingGET_2
2019-05-16 22:33:50 -Generating unique operation named: removeUsingPOST_4
2019-05-16 22:33:50 -Generating unique operation named: removeUsingPOST_5
2019-05-16 22:33:50 -Generating unique operation named: saveUsingPOST_2
2019-05-16 22:33:50 -Generating unique operation named: updateUsingPOST_2
2019-05-16 22:33:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 22:33:50 -Generating unique operation named: addUsingGET_3
2019-05-16 22:33:50 -Generating unique operation named: editUsingGET_3
2019-05-16 22:33:50 -Generating unique operation named: listUsingGET_3
2019-05-16 22:33:50 -Generating unique operation named: removeUsingPOST_6
2019-05-16 22:33:50 -Generating unique operation named: removeUsingPOST_7
2019-05-16 22:33:51 -Generating unique operation named: saveUsingPOST_3
2019-05-16 22:33:51 -Generating unique operation named: updateUsingGET_2
2019-05-16 22:33:51 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPOST_3
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPUT_2
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 22:33:51 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 22:33:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 22:33:51 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 22:33:51 -Generating unique operation named: addUsingGET_4
2019-05-16 22:33:51 -Generating unique operation named: editUsingGET_4
2019-05-16 22:33:51 -Generating unique operation named: listUsingGET_4
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_8
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_9
2019-05-16 22:33:51 -Generating unique operation named: saveUsingPOST_4
2019-05-16 22:33:51 -Generating unique operation named: updateUsingGET_3
2019-05-16 22:33:51 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPOST_4
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPUT_3
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 22:33:51 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 22:33:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 22:33:51 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 22:33:51 -Generating unique operation named: ElecUsingGET_1
2019-05-16 22:33:51 -Generating unique operation named: addUsingGET_5
2019-05-16 22:33:51 -Generating unique operation named: editUsingGET_5
2019-05-16 22:33:51 -Generating unique operation named: listUsingGET_5
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_10
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_11
2019-05-16 22:33:51 -Generating unique operation named: saveUsingPOST_5
2019-05-16 22:33:51 -Generating unique operation named: updateUsingGET_4
2019-05-16 22:33:51 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPOST_5
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPUT_4
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 22:33:51 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 22:33:51 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 22:33:51 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 22:33:51 -Generating unique operation named: editUsingGET_6
2019-05-16 22:33:51 -Generating unique operation named: listUsingGET_6
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPOST_6
2019-05-16 22:33:51 -Generating unique operation named: addUsingGET_6
2019-05-16 22:33:51 -Generating unique operation named: editUsingGET_7
2019-05-16 22:33:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 22:33:51 -Generating unique operation named: listUsingGET_7
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_12
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_13
2019-05-16 22:33:51 -Generating unique operation named: saveUsingPOST_6
2019-05-16 22:33:51 -Generating unique operation named: updateUsingGET_5
2019-05-16 22:33:51 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPOST_7
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPUT_5
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 22:33:51 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 22:33:51 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 22:33:51 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 22:33:51 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 22:33:51 -Generating unique operation named: addUsingGET_7
2019-05-16 22:33:51 -Generating unique operation named: editUsingGET_8
2019-05-16 22:33:51 -Generating unique operation named: listUsingGET_8
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_14
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_15
2019-05-16 22:33:51 -Generating unique operation named: saveUsingPOST_7
2019-05-16 22:33:51 -Generating unique operation named: updateUsingGET_6
2019-05-16 22:33:51 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPOST_8
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPUT_6
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 22:33:51 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 22:33:51 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 22:33:51 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 22:33:51 -Generating unique operation named: addUsingGET_8
2019-05-16 22:33:51 -Generating unique operation named: editUsingGET_9
2019-05-16 22:33:51 -Generating unique operation named: listUsingGET_9
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_16
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_17
2019-05-16 22:33:51 -Generating unique operation named: saveUsingPOST_8
2019-05-16 22:33:51 -Generating unique operation named: updateUsingGET_7
2019-05-16 22:33:51 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPOST_9
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPUT_7
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 22:33:51 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 22:33:51 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 22:33:51 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 22:33:51 -Generating unique operation named: addUsingGET_9
2019-05-16 22:33:51 -Generating unique operation named: editUsingGET_10
2019-05-16 22:33:51 -Generating unique operation named: infoUsingGET_1
2019-05-16 22:33:51 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 22:33:51 -Generating unique operation named: infoUsingPOST_1
2019-05-16 22:33:51 -Generating unique operation named: infoUsingPUT_1
2019-05-16 22:33:51 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 22:33:51 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 22:33:51 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 22:33:51 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 22:33:51 -Generating unique operation named: listUsingGET_10
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_18
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_19
2019-05-16 22:33:51 -Generating unique operation named: saveUsingPOST_9
2019-05-16 22:33:51 -Generating unique operation named: updateUsingPOST_10
2019-05-16 22:33:51 -Generating unique operation named: listUsingGET_11
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_20
2019-05-16 22:33:51 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 22:33:51 -Generating unique operation named: addUsingGET_10
2019-05-16 22:33:51 -Generating unique operation named: editUsingGET_11
2019-05-16 22:33:51 -Generating unique operation named: listUsingGET_12
2019-05-16 22:33:51 -Generating unique operation named: removeUsingPOST_21
2019-05-16 22:33:51 -Generating unique operation named: saveUsingPOST_10
2019-05-16 22:33:51 -Generating unique operation named: treeUsingGET_1
2019-05-16 22:33:52 -Generating unique operation named: treeUsingGET_2
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPOST_11
2019-05-16 22:33:52 -Generating unique operation named: addUsingGET_11
2019-05-16 22:33:52 -Generating unique operation named: editUsingGET_12
2019-05-16 22:33:52 -Generating unique operation named: listUsingGET_13
2019-05-16 22:33:52 -Generating unique operation named: removeUsingPOST_22
2019-05-16 22:33:52 -Generating unique operation named: removeUsingPOST_23
2019-05-16 22:33:52 -Generating unique operation named: saveUsingPOST_11
2019-05-16 22:33:52 -Generating unique operation named: updateUsingGET_8
2019-05-16 22:33:52 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPOST_12
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPUT_8
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 22:33:52 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 22:33:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 22:33:52 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 22:33:52 -Generating unique operation named: addUsingGET_12
2019-05-16 22:33:52 -Generating unique operation named: editUsingGET_13
2019-05-16 22:33:52 -Generating unique operation named: listUsingGET_14
2019-05-16 22:33:52 -Generating unique operation named: removeUsingPOST_24
2019-05-16 22:33:52 -Generating unique operation named: removeUsingPOST_25
2019-05-16 22:33:52 -Generating unique operation named: saveUsingPOST_12
2019-05-16 22:33:52 -Generating unique operation named: updateUsingGET_9
2019-05-16 22:33:52 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPOST_13
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPUT_9
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 22:33:52 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 22:33:52 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 22:33:52 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 22:33:52 -Generating unique operation named: addUsingGET_13
2019-05-16 22:33:52 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 22:33:52 -Generating unique operation named: editUsingGET_14
2019-05-16 22:33:52 -Generating unique operation named: listUsingGET_15
2019-05-16 22:33:52 -Generating unique operation named: saveUsingPOST_13
2019-05-16 22:33:52 -Generating unique operation named: saveUsingPOST_14
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPOST_14
2019-05-16 22:33:52 -Generating unique operation named: listUsingGET_16
2019-05-16 22:33:52 -Generating unique operation named: listUsingHEAD_1
2019-05-16 22:33:52 -Generating unique operation named: listUsingPOST_1
2019-05-16 22:33:52 -Generating unique operation named: listUsingPUT_1
2019-05-16 22:33:52 -Generating unique operation named: listUsingPATCH_1
2019-05-16 22:33:52 -Generating unique operation named: listUsingDELETE_1
2019-05-16 22:33:52 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 22:33:52 -Generating unique operation named: listUsingTRACE_1
2019-05-16 22:33:52 -Generating unique operation named: countDDUsingGET_1
2019-05-16 22:33:52 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 22:33:52 -Generating unique operation named: addUsingGET_14
2019-05-16 22:33:52 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 22:33:52 -Generating unique operation named: editUsingGET_15
2019-05-16 22:33:52 -Generating unique operation named: listUsingGET_17
2019-05-16 22:33:52 -Generating unique operation named: removeUsingPOST_26
2019-05-16 22:33:52 -Generating unique operation named: saveUsingPOST_15
2019-05-16 22:33:52 -Generating unique operation named: treeUsingGET_3
2019-05-16 22:33:52 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPOST_15
2019-05-16 22:33:52 -Generating unique operation named: addUsingGET_15
2019-05-16 22:33:52 -Generating unique operation named: editUsingGET_16
2019-05-16 22:33:52 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 22:33:52 -Generating unique operation named: listUsingGET_18
2019-05-16 22:33:52 -Generating unique operation named: removeUsingPOST_27
2019-05-16 22:33:52 -Generating unique operation named: removeUsingPOST_28
2019-05-16 22:33:52 -Generating unique operation named: saveUsingPOST_16
2019-05-16 22:33:52 -Generating unique operation named: updateUsingGET_10
2019-05-16 22:33:52 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPOST_16
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPUT_10
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 22:33:52 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 22:33:52 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 22:33:52 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 22:33:52 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 22:33:52 -Generating unique operation named: addUsingGET_16
2019-05-16 22:33:52 -Generating unique operation named: editUsingGET_17
2019-05-16 22:33:52 -Generating unique operation named: listUsingGET_19
2019-05-16 22:33:52 -Generating unique operation named: removeUsingPOST_29
2019-05-16 22:33:52 -Generating unique operation named: removeUsingPOST_30
2019-05-16 22:33:52 -Generating unique operation named: saveUsingPOST_17
2019-05-16 22:33:52 -Generating unique operation named: updateUsingGET_11
2019-05-16 22:33:52 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPOST_17
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPUT_11
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 22:33:52 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 22:33:52 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 22:33:52 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 22:33:52 -Generating unique operation named: addUsingGET_17
2019-05-16 22:33:52 -Generating unique operation named: editUsingGET_18
2019-05-16 22:33:52 -Generating unique operation named: listUsingGET_20
2019-05-16 22:33:52 -Generating unique operation named: removeUsingPOST_31
2019-05-16 22:33:52 -Generating unique operation named: removeUsingPOST_32
2019-05-16 22:33:52 -Generating unique operation named: saveUsingPOST_18
2019-05-16 22:33:52 -Generating unique operation named: updateUsingGET_12
2019-05-16 22:33:52 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPOST_18
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPUT_12
2019-05-16 22:33:52 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 22:33:52 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 22:33:52 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 22:33:52 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 22:33:52 -Starting Quartz Scheduler now
2019-05-16 22:33:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 22:33:52 -Starting...
2019-05-16 22:33:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 22:33:52 -Started.
2019-05-16 22:33:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 22:33:52 -Using a shared selector for servlet write/read
2019-05-16 22:33:53 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 22:33:53 -Started BootdoApplication in 25.586 seconds (JVM running for 26.4)
2019-05-16 22:33:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 22:33:53 -==> Parameters: 
2019-05-16 22:33:53 -<==      Total: 1
2019-05-16 22:34:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 22:34:03 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 22:34:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-05-16 22:34:03 -Enabling session validation scheduler...
2019-05-16 22:34:03 -请求地址 : http://localhost:8081/login;JSESSIONID=0c97b929-67ae-46e9-8597-a5041952b04a
2019-05-16 22:34:03 -HTTP METHOD : GET
2019-05-16 22:34:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 22:34:03 -参数 : [{}]
2019-05-16 22:34:03 -耗时 : 5
2019-05-16 22:34:03 -返回值 : login
2019-05-16 22:34:05 -请求地址 : http://localhost:8081/getVerify
2019-05-16 22:34:05 -HTTP METHOD : GET
2019-05-16 22:34:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 22:34:05 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@335c24ed, org.apache.shiro.web.servlet.ShiroHttpServletResponse@534ad3d9]
2019-05-16 22:34:05 -0124
2019-05-16 22:34:05 -耗时 : 655
2019-05-16 22:34:05 -返回值 : null
2019-05-16 22:34:05 -请求地址 : http://localhost:8081/login
2019-05-16 22:34:05 -HTTP METHOD : GET
2019-05-16 22:34:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 22:34:05 -参数 : [{}]
2019-05-16 22:34:05 -耗时 : 0
2019-05-16 22:34:05 -返回值 : login
2019-05-16 22:34:10 -请求地址 : http://localhost:8081/login
2019-05-16 22:34:10 -HTTP METHOD : POST
2019-05-16 22:34:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 22:34:10 -参数 : [admin, 111111, 0124, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2bb261f4]
2019-05-16 22:34:10 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 22:34:10 -==> Parameters: admin(String)
2019-05-16 22:34:10 -<==      Total: 1
2019-05-16 22:34:10 -耗时 : 85
2019-05-16 22:34:10 -返回值 : {msg=操作成功, code=0}
2019-05-16 22:34:10 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 22:34:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 22:34:10 -==> Parameters: 1(Long), admin(String), 登录(String), 85(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 22:34:10.718(Timestamp)
2019-05-16 22:34:10 -请求地址 : http://localhost:8081/index
2019-05-16 22:34:10 -HTTP METHOD : GET
2019-05-16 22:34:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 22:34:10 -参数 : [{}]
2019-05-16 22:34:10 -<==    Updates: 1
2019-05-16 22:34:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 22:34:11 -==> Parameters: 1(Long)
2019-05-16 22:34:11 -<==      Total: 49
2019-05-16 22:34:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 22:34:11 -==> Parameters: 138(Long)
2019-05-16 22:34:11 -<==      Total: 1
2019-05-16 22:34:11 -耗时 : 236
2019-05-16 22:34:11 -返回值 : index_v1
2019-05-16 22:34:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 22:34:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 236(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 22:34:11.131(Timestamp)
2019-05-16 22:34:11 -<==    Updates: 1
2019-05-16 22:34:11 -请求地址 : http://localhost:8081/main
2019-05-16 22:34:11 -HTTP METHOD : GET
2019-05-16 22:34:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 22:34:11 -参数 : []
2019-05-16 22:34:11 -耗时 : 1
2019-05-16 22:34:11 -返回值 : main
2019-05-16 22:34:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 22:34:11 -HTTP METHOD : GET
2019-05-16 22:34:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 22:34:11 -参数 : []
2019-05-16 22:34:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 22:34:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 22:34:11 -<==      Total: 0
2019-05-16 22:34:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 22:34:11 -==> Parameters: 1(Long), 0(String)
2019-05-16 22:34:11 -<==      Total: 1
2019-05-16 22:34:11 -耗时 : 37
2019-05-16 22:34:11 -返回值 : com.bootdo.common.utils.PageUtils@76fd8354
2019-05-16 22:34:11 -请求地址 : http://localhost:8081/main
2019-05-16 22:34:11 -HTTP METHOD : GET
2019-05-16 22:34:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 22:34:11 -参数 : []
2019-05-16 22:34:11 -耗时 : 0
2019-05-16 22:34:11 -返回值 : main
2019-05-16 22:34:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 22:34:13 -==> Parameters: 1(Long)
2019-05-16 22:34:13 -<==      Total: 93
2019-05-16 22:34:13 -请求地址 : http://localhost:8081/elec/elec
2019-05-16 22:34:13 -HTTP METHOD : GET
2019-05-16 22:34:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-16 22:34:13 -参数 : []
2019-05-16 22:34:13 -耗时 : 0
2019-05-16 22:34:13 -返回值 : elec/elec/elec
2019-05-16 22:34:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-16 22:34:14 -HTTP METHOD : GET
2019-05-16 22:34:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 22:34:14 -参数 : [userType]
2019-05-16 22:34:14 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-16 22:34:14 -HTTP METHOD : GET
2019-05-16 22:34:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-16 22:34:14 -参数 : [elecType]
2019-05-16 22:34:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 22:34:14 -==> Parameters: userType(String)
2019-05-16 22:34:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-16 22:34:14 -==> Parameters: elecType(String)
2019-05-16 22:34:14 -<==      Total: 4
2019-05-16 22:34:14 -耗时 : 32
2019-05-16 22:34:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 22:34:14 -<==      Total: 11
2019-05-16 22:34:14 -耗时 : 70
2019-05-16 22:34:14 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-16 22:34:14 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-16 22:34:14 -HTTP METHOD : GET
2019-05-16 22:34:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-16 22:34:14 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@77573ebf]
2019-05-16 22:34:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-05-16 22:34:14 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 22:34:14 -<==      Total: 10
2019-05-16 22:34:14 -==>  Preparing: select count(*) from elec 
2019-05-16 22:34:14 -==> Parameters: 
2019-05-16 22:34:14 -<==      Total: 1
2019-05-16 22:34:14 -耗时 : 134
2019-05-16 22:34:14 -返回值 : com.bootdo.common.utils.PageUtils@10cf6e48
2019-05-16 22:34:16 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-16 22:34:16 -HTTP METHOD : GET
2019-05-16 22:34:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-16 22:34:16 -参数 : []
2019-05-16 22:34:16 -耗时 : 0
2019-05-16 22:34:16 -返回值 : elec/elecPrice/elecPrice
2019-05-16 22:34:16 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-16 22:34:16 -HTTP METHOD : GET
2019-05-16 22:34:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-16 22:34:16 -参数 : [{limit=10, offset=0}]
2019-05-16 22:34:16 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-16 22:34:16 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 22:34:16 -<==      Total: 2
2019-05-16 22:34:16 -==>  Preparing: select count(*) from elec_price 
2019-05-16 22:34:16 -==> Parameters: 
2019-05-16 22:34:16 -<==      Total: 1
2019-05-16 22:34:16 -耗时 : 30
2019-05-16 22:34:16 -返回值 : com.bootdo.common.utils.PageUtils@58a9274
2019-05-16 22:34:18 -请求地址 : http://localhost:8081/elec/elecPrice/edit/1
2019-05-16 22:34:18 -HTTP METHOD : GET
2019-05-16 22:34:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-05-16 22:34:18 -参数 : [1, {}]
2019-05-16 22:34:18 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price where id = ? 
2019-05-16 22:34:18 -==> Parameters: 1(Long)
2019-05-16 22:34:18 -<==      Total: 1
2019-05-16 22:34:18 -耗时 : 14
2019-05-16 22:34:18 -返回值 : elec/elecPrice/edit
2019-05-16 22:34:41 -请求地址 : http://localhost:8081/elec/elecPrice/edit/1
2019-05-16 22:34:41 -HTTP METHOD : GET
2019-05-16 22:34:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-05-16 22:34:41 -参数 : [1, {}]
2019-05-16 22:34:41 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price where id = ? 
2019-05-16 22:34:41 -==> Parameters: 1(Long)
2019-05-16 22:34:41 -<==      Total: 1
2019-05-16 22:34:41 -耗时 : 7
2019-05-16 22:34:41 -返回值 : elec/elecPrice/edit
2019-05-16 22:34:46 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-05-16 22:34:54 -请求地址 : http://localhost:8081/elec/elecPrice/update
2019-05-16 22:34:54 -HTTP METHOD : POST
2019-05-16 22:34:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.update
2019-05-16 22:34:54 -参数 : [com.bootdo.elec.domain.ElecPriceDO@704711ed]
2019-05-16 22:34:54 -==>  Preparing: update elec_price SET m_elec = ?, s_elec = ?, g1_elec = ?, g2_elec = ?, g3_elec = ?, wm_elec = ?, ws_elec = ?, wg_elec = ?, mm_elec = ?, ms_elec = ?, z_elec = ?, create_time = ?, create_by = ?, update_time = ? where id = ? 
2019-05-16 22:34:54 -==> Parameters: 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 0.465(BigDecimal), 0.400(BigDecimal), 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 2019-03(String), 1(Long), 2019-05-16 22:34:54.381(Timestamp), 1(Long)
2019-05-16 22:34:54 -<==    Updates: 1
2019-05-16 22:34:54 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '1' 
2019-05-16 22:34:54 -==> Parameters: 0.465(BigDecimal), 1(Long), 2019-05-16 22:34:54.381(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:34:54 -<==    Updates: 1
2019-05-16 22:34:54 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '2' 
2019-05-16 22:34:54 -==> Parameters: 0.810(BigDecimal), 1(Long), 2019-05-16 22:34:54.381(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:34:54 -<==    Updates: 1
2019-05-16 22:34:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 22:34:54 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecPrice/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'gmElec' in 'class com.bootdo.elec.domain.ElecPriceDO'(String), null, 2019-05-16 22:34:54.675(Timestamp)
2019-05-16 22:34:54 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'gmElec' in 'class com.bootdo.elec.domain.ElecPriceDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'gmElec' in 'class com.bootdo.elec.domain.ElecPriceDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.updateG1Elec(Unknown Source)
	at com.bootdo.elec.service.impl.ElecPriceServiceImpl.updateG1Elec(ElecPriceServiceImpl.java:51)
	at com.bootdo.elec.controller.ElecPriceController.update(ElecPriceController.java:96)
	at com.bootdo.elec.controller.ElecPriceController$$FastClassBySpringCGLIB$$65d01db3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecPriceController$$EnhancerBySpringCGLIB$$ca7a751b.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'gmElec' in 'class com.bootdo.elec.domain.ElecPriceDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextMap.get(DynamicContext.java:94)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:108)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2666)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-05-16 22:34:54 -<==    Updates: 1
2019-05-16 22:34:58 -请求地址 : http://localhost:8081/elec/elecPrice/update
2019-05-16 22:34:58 -HTTP METHOD : POST
2019-05-16 22:34:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.update
2019-05-16 22:34:58 -参数 : [com.bootdo.elec.domain.ElecPriceDO@56eac54f]
2019-05-16 22:34:58 -==>  Preparing: update elec_price SET m_elec = ?, s_elec = ?, g1_elec = ?, g2_elec = ?, g3_elec = ?, wm_elec = ?, ws_elec = ?, wg_elec = ?, mm_elec = ?, ms_elec = ?, z_elec = ?, create_time = ?, create_by = ?, update_time = ? where id = ? 
2019-05-16 22:34:58 -==> Parameters: 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 0.465(BigDecimal), 0.400(BigDecimal), 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 2019-03(String), 1(Long), 2019-05-16 22:34:58.226(Timestamp), 1(Long)
2019-05-16 22:34:58 -<==    Updates: 1
2019-05-16 22:34:58 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '1' 
2019-05-16 22:34:58 -==> Parameters: 0.465(BigDecimal), 1(Long), 2019-05-16 22:34:58.226(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:34:58 -<==    Updates: 1
2019-05-16 22:34:58 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '2' 
2019-05-16 22:34:58 -==> Parameters: 0.810(BigDecimal), 1(Long), 2019-05-16 22:34:58.226(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:34:58 -<==    Updates: 1
2019-05-16 22:34:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 22:34:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecPrice/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'gmElec' in 'class com.bootdo.elec.domain.ElecPriceDO'(String), null, 2019-05-16 22:34:58.361(Timestamp)
2019-05-16 22:34:58 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'gmElec' in 'class com.bootdo.elec.domain.ElecPriceDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'gmElec' in 'class com.bootdo.elec.domain.ElecPriceDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy123.updateG1Elec(Unknown Source)
	at com.bootdo.elec.service.impl.ElecPriceServiceImpl.updateG1Elec(ElecPriceServiceImpl.java:51)
	at com.bootdo.elec.controller.ElecPriceController.update(ElecPriceController.java:96)
	at com.bootdo.elec.controller.ElecPriceController$$FastClassBySpringCGLIB$$65d01db3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecPriceController$$EnhancerBySpringCGLIB$$ca7a751b.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'gmElec' in 'class com.bootdo.elec.domain.ElecPriceDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextMap.get(DynamicContext.java:94)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:108)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2666)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-05-16 22:34:58 -<==    Updates: 1
2019-05-16 22:36:59 -Starting BootdoApplication on PC-201905091110 with PID 15772 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-16 22:36:59 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-16 22:36:59 -The following profiles are active: dev
2019-05-16 22:36:59 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 22:36:59 CST 2019]; root of context hierarchy
2019-05-16 22:37:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-16 22:37:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:37:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:37:05 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:37:06 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:37:06 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:37:06 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-16 22:37:06 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-16 22:37:06 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:37:06 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:37:06 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:37:06 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-16 22:37:07 -Tomcat initialized with port(s): 8081 (http)
2019-05-16 22:37:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-16 22:37:07 -Starting service [Tomcat]
2019-05-16 22:37:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-16 22:37:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-16 22:37:07 -Initializing Spring embedded WebApplicationContext
2019-05-16 22:37:07 -Root WebApplicationContext: initialization completed in 7854 ms
2019-05-16 22:37:08 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-16 22:37:08 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-16 22:37:08 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-16 22:37:08 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-16 22:37:08 -Filter xssFilter was not registered (disabled)
2019-05-16 22:37:08 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-16 22:37:08 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-16 22:37:08 -Servlet statViewServlet mapped to [/druid/*]
2019-05-16 22:37:08 -Servlet dispatcherServlet mapped to [/]
2019-05-16 22:37:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 22:36:59 CST 2019]; root of context hierarchy
2019-05-16 22:37:13 -Using default implementation for ThreadExecutor
2019-05-16 22:37:13 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-16 22:37:13 -Quartz Scheduler v.2.2.1 created.
2019-05-16 22:37:13 -RAMJobStore initialized.
2019-05-16 22:37:13 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-16 22:37:13 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-16 22:37:13 -Quartz scheduler version: 2.2.1
2019-05-16 22:37:13 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@8077c97
2019-05-16 22:37:14 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-16 22:37:14 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-16 22:37:16 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-16 22:37:16 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:37:16 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:37:16 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-16 22:37:16 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-16 22:37:16 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-16 22:37:16 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:37:16 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-16 22:37:16 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:37:16 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-16 22:37:16 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:37:16 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-16 22:37:16 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-16 22:37:16 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 22:37:16 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-16 22:37:16 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-16 22:37:16 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:37:16 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-16 22:37:16 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-16 22:37:16 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-16 22:37:16 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-16 22:37:16 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 22:37:16 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-16 22:37:16 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-16 22:37:16 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-16 22:37:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-16 22:37:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-16 22:37:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-16 22:37:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-16 22:37:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-16 22:37:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-16 22:37:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-16 22:37:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-16 22:37:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-16 22:37:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-16 22:37:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-16 22:37:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-16 22:37:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-16 22:37:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-16 22:37:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-16 22:37:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-16 22:37:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-16 22:37:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 22:37:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-16 22:37:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-16 22:37:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-16 22:37:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-16 22:37:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-16 22:37:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-16 22:37:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-16 22:37:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-16 22:37:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-16 22:37:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-16 22:37:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-16 22:37:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:37:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-16 22:37:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:37:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:37:17 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-16 22:37:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-16 22:37:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-16 22:37:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 22:37:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-16 22:37:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-16 22:37:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-16 22:37:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-16 22:37:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-16 22:37:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-16 22:37:17 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-16 22:37:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-16 22:37:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-16 22:37:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-16 22:37:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-16 22:37:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-16 22:37:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 22:37:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-16 22:37:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-16 22:37:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 22:37:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-16 22:37:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-16 22:37:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-16 22:37:17 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 22:37:17 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-16 22:37:17 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-16 22:37:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 22:37:17 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 22:37:17 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-16 22:37:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-16 22:37:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-16 22:37:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-16 22:37:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-16 22:37:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-16 22:37:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-16 22:37:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-16 22:37:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-16 22:37:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-16 22:37:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-16 22:37:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-16 22:37:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-16 22:37:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-16 22:37:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-16 22:37:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-16 22:37:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-16 22:37:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-16 22:37:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-16 22:37:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-16 22:37:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-16 22:37:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-16 22:37:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-16 22:37:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-16 22:37:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-16 22:37:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-16 22:37:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 22:37:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-16 22:37:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-16 22:37:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-16 22:37:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-16 22:37:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-16 22:37:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-16 22:37:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-16 22:37:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-16 22:37:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-16 22:37:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-16 22:37:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-16 22:37:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-16 22:37:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-16 22:37:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-16 22:37:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-16 22:37:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-16 22:37:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 22:37:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 22:37:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-16 22:37:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-16 22:37:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-16 22:37:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-16 22:37:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-16 22:37:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-16 22:37:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-16 22:37:17 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-16 22:37:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-16 22:37:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-16 22:37:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-16 22:37:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-16 22:37:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 22:37:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-16 22:37:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-16 22:37:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-16 22:37:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-16 22:37:17 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-16 22:37:17 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-16 22:37:17 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-16 22:37:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-16 22:37:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-16 22:37:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-16 22:37:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-16 22:37:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-16 22:37:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-16 22:37:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-16 22:37:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-16 22:37:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:37:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Thu May 16 22:36:59 CST 2019]; root of context hierarchy
2019-05-16 22:37:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:37:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:37:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-16 22:37:19 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-16 22:37:19 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-16 22:37:21 -Registering beans for JMX exposure on startup
2019-05-16 22:37:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-16 22:37:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-16 22:37:21 -Starting beans in phase 2147483647
2019-05-16 22:37:21 -Context refreshed
2019-05-16 22:37:21 -Found 1 custom documentation plugin(s)
2019-05-16 22:37:21 -Scanning for api listing references
2019-05-16 22:37:22 -Generating unique operation named: getCountDUsingPOST_1
2019-05-16 22:37:22 -Generating unique operation named: removeUsingPOST_1
2019-05-16 22:37:22 -Generating unique operation named: addUsingGET_1
2019-05-16 22:37:22 -Generating unique operation named: editUsingGET_1
2019-05-16 22:37:22 -Generating unique operation named: listUsingGET_1
2019-05-16 22:37:22 -Generating unique operation named: removeUsingPOST_2
2019-05-16 22:37:22 -Generating unique operation named: removeUsingPOST_3
2019-05-16 22:37:22 -Generating unique operation named: saveUsingPOST_1
2019-05-16 22:37:22 -Generating unique operation named: updateUsingGET_1
2019-05-16 22:37:22 -Generating unique operation named: updateUsingHEAD_1
2019-05-16 22:37:22 -Generating unique operation named: updateUsingPOST_1
2019-05-16 22:37:22 -Generating unique operation named: updateUsingPUT_1
2019-05-16 22:37:22 -Generating unique operation named: updateUsingPATCH_1
2019-05-16 22:37:22 -Generating unique operation named: updateUsingDELETE_1
2019-05-16 22:37:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-16 22:37:22 -Generating unique operation named: updateUsingTRACE_1
2019-05-16 22:37:22 -Generating unique operation named: addUsingGET_2
2019-05-16 22:37:22 -Generating unique operation named: editUsingGET_2
2019-05-16 22:37:22 -Generating unique operation named: listUsingGET_2
2019-05-16 22:37:22 -Generating unique operation named: removeUsingPOST_4
2019-05-16 22:37:22 -Generating unique operation named: removeUsingPOST_5
2019-05-16 22:37:22 -Generating unique operation named: saveUsingPOST_2
2019-05-16 22:37:22 -Generating unique operation named: updateUsingPOST_2
2019-05-16 22:37:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-16 22:37:22 -Generating unique operation named: addUsingGET_3
2019-05-16 22:37:22 -Generating unique operation named: editUsingGET_3
2019-05-16 22:37:22 -Generating unique operation named: listUsingGET_3
2019-05-16 22:37:22 -Generating unique operation named: removeUsingPOST_6
2019-05-16 22:37:22 -Generating unique operation named: removeUsingPOST_7
2019-05-16 22:37:22 -Generating unique operation named: saveUsingPOST_3
2019-05-16 22:37:22 -Generating unique operation named: updateUsingGET_2
2019-05-16 22:37:22 -Generating unique operation named: updateUsingHEAD_2
2019-05-16 22:37:22 -Generating unique operation named: updateUsingPOST_3
2019-05-16 22:37:22 -Generating unique operation named: updateUsingPUT_2
2019-05-16 22:37:22 -Generating unique operation named: updateUsingPATCH_2
2019-05-16 22:37:22 -Generating unique operation named: updateUsingDELETE_2
2019-05-16 22:37:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-16 22:37:22 -Generating unique operation named: updateUsingTRACE_2
2019-05-16 22:37:22 -Generating unique operation named: addUsingGET_4
2019-05-16 22:37:22 -Generating unique operation named: editUsingGET_4
2019-05-16 22:37:22 -Generating unique operation named: listUsingGET_4
2019-05-16 22:37:22 -Generating unique operation named: removeUsingPOST_8
2019-05-16 22:37:22 -Generating unique operation named: removeUsingPOST_9
2019-05-16 22:37:22 -Generating unique operation named: saveUsingPOST_4
2019-05-16 22:37:22 -Generating unique operation named: updateUsingGET_3
2019-05-16 22:37:22 -Generating unique operation named: updateUsingHEAD_3
2019-05-16 22:37:22 -Generating unique operation named: updateUsingPOST_4
2019-05-16 22:37:22 -Generating unique operation named: updateUsingPUT_3
2019-05-16 22:37:22 -Generating unique operation named: updateUsingPATCH_3
2019-05-16 22:37:22 -Generating unique operation named: updateUsingDELETE_3
2019-05-16 22:37:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-16 22:37:22 -Generating unique operation named: updateUsingTRACE_3
2019-05-16 22:37:22 -Generating unique operation named: ElecUsingGET_1
2019-05-16 22:37:22 -Generating unique operation named: addUsingGET_5
2019-05-16 22:37:22 -Generating unique operation named: editUsingGET_5
2019-05-16 22:37:22 -Generating unique operation named: listUsingGET_5
2019-05-16 22:37:22 -Generating unique operation named: removeUsingPOST_10
2019-05-16 22:37:22 -Generating unique operation named: removeUsingPOST_11
2019-05-16 22:37:22 -Generating unique operation named: saveUsingPOST_5
2019-05-16 22:37:22 -Generating unique operation named: updateUsingGET_4
2019-05-16 22:37:22 -Generating unique operation named: updateUsingHEAD_4
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPOST_5
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPUT_4
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPATCH_4
2019-05-16 22:37:23 -Generating unique operation named: updateUsingDELETE_4
2019-05-16 22:37:23 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-16 22:37:23 -Generating unique operation named: updateUsingTRACE_4
2019-05-16 22:37:23 -Generating unique operation named: editUsingGET_6
2019-05-16 22:37:23 -Generating unique operation named: listUsingGET_6
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPOST_6
2019-05-16 22:37:23 -Generating unique operation named: addUsingGET_6
2019-05-16 22:37:23 -Generating unique operation named: editUsingGET_7
2019-05-16 22:37:23 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-16 22:37:23 -Generating unique operation named: listUsingGET_7
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_12
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_13
2019-05-16 22:37:23 -Generating unique operation named: saveUsingPOST_6
2019-05-16 22:37:23 -Generating unique operation named: updateUsingGET_5
2019-05-16 22:37:23 -Generating unique operation named: updateUsingHEAD_5
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPOST_7
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPUT_5
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPATCH_5
2019-05-16 22:37:23 -Generating unique operation named: updateUsingDELETE_5
2019-05-16 22:37:23 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-16 22:37:23 -Generating unique operation named: updateUsingTRACE_5
2019-05-16 22:37:23 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-16 22:37:23 -Generating unique operation named: addUsingGET_7
2019-05-16 22:37:23 -Generating unique operation named: editUsingGET_8
2019-05-16 22:37:23 -Generating unique operation named: listUsingGET_8
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_14
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_15
2019-05-16 22:37:23 -Generating unique operation named: saveUsingPOST_7
2019-05-16 22:37:23 -Generating unique operation named: updateUsingGET_6
2019-05-16 22:37:23 -Generating unique operation named: updateUsingHEAD_6
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPOST_8
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPUT_6
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPATCH_6
2019-05-16 22:37:23 -Generating unique operation named: updateUsingDELETE_6
2019-05-16 22:37:23 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-16 22:37:23 -Generating unique operation named: updateUsingTRACE_6
2019-05-16 22:37:23 -Generating unique operation named: addUsingGET_8
2019-05-16 22:37:23 -Generating unique operation named: editUsingGET_9
2019-05-16 22:37:23 -Generating unique operation named: listUsingGET_9
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_16
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_17
2019-05-16 22:37:23 -Generating unique operation named: saveUsingPOST_8
2019-05-16 22:37:23 -Generating unique operation named: updateUsingGET_7
2019-05-16 22:37:23 -Generating unique operation named: updateUsingHEAD_7
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPOST_9
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPUT_7
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPATCH_7
2019-05-16 22:37:23 -Generating unique operation named: updateUsingDELETE_7
2019-05-16 22:37:23 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-16 22:37:23 -Generating unique operation named: updateUsingTRACE_7
2019-05-16 22:37:23 -Generating unique operation named: addUsingGET_9
2019-05-16 22:37:23 -Generating unique operation named: editUsingGET_10
2019-05-16 22:37:23 -Generating unique operation named: infoUsingGET_1
2019-05-16 22:37:23 -Generating unique operation named: infoUsingHEAD_1
2019-05-16 22:37:23 -Generating unique operation named: infoUsingPOST_1
2019-05-16 22:37:23 -Generating unique operation named: infoUsingPUT_1
2019-05-16 22:37:23 -Generating unique operation named: infoUsingPATCH_1
2019-05-16 22:37:23 -Generating unique operation named: infoUsingDELETE_1
2019-05-16 22:37:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-16 22:37:23 -Generating unique operation named: infoUsingTRACE_1
2019-05-16 22:37:23 -Generating unique operation named: listUsingGET_10
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_18
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_19
2019-05-16 22:37:23 -Generating unique operation named: saveUsingPOST_9
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPOST_10
2019-05-16 22:37:23 -Generating unique operation named: listUsingGET_11
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_20
2019-05-16 22:37:23 -Generating unique operation named: welcomeUsingGET_1
2019-05-16 22:37:23 -Generating unique operation named: addUsingGET_10
2019-05-16 22:37:23 -Generating unique operation named: editUsingGET_11
2019-05-16 22:37:23 -Generating unique operation named: listUsingGET_12
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_21
2019-05-16 22:37:23 -Generating unique operation named: saveUsingPOST_10
2019-05-16 22:37:23 -Generating unique operation named: treeUsingGET_1
2019-05-16 22:37:23 -Generating unique operation named: treeUsingGET_2
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPOST_11
2019-05-16 22:37:23 -Generating unique operation named: addUsingGET_11
2019-05-16 22:37:23 -Generating unique operation named: editUsingGET_12
2019-05-16 22:37:23 -Generating unique operation named: listUsingGET_13
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_22
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_23
2019-05-16 22:37:23 -Generating unique operation named: saveUsingPOST_11
2019-05-16 22:37:23 -Generating unique operation named: updateUsingGET_8
2019-05-16 22:37:23 -Generating unique operation named: updateUsingHEAD_8
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPOST_12
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPUT_8
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPATCH_8
2019-05-16 22:37:23 -Generating unique operation named: updateUsingDELETE_8
2019-05-16 22:37:23 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-16 22:37:23 -Generating unique operation named: updateUsingTRACE_8
2019-05-16 22:37:23 -Generating unique operation named: addUsingGET_12
2019-05-16 22:37:23 -Generating unique operation named: editUsingGET_13
2019-05-16 22:37:23 -Generating unique operation named: listUsingGET_14
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_24
2019-05-16 22:37:23 -Generating unique operation named: removeUsingPOST_25
2019-05-16 22:37:23 -Generating unique operation named: saveUsingPOST_12
2019-05-16 22:37:23 -Generating unique operation named: updateUsingGET_9
2019-05-16 22:37:23 -Generating unique operation named: updateUsingHEAD_9
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPOST_13
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPUT_9
2019-05-16 22:37:23 -Generating unique operation named: updateUsingPATCH_9
2019-05-16 22:37:23 -Generating unique operation named: updateUsingDELETE_9
2019-05-16 22:37:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-16 22:37:24 -Generating unique operation named: updateUsingTRACE_9
2019-05-16 22:37:24 -Generating unique operation named: addUsingGET_13
2019-05-16 22:37:24 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-16 22:37:24 -Generating unique operation named: editUsingGET_14
2019-05-16 22:37:24 -Generating unique operation named: listUsingGET_15
2019-05-16 22:37:24 -Generating unique operation named: saveUsingPOST_13
2019-05-16 22:37:24 -Generating unique operation named: saveUsingPOST_14
2019-05-16 22:37:24 -Generating unique operation named: updateUsingPOST_14
2019-05-16 22:37:24 -Generating unique operation named: listUsingGET_16
2019-05-16 22:37:24 -Generating unique operation named: listUsingHEAD_1
2019-05-16 22:37:24 -Generating unique operation named: listUsingPOST_1
2019-05-16 22:37:24 -Generating unique operation named: listUsingPUT_1
2019-05-16 22:37:24 -Generating unique operation named: listUsingPATCH_1
2019-05-16 22:37:24 -Generating unique operation named: listUsingDELETE_1
2019-05-16 22:37:24 -Generating unique operation named: listUsingOPTIONS_1
2019-05-16 22:37:24 -Generating unique operation named: listUsingTRACE_1
2019-05-16 22:37:24 -Generating unique operation named: countDDUsingGET_1
2019-05-16 22:37:24 -Generating unique operation named: exportDDUsingGET_1
2019-05-16 22:37:24 -Generating unique operation named: addUsingGET_14
2019-05-16 22:37:24 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-16 22:37:24 -Generating unique operation named: editUsingGET_15
2019-05-16 22:37:24 -Generating unique operation named: listUsingGET_17
2019-05-16 22:37:24 -Generating unique operation named: removeUsingPOST_26
2019-05-16 22:37:24 -Generating unique operation named: saveUsingPOST_15
2019-05-16 22:37:24 -Generating unique operation named: treeUsingGET_3
2019-05-16 22:37:24 -Generating unique operation named: treeViewUsingGET_1
2019-05-16 22:37:24 -Generating unique operation named: updateUsingPOST_15
2019-05-16 22:37:24 -Generating unique operation named: addUsingGET_15
2019-05-16 22:37:24 -Generating unique operation named: editUsingGET_16
2019-05-16 22:37:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-16 22:37:24 -Generating unique operation named: listUsingGET_18
2019-05-16 22:37:24 -Generating unique operation named: removeUsingPOST_27
2019-05-16 22:37:24 -Generating unique operation named: removeUsingPOST_28
2019-05-16 22:37:24 -Generating unique operation named: saveUsingPOST_16
2019-05-16 22:37:24 -Generating unique operation named: updateUsingGET_10
2019-05-16 22:37:24 -Generating unique operation named: updateUsingHEAD_10
2019-05-16 22:37:24 -Generating unique operation named: updateUsingPOST_16
2019-05-16 22:37:24 -Generating unique operation named: updateUsingPUT_10
2019-05-16 22:37:24 -Generating unique operation named: updateUsingPATCH_10
2019-05-16 22:37:24 -Generating unique operation named: updateUsingDELETE_10
2019-05-16 22:37:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-16 22:37:24 -Generating unique operation named: updateUsingTRACE_10
2019-05-16 22:37:24 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-16 22:37:24 -Generating unique operation named: addUsingGET_16
2019-05-16 22:37:24 -Generating unique operation named: editUsingGET_17
2019-05-16 22:37:24 -Generating unique operation named: listUsingGET_19
2019-05-16 22:37:24 -Generating unique operation named: removeUsingPOST_29
2019-05-16 22:37:24 -Generating unique operation named: removeUsingPOST_30
2019-05-16 22:37:24 -Generating unique operation named: saveUsingPOST_17
2019-05-16 22:37:24 -Generating unique operation named: updateUsingGET_11
2019-05-16 22:37:24 -Generating unique operation named: updateUsingHEAD_11
2019-05-16 22:37:24 -Generating unique operation named: updateUsingPOST_17
2019-05-16 22:37:24 -Generating unique operation named: updateUsingPUT_11
2019-05-16 22:37:24 -Generating unique operation named: updateUsingPATCH_11
2019-05-16 22:37:24 -Generating unique operation named: updateUsingDELETE_11
2019-05-16 22:37:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-16 22:37:24 -Generating unique operation named: updateUsingTRACE_11
2019-05-16 22:37:24 -Generating unique operation named: addUsingGET_17
2019-05-16 22:37:24 -Generating unique operation named: editUsingGET_18
2019-05-16 22:37:24 -Generating unique operation named: listUsingGET_20
2019-05-16 22:37:24 -Generating unique operation named: removeUsingPOST_31
2019-05-16 22:37:24 -Generating unique operation named: removeUsingPOST_32
2019-05-16 22:37:24 -Generating unique operation named: saveUsingPOST_18
2019-05-16 22:37:24 -Generating unique operation named: updateUsingGET_12
2019-05-16 22:37:24 -Generating unique operation named: updateUsingHEAD_12
2019-05-16 22:37:24 -Generating unique operation named: updateUsingPOST_18
2019-05-16 22:37:24 -Generating unique operation named: updateUsingPUT_12
2019-05-16 22:37:24 -Generating unique operation named: updateUsingPATCH_12
2019-05-16 22:37:24 -Generating unique operation named: updateUsingDELETE_12
2019-05-16 22:37:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-16 22:37:24 -Generating unique operation named: updateUsingTRACE_12
2019-05-16 22:37:24 -Starting Quartz Scheduler now
2019-05-16 22:37:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-16 22:37:24 -Starting...
2019-05-16 22:37:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-16 22:37:24 -Started.
2019-05-16 22:37:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-16 22:37:24 -Using a shared selector for servlet write/read
2019-05-16 22:37:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-16 22:37:24 -Started BootdoApplication in 26.255 seconds (JVM running for 27.013)
2019-05-16 22:37:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-16 22:37:25 -==> Parameters: 
2019-05-16 22:37:25 -<==      Total: 1
2019-05-16 22:37:31 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-16 22:37:31 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-16 22:37:31 -FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-05-16 22:37:31 -Enabling session validation scheduler...
2019-05-16 22:37:31 -请求地址 : http://localhost:8081/login;JSESSIONID=63631f20-4476-4dd9-8943-b356535d9a91
2019-05-16 22:37:31 -HTTP METHOD : GET
2019-05-16 22:37:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-16 22:37:31 -参数 : [{}]
2019-05-16 22:37:31 -耗时 : 5
2019-05-16 22:37:31 -返回值 : login
2019-05-16 22:37:32 -请求地址 : http://localhost:8081/getVerify
2019-05-16 22:37:32 -HTTP METHOD : GET
2019-05-16 22:37:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-16 22:37:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7ea406d9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7c2bc7de]
2019-05-16 22:37:33 -9888
2019-05-16 22:37:33 -耗时 : 593
2019-05-16 22:37:33 -返回值 : null
2019-05-16 22:37:36 -请求地址 : http://localhost:8081/login
2019-05-16 22:37:36 -HTTP METHOD : POST
2019-05-16 22:37:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-16 22:37:36 -参数 : [admin, 111111, 9888, org.apache.shiro.web.servlet.ShiroHttpServletRequest@f5fe5a5]
2019-05-16 22:37:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-16 22:37:36 -==> Parameters: admin(String)
2019-05-16 22:37:36 -<==      Total: 1
2019-05-16 22:37:36 -耗时 : 306
2019-05-16 22:37:36 -返回值 : {msg=操作成功, code=0}
2019-05-16 22:37:36 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-16 22:37:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 22:37:36 -==> Parameters: 1(Long), admin(String), 登录(String), 307(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-16 22:37:36.831(Timestamp)
2019-05-16 22:37:36 -<==    Updates: 1
2019-05-16 22:37:36 -请求地址 : http://localhost:8081/index
2019-05-16 22:37:36 -HTTP METHOD : GET
2019-05-16 22:37:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-16 22:37:36 -参数 : [{}]
2019-05-16 22:37:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-16 22:37:37 -==> Parameters: 1(Long)
2019-05-16 22:37:37 -<==      Total: 49
2019-05-16 22:37:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-16 22:37:37 -==> Parameters: 138(Long)
2019-05-16 22:37:37 -<==      Total: 1
2019-05-16 22:37:37 -耗时 : 149
2019-05-16 22:37:37 -返回值 : index_v1
2019-05-16 22:37:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-16 22:37:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 149(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-16 22:37:37.115(Timestamp)
2019-05-16 22:37:37 -<==    Updates: 1
2019-05-16 22:37:37 -请求地址 : http://localhost:8081/main
2019-05-16 22:37:37 -HTTP METHOD : GET
2019-05-16 22:37:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 22:37:37 -参数 : []
2019-05-16 22:37:37 -耗时 : 1
2019-05-16 22:37:37 -返回值 : main
2019-05-16 22:37:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-16 22:37:37 -HTTP METHOD : GET
2019-05-16 22:37:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-16 22:37:37 -参数 : []
2019-05-16 22:37:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-16 22:37:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-16 22:37:37 -<==      Total: 0
2019-05-16 22:37:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-16 22:37:37 -==> Parameters: 1(Long), 0(String)
2019-05-16 22:37:37 -<==      Total: 1
2019-05-16 22:37:37 -耗时 : 34
2019-05-16 22:37:37 -返回值 : com.bootdo.common.utils.PageUtils@748ca0b5
2019-05-16 22:37:37 -请求地址 : http://localhost:8081/main
2019-05-16 22:37:37 -HTTP METHOD : GET
2019-05-16 22:37:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-16 22:37:37 -参数 : []
2019-05-16 22:37:37 -耗时 : 0
2019-05-16 22:37:37 -返回值 : main
2019-05-16 22:37:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-16 22:37:40 -==> Parameters: 1(Long)
2019-05-16 22:37:40 -<==      Total: 93
2019-05-16 22:37:40 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-16 22:37:40 -HTTP METHOD : GET
2019-05-16 22:37:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-16 22:37:40 -参数 : []
2019-05-16 22:37:40 -耗时 : 1
2019-05-16 22:37:40 -返回值 : elec/elecPrice/elecPrice
2019-05-16 22:37:40 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-16 22:37:40 -HTTP METHOD : GET
2019-05-16 22:37:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-16 22:37:40 -参数 : [{limit=10, offset=0}]
2019-05-16 22:37:40 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-16 22:37:40 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 22:37:40 -<==      Total: 2
2019-05-16 22:37:40 -==>  Preparing: select count(*) from elec_price 
2019-05-16 22:37:40 -==> Parameters: 
2019-05-16 22:37:40 -<==      Total: 1
2019-05-16 22:37:40 -耗时 : 32
2019-05-16 22:37:40 -返回值 : com.bootdo.common.utils.PageUtils@52a0d8d
2019-05-16 22:37:42 -请求地址 : http://localhost:8081/elec/elecPrice/edit/1
2019-05-16 22:37:42 -HTTP METHOD : GET
2019-05-16 22:37:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-05-16 22:37:42 -参数 : [1, {}]
2019-05-16 22:37:42 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price where id = ? 
2019-05-16 22:37:42 -==> Parameters: 1(Long)
2019-05-16 22:37:42 -<==      Total: 1
2019-05-16 22:37:42 -耗时 : 17
2019-05-16 22:37:42 -返回值 : elec/elecPrice/edit
2019-05-16 22:37:46 -请求地址 : http://localhost:8081/elec/elecPrice/update
2019-05-16 22:37:46 -HTTP METHOD : POST
2019-05-16 22:37:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.update
2019-05-16 22:37:46 -参数 : [com.bootdo.elec.domain.ElecPriceDO@1c5ad024]
2019-05-16 22:37:46 -==>  Preparing: update elec_price SET m_elec = ?, s_elec = ?, g1_elec = ?, g2_elec = ?, g3_elec = ?, wm_elec = ?, ws_elec = ?, wg_elec = ?, mm_elec = ?, ms_elec = ?, z_elec = ?, create_time = ?, create_by = ?, update_time = ? where id = ? 
2019-05-16 22:37:46 -==> Parameters: 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 0.465(BigDecimal), 0.400(BigDecimal), 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 0.465(BigDecimal), 0.810(BigDecimal), 0.970(BigDecimal), 2019-03(String), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long)
2019-05-16 22:37:46 -<==    Updates: 1
2019-05-16 22:37:46 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '1' 
2019-05-16 22:37:46 -==> Parameters: 0.465(BigDecimal), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:37:46 -<==    Updates: 1
2019-05-16 22:37:46 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '2' 
2019-05-16 22:37:46 -==> Parameters: 0.810(BigDecimal), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:37:46 -<==    Updates: 1
2019-05-16 22:37:46 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '3' 
2019-05-16 22:37:46 -==> Parameters: 0.970(BigDecimal), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:37:47 -<==    Updates: 1
2019-05-16 22:37:47 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '4' 
2019-05-16 22:37:47 -==> Parameters: 0.465(BigDecimal), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:37:47 -<==    Updates: 1
2019-05-16 22:37:47 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '5' 
2019-05-16 22:37:47 -==> Parameters: 0.400(BigDecimal), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:37:47 -<==    Updates: 1
2019-05-16 22:37:47 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '6' 
2019-05-16 22:37:47 -==> Parameters: 0.465(BigDecimal), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:37:47 -<==    Updates: 1
2019-05-16 22:37:47 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '7' 
2019-05-16 22:37:47 -==> Parameters: 0.810(BigDecimal), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:37:47 -<==    Updates: 1
2019-05-16 22:37:47 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '8' 
2019-05-16 22:37:47 -==> Parameters: 0.970(BigDecimal), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:37:47 -<==    Updates: 1
2019-05-16 22:37:47 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '9' 
2019-05-16 22:37:47 -==> Parameters: 0.465(BigDecimal), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:37:47 -<==    Updates: 1
2019-05-16 22:37:47 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '10' 
2019-05-16 22:37:47 -==> Parameters: 0.810(BigDecimal), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:37:47 -<==    Updates: 1
2019-05-16 22:37:47 -==>  Preparing: update elec SET `elec_price` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where `user_org` = ? and `create_time` = ? and `elec_type` = '11' 
2019-05-16 22:37:47 -==> Parameters: 0.970(BigDecimal), 1(Long), 2019-05-16 22:37:46.799(Timestamp), 1(Long), (String), 2(Long), 2019-03(String)
2019-05-16 22:37:47 -<==    Updates: 1
2019-05-16 22:37:47 -耗时 : 496
2019-05-16 22:37:47 -返回值 : {msg=操作成功, code=0}
2019-05-16 22:37:47 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-16 22:37:47 -HTTP METHOD : GET
2019-05-16 22:37:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-16 22:37:47 -参数 : [{limit=10, offset=0}]
2019-05-16 22:37:47 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-16 22:37:47 -==> Parameters: 0(Integer), 10(Integer)
2019-05-16 22:37:47 -<==      Total: 2
2019-05-16 22:37:47 -==>  Preparing: select count(*) from elec_price 
2019-05-16 22:37:47 -==> Parameters: 
2019-05-16 22:37:47 -<==      Total: 1
2019-05-16 22:37:47 -耗时 : 23
2019-05-16 22:37:47 -返回值 : com.bootdo.common.utils.PageUtils@14ad93d3
2019-05-16 22:37:50 -请求地址 : http://localhost:8081/elec/elecPrice/edit/1
2019-05-16 22:37:50 -HTTP METHOD : GET
2019-05-16 22:37:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-05-16 22:37:50 -参数 : [1, {}]
2019-05-16 22:37:50 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price where id = ? 
2019-05-16 22:37:50 -==> Parameters: 1(Long)
2019-05-16 22:37:50 -<==      Total: 1
2019-05-16 22:37:50 -耗时 : 8
2019-05-16 22:37:50 -返回值 : elec/elecPrice/edit
2019-05-16 22:38:18 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 10]

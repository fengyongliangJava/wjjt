2019-06-19 09:20:50 -Starting BootdoApplication on PC-201905091110 with PID 12252 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-19 09:20:50 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-19 09:20:50 -The following profiles are active: dev
2019-06-19 09:20:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c1bd0be: startup date [Wed Jun 19 09:20:50 CST 2019]; root of context hierarchy
2019-06-19 09:20:58 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-19 09:21:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$661fca56] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 09:21:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5878f8fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 09:21:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 09:21:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 09:21:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 09:21:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-19 09:21:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-19 09:21:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 09:21:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 09:21:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 09:21:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 09:21:06 -Tomcat initialized with port(s): 8081 (http)
2019-06-19 09:21:06 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-19 09:21:06 -Starting service [Tomcat]
2019-06-19 09:21:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-19 09:21:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-19 09:21:07 -Initializing Spring embedded WebApplicationContext
2019-06-19 09:21:07 -Root WebApplicationContext: initialization completed in 17030 ms
2019-06-19 09:21:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-19 09:21:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-19 09:21:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-19 09:21:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-19 09:21:09 -Filter xssFilter was not registered (disabled)
2019-06-19 09:21:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-19 09:21:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-19 09:21:09 -Servlet statViewServlet mapped to [/druid/*]
2019-06-19 09:21:09 -Servlet dispatcherServlet mapped to [/]
2019-06-19 09:21:14 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c1bd0be: startup date [Wed Jun 19 09:20:50 CST 2019]; root of context hierarchy
2019-06-19 09:21:15 -Using default implementation for ThreadExecutor
2019-06-19 09:21:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-19 09:21:15 -Quartz Scheduler v.2.3.0 created.
2019-06-19 09:21:15 -RAMJobStore initialized.
2019-06-19 09:21:15 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-19 09:21:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-19 09:21:15 -Quartz scheduler version: 2.3.0
2019-06-19 09:21:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@35555145
2019-06-19 09:21:16 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-19 09:21:16 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-19 09:21:19 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-19 09:21:19 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 09:21:19 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 09:21:19 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-19 09:21:19 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-19 09:21:19 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-19 09:21:19 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 09:21:19 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-19 09:21:19 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-19 09:21:19 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 09:21:19 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-19 09:21:19 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 09:21:19 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-19 09:21:19 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-19 09:21:19 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-19 09:21:19 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-19 09:21:19 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 09:21:19 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-19 09:21:19 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-19 09:21:19 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 09:21:19 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-19 09:21:19 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-19 09:21:19 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-19 09:21:19 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-19 09:21:19 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-19 09:21:19 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-19 09:21:19 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-19 09:21:19 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-19 09:21:19 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:19 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-19 09:21:19 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-19 09:21:19 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:19 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-19 09:21:19 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-19 09:21:19 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-19 09:21:19 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-19 09:21:19 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-19 09:21:19 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-19 09:21:19 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-19 09:21:19 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:19 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-19 09:21:19 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-19 09:21:19 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:19 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-19 09:21:19 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-19 09:21:19 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:19 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-19 09:21:19 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-19 09:21:19 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-19 09:21:19 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-19 09:21:19 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-19 09:21:19 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-19 09:21:19 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-19 09:21:19 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-19 09:21:19 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-19 09:21:19 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:19 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-19 09:21:19 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-19 09:21:19 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-19 09:21:19 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-19 09:21:19 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:19 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-19 09:21:19 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-19 09:21:19 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:19 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-19 09:21:19 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-19 09:21:19 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-19 09:21:19 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:19 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-19 09:21:20 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-19 09:21:20 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-19 09:21:20 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-19 09:21:20 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-19 09:21:20 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-19 09:21:20 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-19 09:21:20 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-19 09:21:20 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-19 09:21:20 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-19 09:21:20 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-19 09:21:20 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-19 09:21:20 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 09:21:20 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-19 09:21:20 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-19 09:21:20 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-19 09:21:20 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-19 09:21:20 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-19 09:21:20 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-19 09:21:20 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-19 09:21:20 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-19 09:21:20 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-19 09:21:20 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-19 09:21:20 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-19 09:21:20 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-19 09:21:20 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-19 09:21:20 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-19 09:21:20 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 09:21:20 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-19 09:21:20 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-19 09:21:20 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-19 09:21:20 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-19 09:21:20 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-19 09:21:20 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-19 09:21:20 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 09:21:20 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-19 09:21:20 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 09:21:20 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 09:21:20 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-19 09:21:20 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 09:21:20 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 09:21:20 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-19 09:21:20 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 09:21:20 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 09:21:20 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-19 09:21:20 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-19 09:21:20 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-19 09:21:20 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-19 09:21:20 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-19 09:21:20 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-19 09:21:20 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-19 09:21:20 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-19 09:21:20 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-19 09:21:20 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-19 09:21:20 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-19 09:21:20 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-19 09:21:20 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-19 09:21:20 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-19 09:21:20 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-19 09:21:20 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-19 09:21:20 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-19 09:21:20 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-19 09:21:20 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-19 09:21:20 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-19 09:21:20 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-19 09:21:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-19 09:21:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-19 09:21:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-19 09:21:20 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-19 09:21:20 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-19 09:21:20 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-19 09:21:20 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-19 09:21:20 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-19 09:21:20 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-19 09:21:20 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-19 09:21:20 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-19 09:21:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-19 09:21:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-19 09:21:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-19 09:21:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-19 09:21:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-19 09:21:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-19 09:21:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-19 09:21:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-19 09:21:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-19 09:21:20 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-19 09:21:20 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-19 09:21:20 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-19 09:21:20 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-19 09:21:20 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-19 09:21:20 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-19 09:21:20 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-19 09:21:20 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-19 09:21:20 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-19 09:21:20 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-19 09:21:20 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 09:21:20 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-19 09:21:20 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-19 09:21:20 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 09:21:20 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 09:21:20 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-19 09:21:20 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 09:21:20 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-19 09:21:20 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-19 09:21:20 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-19 09:21:20 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-19 09:21:20 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-19 09:21:20 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-19 09:21:21 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-19 09:21:21 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-19 09:21:21 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-19 09:21:22 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@c1bd0be: startup date [Wed Jun 19 09:20:50 CST 2019]; root of context hierarchy
2019-06-19 09:21:22 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-19 09:21:22 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-19 09:21:22 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-19 09:21:22 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-19 09:21:26 -Registering beans for JMX exposure on startup
2019-06-19 09:21:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-19 09:21:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-19 09:21:26 -Starting beans in phase 2147483647
2019-06-19 09:21:26 -Context refreshed
2019-06-19 09:21:26 -Found 1 custom documentation plugin(s)
2019-06-19 09:21:26 -Scanning for api listing references
2019-06-19 09:21:27 -Generating unique operation named: removeUsingPOST_1
2019-06-19 09:21:27 -Generating unique operation named: addUsingGET_1
2019-06-19 09:21:27 -Generating unique operation named: editUsingGET_1
2019-06-19 09:21:27 -Generating unique operation named: listUsingGET_1
2019-06-19 09:21:27 -Generating unique operation named: removeUsingPOST_2
2019-06-19 09:21:27 -Generating unique operation named: removeUsingPOST_3
2019-06-19 09:21:27 -Generating unique operation named: saveUsingPOST_1
2019-06-19 09:21:27 -Generating unique operation named: updateUsingGET_1
2019-06-19 09:21:27 -Generating unique operation named: updateUsingHEAD_1
2019-06-19 09:21:27 -Generating unique operation named: updateUsingPOST_1
2019-06-19 09:21:27 -Generating unique operation named: updateUsingPUT_1
2019-06-19 09:21:27 -Generating unique operation named: updateUsingPATCH_1
2019-06-19 09:21:27 -Generating unique operation named: updateUsingDELETE_1
2019-06-19 09:21:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-19 09:21:27 -Generating unique operation named: updateUsingTRACE_1
2019-06-19 09:21:27 -Generating unique operation named: addUsingGET_2
2019-06-19 09:21:27 -Generating unique operation named: editUsingGET_2
2019-06-19 09:21:27 -Generating unique operation named: listUsingGET_2
2019-06-19 09:21:27 -Generating unique operation named: removeUsingPOST_4
2019-06-19 09:21:27 -Generating unique operation named: removeUsingPOST_5
2019-06-19 09:21:27 -Generating unique operation named: saveUsingPOST_2
2019-06-19 09:21:27 -Generating unique operation named: updateUsingPOST_2
2019-06-19 09:21:27 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-19 09:21:27 -Generating unique operation named: addUsingGET_3
2019-06-19 09:21:27 -Generating unique operation named: editUsingGET_3
2019-06-19 09:21:27 -Generating unique operation named: listUsingGET_3
2019-06-19 09:21:27 -Generating unique operation named: removeUsingPOST_6
2019-06-19 09:21:27 -Generating unique operation named: removeUsingPOST_7
2019-06-19 09:21:27 -Generating unique operation named: saveUsingPOST_3
2019-06-19 09:21:27 -Generating unique operation named: updateUsingGET_2
2019-06-19 09:21:27 -Generating unique operation named: updateUsingHEAD_2
2019-06-19 09:21:27 -Generating unique operation named: updateUsingPOST_3
2019-06-19 09:21:27 -Generating unique operation named: updateUsingPUT_2
2019-06-19 09:21:27 -Generating unique operation named: updateUsingPATCH_2
2019-06-19 09:21:27 -Generating unique operation named: updateUsingDELETE_2
2019-06-19 09:21:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-19 09:21:27 -Generating unique operation named: updateUsingTRACE_2
2019-06-19 09:21:27 -Generating unique operation named: addUsingGET_4
2019-06-19 09:21:27 -Generating unique operation named: editUsingGET_4
2019-06-19 09:21:27 -Generating unique operation named: listUsingGET_4
2019-06-19 09:21:27 -Generating unique operation named: removeUsingPOST_8
2019-06-19 09:21:27 -Generating unique operation named: removeUsingPOST_9
2019-06-19 09:21:27 -Generating unique operation named: saveUsingPOST_4
2019-06-19 09:21:27 -Generating unique operation named: updateUsingGET_3
2019-06-19 09:21:27 -Generating unique operation named: updateUsingHEAD_3
2019-06-19 09:21:27 -Generating unique operation named: updateUsingPOST_4
2019-06-19 09:21:27 -Generating unique operation named: updateUsingPUT_3
2019-06-19 09:21:27 -Generating unique operation named: updateUsingPATCH_3
2019-06-19 09:21:27 -Generating unique operation named: updateUsingDELETE_3
2019-06-19 09:21:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-19 09:21:28 -Generating unique operation named: updateUsingTRACE_3
2019-06-19 09:21:28 -Generating unique operation named: ElecUsingGET_1
2019-06-19 09:21:28 -Generating unique operation named: addUsingGET_5
2019-06-19 09:21:28 -Generating unique operation named: editUsingGET_5
2019-06-19 09:21:28 -Generating unique operation named: listUsingGET_5
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_10
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_11
2019-06-19 09:21:28 -Generating unique operation named: saveUsingPOST_5
2019-06-19 09:21:28 -Generating unique operation named: updateUsingGET_4
2019-06-19 09:21:28 -Generating unique operation named: updateUsingHEAD_4
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPOST_5
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPUT_4
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPATCH_4
2019-06-19 09:21:28 -Generating unique operation named: updateUsingDELETE_4
2019-06-19 09:21:28 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-19 09:21:28 -Generating unique operation named: updateUsingTRACE_4
2019-06-19 09:21:28 -Generating unique operation named: editUsingGET_6
2019-06-19 09:21:28 -Generating unique operation named: listUsingGET_6
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPOST_6
2019-06-19 09:21:28 -Generating unique operation named: addUsingGET_6
2019-06-19 09:21:28 -Generating unique operation named: editUsingGET_7
2019-06-19 09:21:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-19 09:21:28 -Generating unique operation named: listUsingGET_7
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_12
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_13
2019-06-19 09:21:28 -Generating unique operation named: saveUsingPOST_6
2019-06-19 09:21:28 -Generating unique operation named: updateUsingGET_5
2019-06-19 09:21:28 -Generating unique operation named: updateUsingHEAD_5
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPOST_7
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPUT_5
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPATCH_5
2019-06-19 09:21:28 -Generating unique operation named: updateUsingDELETE_5
2019-06-19 09:21:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-19 09:21:28 -Generating unique operation named: updateUsingTRACE_5
2019-06-19 09:21:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-19 09:21:28 -Generating unique operation named: addUsingGET_7
2019-06-19 09:21:28 -Generating unique operation named: editUsingGET_8
2019-06-19 09:21:28 -Generating unique operation named: listUsingGET_8
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_14
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_15
2019-06-19 09:21:28 -Generating unique operation named: saveUsingPOST_7
2019-06-19 09:21:28 -Generating unique operation named: updateUsingGET_6
2019-06-19 09:21:28 -Generating unique operation named: updateUsingHEAD_6
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPOST_8
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPUT_6
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPATCH_6
2019-06-19 09:21:28 -Generating unique operation named: updateUsingDELETE_6
2019-06-19 09:21:28 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-19 09:21:28 -Generating unique operation named: updateUsingTRACE_6
2019-06-19 09:21:28 -Generating unique operation named: addUsingGET_8
2019-06-19 09:21:28 -Generating unique operation named: editUsingGET_9
2019-06-19 09:21:28 -Generating unique operation named: listUsingGET_9
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_16
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_17
2019-06-19 09:21:28 -Generating unique operation named: saveUsingPOST_8
2019-06-19 09:21:28 -Generating unique operation named: updateUsingGET_7
2019-06-19 09:21:28 -Generating unique operation named: updateUsingHEAD_7
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPOST_9
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPUT_7
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPATCH_7
2019-06-19 09:21:28 -Generating unique operation named: updateUsingDELETE_7
2019-06-19 09:21:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-19 09:21:28 -Generating unique operation named: updateUsingTRACE_7
2019-06-19 09:21:28 -Generating unique operation named: addUsingGET_9
2019-06-19 09:21:28 -Generating unique operation named: editUsingGET_10
2019-06-19 09:21:28 -Generating unique operation named: infoUsingGET_1
2019-06-19 09:21:28 -Generating unique operation named: infoUsingHEAD_1
2019-06-19 09:21:28 -Generating unique operation named: infoUsingPOST_1
2019-06-19 09:21:28 -Generating unique operation named: infoUsingPUT_1
2019-06-19 09:21:28 -Generating unique operation named: infoUsingPATCH_1
2019-06-19 09:21:28 -Generating unique operation named: infoUsingDELETE_1
2019-06-19 09:21:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-19 09:21:28 -Generating unique operation named: infoUsingTRACE_1
2019-06-19 09:21:28 -Generating unique operation named: listUsingGET_10
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_18
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_19
2019-06-19 09:21:28 -Generating unique operation named: saveUsingPOST_9
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPOST_10
2019-06-19 09:21:28 -Generating unique operation named: listUsingGET_11
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_20
2019-06-19 09:21:28 -Generating unique operation named: welcomeUsingGET_1
2019-06-19 09:21:28 -Generating unique operation named: addUsingGET_10
2019-06-19 09:21:28 -Generating unique operation named: editUsingGET_11
2019-06-19 09:21:28 -Generating unique operation named: listUsingGET_12
2019-06-19 09:21:28 -Generating unique operation named: removeUsingPOST_21
2019-06-19 09:21:28 -Generating unique operation named: saveUsingPOST_10
2019-06-19 09:21:28 -Generating unique operation named: treeUsingGET_1
2019-06-19 09:21:28 -Generating unique operation named: treeUsingGET_2
2019-06-19 09:21:28 -Generating unique operation named: updateUsingPOST_11
2019-06-19 09:21:28 -Generating unique operation named: addUsingGET_11
2019-06-19 09:21:28 -Generating unique operation named: editUsingGET_12
2019-06-19 09:21:29 -Generating unique operation named: listUsingGET_13
2019-06-19 09:21:29 -Generating unique operation named: removeUsingPOST_22
2019-06-19 09:21:29 -Generating unique operation named: removeUsingPOST_23
2019-06-19 09:21:29 -Generating unique operation named: updateUsingPOST_12
2019-06-19 09:21:29 -Generating unique operation named: addUsingGET_12
2019-06-19 09:21:29 -Generating unique operation named: editUsingGET_13
2019-06-19 09:21:29 -Generating unique operation named: listUsingGET_14
2019-06-19 09:21:29 -Generating unique operation named: removeUsingPOST_24
2019-06-19 09:21:29 -Generating unique operation named: removeUsingPOST_25
2019-06-19 09:21:29 -Generating unique operation named: saveUsingPOST_11
2019-06-19 09:21:29 -Generating unique operation named: updateUsingGET_8
2019-06-19 09:21:29 -Generating unique operation named: updateUsingHEAD_8
2019-06-19 09:21:29 -Generating unique operation named: updateUsingPOST_13
2019-06-19 09:21:29 -Generating unique operation named: updateUsingPUT_8
2019-06-19 09:21:29 -Generating unique operation named: updateUsingPATCH_8
2019-06-19 09:21:29 -Generating unique operation named: updateUsingDELETE_8
2019-06-19 09:21:29 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-19 09:21:29 -Generating unique operation named: updateUsingTRACE_8
2019-06-19 09:21:29 -Generating unique operation named: addUsingGET_13
2019-06-19 09:21:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-19 09:21:29 -Generating unique operation named: editUsingGET_14
2019-06-19 09:21:29 -Generating unique operation named: listUsingGET_15
2019-06-19 09:21:29 -Generating unique operation named: printEditUsingGET_1
2019-06-19 09:21:29 -Generating unique operation named: removeUsingPOST_26
2019-06-19 09:21:29 -Generating unique operation named: saveUsingPOST_12
2019-06-19 09:21:29 -Generating unique operation named: updateUsingGET_9
2019-06-19 09:21:29 -Generating unique operation named: updateUsingHEAD_9
2019-06-19 09:21:29 -Generating unique operation named: updateUsingPOST_14
2019-06-19 09:21:29 -Generating unique operation named: updateUsingPUT_9
2019-06-19 09:21:29 -Generating unique operation named: updateUsingPATCH_9
2019-06-19 09:21:29 -Generating unique operation named: updateUsingDELETE_9
2019-06-19 09:21:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-19 09:21:29 -Generating unique operation named: updateUsingTRACE_9
2019-06-19 09:21:29 -Generating unique operation named: addUsingGET_14
2019-06-19 09:21:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-19 09:21:29 -Generating unique operation named: editUsingGET_15
2019-06-19 09:21:29 -Generating unique operation named: listUsingGET_16
2019-06-19 09:21:29 -Generating unique operation named: saveUsingPOST_13
2019-06-19 09:21:29 -Generating unique operation named: saveUsingPOST_14
2019-06-19 09:21:29 -Generating unique operation named: updateUsingPOST_15
2019-06-19 09:21:29 -Generating unique operation named: listUsingGET_17
2019-06-19 09:21:29 -Generating unique operation named: listUsingHEAD_1
2019-06-19 09:21:29 -Generating unique operation named: listUsingPOST_1
2019-06-19 09:21:29 -Generating unique operation named: listUsingPUT_1
2019-06-19 09:21:29 -Generating unique operation named: listUsingPATCH_1
2019-06-19 09:21:29 -Generating unique operation named: listUsingDELETE_1
2019-06-19 09:21:29 -Generating unique operation named: listUsingOPTIONS_1
2019-06-19 09:21:29 -Generating unique operation named: listUsingTRACE_1
2019-06-19 09:21:29 -Generating unique operation named: countDDUsingGET_1
2019-06-19 09:21:29 -Generating unique operation named: exportDDUsingGET_1
2019-06-19 09:21:29 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-19 09:21:29 -Generating unique operation named: addUsingGET_15
2019-06-19 09:21:29 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-19 09:21:29 -Generating unique operation named: editUsingGET_16
2019-06-19 09:21:29 -Generating unique operation named: listUsingGET_18
2019-06-19 09:21:29 -Generating unique operation named: removeUsingPOST_27
2019-06-19 09:21:29 -Generating unique operation named: saveUsingPOST_15
2019-06-19 09:21:29 -Generating unique operation named: treeUsingGET_3
2019-06-19 09:21:29 -Generating unique operation named: treeViewUsingGET_1
2019-06-19 09:21:29 -Generating unique operation named: updateUsingPOST_16
2019-06-19 09:21:30 -Generating unique operation named: addUsingGET_16
2019-06-19 09:21:30 -Generating unique operation named: editUsingGET_17
2019-06-19 09:21:30 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-19 09:21:30 -Generating unique operation named: listUsingGET_19
2019-06-19 09:21:30 -Generating unique operation named: removeUsingPOST_28
2019-06-19 09:21:30 -Generating unique operation named: removeUsingPOST_29
2019-06-19 09:21:30 -Generating unique operation named: saveUsingPOST_16
2019-06-19 09:21:30 -Generating unique operation named: updateUsingGET_10
2019-06-19 09:21:30 -Generating unique operation named: updateUsingHEAD_10
2019-06-19 09:21:30 -Generating unique operation named: updateUsingPOST_17
2019-06-19 09:21:30 -Generating unique operation named: updateUsingPUT_10
2019-06-19 09:21:30 -Generating unique operation named: updateUsingPATCH_10
2019-06-19 09:21:30 -Generating unique operation named: updateUsingDELETE_10
2019-06-19 09:21:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-19 09:21:30 -Generating unique operation named: updateUsingTRACE_10
2019-06-19 09:21:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-19 09:21:30 -Generating unique operation named: addUsingGET_17
2019-06-19 09:21:30 -Generating unique operation named: editUsingGET_18
2019-06-19 09:21:30 -Generating unique operation named: listUsingGET_20
2019-06-19 09:21:30 -Generating unique operation named: removeUsingPOST_30
2019-06-19 09:21:30 -Generating unique operation named: removeUsingPOST_31
2019-06-19 09:21:30 -Generating unique operation named: saveUsingPOST_17
2019-06-19 09:21:30 -Generating unique operation named: updateUsingGET_11
2019-06-19 09:21:30 -Generating unique operation named: updateUsingHEAD_11
2019-06-19 09:21:30 -Generating unique operation named: updateUsingPOST_18
2019-06-19 09:21:30 -Generating unique operation named: updateUsingPUT_11
2019-06-19 09:21:30 -Generating unique operation named: updateUsingPATCH_11
2019-06-19 09:21:30 -Generating unique operation named: updateUsingDELETE_11
2019-06-19 09:21:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-19 09:21:30 -Generating unique operation named: updateUsingTRACE_11
2019-06-19 09:21:30 -Generating unique operation named: addUsingGET_18
2019-06-19 09:21:30 -Generating unique operation named: editUsingGET_19
2019-06-19 09:21:30 -Generating unique operation named: listUsingGET_21
2019-06-19 09:21:30 -Generating unique operation named: removeUsingPOST_32
2019-06-19 09:21:30 -Generating unique operation named: removeUsingPOST_33
2019-06-19 09:21:30 -Generating unique operation named: saveUsingPOST_18
2019-06-19 09:21:30 -Generating unique operation named: updateUsingGET_12
2019-06-19 09:21:30 -Generating unique operation named: updateUsingHEAD_12
2019-06-19 09:21:30 -Generating unique operation named: updateUsingPOST_19
2019-06-19 09:21:30 -Generating unique operation named: updateUsingPUT_12
2019-06-19 09:21:30 -Generating unique operation named: updateUsingPATCH_12
2019-06-19 09:21:30 -Generating unique operation named: updateUsingDELETE_12
2019-06-19 09:21:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-19 09:21:30 -Generating unique operation named: updateUsingTRACE_12
2019-06-19 09:21:30 -Starting Quartz Scheduler now
2019-06-19 09:21:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-19 09:21:30 -Starting...
2019-06-19 09:21:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-19 09:21:30 -Started.
2019-06-19 09:21:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-19 09:21:30 -Using a shared selector for servlet write/read
2019-06-19 09:21:31 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-19 09:21:31 -Started BootdoApplication in 47.14 seconds (JVM running for 48.67)
2019-06-19 09:21:31 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-19 09:21:31 -==> Parameters: 
2019-06-19 09:21:31 -<==      Total: 1
2019-06-19 09:22:21 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-19 09:23:00 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-19 09:23:00 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-19 09:23:00 -FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2019-06-19 09:23:01 -Enabling session validation scheduler...
2019-06-19 09:23:02 -请求地址 : http://localhost:8081/login;JSESSIONID=356cc6f1-a53e-4ba3-a5dd-7200a68c45f0
2019-06-19 09:23:02 -HTTP METHOD : GET
2019-06-19 09:23:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 09:23:02 -参数 : [{}]
2019-06-19 09:23:02 -耗时 : 5
2019-06-19 09:23:02 -返回值 : login
2019-06-19 09:23:17 -请求地址 : http://localhost:8081/login;JSESSIONID=356cc6f1-a53e-4ba3-a5dd-7200a68c45f0
2019-06-19 09:23:17 -HTTP METHOD : GET
2019-06-19 09:23:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 09:23:17 -参数 : [{}]
2019-06-19 09:23:17 -耗时 : 0
2019-06-19 09:23:17 -返回值 : login
2019-06-19 09:23:18 -请求地址 : http://localhost:8081/getVerify
2019-06-19 09:23:18 -HTTP METHOD : GET
2019-06-19 09:23:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 09:23:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@469936c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1332b898]
2019-06-19 09:23:24 -6830
2019-06-19 09:23:24 -耗时 : 5937
2019-06-19 09:23:24 -返回值 : null
2019-06-19 09:23:29 -请求地址 : http://localhost:8081/login
2019-06-19 09:23:29 -HTTP METHOD : POST
2019-06-19 09:23:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 09:23:29 -参数 : [admin, 111111, 6830, org.apache.shiro.web.servlet.ShiroHttpServletRequest@12df2a0e]
2019-06-19 09:23:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 09:23:29 -==> Parameters: admin(String)
2019-06-19 09:23:29 -<==      Total: 1
2019-06-19 09:23:29 -耗时 : 297
2019-06-19 09:23:29 -返回值 : {msg=操作成功, code=0}
2019-06-19 09:23:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-19 09:23:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:23:30 -==> Parameters: 1(Long), admin(String), 登录(String), 297(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 09:23:30.028(Timestamp)
2019-06-19 09:23:30 -请求地址 : http://localhost:8081/index
2019-06-19 09:23:30 -HTTP METHOD : GET
2019-06-19 09:23:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 09:23:30 -参数 : [{}]
2019-06-19 09:23:30 -<==    Updates: 1
2019-06-19 09:23:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 09:23:30 -==> Parameters: 1(Long)
2019-06-19 09:23:30 -<==      Total: 51
2019-06-19 09:23:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 09:23:30 -==> Parameters: 138(Long)
2019-06-19 09:23:30 -<==      Total: 1
2019-06-19 09:23:30 -耗时 : 532
2019-06-19 09:23:30 -返回值 : index_v1
2019-06-19 09:23:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:23:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 532(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 09:23:30.896(Timestamp)
2019-06-19 09:23:30 -<==    Updates: 1
2019-06-19 09:23:31 -请求地址 : http://localhost:8081/main
2019-06-19 09:23:31 -HTTP METHOD : GET
2019-06-19 09:23:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 09:23:31 -参数 : []
2019-06-19 09:23:31 -耗时 : 0
2019-06-19 09:23:31 -返回值 : main
2019-06-19 09:23:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 09:23:34 -HTTP METHOD : GET
2019-06-19 09:23:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 09:23:34 -参数 : []
2019-06-19 09:23:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 09:23:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 09:23:35 -<==      Total: 0
2019-06-19 09:23:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 09:23:35 -==> Parameters: 1(Long), 0(String)
2019-06-19 09:23:35 -<==      Total: 1
2019-06-19 09:23:35 -耗时 : 100
2019-06-19 09:23:35 -返回值 : com.bootdo.common.utils.PageUtils@1114cda8
2019-06-19 09:23:35 -请求地址 : http://localhost:8081/main
2019-06-19 09:23:35 -HTTP METHOD : GET
2019-06-19 09:23:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 09:23:35 -参数 : []
2019-06-19 09:23:35 -耗时 : 3
2019-06-19 09:23:35 -返回值 : main
2019-06-19 09:23:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 09:23:42 -==> Parameters: 1(Long)
2019-06-19 09:23:42 -<==      Total: 95
2019-06-19 09:23:44 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 09:23:44 -HTTP METHOD : GET
2019-06-19 09:23:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 09:23:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:23:44 -HTTP METHOD : GET
2019-06-19 09:23:44 -参数 : [elecType]
2019-06-19 09:23:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:23:44 -参数 : [userType]
2019-06-19 09:23:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:23:44 -==> Parameters: elecType(String)
2019-06-19 09:23:44 -<==      Total: 11
2019-06-19 09:23:44 -耗时 : 45
2019-06-19 09:23:44 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:23:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:23:44 -==> Parameters: userType(String)
2019-06-19 09:23:44 -<==      Total: 4
2019-06-19 09:23:44 -耗时 : 51
2019-06-19 09:23:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:24:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 09:24:02 -HTTP METHOD : GET
2019-06-19 09:24:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 09:24:02 -参数 : []
2019-06-19 09:24:02 -耗时 : 0
2019-06-19 09:24:02 -返回值 : system/dept/deptTree
2019-06-19 09:24:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 09:24:02 -HTTP METHOD : GET
2019-06-19 09:24:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 09:24:02 -参数 : []
2019-06-19 09:24:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 09:24:02 -==> Parameters: 
2019-06-19 09:24:02 -<==      Total: 3
2019-06-19 09:24:02 -耗时 : 19
2019-06-19 09:24:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 09:24:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:12 -==> Parameters: 1-0544(String), 李兴国(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-05-29 00:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.66(Timestamp), admin(String), null
2019-06-19 09:24:12 -<==    Updates: 1
2019-06-19 09:24:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:12 -==> Parameters: 3-0084(String), 张国(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-05-29 00:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.66(Timestamp), admin(String), null
2019-06-19 09:24:12 -<==    Updates: 1
2019-06-19 09:24:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:12 -==> Parameters: 3-0344(String), 孟凡良(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-05-29 00:00:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.66(Timestamp), admin(String), null
2019-06-19 09:24:12 -<==    Updates: 1
2019-06-19 09:24:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:12 -==> Parameters: 5-0218(String), 鸣达大药房二十二分店(String), A(String), 2(String), 2(String), 200(BigDecimal), 2019-05-29 00:00:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.66(Timestamp), admin(String), null
2019-06-19 09:24:12 -<==    Updates: 1
2019-06-19 09:24:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:12 -==> Parameters: 5-0185(String), 金鑫骨头馆(String), A(String), 2(String), 2(String), 300(BigDecimal), 2019-05-29 00:00:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.661(Timestamp), admin(String), null
2019-06-19 09:24:12 -<==    Updates: 1
2019-06-19 09:24:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:12 -==> Parameters: 3-0608(String), 吴成国(String), A(String), 2(String), 1(String), 139(BigDecimal), 2019-05-29 00:00:06.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.661(Timestamp), admin(String), null
2019-06-19 09:24:12 -<==    Updates: 1
2019-06-19 09:24:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:12 -==> Parameters: 3-0821(String), 新奇特(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-05-29 00:00:07.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.661(Timestamp), admin(String), null
2019-06-19 09:24:12 -<==    Updates: 1
2019-06-19 09:24:12 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:12 -==> Parameters: 1-0084(String), 宮跃富(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-05-29 00:00:08.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.661(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 4-0193(String), 刘双喜(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-05-29 00:00:09.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.661(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 1-0516(String), 张立彬(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-05-29 00:00:10.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.661(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 4-0496(String), 李焕全(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-05-29 00:00:11.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.661(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 3-0300(String), 卜玉柱(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-05-29 00:00:12.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.661(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 1-0301(String), 施淑荣(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-05-29 00:00:13.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.661(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 5-0476(String), 李华(String), A(String), 2(String), 2(String), 100(BigDecimal), 2019-05-29 00:00:14.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.662(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 4-0795(String), 李冬霜(String), A(String), 2(String), 1(String), 300(BigDecimal), 2019-05-29 00:00:15.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.662(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 3-0583(String), 宣淑立(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-05-29 00:00:16.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.662(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 3-0582(String), 王春仙(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-05-29 00:00:17.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.662(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 5-0254(String), 鑫达百货商店(String), A(String), 2(String), 2(String), 50(BigDecimal), 2019-05-29 00:00:18.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.662(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 5-0554(String), 鑫达百货商店(String), A(String), 2(String), 2(String), 300(BigDecimal), 2019-05-29 00:00:19.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.662(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 3-0572(String), 邹淑华(String), A(String), 2(String), 1(String), 63(BigDecimal), 2019-05-29 00:00:20.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.662(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 4-0424(String), 孙广庆(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-05-30 00:00:21.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.662(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 3-0322(String), 张艳琴(String), A(String), 2(String), 1(String), 150(BigDecimal), 2019-05-30 00:00:22.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.662(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 5-0380(String), 鑫一头牛烧烤(String), A(String), 2(String), 2(String), 500(BigDecimal), 2019-05-30 00:00:23.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.663(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 3-0321(String), 邹淑荣(String), A(String), 2(String), 1(String), 90(BigDecimal), 2019-05-30 00:00:24.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.663(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 5-0387(String), 食全酒美饭店(String), A(String), 2(String), 2(String), 500(BigDecimal), 2019-05-30 00:00:25.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.663(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 4-0787(String), 聂国胜(String), A(String), 2(String), 1(String), 300(BigDecimal), 2019-05-30 00:00:26.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.663(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 5-0512(String), 永顺肉食店(String), A(String), 2(String), 2(String), 1200(BigDecimal), 2019-05-30 00:00:27.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.663(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 4-0138(String), 佟焕文(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-05-30 00:00:28.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.663(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 5-0185(String), 金鑫骨头馆(String), A(String), 2(String), 2(String), 175.5(BigDecimal), 2019-05-30 00:00:29.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.663(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 4-0346(String), 李凤珍(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-05-30 00:00:30.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.663(Timestamp), admin(String), null
2019-06-19 09:24:13 -<==    Updates: 1
2019-06-19 09:24:13 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:13 -==> Parameters: 1-0512(String), 岳淑芳(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-05-30 00:00:31.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.663(Timestamp), admin(String), null
2019-06-19 09:24:14 -<==    Updates: 1
2019-06-19 09:24:14 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:14 -==> Parameters: 1-0118(String), 王立华(String), A(String), 2(String), 1(String), 280(BigDecimal), 2019-05-30 00:00:32.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.664(Timestamp), admin(String), null
2019-06-19 09:24:14 -<==    Updates: 1
2019-06-19 09:24:14 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:14 -==> Parameters: 4-0453(String), 左秀琴(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-05-31 00:00:33.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.664(Timestamp), admin(String), null
2019-06-19 09:24:14 -<==    Updates: 1
2019-06-19 09:24:14 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:14 -==> Parameters: 3-0241(String), 李爱国(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-05-31 00:00:34.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.664(Timestamp), admin(String), null
2019-06-19 09:24:14 -<==    Updates: 1
2019-06-19 09:24:14 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:14 -==> Parameters: 1-0372(String), 王维新(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-05-31 00:00:35.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.664(Timestamp), admin(String), null
2019-06-19 09:24:14 -<==    Updates: 1
2019-06-19 09:24:14 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:14 -==> Parameters: 1-0833(String), 徐国富(String), A(String), 2(String), 1(String), 522(BigDecimal), 2019-05-31 00:00:36.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.664(Timestamp), admin(String), null
2019-06-19 09:24:14 -<==    Updates: 1
2019-06-19 09:24:14 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:14 -==> Parameters: 4-0112(String), 李长生(String), A(String), 2(String), 1(String), 122(BigDecimal), 2019-05-31 00:00:37.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.664(Timestamp), admin(String), null
2019-06-19 09:24:14 -<==    Updates: 1
2019-06-19 09:24:14 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:14 -==> Parameters: 3-0131(String), 张万福(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-05-31 00:00:38.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.664(Timestamp), admin(String), null
2019-06-19 09:24:14 -<==    Updates: 1
2019-06-19 09:24:14 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:14 -==> Parameters: 3-0687(String), 赵贵发(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-05-31 00:00:39.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.664(Timestamp), admin(String), null
2019-06-19 09:24:14 -<==    Updates: 1
2019-06-19 09:24:14 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:14 -==> Parameters: 4-0429(String), 李建林(String), A(String), 2(String), 1(String), 400(BigDecimal), 2019-05-31 00:00:40.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.664(Timestamp), admin(String), null
2019-06-19 09:24:14 -<==    Updates: 1
2019-06-19 09:24:14 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:14 -==> Parameters: 5-0219(String), 刘晓全(String), A(String), 2(String), 2(String), 1000(BigDecimal), 2019-05-31 00:00:41.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.665(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 3-0037(String), 丁俊新(String), A(String), 2(String), 1(String), 189(BigDecimal), 2019-05-31 00:00:43.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.665(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 5-0196(String), 好运来排骨锅(String), A(String), 2(String), 2(String), 580(BigDecimal), 2019-05-31 00:00:44.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.665(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 5-0198(String), 清真牛羊肉店(String), A(String), 2(String), 2(String), 240(BigDecimal), 2019-05-31 00:00:45.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.665(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 4-0055(String), 罗洪星(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-05-31 00:00:46.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.665(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 4-0388(String), 曲陆贤(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-03 00:00:47.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.665(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 3-0802(String), 徐柱(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-03 00:00:48.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.665(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 4-0542(String), 苏香芹(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-03 00:00:49.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.665(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 3-0117(String), 霍延春(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-03 00:00:50.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.665(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 3-0540(String), 牛永岭(String), A(String), 2(String), 1(String), 30(BigDecimal), 2019-06-03 00:00:51.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.665(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 3-0531(String), 崔永芳(String), A(String), 2(String), 1(String), 110(BigDecimal), 2019-06-03 00:00:52.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.666(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 4-0103(String), 陈传印(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-03 00:00:53.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.666(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 5-0200(String), 伊人影视(String), A(String), 2(String), 2(String), 50(BigDecimal), 2019-06-03 00:00:54.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.666(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 2-0730(String), 宋光磊(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-03 00:00:55.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.666(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 3-0844(String), 宋文(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-03 00:00:56.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.666(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 3-0675(String), 王凤珍(String), C(String), 2(String), 1(String), 100(BigDecimal), 2019-06-03 00:00:57.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.666(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 4-0723(String), 田福臣(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-03 00:00:58.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.666(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 1-0276(String), 刘斌(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-03 00:00:59.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.666(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 3-0082(String), 朱淑琴(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-03 00:01:00.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.666(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 1-0433(String), 刘海波(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-03 08:00:10.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.667(Timestamp), admin(String), null
2019-06-19 09:24:15 -<==    Updates: 1
2019-06-19 09:24:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:15 -==> Parameters: 3-0288(String), 刘恩惠(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-03 08:00:11.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.667(Timestamp), admin(String), null
2019-06-19 09:24:16 -<==    Updates: 1
2019-06-19 09:24:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:16 -==> Parameters: 5-0374(String), 刘成旭(String), A(String), 2(String), 2(String), 60(BigDecimal), 2019-06-03 08:00:12.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.667(Timestamp), admin(String), null
2019-06-19 09:24:16 -<==    Updates: 1
2019-06-19 09:24:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:16 -==> Parameters: 5-0209(String), 金中天火锅(String), A(String), 2(String), 2(String), 460(BigDecimal), 2019-06-03 08:00:13.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.667(Timestamp), admin(String), null
2019-06-19 09:24:16 -<==    Updates: 1
2019-06-19 09:24:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:16 -==> Parameters: 2-0765(String), 王长顺(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-03 08:00:14.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.667(Timestamp), admin(String), null
2019-06-19 09:24:16 -<==    Updates: 1
2019-06-19 09:24:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:16 -==> Parameters: 1-0412(String), 樊俊彩(String), C(String), 2(String), 1(String), 100(BigDecimal), 2019-06-03 08:00:15.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.667(Timestamp), admin(String), null
2019-06-19 09:24:16 -<==    Updates: 1
2019-06-19 09:24:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:16 -==> Parameters: 5-0141(String), 银河洗浴(String), A(String), 2(String), 2(String), 69(BigDecimal), 2019-06-03 08:00:16.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.667(Timestamp), admin(String), null
2019-06-19 09:24:16 -<==    Updates: 1
2019-06-19 09:24:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:16 -==> Parameters: 3-0324(String), 李冰(String), C(String), 2(String), 1(String), 200(BigDecimal), 2019-06-03 08:00:17.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.668(Timestamp), admin(String), null
2019-06-19 09:24:16 -<==    Updates: 1
2019-06-19 09:24:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:16 -==> Parameters: 4-0367(String), 王明俊(String), A(String), 2(String), 1(String), 10(BigDecimal), 2019-06-03 08:00:18.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.668(Timestamp), admin(String), null
2019-06-19 09:24:16 -<==    Updates: 1
2019-06-19 09:24:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:16 -==> Parameters: 4-0363(String), 马振清(String), A(String), 2(String), 1(String), 170(BigDecimal), 2019-06-03 08:00:19.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.668(Timestamp), admin(String), null
2019-06-19 09:24:16 -<==    Updates: 1
2019-06-19 09:24:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:16 -==> Parameters: 4-0164(String), 杨居福(String), C(String), 2(String), 1(String), 200(BigDecimal), 2019-06-03 08:00:20.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.669(Timestamp), admin(String), null
2019-06-19 09:24:16 -<==    Updates: 1
2019-06-19 09:24:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:16 -==> Parameters: 4-0532(String), 刘占芬(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-03 08:00:21.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.669(Timestamp), admin(String), null
2019-06-19 09:24:16 -<==    Updates: 1
2019-06-19 09:24:16 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:16 -==> Parameters: 4-0195(String), 袁海峰(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-03 08:00:22.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.669(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 3-0059(String), 朱松华(String), A(String), 2(String), 1(String), 175(BigDecimal), 2019-06-03 08:00:23.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.669(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 5-0536(String), 盛达摩托车修理(String), A(String), 2(String), 2(String), 450(BigDecimal), 2019-06-03 08:00:24.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.669(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 5-0110(String), 盛达摩托车修理(String), A(String), 2(String), 2(String), 50(BigDecimal), 2019-06-03 08:00:25.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.669(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 4-0130(String), 常松(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-03 08:00:26.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.669(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 4-0741(String), 常松(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-03 08:00:27.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.669(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 4-0150(String), 王秀华(String), A(String), 2(String), 1(String), 70(BigDecimal), 2019-06-03 08:00:28.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.67(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 4-0434(String), 孙江(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-03 08:00:29.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.67(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 3-0151(String), 刘胜利(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-03 08:00:30.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.67(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 3-0537(String), 王立军(String), A(String), 2(String), 1(String), 300(BigDecimal), 2019-06-03 08:00:31.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.67(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 1-0026(String), 何海勇(String), A(String), 2(String), 1(String), 110(BigDecimal), 2019-06-03 08:00:32.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.67(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 3-0248(String), 吴齐俊(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-03 08:00:33.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.67(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 4-0392(String), 朱启海(String), A(String), 2(String), 1(String), 90(BigDecimal), 2019-06-03 08:00:34.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.67(Timestamp), admin(String), null
2019-06-19 09:24:17 -<==    Updates: 1
2019-06-19 09:24:17 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:17 -==> Parameters: 3-0328(String), 孙海玉(String), A(String), 2(String), 1(String), 366(BigDecimal), 2019-06-03 08:00:35.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.67(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 3-0684(String), 李延忠(String), A(String), 2(String), 1(String), 39(BigDecimal), 2019-06-03 08:00:36.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.67(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 3-0618(String), 宋跃斌(String), A(String), 2(String), 1(String), 95(BigDecimal), 2019-06-03 08:00:37.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.67(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 4-0389(String), 肖振华(String), A(String), 2(String), 1(String), 20(BigDecimal), 2019-06-03 08:00:38.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.67(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 5-0173(String), 不夜城（李建国）(String), C(String), 2(String), 2(String), 2157(BigDecimal), 2019-06-03 08:00:39.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.671(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 5-0173(String), 不夜城（李建国）(String), A(String), 2(String), 2(String), 200(BigDecimal), 2019-06-03 08:00:40.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.671(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 1-0864(String), 刘福廷(String), A(String), 2(String), 1(String), 147(BigDecimal), 2019-06-04 09:10:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.671(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 3-0128(String), 汤忠义(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-04 09:10:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.671(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 3-0259(String), 邹淑珍(String), A(String), 2(String), 1(String), 21(BigDecimal), 2019-06-04 09:10:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.671(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 3-0238(String), 高奎伟(String), A(String), 2(String), 1(String), 43(BigDecimal), 2019-06-04 09:10:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.671(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 3-0554(String), 梁成玉(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-04 09:10:06.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.671(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 4-0324(String), 张庆岗(String), A(String), 2(String), 1(String), 105(BigDecimal), 2019-06-04 09:10:07.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.671(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 4-0495(String), 杨国军(String), A(String), 2(String), 1(String), 170(BigDecimal), 2019-06-04 09:10:08.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.671(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 1-0162(String), 韩洪军(String), A(String), 2(String), 1(String), 40(BigDecimal), 2019-06-04 09:10:09.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.671(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 1-0752(String), 韩庆云(String), A(String), 2(String), 1(String), 340(BigDecimal), 2019-06-04 09:10:10.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.672(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 1-0645(String), 白树田(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-04 09:10:11.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.672(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 1-0076(String), 张艳琴(String), A(String), 2(String), 1(String), 40(BigDecimal), 2019-06-04 09:10:12.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.672(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 4-0270(String), 刘忠发(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-04 09:10:13.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.672(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 5-0195(String), 万吉烧烤(String), C(String), 2(String), 2(String), 700(BigDecimal), 2019-06-04 09:10:14.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.672(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 1-0055(String), 刘兴军(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-04 09:10:15.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.672(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 1-0056(String), 赵贵德(String), A(String), 2(String), 1(String), 300(BigDecimal), 2019-06-04 09:10:16.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.672(Timestamp), admin(String), null
2019-06-19 09:24:18 -<==    Updates: 1
2019-06-19 09:24:18 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:18 -==> Parameters: 1-0006(String), 付文广(String), A(String), 2(String), 1(String), 150(BigDecimal), 2019-06-04 09:10:17.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.672(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 4-0057(String), 王立国2(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-04 09:10:18.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.672(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 3-0539(String), 司玉芳(String), A(String), 2(String), 1(String), 140(BigDecimal), 2019-06-04 09:10:19.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.672(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 1-0079(String), 蔡玉迁(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-04 09:10:20.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.673(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 1-0220(String), 张焕(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-04 09:10:21.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.673(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 1-0684(String), 吴爱林(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-04 09:10:22.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.673(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 1-0559(String), 周雅贤(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-04 09:10:23.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.673(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 1-0789(String), 赵军(String), A(String), 2(String), 1(String), 300(BigDecimal), 2019-06-04 09:10:24.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.673(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 1-0395(String), 胡军(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-04 09:10:25.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.673(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 3-0573(String), 伦立新(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-05 09:30:06.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.673(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 1-0099(String), 刘新蒙(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-05 09:30:07.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.673(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 2-0021(String), 杨贺林(String), C(String), 2(String), 1(String), 100(BigDecimal), 2019-06-05 09:30:08.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.673(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 4-0246(String), 崔淑华(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-05 09:30:09.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.673(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 4-0386(String), 高晶(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-05 09:30:10.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.674(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 1-0168(String), 申振华(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-05 09:30:11.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.674(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 4-0625(String), 焦任秋(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-05 09:30:12.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.674(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 1-0311(String), 高秀明(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-05 09:30:13.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.674(Timestamp), admin(String), null
2019-06-19 09:24:19 -<==    Updates: 1
2019-06-19 09:24:19 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:19 -==> Parameters: 4-0458(String), 刘淑清(String), A(String), 2(String), 1(String), 240(BigDecimal), 2019-06-05 09:30:14.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.674(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 2-0744(String), 田永斌(String), A(String), 2(String), 1(String), 20(BigDecimal), 2019-06-05 09:30:15.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.674(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 3-0689(String), 田克军(String), A(String), 2(String), 1(String), 40(BigDecimal), 2019-06-05 09:30:16.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.674(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 1-0508(String), 刘老旦(String), A(String), 2(String), 1(String), 272(BigDecimal), 2019-06-05 09:30:17.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.674(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 2-0650(String), 张玉兰(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-05 09:30:18.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.674(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 1-0794(String), 马玉鲁(String), A(String), 2(String), 1(String), 150(BigDecimal), 2019-06-05 09:30:19.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.675(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 1-0057(String), 韩素琴(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-05 09:30:20.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.675(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 1-0606(String), 魏国琴(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-05 09:30:21.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.675(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 3-0294(String), 王洪林(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-05 09:30:22.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.675(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 1-0648(String), 朱洪银2(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-05 09:30:23.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.675(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 1-0007(String), 刘祥(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-05 09:30:24.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.677(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 1-0697(String), 孟凡军(String), A(String), 2(String), 1(String), 300(BigDecimal), 2019-06-05 09:30:25.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.677(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 2-0022(String), 李兴臣(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-05 09:30:26.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.677(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 1-0410(String), 张树印(String), A(String), 2(String), 1(String), 150(BigDecimal), 2019-06-05 09:30:27.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.677(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 1-0470(String), 张运田(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-05 09:30:28.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.677(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 1-0436(String), 张玉学(String), A(String), 2(String), 1(String), 490(BigDecimal), 2019-06-05 09:30:29.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.677(Timestamp), admin(String), null
2019-06-19 09:24:20 -<==    Updates: 1
2019-06-19 09:24:20 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:20 -==> Parameters: 5-0489(String), 居盛和旅店(String), A(String), 2(String), 2(String), 100(BigDecimal), 2019-06-05 09:30:30.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.677(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 1-0022(String), 王洪礼(String), A(String), 2(String), 1(String), 160(BigDecimal), 2019-06-05 09:30:31.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.677(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 2-0090(String), 刘建华(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-05 09:30:32.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.678(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 2-0069(String), 孙永生(String), A(String), 2(String), 1(String), 70(BigDecimal), 2019-06-05 09:30:33.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.678(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 3-0055(String), 孙长颖(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-05 09:30:34.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.678(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 1-0169(String), 郭占富(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-06 08:40:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.678(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 3-0488(String), 李俊海(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-06 08:40:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.678(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 3-0831(String), 贾春华(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-06 08:40:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.678(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 3-0152(String), 刘月修(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-06 08:40:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.678(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 2-0610(String), 刘爱民(String), A(String), 2(String), 1(String), 150(BigDecimal), 2019-06-06 08:40:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.678(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 3-0200(String), 侯永德(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-06 08:40:06.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.678(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 1-0419(String), 徐开林(String), A(String), 2(String), 1(String), 500(BigDecimal), 2019-06-06 08:40:07.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.679(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 5-0074(String), 香香饼店(String), A(String), 2(String), 2(String), 100(BigDecimal), 2019-06-06 08:40:08.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.679(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 1-0181(String), 赵国臣(String), C(String), 2(String), 1(String), 203(BigDecimal), 2019-06-06 08:40:09.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.679(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 3-0623(String), 马兆义(String), C(String), 2(String), 1(String), 200(BigDecimal), 2019-06-06 08:40:10.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.679(Timestamp), admin(String), null
2019-06-19 09:24:21 -<==    Updates: 1
2019-06-19 09:24:21 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:21 -==> Parameters: 3-0609(String), 候富年(String), C(String), 2(String), 1(String), 200(BigDecimal), 2019-06-06 08:40:11.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.679(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 3-0230(String), 王德明(String), A(String), 2(String), 1(String), 21(BigDecimal), 2019-06-06 08:40:12.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.679(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 4-0100(String), 候付民(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-06 08:40:13.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.679(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 3-0431(String), 范华2(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-06 08:40:14.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.679(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 1-0083(String), 刘占田(String), A(String), 2(String), 1(String), 128(BigDecimal), 2019-06-06 08:40:15.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.679(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 4-0399(String), 周双宁(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-06 08:40:16.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.68(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 1-0133(String), 韩长启(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-06 08:40:17.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.68(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 4-0343(String), 吴振(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-06 08:40:18.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.68(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 3-0504(String), 王广民(String), A(String), 2(String), 1(String), 150(BigDecimal), 2019-06-06 08:40:19.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.68(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 3-0465(String), 苏宝贵(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-06 08:40:20.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.68(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 4-0379(String), 李士芳(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-06 08:40:21.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.68(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 3-0062(String), 吕成友(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-06 08:40:22.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.68(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 3-0548(String), 郑国安(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-06 08:40:23.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.68(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 3-0518(String), 司文学(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-06 08:40:24.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.68(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 1-0236(String), 张华(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-06 08:40:25.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.681(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 5-0156(String), 黎明劳务中介(String), A(String), 2(String), 2(String), 243(BigDecimal), 2019-06-06 08:40:26.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.681(Timestamp), admin(String), null
2019-06-19 09:24:22 -<==    Updates: 1
2019-06-19 09:24:22 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:22 -==> Parameters: 3-0558(String), 高秀丽(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-06 08:40:27.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.681(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 4-0173(String), 潘立财(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-06 08:40:28.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.681(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 1-0429(String), 王风祥(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-10 09:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.681(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 1-0248(String), 闫淑云(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.681(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 3-0565(String), 刘永法(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.681(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 4-0163(String), 吴海(String), A(String), 2(String), 1(String), 8(BigDecimal), 2019-06-10 09:00:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.681(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 3-0326(String), 高茂盛(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-10 09:00:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.681(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 2-0481(String), 张建礼(String), A(String), 2(String), 1(String), 150(BigDecimal), 2019-06-10 09:00:06.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.681(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 1-0277(String), 潘霞(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:07.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.682(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 2-0792(String), 王久富(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-10 09:00:08.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.682(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 5-0009(String), 众康药店(String), A(String), 2(String), 3(String), 248(BigDecimal), 2019-06-10 09:00:09.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.682(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 5-0528(String), 众康药店（民改商）(String), A(String), 2(String), 3(String), 12(BigDecimal), 2019-06-10 09:00:10.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.682(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 1-0542(String), 马婷(String), A(String), 2(String), 1(String), 150(BigDecimal), 2019-06-10 09:00:11.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.682(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 3-0889(String), 老三狗肉馆(String), A(String), 2(String), 1(String), 260(BigDecimal), 2019-06-10 09:00:12.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.682(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 4-0442(String), 徐洪明(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-10 09:00:13.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.682(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 4-0548(String), 郭洪彬(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-10 09:00:14.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.682(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 4-0777(String), 潘丽友(String), A(String), 2(String), 1(String), 1700(BigDecimal), 2019-06-10 09:00:15.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.682(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 3-0309(String), 历玉荣(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:16.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.682(Timestamp), admin(String), null
2019-06-19 09:24:23 -<==    Updates: 1
2019-06-19 09:24:23 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:23 -==> Parameters: 3-0270(String), 王国臣(String), A(String), 2(String), 1(String), 140(BigDecimal), 2019-06-10 09:00:17.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.683(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 1-0078(String), 徐相军(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-10 09:00:18.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.683(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 3-0351(String), 母井怀(String), A(String), 2(String), 1(String), 128(BigDecimal), 2019-06-10 09:00:19.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.683(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 3-0647(String), 母玉新(String), A(String), 2(String), 1(String), 72(BigDecimal), 2019-06-10 09:00:20.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.683(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 5-0159(String), 鑫云商店(String), C(String), 2(String), 2(String), 200(BigDecimal), 2019-06-10 09:00:21.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.683(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 3-0132(String), 李永新(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:22.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.683(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 5-0457(String), 姐妹早餐(String), A(String), 2(String), 2(String), 530(BigDecimal), 2019-06-10 09:00:23.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.683(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 3-0016(String), 苑传武(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:24.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.683(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 5-0560(String), 沸腾久久大铁锅(String), A(String), 2(String), 1(String), 250(BigDecimal), 2019-06-10 09:00:25.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.683(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 3-0665(String), 常桂平(String), C(String), 2(String), 1(String), 200(BigDecimal), 2019-06-10 09:00:26.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.683(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 3-0677(String), 国振福(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:27.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.684(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 2-0498(String), 秦坤(String), A(String), 2(String), 1(String), 35(BigDecimal), 2019-06-10 09:00:28.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.684(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 3-0330(String), 吕继成(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-10 09:00:29.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.684(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 3-0113(String), 于国臣(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:30.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.684(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 1-0460(String), 宋淑珍(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:31.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.684(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 3-0620(String), 邱洪全(String), C(String), 2(String), 1(String), 300(BigDecimal), 2019-06-10 09:00:32.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.684(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 3-0563(String), 刘红丽(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:33.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.684(Timestamp), admin(String), null
2019-06-19 09:24:24 -<==    Updates: 1
2019-06-19 09:24:24 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:24 -==> Parameters: 4-0285(String), 陈海彬(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:34.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.684(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 3-0827(String), 孙会彬(String), C(String), 2(String), 1(String), 110(BigDecimal), 2019-06-10 09:00:35.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.684(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 2-0761(String), 张兴胜(String), A(String), 2(String), 1(String), 150(BigDecimal), 2019-06-10 09:00:36.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.684(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 3-0170(String), 李明祥(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:37.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.685(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 1-0348(String), 孙长兰(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:38.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.685(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 3-0632(String), 敖玉柱(String), C(String), 2(String), 1(String), 200(BigDecimal), 2019-06-10 09:00:39.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.685(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 1-0520(String), 周吉富(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-10 09:00:40.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.685(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 1-0443(String), 奚廷(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:41.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.685(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 3-0696(String), 曲永清(String), C(String), 2(String), 1(String), 843(BigDecimal), 2019-06-10 09:00:42.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.685(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 1-0362(String), 靳相军(String), C(String), 2(String), 1(String), 400(BigDecimal), 2019-06-10 09:00:43.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.685(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 3-0049(String), 隋新波(String), A(String), 2(String), 1(String), 40(BigDecimal), 2019-06-10 09:00:44.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.685(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 1-0042(String), 樊克彬(String), A(String), 2(String), 1(String), 120(BigDecimal), 2019-06-10 09:00:45.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.685(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 5-0490(String), 甄福(String), A(String), 2(String), 2(String), 440(BigDecimal), 2019-06-10 09:00:46.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.685(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 3-0481(String), 朱松和(String), C(String), 2(String), 1(String), 300(BigDecimal), 2019-06-10 09:00:47.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.686(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 3-0347(String), 张树学(String), A(String), 2(String), 1(String), 55(BigDecimal), 2019-06-10 09:00:48.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.686(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 4-0232(String), 王柱(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-10 09:00:49.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.686(Timestamp), admin(String), null
2019-06-19 09:24:25 -<==    Updates: 1
2019-06-19 09:24:25 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:25 -==> Parameters: 5-0498(String), 陈立志(String), A(String), 2(String), 2(String), 100(BigDecimal), 2019-06-10 09:00:50.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.686(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 1-0770(String), 刘伟平(String), C(String), 2(String), 1(String), 300(BigDecimal), 2019-06-10 09:00:51.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.686(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 5-0268(String), 乔万龙(String), A(String), 2(String), 2(String), 100(BigDecimal), 2019-06-10 09:00:52.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.686(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 3-0303(String), 李建国(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-11 08:50:15.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.686(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 3-0794(String), 李明喜(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-11 08:50:16.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.686(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 1-0457(String), 张智(String), A(String), 2(String), 1(String), 75(BigDecimal), 2019-06-11 08:50:17.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.686(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 4-0646(String), 鞠学雷(String), A(String), 2(String), 1(String), 240(BigDecimal), 2019-06-11 08:50:18.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.686(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 2-0101(String), 谭广辉(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-11 08:50:19.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.686(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 5-0370(String), 麻辣烫火锅1(String), A(String), 2(String), 2(String), 131(BigDecimal), 2019-06-11 08:50:20.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 5-0371(String), 麻辣烫火锅2(String), A(String), 2(String), 2(String), 329(BigDecimal), 2019-06-11 08:50:21.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 5-0455(String), 西旗小肥羊(String), A(String), 2(String), 2(String), 118(BigDecimal), 2019-06-11 08:50:22.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 5-0146(String), 老专业火锅(String), A(String), 2(String), 2(String), 90(BigDecimal), 2019-06-11 08:50:23.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 4-0486(String), 罗振芳(String), A(String), 2(String), 1(String), 167(BigDecimal), 2019-06-11 08:50:24.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 1-0627(String), 于洪江(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-11 08:50:25.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 5-0021(String), 腾志臣门市(String), C(String), 2(String), 2(String), 20(BigDecimal), 2019-06-11 08:50:26.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:26 -<==    Updates: 1
2019-06-19 09:24:26 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:26 -==> Parameters: 5-0253(String), 日月商粮店(String), A(String), 2(String), 2(String), 100(BigDecimal), 2019-06-11 08:50:27.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 4-0131(String), 任福申(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-11 08:50:28.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 1-0138(String), 王英石(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-11 08:50:29.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 4-0743(String), 滕志明(String), C(String), 2(String), 1(String), 500(BigDecimal), 2019-06-11 08:50:30.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 3-0660(String), 刘风学(String), A(String), 2(String), 1(String), 150(BigDecimal), 2019-06-11 08:50:31.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 4-0640(String), 庄文久(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-11 08:50:32.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.687(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 4-0381(String), 苏德军(String), A(String), 2(String), 1(String), 10(BigDecimal), 2019-06-11 08:50:33.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 3-0110(String), 刘胜利(String), A(String), 2(String), 1(String), 50(BigDecimal), 2019-06-11 08:50:34.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 5-0464(String), 煤城旅店(String), C(String), 2(String), 2(String), 200(BigDecimal), 2019-06-11 08:50:35.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 2-0613(String), 李万修(String), C(String), 2(String), 1(String), 200(BigDecimal), 2019-06-11 08:50:36.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 4-0043(String), 王连绪(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-11 08:50:37.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 4-0421(String), 林占福(String), A(String), 2(String), 1(String), 150(BigDecimal), 2019-06-11 08:50:38.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 5-0162(String), 体育彩票站(String), A(String), 2(String), 2(String), 200(BigDecimal), 2019-06-11 08:50:39.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 1-0550(String), 赵文林(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-11 08:50:40.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 3-0624(String), 王岩(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-11 08:50:41.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 3-0622(String), 张晓权(String), A(String), 2(String), 1(String), 40(BigDecimal), 2019-06-11 08:50:42.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:27 -<==    Updates: 1
2019-06-19 09:24:27 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:27 -==> Parameters: 4-0305(String), 徐志华(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-11 08:50:43.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:28 -<==    Updates: 1
2019-06-19 09:24:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:28 -==> Parameters: 3-0353(String), 刘玉珍(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-11 08:50:44.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:28 -<==    Updates: 1
2019-06-19 09:24:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:28 -==> Parameters: 4-0450(String), 苏江(String), A(String), 2(String), 1(String), 300(BigDecimal), 2019-06-11 08:50:45.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.688(Timestamp), admin(String), null
2019-06-19 09:24:28 -<==    Updates: 1
2019-06-19 09:24:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:28 -==> Parameters: 3-0295(String), 张桂芝(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-11 08:50:46.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.689(Timestamp), admin(String), null
2019-06-19 09:24:28 -<==    Updates: 1
2019-06-19 09:24:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:28 -==> Parameters: 4-0104(String), 张玉芹(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-11 08:50:47.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.689(Timestamp), admin(String), null
2019-06-19 09:24:28 -<==    Updates: 1
2019-06-19 09:24:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:28 -==> Parameters: 4-0111(String), 袁宝明(String), A(String), 2(String), 1(String), 300(BigDecimal), 2019-06-11 08:50:48.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.689(Timestamp), admin(String), null
2019-06-19 09:24:28 -<==    Updates: 1
2019-06-19 09:24:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:28 -==> Parameters: 4-0251(String), 历银贵(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-11 08:50:49.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.689(Timestamp), admin(String), null
2019-06-19 09:24:28 -<==    Updates: 1
2019-06-19 09:24:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:28 -==> Parameters: 3-0045(String), 魏作孝(String), A(String), 2(String), 1(String), 100(BigDecimal), 2019-06-11 08:50:50.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.689(Timestamp), admin(String), null
2019-06-19 09:24:28 -<==    Updates: 1
2019-06-19 09:24:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:28 -==> Parameters: 4-0588(String), 樊井安(String), A(String), 2(String), 1(String), 200(BigDecimal), 2019-06-11 08:50:51.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.689(Timestamp), admin(String), null
2019-06-19 09:24:28 -<==    Updates: 1
2019-06-19 09:24:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:28 -==> Parameters: 4-0435(String), 李长芝(String), A(String), 2(String), 1(String), 80(BigDecimal), 2019-06-11 08:50:52.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.689(Timestamp), admin(String), null
2019-06-19 09:24:28 -<==    Updates: 1
2019-06-19 09:24:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:24:28 -==> Parameters: 5-0250(String), 立成摩托车修理铺(String), A(String), 2(String), 2(String), 300(BigDecimal), 2019-06-11 08:50:53.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:24:12.689(Timestamp), admin(String), null
2019-06-19 09:24:28 -<==    Updates: 1
2019-06-19 09:27:05 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 09:27:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 09:27:05 -HTTP METHOD : GET
2019-06-19 09:27:05 -HTTP METHOD : GET
2019-06-19 09:27:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:27:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:27:05 -参数 : [heatType]
2019-06-19 09:27:05 -参数 : [userType]
2019-06-19 09:27:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:27:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:27:05 -==> Parameters: userType(String)
2019-06-19 09:27:05 -==> Parameters: heatType(String)
2019-06-19 09:27:05 -<==      Total: 4
2019-06-19 09:27:05 -耗时 : 8
2019-06-19 09:27:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:27:05 -<==      Total: 4
2019-06-19 09:27:05 -耗时 : 62
2019-06-19 09:27:05 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:27:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 09:27:12 -HTTP METHOD : GET
2019-06-19 09:27:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 09:27:12 -参数 : []
2019-06-19 09:27:12 -耗时 : 1
2019-06-19 09:27:12 -返回值 : system/dept/deptTree
2019-06-19 09:27:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 09:27:13 -HTTP METHOD : GET
2019-06-19 09:27:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 09:27:13 -参数 : []
2019-06-19 09:27:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 09:27:13 -==> Parameters: 
2019-06-19 09:27:13 -<==      Total: 3
2019-06-19 09:27:13 -耗时 : 3
2019-06-19 09:27:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 09:28:20 -请求地址 : http://localhost:8081/index
2019-06-19 09:28:20 -HTTP METHOD : GET
2019-06-19 09:28:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 09:28:20 -参数 : [{}]
2019-06-19 09:28:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 09:28:20 -==> Parameters: 1(Long)
2019-06-19 09:28:20 -<==      Total: 51
2019-06-19 09:28:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 09:28:20 -==> Parameters: 138(Long)
2019-06-19 09:28:20 -<==      Total: 1
2019-06-19 09:28:20 -耗时 : 186
2019-06-19 09:28:20 -返回值 : index_v1
2019-06-19 09:28:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:28:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 186(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 09:28:20.196(Timestamp)
2019-06-19 09:28:20 -请求地址 : http://localhost:8081/main
2019-06-19 09:28:20 -HTTP METHOD : GET
2019-06-19 09:28:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 09:28:20 -参数 : []
2019-06-19 09:28:20 -耗时 : 1
2019-06-19 09:28:20 -返回值 : main
2019-06-19 09:28:20 -<==    Updates: 1
2019-06-19 09:28:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 09:28:20 -HTTP METHOD : GET
2019-06-19 09:28:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 09:28:20 -参数 : []
2019-06-19 09:28:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 09:28:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 09:28:20 -<==      Total: 0
2019-06-19 09:28:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 09:28:20 -==> Parameters: 1(Long), 0(String)
2019-06-19 09:28:20 -<==      Total: 1
2019-06-19 09:28:20 -耗时 : 69
2019-06-19 09:28:20 -返回值 : com.bootdo.common.utils.PageUtils@63471624
2019-06-19 09:28:20 -请求地址 : http://localhost:8081/main
2019-06-19 09:28:20 -HTTP METHOD : GET
2019-06-19 09:28:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 09:28:20 -参数 : []
2019-06-19 09:28:20 -耗时 : 0
2019-06-19 09:28:20 -返回值 : main
2019-06-19 09:28:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 09:28:23 -HTTP METHOD : GET
2019-06-19 09:28:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:28:23 -参数 : [userType]
2019-06-19 09:28:23 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 09:28:23 -HTTP METHOD : GET
2019-06-19 09:28:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:28:23 -参数 : [elecType]
2019-06-19 09:28:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:28:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:28:23 -==> Parameters: userType(String)
2019-06-19 09:28:23 -==> Parameters: elecType(String)
2019-06-19 09:28:23 -<==      Total: 11
2019-06-19 09:28:23 -耗时 : 4
2019-06-19 09:28:23 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:28:23 -<==      Total: 4
2019-06-19 09:28:24 -耗时 : 13
2019-06-19 09:28:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:28:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 09:28:24 -HTTP METHOD : GET
2019-06-19 09:28:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:28:24 -参数 : [userType]
2019-06-19 09:28:24 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 09:28:24 -HTTP METHOD : GET
2019-06-19 09:28:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:28:24 -参数 : [heatType]
2019-06-19 09:28:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:28:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:28:24 -==> Parameters: heatType(String)
2019-06-19 09:28:24 -==> Parameters: userType(String)
2019-06-19 09:28:24 -<==      Total: 4
2019-06-19 09:28:24 -<==      Total: 4
2019-06-19 09:28:24 -耗时 : 26
2019-06-19 09:28:24 -耗时 : 23
2019-06-19 09:28:24 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:28:24 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:28:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 09:28:33 -HTTP METHOD : GET
2019-06-19 09:28:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 09:28:33 -参数 : []
2019-06-19 09:28:33 -耗时 : 0
2019-06-19 09:28:33 -返回值 : system/dept/deptTree
2019-06-19 09:28:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 09:28:33 -HTTP METHOD : GET
2019-06-19 09:28:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 09:28:33 -参数 : []
2019-06-19 09:28:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 09:28:33 -==> Parameters: 
2019-06-19 09:28:33 -<==      Total: 3
2019-06-19 09:28:33 -耗时 : 3
2019-06-19 09:28:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 09:29:04 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 09:30:42 -请求地址 : http://localhost:8081/index
2019-06-19 09:30:42 -HTTP METHOD : GET
2019-06-19 09:30:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 09:30:42 -参数 : [{}]
2019-06-19 09:30:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 09:30:42 -==> Parameters: 1(Long)
2019-06-19 09:30:42 -<==      Total: 51
2019-06-19 09:30:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 09:30:42 -==> Parameters: 138(Long)
2019-06-19 09:30:42 -<==      Total: 1
2019-06-19 09:30:42 -耗时 : 20
2019-06-19 09:30:42 -返回值 : index_v1
2019-06-19 09:30:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 09:30:42.863(Timestamp)
2019-06-19 09:30:42 -请求地址 : http://localhost:8081/main
2019-06-19 09:30:42 -HTTP METHOD : GET
2019-06-19 09:30:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 09:30:42 -参数 : []
2019-06-19 09:30:42 -耗时 : 1
2019-06-19 09:30:42 -返回值 : main
2019-06-19 09:30:43 -<==    Updates: 1
2019-06-19 09:30:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 09:30:43 -HTTP METHOD : GET
2019-06-19 09:30:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 09:30:43 -参数 : []
2019-06-19 09:30:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 09:30:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 09:30:43 -<==      Total: 0
2019-06-19 09:30:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 09:30:43 -==> Parameters: 1(Long), 0(String)
2019-06-19 09:30:43 -<==      Total: 1
2019-06-19 09:30:43 -耗时 : 8
2019-06-19 09:30:43 -返回值 : com.bootdo.common.utils.PageUtils@57ca79da
2019-06-19 09:30:43 -请求地址 : http://localhost:8081/main
2019-06-19 09:30:43 -HTTP METHOD : GET
2019-06-19 09:30:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 09:30:43 -参数 : []
2019-06-19 09:30:43 -耗时 : 0
2019-06-19 09:30:43 -返回值 : main
2019-06-19 09:30:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 09:30:44 -HTTP METHOD : GET
2019-06-19 09:30:44 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 09:30:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:30:44 -HTTP METHOD : GET
2019-06-19 09:30:44 -参数 : [userType]
2019-06-19 09:30:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:30:44 -参数 : [elecType]
2019-06-19 09:30:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:30:44 -==> Parameters: elecType(String)
2019-06-19 09:30:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:30:44 -==> Parameters: userType(String)
2019-06-19 09:30:44 -<==      Total: 4
2019-06-19 09:30:44 -耗时 : 4
2019-06-19 09:30:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:30:44 -<==      Total: 11
2019-06-19 09:30:44 -耗时 : 6
2019-06-19 09:30:44 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:30:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 09:30:45 -HTTP METHOD : GET
2019-06-19 09:30:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:30:45 -参数 : [userType]
2019-06-19 09:30:45 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-19 09:30:45 -HTTP METHOD : GET
2019-06-19 09:30:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:30:45 -参数 : [waterType]
2019-06-19 09:30:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:30:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:30:45 -==> Parameters: waterType(String)
2019-06-19 09:30:45 -==> Parameters: userType(String)
2019-06-19 09:30:45 -<==      Total: 4
2019-06-19 09:30:45 -耗时 : 5
2019-06-19 09:30:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:30:45 -<==      Total: 4
2019-06-19 09:30:45 -耗时 : 9
2019-06-19 09:30:45 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:30:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 09:30:52 -HTTP METHOD : GET
2019-06-19 09:30:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 09:30:52 -参数 : []
2019-06-19 09:30:52 -耗时 : 0
2019-06-19 09:30:52 -返回值 : system/dept/deptTree
2019-06-19 09:30:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 09:30:52 -HTTP METHOD : GET
2019-06-19 09:30:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 09:30:52 -参数 : []
2019-06-19 09:30:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 09:30:52 -==> Parameters: 
2019-06-19 09:30:52 -<==      Total: 3
2019-06-19 09:30:52 -耗时 : 4
2019-06-19 09:30:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 3-0608(String), 吴成国(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-05-29 00:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.503(Timestamp), admin(String), null
2019-06-19 09:30:59 -<==    Updates: 1
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 3-0572(String), 邹淑华(String), A(String), 2(String), 1(String), 30(BigDecimal), 2019-05-29 00:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:30:59 -<==    Updates: 1
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 3-0082(String), 朱淑琴(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-03 09:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:30:59 -<==    Updates: 1
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 5-0209(String), 金中天火锅(String), A(String), 2(String), 2(String), 40(BigDecimal), 2019-06-03 09:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:30:59 -<==    Updates: 1
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 4-0363(String), 马振清(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-03 09:00:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:30:59 -<==    Updates: 1
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 4-0367(String), 王明俊(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-03 09:00:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:30:59 -<==    Updates: 1
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 4-0164(String), 杨居福(String), C(String), 2(String), 1(String), 60(BigDecimal), 2019-06-03 09:00:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:30:59 -<==    Updates: 1
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 3-0059(String), 朱松华(String), A(String), 2(String), 1(String), 25(BigDecimal), 2019-06-03 09:00:06.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:30:59 -<==    Updates: 1
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 3-0684(String), 李延忠(String), A(String), 2(String), 1(String), 20(BigDecimal), 2019-06-03 09:00:07.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:30:59 -<==    Updates: 1
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 3-0328(String), 孙海玉(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-03 09:00:08.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:30:59 -<==    Updates: 1
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 4-0495(String), 杨国军(String), A(String), 2(String), 1(String), 30(BigDecimal), 2019-06-04 10:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:30:59 -<==    Updates: 1
2019-06-19 09:30:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:30:59 -==> Parameters: 1-0162(String), 韩洪军(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-04 10:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 1-0076(String), 李玉柱(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-04 10:00:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 1-0752(String), 韩庆云(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-04 10:00:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 3-0539(String), 司玉芳(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-04 10:00:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 4-0458(String), 李春山(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-05 00:00:00.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 3-0724(String), 苗沛旺(String), C(String), 2(String), 1(String), 85(BigDecimal), 2019-06-05 00:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 1-0436(String), 张玉学(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-05 00:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 2-0069(String), 孙永生(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-05 00:00:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 3-0270(String), 王国臣(String), C(String), 2(String), 1(String), 60(BigDecimal), 2019-06-10 00:00:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 1-0078(String), 徐相军(String), C(String), 2(String), 1(String), 60(BigDecimal), 2019-06-10 00:00:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 4-0311(String), 姚美萍(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-10 00:00:06.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.504(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 3-0347(String), 张树学(String), A(String), 2(String), 1(String), 45(BigDecimal), 2019-06-10 00:00:07.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.505(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 4-0302(String), 屈建林(String), A(String), 2(String), 1(String), 120(BigDecimal), 2019-06-11 00:00:08.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.505(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:00 -==> Parameters: 3-0622(String), 张晓权(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-11 00:00:09.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:30:59.505(Timestamp), admin(String), null
2019-06-19 09:31:00 -<==    Updates: 1
2019-06-19 09:31:16 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 09:31:59 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:31:59 -==> Parameters: 3-0608(String), 吴成国(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-05-29 00:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 3-0572(String), 邹淑华(String), A(String), 2(String), 1(String), 30(BigDecimal), 2019-05-29 00:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 3-0082(String), 朱淑琴(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-03 09:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 5-0209(String), 金中天火锅(String), A(String), 2(String), 2(String), 40(BigDecimal), 2019-06-03 09:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 4-0363(String), 马振清(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-03 09:00:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 4-0367(String), 王明俊(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-03 09:00:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 4-0164(String), 杨居福(String), C(String), 2(String), 1(String), 60(BigDecimal), 2019-06-03 09:00:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 3-0059(String), 朱松华(String), A(String), 2(String), 1(String), 25(BigDecimal), 2019-06-03 09:00:06.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 3-0684(String), 李延忠(String), A(String), 2(String), 1(String), 20(BigDecimal), 2019-06-03 09:00:07.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 3-0328(String), 孙海玉(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-03 09:00:08.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 4-0495(String), 杨国军(String), A(String), 2(String), 1(String), 30(BigDecimal), 2019-06-04 10:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 1-0162(String), 韩洪军(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-04 10:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 1-0076(String), 李玉柱(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-04 10:00:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 1-0752(String), 韩庆云(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-04 10:00:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.993(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 3-0539(String), 司玉芳(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-04 10:00:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.994(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 4-0458(String), 李春山(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-05 00:00:00.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.994(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 3-0724(String), 苗沛旺(String), C(String), 2(String), 1(String), 85(BigDecimal), 2019-06-05 00:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.994(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 1-0436(String), 张玉学(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-05 00:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.994(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 2-0069(String), 孙永生(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-05 00:00:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.994(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 3-0270(String), 王国臣(String), C(String), 2(String), 1(String), 60(BigDecimal), 2019-06-10 00:00:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.994(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 1-0078(String), 徐相军(String), C(String), 2(String), 1(String), 60(BigDecimal), 2019-06-10 00:00:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.994(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 4-0311(String), 姚美萍(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-10 00:00:06.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.994(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 3-0347(String), 张树学(String), A(String), 2(String), 1(String), 45(BigDecimal), 2019-06-10 00:00:07.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.994(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 4-0302(String), 屈建林(String), A(String), 2(String), 1(String), 120(BigDecimal), 2019-06-11 00:00:08.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.994(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:32:00 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:32:00 -==> Parameters: 3-0622(String), 张晓权(String), A(String), 2(String), 1(String), 60(BigDecimal), 2019-06-11 00:00:09.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:31:59.994(Timestamp), admin(String), null
2019-06-19 09:32:00 -<==    Updates: 1
2019-06-19 09:39:47 -请求地址 : http://localhost:8081/index
2019-06-19 09:39:47 -HTTP METHOD : GET
2019-06-19 09:39:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 09:39:47 -参数 : [{}]
2019-06-19 09:39:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 09:39:47 -==> Parameters: 1(Long)
2019-06-19 09:39:47 -<==      Total: 51
2019-06-19 09:39:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 09:39:47 -==> Parameters: 138(Long)
2019-06-19 09:39:47 -<==      Total: 1
2019-06-19 09:39:47 -耗时 : 90
2019-06-19 09:39:47 -返回值 : index_v1
2019-06-19 09:39:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:39:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 90(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 09:39:47.997(Timestamp)
2019-06-19 09:39:48 -<==    Updates: 1
2019-06-19 09:39:48 -请求地址 : http://localhost:8081/main
2019-06-19 09:39:48 -HTTP METHOD : GET
2019-06-19 09:39:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 09:39:48 -参数 : []
2019-06-19 09:39:48 -耗时 : 1
2019-06-19 09:39:48 -返回值 : main
2019-06-19 09:39:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 09:39:48 -HTTP METHOD : GET
2019-06-19 09:39:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 09:39:48 -参数 : []
2019-06-19 09:39:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 09:39:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 09:39:48 -<==      Total: 0
2019-06-19 09:39:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 09:39:48 -==> Parameters: 1(Long), 0(String)
2019-06-19 09:39:48 -<==      Total: 1
2019-06-19 09:39:48 -耗时 : 8
2019-06-19 09:39:48 -返回值 : com.bootdo.common.utils.PageUtils@c8509b7
2019-06-19 09:39:48 -请求地址 : http://localhost:8081/main
2019-06-19 09:39:48 -HTTP METHOD : GET
2019-06-19 09:39:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 09:39:48 -参数 : []
2019-06-19 09:39:48 -耗时 : 2
2019-06-19 09:39:48 -返回值 : main
2019-06-19 09:40:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 09:40:11 -==> Parameters: 1(Long)
2019-06-19 09:40:11 -<==      Total: 95
2019-06-19 09:40:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-19 09:40:11 -HTTP METHOD : GET
2019-06-19 09:40:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-19 09:40:11 -参数 : []
2019-06-19 09:40:11 -耗时 : 1
2019-06-19 09:40:11 -返回值 : moneyLog/elecLog/elecLog
2019-06-19 09:40:12 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 09:40:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 09:40:12 -HTTP METHOD : GET
2019-06-19 09:40:12 -HTTP METHOD : GET
2019-06-19 09:40:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:40:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:40:12 -参数 : [elecType]
2019-06-19 09:40:12 -参数 : [userType]
2019-06-19 09:40:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:40:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:40:12 -==> Parameters: elecType(String)
2019-06-19 09:40:12 -==> Parameters: userType(String)
2019-06-19 09:40:12 -<==      Total: 4
2019-06-19 09:40:12 -耗时 : 4
2019-06-19 09:40:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:40:12 -<==      Total: 11
2019-06-19 09:40:12 -耗时 : 10
2019-06-19 09:40:12 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:40:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-19 09:40:12 -HTTP METHOD : GET
2019-06-19 09:40:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-19 09:40:12 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-19 09:40:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-19 09:40:12 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 09:40:12 -<==      Total: 10
2019-06-19 09:40:12 -==>  Preparing: select count(*) from elec_log 
2019-06-19 09:40:12 -==> Parameters: 
2019-06-19 09:40:12 -<==      Total: 1
2019-06-19 09:40:12 -耗时 : 52
2019-06-19 09:40:12 -返回值 : com.bootdo.common.utils.PageUtils@4e59bde9
2019-06-19 09:40:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-19 09:40:14 -HTTP METHOD : GET
2019-06-19 09:40:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-19 09:40:14 -参数 : []
2019-06-19 09:40:14 -耗时 : 1
2019-06-19 09:40:14 -返回值 : moneyLog/heatLog/heatLog
2019-06-19 09:40:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 09:40:15 -HTTP METHOD : GET
2019-06-19 09:40:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:40:15 -参数 : [userType]
2019-06-19 09:40:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:40:15 -==> Parameters: userType(String)
2019-06-19 09:40:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-19 09:40:15 -HTTP METHOD : GET
2019-06-19 09:40:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-19 09:40:15 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 09:40:15 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-19 09:40:15 -HTTP METHOD : GET
2019-06-19 09:40:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:40:15 -参数 : [heatType]
2019-06-19 09:40:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:40:15 -==> Parameters: heatType(String)
2019-06-19 09:40:15 -<==      Total: 4
2019-06-19 09:40:15 -耗时 : 4
2019-06-19 09:40:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:40:15 -<==      Total: 4
2019-06-19 09:40:15 -耗时 : 3
2019-06-19 09:40:15 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:40:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-19 09:40:15 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 09:40:15 -<==      Total: 5
2019-06-19 09:40:15 -==>  Preparing: select count(*) from heat_log 
2019-06-19 09:40:15 -==> Parameters: 
2019-06-19 09:40:15 -<==      Total: 1
2019-06-19 09:40:15 -耗时 : 45
2019-06-19 09:40:15 -返回值 : com.bootdo.common.utils.PageUtils@536da3dc
2019-06-19 09:40:17 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 09:40:17 -HTTP METHOD : GET
2019-06-19 09:40:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 09:40:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:40:17 -HTTP METHOD : GET
2019-06-19 09:40:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:40:17 -参数 : [userType]
2019-06-19 09:40:17 -参数 : [elecType]
2019-06-19 09:40:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:40:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:40:17 -==> Parameters: userType(String)
2019-06-19 09:40:17 -==> Parameters: elecType(String)
2019-06-19 09:40:17 -<==      Total: 4
2019-06-19 09:40:17 -耗时 : 5
2019-06-19 09:40:17 -<==      Total: 11
2019-06-19 09:40:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:40:17 -耗时 : 5
2019-06-19 09:40:17 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:40:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 09:40:18 -HTTP METHOD : GET
2019-06-19 09:40:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:40:18 -参数 : [userType]
2019-06-19 09:40:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:40:18 -==> Parameters: userType(String)
2019-06-19 09:40:18 -<==      Total: 4
2019-06-19 09:40:18 -耗时 : 14
2019-06-19 09:40:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:40:18 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 09:40:18 -HTTP METHOD : GET
2019-06-19 09:40:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:40:18 -参数 : [heatType]
2019-06-19 09:40:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:40:18 -==> Parameters: heatType(String)
2019-06-19 09:40:18 -<==      Total: 4
2019-06-19 09:40:18 -耗时 : 29
2019-06-19 09:40:18 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:40:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 09:40:49 -HTTP METHOD : GET
2019-06-19 09:40:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 09:40:49 -参数 : []
2019-06-19 09:40:49 -耗时 : 0
2019-06-19 09:40:49 -返回值 : system/dept/deptTree
2019-06-19 09:40:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 09:40:49 -HTTP METHOD : GET
2019-06-19 09:40:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 09:40:49 -参数 : []
2019-06-19 09:40:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 09:40:49 -==> Parameters: 
2019-06-19 09:40:49 -<==      Total: 3
2019-06-19 09:40:49 -耗时 : 3
2019-06-19 09:40:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 09:41:50 -请求地址 : http://localhost:8081/login;JSESSIONID=5b3a2ac6-b157-4642-a4e7-6145bf978fe8
2019-06-19 09:41:50 -HTTP METHOD : GET
2019-06-19 09:41:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 09:41:50 -参数 : [{}]
2019-06-19 09:41:50 -耗时 : 0
2019-06-19 09:41:50 -返回值 : login
2019-06-19 09:41:50 -请求地址 : http://localhost:8081/getVerify
2019-06-19 09:41:50 -HTTP METHOD : GET
2019-06-19 09:41:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 09:41:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6837cb57, org.apache.shiro.web.servlet.ShiroHttpServletResponse@284087e2]
2019-06-19 09:41:50 -5132
2019-06-19 09:41:50 -耗时 : 12
2019-06-19 09:41:50 -返回值 : null
2019-06-19 09:41:51 -请求地址 : http://localhost:8081/login
2019-06-19 09:41:51 -HTTP METHOD : GET
2019-06-19 09:41:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 09:41:51 -参数 : [{}]
2019-06-19 09:41:51 -耗时 : 1
2019-06-19 09:41:51 -返回值 : login
2019-06-19 09:41:55 -请求地址 : http://localhost:8081/login
2019-06-19 09:41:55 -HTTP METHOD : POST
2019-06-19 09:41:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 09:41:55 -参数 : [admin, 111111, 5132, org.apache.shiro.web.servlet.ShiroHttpServletRequest@322d144d]
2019-06-19 09:41:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 09:41:55 -==> Parameters: admin(String)
2019-06-19 09:41:55 -<==      Total: 1
2019-06-19 09:41:55 -耗时 : 63
2019-06-19 09:41:55 -返回值 : {msg=操作成功, code=0}
2019-06-19 09:41:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:41:55 -==> Parameters: 1(Long), admin(String), 登录(String), 63(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 09:41:55.806(Timestamp)
2019-06-19 09:41:55 -<==    Updates: 1
2019-06-19 09:41:55 -请求地址 : http://localhost:8081/index
2019-06-19 09:41:55 -HTTP METHOD : GET
2019-06-19 09:41:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 09:41:55 -参数 : [{}]
2019-06-19 09:41:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 09:41:55 -==> Parameters: 1(Long)
2019-06-19 09:41:55 -<==      Total: 51
2019-06-19 09:41:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 09:41:55 -==> Parameters: 138(Long)
2019-06-19 09:41:55 -<==      Total: 1
2019-06-19 09:41:55 -耗时 : 29
2019-06-19 09:41:55 -返回值 : index_v1
2019-06-19 09:41:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:41:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 09:41:55.884(Timestamp)
2019-06-19 09:41:55 -<==    Updates: 1
2019-06-19 09:41:56 -请求地址 : http://localhost:8081/main
2019-06-19 09:41:56 -HTTP METHOD : GET
2019-06-19 09:41:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 09:41:56 -参数 : []
2019-06-19 09:41:56 -耗时 : 3
2019-06-19 09:41:56 -返回值 : main
2019-06-19 09:41:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 09:41:56 -HTTP METHOD : GET
2019-06-19 09:41:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 09:41:56 -参数 : []
2019-06-19 09:41:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 09:41:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 09:41:56 -<==      Total: 0
2019-06-19 09:41:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 09:41:56 -==> Parameters: 1(Long), 0(String)
2019-06-19 09:41:56 -<==      Total: 1
2019-06-19 09:41:56 -耗时 : 5
2019-06-19 09:41:56 -返回值 : com.bootdo.common.utils.PageUtils@b1dc4ab
2019-06-19 09:41:56 -请求地址 : http://localhost:8081/main
2019-06-19 09:41:56 -HTTP METHOD : GET
2019-06-19 09:41:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 09:41:56 -参数 : []
2019-06-19 09:41:56 -耗时 : 2
2019-06-19 09:41:56 -返回值 : main
2019-06-19 09:41:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 09:41:59 -==> Parameters: 1(Long)
2019-06-19 09:41:59 -<==      Total: 95
2019-06-19 09:42:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 09:42:01 -HTTP METHOD : GET
2019-06-19 09:42:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:42:01 -参数 : [userType]
2019-06-19 09:42:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:42:01 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 09:42:01 -HTTP METHOD : GET
2019-06-19 09:42:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 09:42:01 -参数 : [heatType]
2019-06-19 09:42:01 -==> Parameters: userType(String)
2019-06-19 09:42:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 09:42:01 -==> Parameters: heatType(String)
2019-06-19 09:42:01 -<==      Total: 4
2019-06-19 09:42:01 -<==      Total: 4
2019-06-19 09:42:01 -耗时 : 4
2019-06-19 09:42:01 -耗时 : 5
2019-06-19 09:42:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:42:01 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 09:42:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 09:42:09 -HTTP METHOD : GET
2019-06-19 09:42:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 09:42:09 -参数 : []
2019-06-19 09:42:09 -耗时 : 1
2019-06-19 09:42:09 -返回值 : system/dept/deptTree
2019-06-19 09:42:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 09:42:09 -HTTP METHOD : GET
2019-06-19 09:42:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 09:42:09 -参数 : []
2019-06-19 09:42:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 09:42:09 -==> Parameters: 
2019-06-19 09:42:09 -<==      Total: 3
2019-06-19 09:42:09 -耗时 : 6
2019-06-19 09:42:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 09:42:11 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:11 -==> Parameters: 3-0608(String), 吴成国(String), A(String), 2(String), 1(String), 201(BigDecimal), 2019-05-29 00:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.952(Timestamp), admin(String), null
2019-06-19 09:42:11 -<==    Updates: 1
2019-06-19 09:42:11 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:11 -==> Parameters: 1-0833(String), 徐国富(String), A(String), 2(String), 1(String), 3430(BigDecimal), 2019-05-31 00:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.952(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 5-0219(String), 刘晓全(String), A(String), 2(String), 2(String), 275(BigDecimal), 2019-05-31 00:00:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.952(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 3-0037(String), 丁俊新(String), A(String), 2(String), 1(String), 411(BigDecimal), 2019-05-31 00:00:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.953(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 4-0055(String), 罗洪星(String), A(String), 2(String), 1(String), 2000(BigDecimal), 2019-05-31 00:00:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.953(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 3-0684(String), 李延忠(String), A(String), 2(String), 1(String), 231(BigDecimal), 2019-06-03 00:00:06.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.953(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 3-0328(String), 孙海玉(String), A(String), 2(String), 1(String), 1614(BigDecimal), 2019-06-03 00:00:07.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.953(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 4-0343(String), 吴振(String), C(String), 2(String), 1(String), 2138(BigDecimal), 2019-06-06 00:00:00.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.953(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 4-0163(String), 吴海(String), A(String), 2(String), 1(String), 1952(BigDecimal), 2019-06-10 00:00:01.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.953(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 3-0696(String), 曲永清(String), C(String), 2(String), 1(String), 1464(BigDecimal), 2019-06-10 00:00:02.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.953(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 4-0311(String), 姚美萍(String), A(String), 2(String), 1(String), 1955(BigDecimal), 2019-06-10 00:00:03.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.953(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 4-0173(String), 潘立财(String), A(String), 2(String), 1(String), 1105(BigDecimal), 2019-06-10 00:00:04.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.953(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 4-0431(String), 李长军(String), A(String), 2(String), 1(String), 600(BigDecimal), 2019-06-10 00:00:05.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.953(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:42:12 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 09:42:12 -==> Parameters: 4-0370(String), 张启兴(String), A(String), 2(String), 1(String), 1000(BigDecimal), 2019-06-11 00:00:06.0(Timestamp), 2019-05(String), admin(String), 2019-06-19 09:42:11.953(Timestamp), admin(String), null
2019-06-19 09:42:12 -<==    Updates: 1
2019-06-19 09:52:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 415]
2019-06-19 10:22:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 848]
2019-06-19 10:23:01 -Validating all active sessions...
2019-06-19 10:23:01 -Finished session validation.  No sessions were stopped.
2019-06-19 10:52:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1281]
2019-06-19 11:22:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1714]
2019-06-19 11:23:01 -Validating all active sessions...
2019-06-19 11:23:01 -Finished session validation.  [2] sessions were stopped.
2019-06-19 11:24:22 -请求地址 : http://localhost:8081/login;JSESSIONID=9de6fa65-ce61-4e35-a15d-ba2f7c3256ad
2019-06-19 11:24:22 -HTTP METHOD : GET
2019-06-19 11:24:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 11:24:22 -参数 : [{}]
2019-06-19 11:24:22 -耗时 : 1
2019-06-19 11:24:22 -返回值 : login
2019-06-19 11:24:22 -请求地址 : http://localhost:8081/login;JSESSIONID=9de6fa65-ce61-4e35-a15d-ba2f7c3256ad
2019-06-19 11:24:22 -HTTP METHOD : GET
2019-06-19 11:24:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 11:24:22 -参数 : [{}]
2019-06-19 11:24:22 -耗时 : 1
2019-06-19 11:24:22 -返回值 : login
2019-06-19 11:24:22 -请求地址 : http://localhost:8081/getVerify
2019-06-19 11:24:22 -HTTP METHOD : GET
2019-06-19 11:24:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 11:24:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@338f82a2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@72ce9c76]
2019-06-19 11:24:22 -0957
2019-06-19 11:24:22 -耗时 : 18
2019-06-19 11:24:22 -返回值 : null
2019-06-19 11:24:22 -请求地址 : http://localhost:8081/getVerify
2019-06-19 11:24:22 -HTTP METHOD : GET
2019-06-19 11:24:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 11:24:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@363b1f9d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1f20d899]
2019-06-19 11:24:22 -7941
2019-06-19 11:24:22 -耗时 : 14
2019-06-19 11:24:22 -返回值 : null
2019-06-19 11:24:27 -请求地址 : http://localhost:8081/login
2019-06-19 11:24:27 -HTTP METHOD : POST
2019-06-19 11:24:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 11:24:27 -参数 : [admin, 111111, 7941, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6697722f]
2019-06-19 11:24:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 11:24:27 -==> Parameters: admin(String)
2019-06-19 11:24:27 -<==      Total: 1
2019-06-19 11:24:27 -耗时 : 7
2019-06-19 11:24:27 -返回值 : {msg=操作成功, code=0}
2019-06-19 11:24:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 11:24:27 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 11:24:27.915(Timestamp)
2019-06-19 11:24:27 -请求地址 : http://localhost:8081/index
2019-06-19 11:24:28 -HTTP METHOD : GET
2019-06-19 11:24:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 11:24:28 -参数 : [{}]
2019-06-19 11:24:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 11:24:28 -==> Parameters: 1(Long)
2019-06-19 11:24:28 -<==    Updates: 1
2019-06-19 11:24:28 -<==      Total: 51
2019-06-19 11:24:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 11:24:28 -==> Parameters: 138(Long)
2019-06-19 11:24:28 -<==      Total: 1
2019-06-19 11:24:28 -耗时 : 128
2019-06-19 11:24:28 -返回值 : index_v1
2019-06-19 11:24:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 11:24:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 129(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 11:24:28.078(Timestamp)
2019-06-19 11:24:28 -请求地址 : http://localhost:8081/main
2019-06-19 11:24:28 -HTTP METHOD : GET
2019-06-19 11:24:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 11:24:28 -参数 : []
2019-06-19 11:24:28 -<==    Updates: 1
2019-06-19 11:24:28 -耗时 : 0
2019-06-19 11:24:28 -返回值 : main
2019-06-19 11:24:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 11:24:28 -HTTP METHOD : GET
2019-06-19 11:24:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 11:24:28 -参数 : []
2019-06-19 11:24:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 11:24:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 11:24:28 -<==      Total: 0
2019-06-19 11:24:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 11:24:28 -==> Parameters: 1(Long), 0(String)
2019-06-19 11:24:28 -<==      Total: 1
2019-06-19 11:24:28 -耗时 : 43
2019-06-19 11:24:28 -返回值 : com.bootdo.common.utils.PageUtils@7cec3be7
2019-06-19 11:24:28 -请求地址 : http://localhost:8081/main
2019-06-19 11:24:28 -HTTP METHOD : GET
2019-06-19 11:24:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 11:24:28 -参数 : []
2019-06-19 11:24:28 -耗时 : 0
2019-06-19 11:24:28 -返回值 : main
2019-06-19 11:26:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 11:26:05 -==> Parameters: 1(Long)
2019-06-19 11:26:05 -<==      Total: 95
2019-06-19 11:26:05 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-06-19 11:26:05 -HTTP METHOD : GET
2019-06-19 11:26:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-19 11:26:05 -参数 : []
2019-06-19 11:26:05 -耗时 : 142
2019-06-19 11:26:05 -返回值 : charts/tableElecMM
2019-06-19 11:26:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 11:26:05 -HTTP METHOD : GET
2019-06-19 11:26:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 11:26:05 -参数 : [userType]
2019-06-19 11:26:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 11:26:05 -==> Parameters: userType(String)
2019-06-19 11:26:05 -<==      Total: 4
2019-06-19 11:26:05 -耗时 : 3
2019-06-19 11:26:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 11:26:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 11:26:09 -HTTP METHOD : GET
2019-06-19 11:26:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 11:26:09 -参数 : []
2019-06-19 11:26:09 -耗时 : 1
2019-06-19 11:26:09 -返回值 : system/dept/deptTree
2019-06-19 11:26:10 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 11:26:10 -HTTP METHOD : GET
2019-06-19 11:26:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 11:26:10 -参数 : []
2019-06-19 11:26:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 11:26:10 -==> Parameters: 
2019-06-19 11:26:10 -<==      Total: 3
2019-06-19 11:26:10 -耗时 : 4
2019-06-19 11:26:10 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 11:26:11 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-06-19 11:26:11 -HTTP METHOD : POST
2019-06-19 11:26:11 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-19 11:26:11 -参数 : [com.bootdo.elec.vo.ElecVo@54469f59, com.bootdo.moneyLog.vo.ElecLogVo@46dc13c7]
2019-06-19 11:26:11 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 1(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 2(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:12 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:12 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:12 -<==      Total: 1
2019-06-19 11:26:33 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:33 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:33 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 3(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 4(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 5(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 6(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:45 -<==      Total: 1
2019-06-19 11:26:45 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:45 -==> Parameters: 2019-05(String), 7(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 8(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 9(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 10(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-06-19 11:26:46 -==> Parameters: 2019-05(String), 11(String), 2(String)
2019-06-19 11:26:46 -<==      Total: 1
2019-06-19 11:26:46 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-06-19 11:26:46 -==> Parameters: 
2019-06-19 11:26:46 -<==      Total: 2
2019-06-19 11:26:46 -耗时 : 34502
2019-06-19 11:26:46 -返回值 : {G1PreElecCountMMNew=29, WMOweElecSumMMNew=0.00, MSElecLogMMCount=0, G3TotalyuNew=-3406.00, MSPreElecSumMMNew=801.57, MSOweElecCountMMOld=0, TotalPreyuNew=92663.34, WGTotalyuNew=-7901.62, TotalCostyu=189021.88, SElecPrice=2.600, WSElecPrice=0.810, WGTotalhuOld=0, G2PreElecSumMMNew=0.00, G3TotalhuOld=0, WSPreElecSumMMOld=0.00, TotalOwehuNew=1383, TotalCosthu=5234, G1ElecAmountMM=40762, G2ElecAmountMM=17308, MSElecAmountMM=46, WMPreElecSumMMOld=0.00, MSTotalyuOld=0.00, G3ElecAmountMM=2745, STotalhuNew=552, MTotalyuOld=0.00, WGPreElecCountMMOld=0, ZElecPrice=0.970, MMTotalhuNew=213, ZOweElecSumMMOld=0.00, MMPreElecCountMMNew=199, ZTotalyuOld=0.00, MMOweElecCountMMNew=14, WGElecPrice=0.970, WMTotalyuOld=0.00, G2OweElecCountMMOld=0, WSTotalhuNew=156, SElecLogMMSum=14762.50, WGElecAmountMM=7119, ZElecLogMMSum=0.00, G1PreElecSumMMNew=1978.01, WMElecAmountMM=27478, G3OweElecCountMMOld=0, MMElecCostMMCount=213, WGOweElecCountMMNew=10, MElecLogMMSum=48307.00, MSPreElecCountMMOld=0, G1ElecCostMMSum=39539.14, WSOweElecSumMMNew=0.00, G1ElecPrice=0.970, G1OweElecCountMMNew=49, WSOweElecCountMMNew=0, WGOweElecSumMMNew=-7901.62, G2ElecCostMMCount=5, WGElecCostMMCount=16, G3PreElecSumMMNew=0.00, WGPreElecSumMMOld=0.00, G2OweElecSumMMNew=-7635.30, G2TotalyuNew=-7635.30, G2PreElecCountMMNew=1, WSElecAmountMM=5255, MMElecAmountMM=4373, G2TotalhuOld=0, MOweElecSumMMOld=0.00, ZOweElecCountMMOld=0, MOweElecCountMMOld=0, WGElecLogMMCount=0, TotalAllyuOld=0.00, MMPreElecCountMMOld=0, ZOweElecCountMMNew=26, ZTotalyuNew=-62068.32, MSTotalhuOld=0, STotalyuNew=-4994.54, MMTotalyuNew=3931.81, MMElecLogMMSum=0.00, ZPreElecSumMMOld=0.00, G2PreElecSumMMOld=0.00, WGTotalyuOld=0.00, MSOweElecCountMMNew=1, TotalPreyuOld=0.00, G3TotalyuOld=0.00, G1PreElecCountMMOld=0, STotalhuOld=0, G3PreElecCountMMOld=0, SPreElecSumMMOld=0.00, WGElecCostMMSum=6905.43, MMTotalhuOld=0, MElecLogMMCount=326, MSTotalyuNew=798.63, MTotalhuNew=3294, MTotalyuNew=-1002.23, G1TotalyuNew=-89907.70, WGPreElecCountMMNew=6, G3ElecPrice=0.400, ZTotalhuOld=0, G1PreElecSumMMOld=0.00, G3OweElecCountMMNew=1, G1TotalhuOld=0, WMElecCostMMCount=874, WGOweElecSumMMOld=0.00, MSPreElecCountMMNew=15, TotalOweyuNew=-264848.61, TotalPrehuOld=0, G3OweElecSumMMNew=-3406.00, MOweElecSumMMNew=-74565.59, WMPreElecCountMMNew=874, TotalOwehuOld=0, MSElecCostMMCount=16, MElecCostMMCount=3294, WSPreElecCountMMNew=156, ZPreElecCountMMOld=0, WGPreElecSumMMNew=0.00, WSElecCostMMSum=4256.55, G2TotalyuOld=0.00, G3ElecCostMMCount=1, TotalAllyuNew=-172185.27, MMPreElecSumMMNew=4435.89, TotalAllhuOld=0, MMElecCostMMSum=2033.60, MSElecLogMMSum=0.00, MSOweElecSumMMNew=-2.94, STotalyuOld=0.00, ZElecCostMMCount=29, SPreElecCountMMOld=0, WMElecLogMMSum=0.00, ZElecAmountMM=19570, WGElecLogMMSum=0.00, WMOweElecCountMMNew=0, MMTotalyuOld=0.00, WSElecLogMMCount=0, type=2, MSTotalhuNew=16, WSElecLogMMSum=0.00, WSTotalyuOld=0.00, SElecAmountMM=22005, G2ElecLogMMCount=1, ZPreElecSumMMNew=0.00, MElecPrice=1.800, MPreElecSumMMNew=73563.36, MMOweElecSumMMOld=0.00, TotalLogyu=67486.32, ZTotalhuNew=29, SElecCostMMCount=552, WMElecPrice=0.465, SPreElecSumMMNew=11884.51, TotalLoghu=385, G3PreElecCountMMNew=0, TotalOweyuOld=0.00, MMPreElecSumMMOld=0.00, G3OweElecSumMMOld=0.00, MTotalhuOld=0, ZOweElecSumMMNew=-62068.32, SOweElecSumMMNew=-16879.05, SElecCostMMSum=17824.05, G1TotalyuOld=0.00, TotalPrehuNew=3851, G3ElecCostMMSum=1098.00, ZPreElecCountMMNew=3, WSPreElecCountMMOld=0, SOweElecCountMMOld=0, G1ElecLogMMSum=4003.90, G3TotalhuNew=1, G3ElecLogMMSum=0.00, G1OweElecSumMMOld=0.00, PriceTotal=10.725, MElecCostMMSum=87401.53, WMTotalhuNew=874, MPreElecCountMMNew=2120, WMPreElecCountMMOld=0, WGTotalhuNew=16, G2ElecLogMMSum=412.92, MSOweElecSumMMOld=0.00, SElecLogMMCount=45, TotalAllhuNew=5234, G3ElecLogMMCount=0, WSElecCostMMCount=156, WMOweElecSumMMOld=0.00, MSPreElecSumMMOld=0.00, SPreElecCountMMNew=448, G2TotalhuNew=5, WSPreElecSumMMNew=0.00, G2ElecCostMMSum=8048.22, MMOweElecSumMMNew=-504.08, MPreElecSumMMOld=0.00, MMElecLogMMCount=0, G2ElecPrice=0.465, WMElecLogMMCount=0, WSTotalyuNew=0.00, G1TotalhuNew=78, WMPreElecSumMMNew=0.00, WSOweElecSumMMOld=0.00, MMOweElecCountMMOld=0, ZElecCostMMSum=9100.12, MMElecPrice=0.465, ZElecLogMMCount=0, MSElecCostMMSum=37.26, G2OweElecCountMMNew=4, WGOweElecCountMMOld=0, WMTotalyuNew=0.00, G1OweElecCountMMOld=0, G1ElecCostMMCount=78, MSElecPrice=0.810, AmountTotalMM=334612, WMElecCostMMSum=12777.98, WSTotalhuOld=0, SOweElecCountMMNew=104, WSOweElecCountMMOld=0, SOweElecSumMMOld=0.00, WMTotalhuOld=0, G3PreElecSumMMOld=0.00, G2PreElecCountMMOld=0, G2OweElecSumMMOld=0.00, MElecAmountMM=187951, MPreElecCountMMOld=0, WMOweElecCountMMOld=0, MOweElecCountMMNew=1174, G1OweElecSumMMNew=-91885.71, G1ElecLogMMCount=13}
2019-06-19 11:52:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2146]
2019-06-19 12:22:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2579]
2019-06-19 12:23:01 -Validating all active sessions...
2019-06-19 12:23:01 -Finished session validation.  No sessions were stopped.
2019-06-19 12:52:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3012]
2019-06-19 13:22:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3445]
2019-06-19 13:23:01 -Validating all active sessions...
2019-06-19 13:23:01 -Finished session validation.  [1] sessions were stopped.
2019-06-19 13:52:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3878]
2019-06-19 14:19:06 -请求地址 : http://localhost:8081/login;JSESSIONID=dd9e1d6a-e4d9-4e77-8eb6-bd09233c5394
2019-06-19 14:19:06 -HTTP METHOD : GET
2019-06-19 14:19:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:19:06 -参数 : [{}]
2019-06-19 14:19:06 -耗时 : 2
2019-06-19 14:19:06 -返回值 : login
2019-06-19 14:19:07 -请求地址 : http://localhost:8081/getVerify
2019-06-19 14:19:07 -HTTP METHOD : GET
2019-06-19 14:19:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 14:19:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@320f1058, org.apache.shiro.web.servlet.ShiroHttpServletResponse@40bdea7a]
2019-06-19 14:19:07 -0854
2019-06-19 14:19:07 -耗时 : 78
2019-06-19 14:19:07 -返回值 : null
2019-06-19 14:19:07 -请求地址 : http://localhost:8081/login
2019-06-19 14:19:07 -HTTP METHOD : GET
2019-06-19 14:19:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:19:07 -参数 : [{}]
2019-06-19 14:19:07 -耗时 : 3
2019-06-19 14:19:07 -返回值 : login
2019-06-19 14:19:54 -Starting BootdoApplication on PC-201905091110 with PID 11412 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-19 14:19:54 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-19 14:19:54 -The following profiles are active: dev
2019-06-19 14:19:54 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@792bbc74: startup date [Wed Jun 19 14:19:54 CST 2019]; root of context hierarchy
2019-06-19 14:20:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-19 14:20:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1357d1f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:20:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5b1009d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:20:08 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:20:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:20:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:20:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-19 14:20:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-19 14:20:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:20:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:20:09 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:20:09 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:20:11 -Tomcat initialized with port(s): 8081 (http)
2019-06-19 14:20:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-19 14:20:11 -Starting service [Tomcat]
2019-06-19 14:20:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-19 14:20:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-19 14:20:12 -Initializing Spring embedded WebApplicationContext
2019-06-19 14:20:12 -Root WebApplicationContext: initialization completed in 17474 ms
2019-06-19 14:20:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-19 14:20:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-19 14:20:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-19 14:20:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-19 14:20:13 -Filter xssFilter was not registered (disabled)
2019-06-19 14:20:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-19 14:20:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-19 14:20:13 -Servlet statViewServlet mapped to [/druid/*]
2019-06-19 14:20:13 -Servlet dispatcherServlet mapped to [/]
2019-06-19 14:20:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@792bbc74: startup date [Wed Jun 19 14:19:54 CST 2019]; root of context hierarchy
2019-06-19 14:20:19 -Using default implementation for ThreadExecutor
2019-06-19 14:20:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-19 14:20:19 -Quartz Scheduler v.2.3.0 created.
2019-06-19 14:20:19 -RAMJobStore initialized.
2019-06-19 14:20:19 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-19 14:20:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-19 14:20:19 -Quartz scheduler version: 2.3.0
2019-06-19 14:20:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1203d787
2019-06-19 14:20:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-19 14:20:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-19 14:20:23 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-19 14:20:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:20:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-19 14:20:23 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:20:23 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-19 14:20:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-19 14:20:23 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:20:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-19 14:20:23 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:20:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-19 14:20:23 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:20:23 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-19 14:20:23 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-19 14:20:23 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-19 14:20:23 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-19 14:20:23 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-19 14:20:23 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:20:23 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-19 14:20:23 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:20:23 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-19 14:20:23 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-19 14:20:23 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-19 14:20:23 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-19 14:20:23 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-19 14:20:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-19 14:20:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-19 14:20:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-19 14:20:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-19 14:20:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-19 14:20:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-19 14:20:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-19 14:20:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-19 14:20:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-19 14:20:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-19 14:20:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-19 14:20:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-19 14:20:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-19 14:20:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-19 14:20:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-19 14:20:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-19 14:20:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-19 14:20:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-19 14:20:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-19 14:20:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-19 14:20:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-19 14:20:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-19 14:20:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-19 14:20:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-19 14:20:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-19 14:20:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-19 14:20:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-19 14:20:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-19 14:20:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-19 14:20:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-19 14:20:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-19 14:20:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-19 14:20:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-19 14:20:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-19 14:20:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-19 14:20:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-19 14:20:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-19 14:20:23 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:20:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-19 14:20:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-19 14:20:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-19 14:20:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-19 14:20:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-19 14:20:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-19 14:20:23 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-19 14:20:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-19 14:20:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-19 14:20:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-19 14:20:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-19 14:20:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-19 14:20:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-19 14:20:23 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-19 14:20:23 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-19 14:20:23 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-19 14:20:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-19 14:20:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-19 14:20:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-19 14:20:23 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-19 14:20:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:20:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-19 14:20:23 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:20:23 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:20:23 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-19 14:20:23 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:20:23 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:20:23 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-19 14:20:23 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-19 14:20:23 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:20:23 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:20:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-19 14:20:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-19 14:20:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-19 14:20:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-19 14:20:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-19 14:20:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-19 14:20:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-19 14:20:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-19 14:20:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-19 14:20:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-19 14:20:23 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-19 14:20:23 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-19 14:20:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-19 14:20:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-19 14:20:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-19 14:20:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-19 14:20:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-19 14:20:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-19 14:20:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-19 14:20:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-19 14:20:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-19 14:20:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-19 14:20:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-19 14:20:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-19 14:20:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-19 14:20:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-19 14:20:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-19 14:20:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-19 14:20:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-19 14:20:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-19 14:20:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-19 14:20:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-19 14:20:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-19 14:20:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-19 14:20:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-19 14:20:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-19 14:20:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-19 14:20:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-19 14:20:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-19 14:20:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-19 14:20:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-19 14:20:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-19 14:20:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-19 14:20:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-19 14:20:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-19 14:20:23 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-19 14:20:23 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-19 14:20:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-19 14:20:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-19 14:20:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-19 14:20:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-19 14:20:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:20:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-19 14:20:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-19 14:20:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:20:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-19 14:20:23 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-19 14:20:23 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:20:23 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:20:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-19 14:20:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-19 14:20:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-19 14:20:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-19 14:20:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-19 14:20:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-19 14:20:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-19 14:20:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-19 14:20:26 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@792bbc74: startup date [Wed Jun 19 14:19:54 CST 2019]; root of context hierarchy
2019-06-19 14:20:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-19 14:20:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-19 14:20:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-19 14:20:26 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-19 14:20:29 -Registering beans for JMX exposure on startup
2019-06-19 14:20:29 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-19 14:20:29 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-19 14:20:29 -Starting beans in phase 2147483647
2019-06-19 14:20:29 -Context refreshed
2019-06-19 14:20:29 -Found 1 custom documentation plugin(s)
2019-06-19 14:20:29 -Scanning for api listing references
2019-06-19 14:20:30 -Generating unique operation named: removeUsingPOST_1
2019-06-19 14:20:30 -Generating unique operation named: addUsingGET_1
2019-06-19 14:20:30 -Generating unique operation named: editUsingGET_1
2019-06-19 14:20:30 -Generating unique operation named: listUsingGET_1
2019-06-19 14:20:30 -Generating unique operation named: removeUsingPOST_2
2019-06-19 14:20:30 -Generating unique operation named: removeUsingPOST_3
2019-06-19 14:20:30 -Generating unique operation named: saveUsingPOST_1
2019-06-19 14:20:30 -Generating unique operation named: updateUsingGET_1
2019-06-19 14:20:30 -Generating unique operation named: updateUsingHEAD_1
2019-06-19 14:20:30 -Generating unique operation named: updateUsingPOST_1
2019-06-19 14:20:30 -Generating unique operation named: updateUsingPUT_1
2019-06-19 14:20:30 -Generating unique operation named: updateUsingPATCH_1
2019-06-19 14:20:30 -Generating unique operation named: updateUsingDELETE_1
2019-06-19 14:20:30 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-19 14:20:30 -Generating unique operation named: updateUsingTRACE_1
2019-06-19 14:20:30 -Generating unique operation named: addUsingGET_2
2019-06-19 14:20:30 -Generating unique operation named: editUsingGET_2
2019-06-19 14:20:31 -Generating unique operation named: listUsingGET_2
2019-06-19 14:20:31 -Generating unique operation named: removeUsingPOST_4
2019-06-19 14:20:31 -Generating unique operation named: removeUsingPOST_5
2019-06-19 14:20:31 -Generating unique operation named: saveUsingPOST_2
2019-06-19 14:20:31 -Generating unique operation named: updateUsingPOST_2
2019-06-19 14:20:31 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-19 14:20:31 -Generating unique operation named: addUsingGET_3
2019-06-19 14:20:31 -Generating unique operation named: editUsingGET_3
2019-06-19 14:20:31 -Generating unique operation named: listUsingGET_3
2019-06-19 14:20:31 -Generating unique operation named: removeUsingPOST_6
2019-06-19 14:20:31 -Generating unique operation named: removeUsingPOST_7
2019-06-19 14:20:31 -Generating unique operation named: saveUsingPOST_3
2019-06-19 14:20:31 -Generating unique operation named: updateUsingGET_2
2019-06-19 14:20:31 -Generating unique operation named: updateUsingHEAD_2
2019-06-19 14:20:31 -Generating unique operation named: updateUsingPOST_3
2019-06-19 14:20:31 -Generating unique operation named: updateUsingPUT_2
2019-06-19 14:20:31 -Generating unique operation named: updateUsingPATCH_2
2019-06-19 14:20:31 -Generating unique operation named: updateUsingDELETE_2
2019-06-19 14:20:31 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-19 14:20:31 -Generating unique operation named: updateUsingTRACE_2
2019-06-19 14:20:31 -Generating unique operation named: addUsingGET_4
2019-06-19 14:20:31 -Generating unique operation named: editUsingGET_4
2019-06-19 14:20:31 -Generating unique operation named: listUsingGET_4
2019-06-19 14:20:31 -Generating unique operation named: removeUsingPOST_8
2019-06-19 14:20:31 -Generating unique operation named: removeUsingPOST_9
2019-06-19 14:20:31 -Generating unique operation named: saveUsingPOST_4
2019-06-19 14:20:31 -Generating unique operation named: updateUsingGET_3
2019-06-19 14:20:31 -Generating unique operation named: updateUsingHEAD_3
2019-06-19 14:20:31 -Generating unique operation named: updateUsingPOST_4
2019-06-19 14:20:31 -Generating unique operation named: updateUsingPUT_3
2019-06-19 14:20:31 -Generating unique operation named: updateUsingPATCH_3
2019-06-19 14:20:31 -Generating unique operation named: updateUsingDELETE_3
2019-06-19 14:20:31 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-19 14:20:31 -Generating unique operation named: updateUsingTRACE_3
2019-06-19 14:20:31 -Generating unique operation named: ElecUsingGET_1
2019-06-19 14:20:31 -Generating unique operation named: addUsingGET_5
2019-06-19 14:20:31 -Generating unique operation named: editUsingGET_5
2019-06-19 14:20:31 -Generating unique operation named: listUsingGET_5
2019-06-19 14:20:31 -Generating unique operation named: removeUsingPOST_10
2019-06-19 14:20:31 -Generating unique operation named: removeUsingPOST_11
2019-06-19 14:20:31 -Generating unique operation named: saveUsingPOST_5
2019-06-19 14:20:31 -Generating unique operation named: updateUsingGET_4
2019-06-19 14:20:31 -Generating unique operation named: updateUsingHEAD_4
2019-06-19 14:20:31 -Generating unique operation named: updateUsingPOST_5
2019-06-19 14:20:31 -Generating unique operation named: updateUsingPUT_4
2019-06-19 14:20:31 -Generating unique operation named: updateUsingPATCH_4
2019-06-19 14:20:31 -Generating unique operation named: updateUsingDELETE_4
2019-06-19 14:20:31 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-19 14:20:31 -Generating unique operation named: updateUsingTRACE_4
2019-06-19 14:20:31 -Generating unique operation named: editUsingGET_6
2019-06-19 14:20:31 -Generating unique operation named: listUsingGET_6
2019-06-19 14:20:31 -Generating unique operation named: updateUsingPOST_6
2019-06-19 14:20:31 -Generating unique operation named: addUsingGET_6
2019-06-19 14:20:31 -Generating unique operation named: editUsingGET_7
2019-06-19 14:20:31 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-19 14:20:31 -Generating unique operation named: listUsingGET_7
2019-06-19 14:20:31 -Generating unique operation named: removeUsingPOST_12
2019-06-19 14:20:31 -Generating unique operation named: removeUsingPOST_13
2019-06-19 14:20:31 -Generating unique operation named: saveUsingPOST_6
2019-06-19 14:20:31 -Generating unique operation named: updateUsingGET_5
2019-06-19 14:20:32 -Generating unique operation named: updateUsingHEAD_5
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPOST_7
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPUT_5
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPATCH_5
2019-06-19 14:20:32 -Generating unique operation named: updateUsingDELETE_5
2019-06-19 14:20:32 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-19 14:20:32 -Generating unique operation named: updateUsingTRACE_5
2019-06-19 14:20:32 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-19 14:20:32 -Generating unique operation named: addUsingGET_7
2019-06-19 14:20:32 -Generating unique operation named: editUsingGET_8
2019-06-19 14:20:32 -Generating unique operation named: listUsingGET_8
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_14
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_15
2019-06-19 14:20:32 -Generating unique operation named: saveUsingPOST_7
2019-06-19 14:20:32 -Generating unique operation named: updateUsingGET_6
2019-06-19 14:20:32 -Generating unique operation named: updateUsingHEAD_6
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPOST_8
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPUT_6
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPATCH_6
2019-06-19 14:20:32 -Generating unique operation named: updateUsingDELETE_6
2019-06-19 14:20:32 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-19 14:20:32 -Generating unique operation named: updateUsingTRACE_6
2019-06-19 14:20:32 -Generating unique operation named: addUsingGET_8
2019-06-19 14:20:32 -Generating unique operation named: editUsingGET_9
2019-06-19 14:20:32 -Generating unique operation named: listUsingGET_9
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_16
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_17
2019-06-19 14:20:32 -Generating unique operation named: saveUsingPOST_8
2019-06-19 14:20:32 -Generating unique operation named: updateUsingGET_7
2019-06-19 14:20:32 -Generating unique operation named: updateUsingHEAD_7
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPOST_9
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPUT_7
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPATCH_7
2019-06-19 14:20:32 -Generating unique operation named: updateUsingDELETE_7
2019-06-19 14:20:32 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-19 14:20:32 -Generating unique operation named: updateUsingTRACE_7
2019-06-19 14:20:32 -Generating unique operation named: addUsingGET_9
2019-06-19 14:20:32 -Generating unique operation named: editUsingGET_10
2019-06-19 14:20:32 -Generating unique operation named: infoUsingGET_1
2019-06-19 14:20:32 -Generating unique operation named: infoUsingHEAD_1
2019-06-19 14:20:32 -Generating unique operation named: infoUsingPOST_1
2019-06-19 14:20:32 -Generating unique operation named: infoUsingPUT_1
2019-06-19 14:20:32 -Generating unique operation named: infoUsingPATCH_1
2019-06-19 14:20:32 -Generating unique operation named: infoUsingDELETE_1
2019-06-19 14:20:32 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-19 14:20:32 -Generating unique operation named: infoUsingTRACE_1
2019-06-19 14:20:32 -Generating unique operation named: listUsingGET_10
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_18
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_19
2019-06-19 14:20:32 -Generating unique operation named: saveUsingPOST_9
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPOST_10
2019-06-19 14:20:32 -Generating unique operation named: listUsingGET_11
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_20
2019-06-19 14:20:32 -Generating unique operation named: welcomeUsingGET_1
2019-06-19 14:20:32 -Generating unique operation named: addUsingGET_10
2019-06-19 14:20:32 -Generating unique operation named: editUsingGET_11
2019-06-19 14:20:32 -Generating unique operation named: listUsingGET_12
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_21
2019-06-19 14:20:32 -Generating unique operation named: saveUsingPOST_10
2019-06-19 14:20:32 -Generating unique operation named: treeUsingGET_1
2019-06-19 14:20:32 -Generating unique operation named: treeUsingGET_2
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPOST_11
2019-06-19 14:20:32 -Generating unique operation named: addUsingGET_11
2019-06-19 14:20:32 -Generating unique operation named: editUsingGET_12
2019-06-19 14:20:32 -Generating unique operation named: listUsingGET_13
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_22
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_23
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPOST_12
2019-06-19 14:20:32 -Generating unique operation named: addUsingGET_12
2019-06-19 14:20:32 -Generating unique operation named: editUsingGET_13
2019-06-19 14:20:32 -Generating unique operation named: listUsingGET_14
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_24
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_25
2019-06-19 14:20:32 -Generating unique operation named: saveUsingPOST_11
2019-06-19 14:20:32 -Generating unique operation named: updateUsingGET_8
2019-06-19 14:20:32 -Generating unique operation named: updateUsingHEAD_8
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPOST_13
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPUT_8
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPATCH_8
2019-06-19 14:20:32 -Generating unique operation named: updateUsingDELETE_8
2019-06-19 14:20:32 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-19 14:20:32 -Generating unique operation named: updateUsingTRACE_8
2019-06-19 14:20:32 -Generating unique operation named: addUsingGET_13
2019-06-19 14:20:32 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-19 14:20:32 -Generating unique operation named: editUsingGET_14
2019-06-19 14:20:32 -Generating unique operation named: listUsingGET_15
2019-06-19 14:20:32 -Generating unique operation named: printEditUsingGET_1
2019-06-19 14:20:32 -Generating unique operation named: removeUsingPOST_26
2019-06-19 14:20:32 -Generating unique operation named: saveUsingPOST_12
2019-06-19 14:20:32 -Generating unique operation named: updateUsingGET_9
2019-06-19 14:20:32 -Generating unique operation named: updateUsingHEAD_9
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPOST_14
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPUT_9
2019-06-19 14:20:32 -Generating unique operation named: updateUsingPATCH_9
2019-06-19 14:20:32 -Generating unique operation named: updateUsingDELETE_9
2019-06-19 14:20:33 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-19 14:20:33 -Generating unique operation named: updateUsingTRACE_9
2019-06-19 14:20:33 -Generating unique operation named: addUsingGET_14
2019-06-19 14:20:33 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-19 14:20:33 -Generating unique operation named: editUsingGET_15
2019-06-19 14:20:33 -Generating unique operation named: listUsingGET_16
2019-06-19 14:20:33 -Generating unique operation named: saveUsingPOST_13
2019-06-19 14:20:33 -Generating unique operation named: saveUsingPOST_14
2019-06-19 14:20:33 -Generating unique operation named: updateUsingPOST_15
2019-06-19 14:20:33 -Generating unique operation named: listUsingGET_17
2019-06-19 14:20:33 -Generating unique operation named: listUsingHEAD_1
2019-06-19 14:20:33 -Generating unique operation named: listUsingPOST_1
2019-06-19 14:20:33 -Generating unique operation named: listUsingPUT_1
2019-06-19 14:20:33 -Generating unique operation named: listUsingPATCH_1
2019-06-19 14:20:33 -Generating unique operation named: listUsingDELETE_1
2019-06-19 14:20:33 -Generating unique operation named: listUsingOPTIONS_1
2019-06-19 14:20:33 -Generating unique operation named: listUsingTRACE_1
2019-06-19 14:20:33 -Generating unique operation named: countDDUsingGET_1
2019-06-19 14:20:33 -Generating unique operation named: exportDDUsingGET_1
2019-06-19 14:20:33 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-19 14:20:33 -Generating unique operation named: addUsingGET_15
2019-06-19 14:20:33 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-19 14:20:33 -Generating unique operation named: editUsingGET_16
2019-06-19 14:20:33 -Generating unique operation named: listUsingGET_18
2019-06-19 14:20:33 -Generating unique operation named: removeUsingPOST_27
2019-06-19 14:20:33 -Generating unique operation named: saveUsingPOST_15
2019-06-19 14:20:33 -Generating unique operation named: treeUsingGET_3
2019-06-19 14:20:33 -Generating unique operation named: treeViewUsingGET_1
2019-06-19 14:20:33 -Generating unique operation named: updateUsingPOST_16
2019-06-19 14:20:33 -Generating unique operation named: addUsingGET_16
2019-06-19 14:20:33 -Generating unique operation named: editUsingGET_17
2019-06-19 14:20:33 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-19 14:20:33 -Generating unique operation named: listUsingGET_19
2019-06-19 14:20:33 -Generating unique operation named: removeUsingPOST_28
2019-06-19 14:20:33 -Generating unique operation named: removeUsingPOST_29
2019-06-19 14:20:33 -Generating unique operation named: saveUsingPOST_16
2019-06-19 14:20:33 -Generating unique operation named: updateUsingGET_10
2019-06-19 14:20:33 -Generating unique operation named: updateUsingHEAD_10
2019-06-19 14:20:33 -Generating unique operation named: updateUsingPOST_17
2019-06-19 14:20:33 -Generating unique operation named: updateUsingPUT_10
2019-06-19 14:20:33 -Generating unique operation named: updateUsingPATCH_10
2019-06-19 14:20:33 -Generating unique operation named: updateUsingDELETE_10
2019-06-19 14:20:33 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-19 14:20:33 -Generating unique operation named: updateUsingTRACE_10
2019-06-19 14:20:33 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-19 14:20:33 -Generating unique operation named: addUsingGET_17
2019-06-19 14:20:33 -Generating unique operation named: editUsingGET_18
2019-06-19 14:20:33 -Generating unique operation named: listUsingGET_20
2019-06-19 14:20:33 -Generating unique operation named: removeUsingPOST_30
2019-06-19 14:20:33 -Generating unique operation named: removeUsingPOST_31
2019-06-19 14:20:33 -Generating unique operation named: saveUsingPOST_17
2019-06-19 14:20:33 -Generating unique operation named: updateUsingGET_11
2019-06-19 14:20:33 -Generating unique operation named: updateUsingHEAD_11
2019-06-19 14:20:33 -Generating unique operation named: updateUsingPOST_18
2019-06-19 14:20:33 -Generating unique operation named: updateUsingPUT_11
2019-06-19 14:20:33 -Generating unique operation named: updateUsingPATCH_11
2019-06-19 14:20:33 -Generating unique operation named: updateUsingDELETE_11
2019-06-19 14:20:33 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-19 14:20:33 -Generating unique operation named: updateUsingTRACE_11
2019-06-19 14:20:33 -Generating unique operation named: addUsingGET_18
2019-06-19 14:20:33 -Generating unique operation named: editUsingGET_19
2019-06-19 14:20:33 -Generating unique operation named: listUsingGET_21
2019-06-19 14:20:33 -Generating unique operation named: removeUsingPOST_32
2019-06-19 14:20:33 -Generating unique operation named: removeUsingPOST_33
2019-06-19 14:20:33 -Generating unique operation named: saveUsingPOST_18
2019-06-19 14:20:33 -Generating unique operation named: updateUsingGET_12
2019-06-19 14:20:33 -Generating unique operation named: updateUsingHEAD_12
2019-06-19 14:20:33 -Generating unique operation named: updateUsingPOST_19
2019-06-19 14:20:33 -Generating unique operation named: updateUsingPUT_12
2019-06-19 14:20:33 -Generating unique operation named: updateUsingPATCH_12
2019-06-19 14:20:33 -Generating unique operation named: updateUsingDELETE_12
2019-06-19 14:20:33 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-19 14:20:33 -Generating unique operation named: updateUsingTRACE_12
2019-06-19 14:20:33 -Starting Quartz Scheduler now
2019-06-19 14:20:33 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-19 14:20:33 -Starting...
2019-06-19 14:20:33 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-19 14:20:33 -Started.
2019-06-19 14:20:33 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-19 14:20:34 -Using a shared selector for servlet write/read
2019-06-19 14:20:34 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-19 14:20:34 -Started BootdoApplication in 43.045 seconds (JVM running for 48.236)
2019-06-19 14:20:34 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-19 14:20:34 -==> Parameters: 
2019-06-19 14:20:35 -<==      Total: 1
2019-06-19 14:20:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-19 14:20:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-19 14:20:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 113 ms
2019-06-19 14:20:39 -Enabling session validation scheduler...
2019-06-19 14:20:39 -请求地址 : http://localhost:8081/login;JSESSIONID=dd9e1d6a-e4d9-4e77-8eb6-bd09233c5394
2019-06-19 14:20:39 -HTTP METHOD : GET
2019-06-19 14:20:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:20:39 -参数 : [{}]
2019-06-19 14:20:39 -耗时 : 14
2019-06-19 14:20:39 -返回值 : login
2019-06-19 14:20:41 -请求地址 : http://localhost:8081/getVerify
2019-06-19 14:20:41 -HTTP METHOD : GET
2019-06-19 14:20:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 14:20:41 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@113c2fdc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1ffbd38b]
2019-06-19 14:20:46 -7049
2019-06-19 14:20:46 -耗时 : 5336
2019-06-19 14:20:46 -返回值 : null
2019-06-19 14:20:46 -请求地址 : http://localhost:8081/login
2019-06-19 14:20:46 -HTTP METHOD : GET
2019-06-19 14:20:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:20:46 -参数 : [{}]
2019-06-19 14:20:46 -耗时 : 1
2019-06-19 14:20:46 -返回值 : login
2019-06-19 14:21:24 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-19 14:21:38 -请求地址 : http://localhost:8081/login
2019-06-19 14:21:38 -HTTP METHOD : POST
2019-06-19 14:21:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:21:38 -参数 : [刘桂艳, 111111, 7049, org.apache.shiro.web.servlet.ShiroHttpServletRequest@46a06f70]
2019-06-19 14:21:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:21:38 -==> Parameters: 刘桂艳(String)
2019-06-19 14:21:39 -<==      Total: 0
2019-06-19 14:21:39 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:21:39 -耗时 : 304
2019-06-19 14:21:39 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:21:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-19 14:21:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:21:39 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 304(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:21:39.354(Timestamp)
2019-06-19 14:21:39 -<==    Updates: 1
2019-06-19 14:21:46 -请求地址 : http://localhost:8081/login
2019-06-19 14:21:46 -HTTP METHOD : POST
2019-06-19 14:21:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:21:46 -参数 : [刘桂艳, 111111, 7049, org.apache.shiro.web.servlet.ShiroHttpServletRequest@261dc22]
2019-06-19 14:21:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:21:46 -==> Parameters: 刘桂艳(String)
2019-06-19 14:21:46 -<==      Total: 0
2019-06-19 14:21:46 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:21:46 -耗时 : 14
2019-06-19 14:21:46 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:21:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:21:46 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:21:46.867(Timestamp)
2019-06-19 14:21:46 -<==    Updates: 1
2019-06-19 14:21:56 -请求地址 : http://localhost:8081/login
2019-06-19 14:21:56 -HTTP METHOD : POST
2019-06-19 14:21:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:21:56 -参数 : [王楠, 111111, 7049, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b9871ce]
2019-06-19 14:21:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:21:56 -==> Parameters: 王楠(String)
2019-06-19 14:21:56 -<==      Total: 1
2019-06-19 14:21:56 -耗时 : 14
2019-06-19 14:21:56 -返回值 : {msg=操作成功, code=0}
2019-06-19 14:21:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:21:56 -==> Parameters: 3(Long), 王楠(String), 登录(String), 15(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:21:56.764(Timestamp)
2019-06-19 14:21:56 -请求地址 : http://localhost:8081/index
2019-06-19 14:21:56 -HTTP METHOD : GET
2019-06-19 14:21:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 14:21:56 -参数 : [{}]
2019-06-19 14:21:57 -<==    Updates: 1
2019-06-19 14:21:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 14:21:58 -==> Parameters: 3(Long)
2019-06-19 14:21:58 -<==      Total: 32
2019-06-19 14:21:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 14:21:58 -==> Parameters: null
2019-06-19 14:21:58 -<==      Total: 0
2019-06-19 14:21:58 -耗时 : 1795
2019-06-19 14:21:58 -返回值 : index_v1
2019-06-19 14:21:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:21:58 -==> Parameters: 3(Long), 王楠(String), 请求访问主页(String), 1795(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-calculator","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计算器"},{"at(String), 127.0.0.1(String), 2019-06-19 14:21:58.857(Timestamp)
2019-06-19 14:21:59 -<==    Updates: 1
2019-06-19 14:21:59 -请求地址 : http://localhost:8081/main
2019-06-19 14:21:59 -HTTP METHOD : GET
2019-06-19 14:21:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 14:21:59 -参数 : []
2019-06-19 14:21:59 -耗时 : 1
2019-06-19 14:21:59 -返回值 : main
2019-06-19 14:21:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 14:21:59 -HTTP METHOD : GET
2019-06-19 14:21:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 14:21:59 -参数 : []
2019-06-19 14:21:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 14:21:59 -==> Parameters: 0(String), 3(Long), 0(Integer), 3(Integer)
2019-06-19 14:21:59 -请求地址 : http://localhost:8081/main
2019-06-19 14:21:59 -HTTP METHOD : GET
2019-06-19 14:21:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 14:21:59 -参数 : []
2019-06-19 14:21:59 -耗时 : 0
2019-06-19 14:21:59 -返回值 : main
2019-06-19 14:22:00 -<==      Total: 0
2019-06-19 14:22:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 14:22:00 -==> Parameters: 3(Long), 0(String)
2019-06-19 14:22:00 -<==      Total: 1
2019-06-19 14:22:00 -耗时 : 324
2019-06-19 14:22:00 -返回值 : com.bootdo.common.utils.PageUtils@773f1b3b
2019-06-19 14:22:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 14:22:03 -==> Parameters: 3(Long)
2019-06-19 14:22:03 -<==      Total: 54
2019-06-19 14:22:03 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-19 14:22:03 -HTTP METHOD : GET
2019-06-19 14:22:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-19 14:22:03 -参数 : []
2019-06-19 14:22:03 -耗时 : 1
2019-06-19 14:22:03 -返回值 : moneyList/moneyList
2019-06-19 14:22:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:22:05 -HTTP METHOD : GET
2019-06-19 14:22:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:22:05 -参数 : []
2019-06-19 14:22:05 -耗时 : 0
2019-06-19 14:22:05 -返回值 : system/dept/deptTree
2019-06-19 14:22:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:22:05 -HTTP METHOD : GET
2019-06-19 14:22:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:22:05 -参数 : []
2019-06-19 14:22:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:22:05 -==> Parameters: 2(Long)
2019-06-19 14:22:05 -<==      Total: 1
2019-06-19 14:22:05 -耗时 : 80
2019-06-19 14:22:05 -返回值 : {"checked":true,"children":[],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-06-19 14:22:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:22:18 -HTTP METHOD : GET
2019-06-19 14:22:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:22:18 -参数 : []
2019-06-19 14:22:18 -耗时 : 0
2019-06-19 14:22:18 -返回值 : system/dept/deptTree
2019-06-19 14:22:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:22:18 -HTTP METHOD : GET
2019-06-19 14:22:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:22:18 -参数 : []
2019-06-19 14:22:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:22:18 -==> Parameters: 2(Long)
2019-06-19 14:22:18 -<==      Total: 1
2019-06-19 14:22:18 -耗时 : 5
2019-06-19 14:22:18 -返回值 : {"checked":true,"children":[],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-06-19 14:22:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:22:21 -HTTP METHOD : GET
2019-06-19 14:22:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:22:21 -参数 : []
2019-06-19 14:22:21 -耗时 : 2
2019-06-19 14:22:21 -返回值 : system/dept/deptTree
2019-06-19 14:22:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:22:21 -HTTP METHOD : GET
2019-06-19 14:22:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:22:21 -参数 : []
2019-06-19 14:22:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:22:21 -==> Parameters: 2(Long)
2019-06-19 14:22:21 -<==      Total: 1
2019-06-19 14:22:21 -耗时 : 12
2019-06-19 14:22:21 -返回值 : {"checked":true,"children":[],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-06-19 14:22:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:22:27 -HTTP METHOD : GET
2019-06-19 14:22:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:22:27 -参数 : []
2019-06-19 14:22:27 -耗时 : 1
2019-06-19 14:22:27 -返回值 : system/dept/deptTree
2019-06-19 14:22:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:22:27 -HTTP METHOD : GET
2019-06-19 14:22:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:22:27 -参数 : []
2019-06-19 14:22:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:22:27 -==> Parameters: 2(Long)
2019-06-19 14:22:27 -<==      Total: 1
2019-06-19 14:22:27 -耗时 : 4
2019-06-19 14:22:27 -返回值 : {"checked":true,"children":[],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-06-19 14:22:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:22:31 -HTTP METHOD : GET
2019-06-19 14:22:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:22:31 -参数 : []
2019-06-19 14:22:31 -耗时 : 0
2019-06-19 14:22:31 -返回值 : system/dept/deptTree
2019-06-19 14:22:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:22:31 -HTTP METHOD : GET
2019-06-19 14:22:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:22:31 -参数 : []
2019-06-19 14:22:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:22:31 -==> Parameters: 2(Long)
2019-06-19 14:22:31 -<==      Total: 1
2019-06-19 14:22:31 -耗时 : 4
2019-06-19 14:22:31 -返回值 : {"checked":true,"children":[],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-06-19 14:23:32 -请求地址 : http://localhost:8081/
2019-06-19 14:23:32 -HTTP METHOD : GET
2019-06-19 14:23:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-06-19 14:23:32 -参数 : [{}]
2019-06-19 14:23:32 -耗时 : 0
2019-06-19 14:23:32 -返回值 : redirect:/index
2019-06-19 14:23:32 -请求地址 : http://localhost:8081/login;JSESSIONID=452fbc68-4c66-4952-bc43-d9401176a7ec
2019-06-19 14:23:32 -HTTP METHOD : GET
2019-06-19 14:23:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:23:32 -参数 : [{}]
2019-06-19 14:23:32 -耗时 : 1
2019-06-19 14:23:32 -返回值 : login
2019-06-19 14:23:32 -请求地址 : http://localhost:8081/getVerify
2019-06-19 14:23:32 -HTTP METHOD : GET
2019-06-19 14:23:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 14:23:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@189126a5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5327fe2c]
2019-06-19 14:23:32 -4513
2019-06-19 14:23:32 -耗时 : 16
2019-06-19 14:23:32 -返回值 : null
2019-06-19 14:23:37 -请求地址 : http://localhost:8081/login
2019-06-19 14:23:37 -HTTP METHOD : POST
2019-06-19 14:23:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:23:37 -参数 : [admin, 111111, 4513, org.apache.shiro.web.servlet.ShiroHttpServletRequest@515b5078]
2019-06-19 14:23:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:23:37 -==> Parameters: admin(String)
2019-06-19 14:23:37 -<==      Total: 1
2019-06-19 14:23:37 -耗时 : 9
2019-06-19 14:23:37 -返回值 : {msg=操作成功, code=0}
2019-06-19 14:23:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:23:37 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:23:37.838(Timestamp)
2019-06-19 14:23:37 -请求地址 : http://localhost:8081/index
2019-06-19 14:23:37 -HTTP METHOD : GET
2019-06-19 14:23:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 14:23:37 -参数 : [{}]
2019-06-19 14:23:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 14:23:37 -==> Parameters: 1(Long)
2019-06-19 14:23:38 -<==    Updates: 1
2019-06-19 14:23:38 -<==      Total: 51
2019-06-19 14:23:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 14:23:38 -==> Parameters: 138(Long)
2019-06-19 14:23:38 -<==      Total: 1
2019-06-19 14:23:38 -耗时 : 971
2019-06-19 14:23:38 -返回值 : index_v1
2019-06-19 14:23:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:23:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 971(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 14:23:38.84(Timestamp)
2019-06-19 14:23:39 -请求地址 : http://localhost:8081/main
2019-06-19 14:23:39 -HTTP METHOD : GET
2019-06-19 14:23:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 14:23:39 -参数 : []
2019-06-19 14:23:39 -耗时 : 0
2019-06-19 14:23:39 -返回值 : main
2019-06-19 14:23:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 14:23:39 -HTTP METHOD : GET
2019-06-19 14:23:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 14:23:39 -参数 : []
2019-06-19 14:23:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 14:23:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 14:23:39 -<==      Total: 0
2019-06-19 14:23:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 14:23:39 -==> Parameters: 1(Long), 0(String)
2019-06-19 14:23:39 -<==      Total: 1
2019-06-19 14:23:39 -耗时 : 142
2019-06-19 14:23:39 -返回值 : com.bootdo.common.utils.PageUtils@170b0eaa
2019-06-19 14:23:39 -请求地址 : http://localhost:8081/main
2019-06-19 14:23:39 -HTTP METHOD : GET
2019-06-19 14:23:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 14:23:39 -参数 : []
2019-06-19 14:23:39 -耗时 : 1
2019-06-19 14:23:39 -返回值 : main
2019-06-19 14:23:39 -<==    Updates: 1
2019-06-19 14:23:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 14:23:43 -==> Parameters: 1(Long)
2019-06-19 14:23:43 -<==      Total: 95
2019-06-19 14:23:43 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-19 14:23:43 -HTTP METHOD : GET
2019-06-19 14:23:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-19 14:23:43 -参数 : []
2019-06-19 14:23:43 -耗时 : 0
2019-06-19 14:23:43 -返回值 : moneyList/moneyList
2019-06-19 14:23:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:23:49 -HTTP METHOD : GET
2019-06-19 14:23:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:23:49 -参数 : []
2019-06-19 14:23:49 -耗时 : 0
2019-06-19 14:23:49 -返回值 : system/dept/deptTree
2019-06-19 14:23:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:23:49 -HTTP METHOD : GET
2019-06-19 14:23:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:23:49 -参数 : []
2019-06-19 14:23:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:23:49 -==> Parameters: 1(Long)
2019-06-19 14:23:49 -<==      Total: 1
2019-06-19 14:23:49 -耗时 : 26
2019-06-19 14:23:49 -返回值 : {"checked":false,"children":[],"hasChildren":false,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 14:23:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:23:52 -HTTP METHOD : GET
2019-06-19 14:23:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:23:52 -参数 : []
2019-06-19 14:23:52 -耗时 : 0
2019-06-19 14:23:52 -返回值 : system/dept/deptTree
2019-06-19 14:23:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:23:52 -HTTP METHOD : GET
2019-06-19 14:23:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:23:52 -参数 : []
2019-06-19 14:23:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:23:52 -==> Parameters: 1(Long)
2019-06-19 14:23:52 -<==      Total: 1
2019-06-19 14:23:52 -耗时 : 3
2019-06-19 14:23:52 -返回值 : {"checked":false,"children":[],"hasChildren":false,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 14:23:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:23:55 -HTTP METHOD : GET
2019-06-19 14:23:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:23:55 -参数 : []
2019-06-19 14:23:55 -耗时 : 1
2019-06-19 14:23:55 -返回值 : system/dept/deptTree
2019-06-19 14:23:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:23:55 -HTTP METHOD : GET
2019-06-19 14:23:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:23:55 -参数 : []
2019-06-19 14:23:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:23:55 -==> Parameters: 1(Long)
2019-06-19 14:23:55 -<==      Total: 1
2019-06-19 14:23:55 -耗时 : 4
2019-06-19 14:23:55 -返回值 : {"checked":false,"children":[],"hasChildren":false,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 14:24:01 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:73)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:24:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:24:03 -HTTP METHOD : GET
2019-06-19 14:24:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:24:03 -参数 : []
2019-06-19 14:24:03 -耗时 : 1
2019-06-19 14:24:03 -返回值 : system/dept/deptTree
2019-06-19 14:24:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:24:03 -HTTP METHOD : GET
2019-06-19 14:24:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:24:03 -参数 : []
2019-06-19 14:24:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:24:03 -==> Parameters: 1(Long)
2019-06-19 14:24:03 -<==      Total: 1
2019-06-19 14:24:03 -耗时 : 4
2019-06-19 14:24:03 -返回值 : {"checked":false,"children":[],"hasChildren":false,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 14:24:06 -请求地址 : http://localhost:8081/
2019-06-19 14:24:06 -HTTP METHOD : GET
2019-06-19 14:24:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-06-19 14:24:06 -参数 : [{}]
2019-06-19 14:24:06 -耗时 : 0
2019-06-19 14:24:06 -返回值 : redirect:/index
2019-06-19 14:24:06 -请求地址 : http://localhost:8081/login;JSESSIONID=63edfd9b-cd80-4e47-9a2e-d69ab3025fb2
2019-06-19 14:24:06 -HTTP METHOD : GET
2019-06-19 14:24:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:24:06 -参数 : [{}]
2019-06-19 14:24:06 -耗时 : 0
2019-06-19 14:24:06 -返回值 : login
2019-06-19 14:24:06 -请求地址 : http://localhost:8081/getVerify
2019-06-19 14:24:06 -HTTP METHOD : GET
2019-06-19 14:24:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 14:24:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@637dcb84, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7fad3eeb]
2019-06-19 14:24:06 -7355
2019-06-19 14:24:06 -耗时 : 10
2019-06-19 14:24:06 -返回值 : null
2019-06-19 14:24:11 -请求地址 : http://localhost:8081/login
2019-06-19 14:24:11 -HTTP METHOD : POST
2019-06-19 14:24:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:24:11 -参数 : [admin, 111111, 7355, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e8cf438]
2019-06-19 14:24:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:24:11 -==> Parameters: admin(String)
2019-06-19 14:24:11 -<==      Total: 1
2019-06-19 14:24:11 -耗时 : 113
2019-06-19 14:24:11 -返回值 : {msg=操作成功, code=0}
2019-06-19 14:24:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:24:11 -==> Parameters: 1(Long), admin(String), 登录(String), 113(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:24:11.803(Timestamp)
2019-06-19 14:24:11 -请求地址 : http://localhost:8081/index
2019-06-19 14:24:11 -HTTP METHOD : GET
2019-06-19 14:24:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 14:24:11 -参数 : [{}]
2019-06-19 14:24:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 14:24:11 -==> Parameters: 1(Long)
2019-06-19 14:24:11 -<==      Total: 51
2019-06-19 14:24:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 14:24:11 -==> Parameters: 138(Long)
2019-06-19 14:24:11 -<==      Total: 1
2019-06-19 14:24:11 -耗时 : 36
2019-06-19 14:24:11 -返回值 : index_v1
2019-06-19 14:24:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:24:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 14:24:11.859(Timestamp)
2019-06-19 14:24:11 -<==    Updates: 1
2019-06-19 14:24:11 -请求地址 : http://localhost:8081/main
2019-06-19 14:24:11 -HTTP METHOD : GET
2019-06-19 14:24:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 14:24:11 -参数 : []
2019-06-19 14:24:11 -耗时 : 0
2019-06-19 14:24:12 -返回值 : main
2019-06-19 14:24:12 -<==    Updates: 1
2019-06-19 14:24:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 14:24:12 -HTTP METHOD : GET
2019-06-19 14:24:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 14:24:12 -参数 : []
2019-06-19 14:24:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 14:24:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 14:24:12 -<==      Total: 0
2019-06-19 14:24:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 14:24:12 -==> Parameters: 1(Long), 0(String)
2019-06-19 14:24:12 -<==      Total: 1
2019-06-19 14:24:12 -耗时 : 8
2019-06-19 14:24:12 -返回值 : com.bootdo.common.utils.PageUtils@3b9bc5d1
2019-06-19 14:24:12 -请求地址 : http://localhost:8081/main
2019-06-19 14:24:12 -HTTP METHOD : GET
2019-06-19 14:24:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 14:24:12 -参数 : []
2019-06-19 14:24:12 -耗时 : 0
2019-06-19 14:24:12 -返回值 : main
2019-06-19 14:24:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 14:24:15 -==> Parameters: 1(Long)
2019-06-19 14:24:15 -<==      Total: 95
2019-06-19 14:24:15 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-19 14:24:15 -HTTP METHOD : GET
2019-06-19 14:24:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-19 14:24:15 -参数 : []
2019-06-19 14:24:15 -耗时 : 0
2019-06-19 14:24:15 -返回值 : moneyList/moneyList
2019-06-19 14:24:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:24:33 -HTTP METHOD : GET
2019-06-19 14:24:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:24:33 -参数 : []
2019-06-19 14:24:33 -耗时 : 1
2019-06-19 14:24:33 -返回值 : system/dept/deptTree
2019-06-19 14:24:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:24:33 -HTTP METHOD : GET
2019-06-19 14:24:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:24:33 -参数 : []
2019-06-19 14:24:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:24:33 -==> Parameters: 1(Long)
2019-06-19 14:24:33 -<==      Total: 1
2019-06-19 14:24:33 -耗时 : 3
2019-06-19 14:24:33 -返回值 : {"checked":false,"children":[],"hasChildren":false,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 14:24:39 -请求地址 : http://localhost:8081/
2019-06-19 14:24:39 -HTTP METHOD : GET
2019-06-19 14:24:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-06-19 14:24:39 -参数 : [{}]
2019-06-19 14:24:39 -耗时 : 1
2019-06-19 14:24:39 -返回值 : redirect:/index
2019-06-19 14:24:39 -请求地址 : http://localhost:8081/login;JSESSIONID=520dbc9c-47ef-446f-9510-16aea0fd614a
2019-06-19 14:24:39 -HTTP METHOD : GET
2019-06-19 14:24:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:24:39 -参数 : [{}]
2019-06-19 14:24:39 -耗时 : 1
2019-06-19 14:24:39 -返回值 : login
2019-06-19 14:24:39 -请求地址 : http://localhost:8081/getVerify
2019-06-19 14:24:39 -HTTP METHOD : GET
2019-06-19 14:24:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 14:24:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6dffea54, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4d8fcb4f]
2019-06-19 14:24:39 -9973
2019-06-19 14:24:39 -耗时 : 11
2019-06-19 14:24:39 -返回值 : null
2019-06-19 14:25:03 -请求地址 : http://localhost:8081/login
2019-06-19 14:25:03 -HTTP METHOD : POST
2019-06-19 14:25:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:25:03 -参数 : [刘宇, 111111, 9973, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6c68d104]
2019-06-19 14:25:03 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:25:03 -==> Parameters: 刘宇(String)
2019-06-19 14:25:03 -<==      Total: 1
2019-06-19 14:25:03 -耗时 : 6
2019-06-19 14:25:03 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:25:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:25:03 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:25:03.928(Timestamp)
2019-06-19 14:25:04 -<==    Updates: 1
2019-06-19 14:25:12 -请求地址 : http://localhost:8081/login
2019-06-19 14:25:12 -HTTP METHOD : POST
2019-06-19 14:25:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:25:12 -参数 : [刘雨, 111111, 9973, org.apache.shiro.web.servlet.ShiroHttpServletRequest@631d3031]
2019-06-19 14:25:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:25:12 -==> Parameters: 刘雨(String)
2019-06-19 14:25:12 -<==      Total: 0
2019-06-19 14:25:12 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘雨, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:25:12 -耗时 : 6
2019-06-19 14:25:12 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:25:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:25:12 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:25:12.52(Timestamp)
2019-06-19 14:25:12 -<==    Updates: 1
2019-06-19 14:25:17 -请求地址 : http://localhost:8081/login
2019-06-19 14:25:17 -HTTP METHOD : POST
2019-06-19 14:25:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:25:17 -参数 : [刘雨, 111111, 9973, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d0c3738]
2019-06-19 14:25:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:25:17 -==> Parameters: 刘雨(String)
2019-06-19 14:25:17 -<==      Total: 0
2019-06-19 14:25:17 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘雨, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:25:17 -耗时 : 6
2019-06-19 14:25:17 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:25:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:25:17 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:25:17.406(Timestamp)
2019-06-19 14:25:17 -<==    Updates: 1
2019-06-19 14:25:22 -请求地址 : http://localhost:8081/login
2019-06-19 14:25:22 -HTTP METHOD : POST
2019-06-19 14:25:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:25:22 -参数 : [刘雨, 123456, 9973, org.apache.shiro.web.servlet.ShiroHttpServletRequest@246b3c5e]
2019-06-19 14:25:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:25:22 -==> Parameters: 刘雨(String)
2019-06-19 14:25:22 -<==      Total: 0
2019-06-19 14:25:22 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘雨, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:25:22 -耗时 : 5
2019-06-19 14:25:22 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:25:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:25:22 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:25:22.887(Timestamp)
2019-06-19 14:25:23 -<==    Updates: 1
2019-06-19 14:26:25 -请求地址 : http://localhost:8081/login
2019-06-19 14:26:25 -HTTP METHOD : POST
2019-06-19 14:26:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:26:25 -参数 : [admin, 111111, 9973, org.apache.shiro.web.servlet.ShiroHttpServletRequest@76307481]
2019-06-19 14:26:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:26:25 -==> Parameters: admin(String)
2019-06-19 14:26:25 -<==      Total: 1
2019-06-19 14:26:25 -耗时 : 8
2019-06-19 14:26:25 -返回值 : {msg=操作成功, code=0}
2019-06-19 14:26:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:26:25 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:26:25.482(Timestamp)
2019-06-19 14:26:25 -请求地址 : http://localhost:8081/index
2019-06-19 14:26:25 -HTTP METHOD : GET
2019-06-19 14:26:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 14:26:25 -参数 : [{}]
2019-06-19 14:26:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 14:26:25 -==> Parameters: 1(Long)
2019-06-19 14:26:25 -<==      Total: 51
2019-06-19 14:26:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 14:26:25 -==> Parameters: 138(Long)
2019-06-19 14:26:25 -<==      Total: 1
2019-06-19 14:26:25 -<==    Updates: 1
2019-06-19 14:26:25 -耗时 : 26
2019-06-19 14:26:25 -返回值 : index_v1
2019-06-19 14:26:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:26:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 14:26:25.54(Timestamp)
2019-06-19 14:26:25 -<==    Updates: 1
2019-06-19 14:26:25 -请求地址 : http://localhost:8081/main
2019-06-19 14:26:25 -HTTP METHOD : GET
2019-06-19 14:26:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 14:26:25 -参数 : []
2019-06-19 14:26:25 -耗时 : 0
2019-06-19 14:26:25 -返回值 : main
2019-06-19 14:26:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 14:26:25 -HTTP METHOD : GET
2019-06-19 14:26:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 14:26:25 -参数 : []
2019-06-19 14:26:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 14:26:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 14:26:25 -<==      Total: 0
2019-06-19 14:26:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 14:26:25 -==> Parameters: 1(Long), 0(String)
2019-06-19 14:26:25 -<==      Total: 1
2019-06-19 14:26:25 -耗时 : 5
2019-06-19 14:26:25 -返回值 : com.bootdo.common.utils.PageUtils@3355cbff
2019-06-19 14:26:25 -请求地址 : http://localhost:8081/main
2019-06-19 14:26:25 -HTTP METHOD : GET
2019-06-19 14:26:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 14:26:25 -参数 : []
2019-06-19 14:26:25 -耗时 : 2
2019-06-19 14:26:25 -返回值 : main
2019-06-19 14:26:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 14:26:29 -==> Parameters: 1(Long)
2019-06-19 14:26:29 -<==      Total: 95
2019-06-19 14:26:29 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-19 14:26:29 -HTTP METHOD : GET
2019-06-19 14:26:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-19 14:26:29 -参数 : []
2019-06-19 14:26:29 -耗时 : 0
2019-06-19 14:26:29 -返回值 : moneyList/moneyList
2019-06-19 14:26:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:26:30 -HTTP METHOD : GET
2019-06-19 14:26:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:26:30 -参数 : []
2019-06-19 14:26:30 -耗时 : 0
2019-06-19 14:26:30 -返回值 : system/dept/deptTree
2019-06-19 14:26:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:26:31 -HTTP METHOD : GET
2019-06-19 14:26:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:26:31 -参数 : []
2019-06-19 14:26:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:26:31 -==> Parameters: 1(Long)
2019-06-19 14:26:31 -<==      Total: 1
2019-06-19 14:26:31 -耗时 : 6
2019-06-19 14:26:31 -返回值 : {"checked":false,"children":[],"hasChildren":false,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 14:26:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:26:33 -HTTP METHOD : GET
2019-06-19 14:26:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:26:33 -参数 : []
2019-06-19 14:26:33 -耗时 : 0
2019-06-19 14:26:33 -返回值 : system/dept/deptTree
2019-06-19 14:26:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:26:33 -HTTP METHOD : GET
2019-06-19 14:26:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:26:33 -参数 : []
2019-06-19 14:26:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:26:33 -==> Parameters: 1(Long)
2019-06-19 14:26:33 -<==      Total: 1
2019-06-19 14:26:33 -耗时 : 4
2019-06-19 14:26:33 -返回值 : {"checked":false,"children":[],"hasChildren":false,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 14:26:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:26:35 -HTTP METHOD : GET
2019-06-19 14:26:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:26:35 -参数 : []
2019-06-19 14:26:35 -耗时 : 0
2019-06-19 14:26:35 -返回值 : system/dept/deptTree
2019-06-19 14:26:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:26:35 -HTTP METHOD : GET
2019-06-19 14:26:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:26:35 -参数 : []
2019-06-19 14:26:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:26:35 -==> Parameters: 1(Long)
2019-06-19 14:26:35 -<==      Total: 1
2019-06-19 14:26:35 -耗时 : 3
2019-06-19 14:26:35 -返回值 : {"checked":false,"children":[],"hasChildren":false,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 14:28:19 -请求地址 : http://localhost:8081/
2019-06-19 14:28:19 -HTTP METHOD : GET
2019-06-19 14:28:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-06-19 14:28:19 -参数 : [{}]
2019-06-19 14:28:19 -耗时 : 0
2019-06-19 14:28:19 -返回值 : redirect:/index
2019-06-19 14:28:19 -请求地址 : http://localhost:8081/login;JSESSIONID=ef60951a-3bbe-4c34-bac2-281d46671705
2019-06-19 14:28:19 -HTTP METHOD : GET
2019-06-19 14:28:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:28:19 -参数 : [{}]
2019-06-19 14:28:19 -耗时 : 1
2019-06-19 14:28:19 -返回值 : login
2019-06-19 14:28:19 -请求地址 : http://localhost:8081/getVerify
2019-06-19 14:28:19 -HTTP METHOD : GET
2019-06-19 14:28:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 14:28:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@44fba1a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1e19b51c]
2019-06-19 14:28:19 -0433
2019-06-19 14:28:19 -耗时 : 17
2019-06-19 14:28:19 -返回值 : null
2019-06-19 14:28:46 -请求地址 : http://localhost:8081/login
2019-06-19 14:28:46 -HTTP METHOD : POST
2019-06-19 14:28:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:28:46 -参数 : [刘桂艳, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@32a62ea4]
2019-06-19 14:28:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:28:46 -==> Parameters: 刘桂艳(String)
2019-06-19 14:28:46 -<==      Total: 0
2019-06-19 14:28:46 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:28:46 -耗时 : 7
2019-06-19 14:28:46 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:28:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:28:46 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:28:46.464(Timestamp)
2019-06-19 14:28:46 -<==    Updates: 1
2019-06-19 14:28:47 -请求地址 : http://localhost:8081/login
2019-06-19 14:28:47 -HTTP METHOD : POST
2019-06-19 14:28:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:28:47 -参数 : [刘桂艳, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@d572808]
2019-06-19 14:28:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:28:47 -==> Parameters: 刘桂艳(String)
2019-06-19 14:28:47 -<==      Total: 0
2019-06-19 14:28:47 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:28:47 -耗时 : 5
2019-06-19 14:28:47 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:28:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:28:47 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:28:47.324(Timestamp)
2019-06-19 14:28:47 -<==    Updates: 1
2019-06-19 14:28:47 -请求地址 : http://localhost:8081/login
2019-06-19 14:28:47 -HTTP METHOD : POST
2019-06-19 14:28:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:28:47 -参数 : [刘桂艳, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@df20b53]
2019-06-19 14:28:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:28:47 -==> Parameters: 刘桂艳(String)
2019-06-19 14:28:47 -<==      Total: 0
2019-06-19 14:28:47 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:28:47 -耗时 : 9
2019-06-19 14:28:47 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:28:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:28:47 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:28:47.652(Timestamp)
2019-06-19 14:28:47 -<==    Updates: 1
2019-06-19 14:28:47 -请求地址 : http://localhost:8081/login
2019-06-19 14:28:47 -HTTP METHOD : POST
2019-06-19 14:28:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:28:47 -参数 : [刘桂艳, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@61a39e07]
2019-06-19 14:28:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:28:47 -==> Parameters: 刘桂艳(String)
2019-06-19 14:28:47 -<==      Total: 0
2019-06-19 14:28:47 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:28:47 -耗时 : 5
2019-06-19 14:28:47 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:28:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:28:47 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:28:47.911(Timestamp)
2019-06-19 14:28:47 -<==    Updates: 1
2019-06-19 14:30:55 -请求地址 : http://localhost:8081/login
2019-06-19 14:30:55 -HTTP METHOD : POST
2019-06-19 14:30:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:30:55 -参数 : [刘桂艳, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f37e0c5]
2019-06-19 14:30:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:30:55 -==> Parameters: 刘桂艳(String)
2019-06-19 14:30:55 -<==      Total: 0
2019-06-19 14:30:55 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:30:55 -耗时 : 10
2019-06-19 14:30:55 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:30:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:30:55 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 24(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:30:55.904(Timestamp)
2019-06-19 14:30:55 -<==    Updates: 1
2019-06-19 14:30:56 -请求地址 : http://localhost:8081/login
2019-06-19 14:30:56 -HTTP METHOD : POST
2019-06-19 14:30:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:30:56 -参数 : [刘桂艳, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@147e2ba2]
2019-06-19 14:30:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:30:56 -==> Parameters: 刘桂艳(String)
2019-06-19 14:30:56 -<==      Total: 0
2019-06-19 14:30:56 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:30:56 -耗时 : 7
2019-06-19 14:30:56 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:30:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:30:56 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 15(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:30:56.563(Timestamp)
2019-06-19 14:30:56 -<==    Updates: 1
2019-06-19 14:30:56 -请求地址 : http://localhost:8081/login
2019-06-19 14:30:56 -HTTP METHOD : POST
2019-06-19 14:30:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:30:56 -参数 : [刘桂艳, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4296b224]
2019-06-19 14:30:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:30:56 -==> Parameters: 刘桂艳(String)
2019-06-19 14:30:56 -<==      Total: 0
2019-06-19 14:30:56 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:30:56 -耗时 : 4
2019-06-19 14:30:56 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:30:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:30:56 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:30:56.752(Timestamp)
2019-06-19 14:30:56 -<==    Updates: 1
2019-06-19 14:30:56 -请求地址 : http://localhost:8081/login
2019-06-19 14:30:56 -HTTP METHOD : POST
2019-06-19 14:30:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:30:56 -参数 : [刘桂艳, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5f47d2e6]
2019-06-19 14:30:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:30:56 -==> Parameters: 刘桂艳(String)
2019-06-19 14:30:56 -<==      Total: 0
2019-06-19 14:30:56 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:30:56 -耗时 : 5
2019-06-19 14:30:56 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:30:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:30:56 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:30:56.943(Timestamp)
2019-06-19 14:30:56 -<==    Updates: 1
2019-06-19 14:30:57 -请求地址 : http://localhost:8081/login
2019-06-19 14:30:57 -HTTP METHOD : POST
2019-06-19 14:30:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:30:57 -参数 : [刘桂艳, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5dc76b55]
2019-06-19 14:30:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:30:57 -==> Parameters: 刘桂艳(String)
2019-06-19 14:30:57 -<==      Total: 0
2019-06-19 14:30:57 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:30:57 -耗时 : 5
2019-06-19 14:30:57 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:30:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:30:57 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:30:57.126(Timestamp)
2019-06-19 14:30:57 -<==    Updates: 1
2019-06-19 14:30:57 -请求地址 : http://localhost:8081/login
2019-06-19 14:30:57 -HTTP METHOD : POST
2019-06-19 14:30:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:30:57 -参数 : [刘桂艳, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@489f7a0]
2019-06-19 14:30:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:30:57 -==> Parameters: 刘桂艳(String)
2019-06-19 14:30:57 -<==      Total: 0
2019-06-19 14:30:57 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 刘桂艳, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:50)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:102)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:58)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:41)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$823ef527.ajaxLogin(<generated>)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:30:57 -耗时 : 4
2019-06-19 14:30:57 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:30:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:30:57 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:30:57.351(Timestamp)
2019-06-19 14:30:57 -<==    Updates: 1
2019-06-19 14:31:52 -请求地址 : http://localhost:8081/login
2019-06-19 14:31:52 -HTTP METHOD : POST
2019-06-19 14:31:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:31:52 -参数 : [刘桂艳, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@11d7fa63]
2019-06-19 14:31:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:31:52 -==> Parameters: 刘桂艳(String)
2019-06-19 14:31:52 -<==      Total: 1
2019-06-19 14:31:52 -耗时 : 4
2019-06-19 14:31:52 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:31:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:31:52 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:31:52.105(Timestamp)
2019-06-19 14:31:52 -<==    Updates: 1
2019-06-19 14:31:54 -请求地址 : http://localhost:8081/login;JSESSIONID=ef60951a-3bbe-4c34-bac2-281d46671705
2019-06-19 14:31:54 -HTTP METHOD : GET
2019-06-19 14:31:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:31:54 -参数 : [{}]
2019-06-19 14:31:54 -耗时 : 1
2019-06-19 14:31:54 -返回值 : login
2019-06-19 14:31:54 -请求地址 : http://localhost:8081/getVerify
2019-06-19 14:31:54 -HTTP METHOD : GET
2019-06-19 14:31:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 14:31:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@70e80971, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3eab5d09]
2019-06-19 14:31:54 -8570
2019-06-19 14:31:54 -耗时 : 9
2019-06-19 14:31:54 -返回值 : null
2019-06-19 14:31:54 -请求地址 : http://localhost:8081/login
2019-06-19 14:31:54 -HTTP METHOD : GET
2019-06-19 14:31:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:31:54 -参数 : [{}]
2019-06-19 14:31:54 -耗时 : 2
2019-06-19 14:31:54 -返回值 : login
2019-06-19 14:32:14 -请求地址 : http://localhost:8081/login
2019-06-19 14:32:14 -HTTP METHOD : POST
2019-06-19 14:32:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:32:14 -参数 : [刘宇, 111111, 8570, org.apache.shiro.web.servlet.ShiroHttpServletRequest@520f904d]
2019-06-19 14:32:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:32:14 -==> Parameters: 刘宇(String)
2019-06-19 14:32:14 -<==      Total: 1
2019-06-19 14:32:14 -耗时 : 5
2019-06-19 14:32:14 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:32:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:32:14 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:32:14.435(Timestamp)
2019-06-19 14:32:14 -<==    Updates: 1
2019-06-19 14:32:15 -请求地址 : http://localhost:8081/login
2019-06-19 14:32:15 -HTTP METHOD : POST
2019-06-19 14:32:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:32:15 -参数 : [刘宇, 111111, 8570, org.apache.shiro.web.servlet.ShiroHttpServletRequest@72362282]
2019-06-19 14:32:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:32:15 -==> Parameters: 刘宇(String)
2019-06-19 14:32:15 -<==      Total: 1
2019-06-19 14:32:15 -耗时 : 6
2019-06-19 14:32:15 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:32:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:32:15 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:32:15.192(Timestamp)
2019-06-19 14:32:15 -<==    Updates: 1
2019-06-19 14:32:15 -请求地址 : http://localhost:8081/login
2019-06-19 14:32:15 -HTTP METHOD : POST
2019-06-19 14:32:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:32:15 -参数 : [刘宇, 111111, 8570, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5867cb7]
2019-06-19 14:32:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:32:15 -==> Parameters: 刘宇(String)
2019-06-19 14:32:15 -<==      Total: 1
2019-06-19 14:32:15 -耗时 : 3
2019-06-19 14:32:15 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:32:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:32:15 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 3(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:32:15.422(Timestamp)
2019-06-19 14:32:15 -<==    Updates: 1
2019-06-19 14:32:15 -请求地址 : http://localhost:8081/login
2019-06-19 14:32:15 -HTTP METHOD : POST
2019-06-19 14:32:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:32:15 -参数 : [刘宇, 111111, 8570, org.apache.shiro.web.servlet.ShiroHttpServletRequest@57594a9a]
2019-06-19 14:32:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:32:15 -==> Parameters: 刘宇(String)
2019-06-19 14:32:15 -<==      Total: 1
2019-06-19 14:32:15 -耗时 : 5
2019-06-19 14:32:15 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:32:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:32:15 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:32:15.653(Timestamp)
2019-06-19 14:32:15 -<==    Updates: 1
2019-06-19 14:32:15 -请求地址 : http://localhost:8081/login
2019-06-19 14:32:15 -HTTP METHOD : POST
2019-06-19 14:32:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:32:15 -参数 : [刘宇, 111111, 8570, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1abcaf4]
2019-06-19 14:32:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:32:15 -==> Parameters: 刘宇(String)
2019-06-19 14:32:15 -<==      Total: 1
2019-06-19 14:32:15 -耗时 : 5
2019-06-19 14:32:15 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:32:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:32:15 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:32:15.887(Timestamp)
2019-06-19 14:32:15 -<==    Updates: 1
2019-06-19 14:32:16 -请求地址 : http://localhost:8081/login
2019-06-19 14:32:16 -HTTP METHOD : POST
2019-06-19 14:32:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:32:16 -参数 : [刘宇, 111111, 8570, org.apache.shiro.web.servlet.ShiroHttpServletRequest@36d557b1]
2019-06-19 14:32:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:32:16 -==> Parameters: 刘宇(String)
2019-06-19 14:32:16 -<==      Total: 1
2019-06-19 14:32:16 -耗时 : 5
2019-06-19 14:32:16 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:32:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:32:16 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:32:16.094(Timestamp)
2019-06-19 14:32:16 -<==    Updates: 1
2019-06-19 14:32:23 -请求地址 : http://localhost:8081/login
2019-06-19 14:32:23 -HTTP METHOD : POST
2019-06-19 14:32:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:32:23 -参数 : [刘宇, 111111, 8570, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7a8c0cf]
2019-06-19 14:32:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:32:23 -==> Parameters: 刘宇(String)
2019-06-19 14:32:23 -<==      Total: 1
2019-06-19 14:32:23 -耗时 : 6
2019-06-19 14:32:23 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:32:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:32:23 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:32:23.063(Timestamp)
2019-06-19 14:32:23 -<==    Updates: 1
2019-06-19 14:32:44 -请求地址 : http://localhost:8081/login;JSESSIONID=ef60951a-3bbe-4c34-bac2-281d46671705
2019-06-19 14:32:44 -HTTP METHOD : GET
2019-06-19 14:32:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:32:44 -参数 : [{}]
2019-06-19 14:32:44 -耗时 : 1
2019-06-19 14:32:44 -返回值 : login
2019-06-19 14:32:44 -请求地址 : http://localhost:8081/getVerify
2019-06-19 14:32:44 -HTTP METHOD : GET
2019-06-19 14:32:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 14:32:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7e7c190b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@35097c67]
2019-06-19 14:32:44 -7935
2019-06-19 14:32:44 -耗时 : 7
2019-06-19 14:32:44 -返回值 : null
2019-06-19 14:32:45 -请求地址 : http://localhost:8081/login
2019-06-19 14:32:45 -HTTP METHOD : GET
2019-06-19 14:32:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:32:45 -参数 : [{}]
2019-06-19 14:32:45 -耗时 : 0
2019-06-19 14:32:45 -返回值 : login
2019-06-19 14:33:05 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:05 -HTTP METHOD : POST
2019-06-19 14:33:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:05 -参数 : [刘宇, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@28e4f236]
2019-06-19 14:33:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:05 -==> Parameters: 刘宇(String)
2019-06-19 14:33:05 -<==      Total: 1
2019-06-19 14:33:05 -耗时 : 6
2019-06-19 14:33:05 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:05 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:05.309(Timestamp)
2019-06-19 14:33:05 -<==    Updates: 1
2019-06-19 14:33:06 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:06 -HTTP METHOD : POST
2019-06-19 14:33:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:06 -参数 : [刘宇, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@43df4cba]
2019-06-19 14:33:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:06 -==> Parameters: 刘宇(String)
2019-06-19 14:33:06 -<==      Total: 1
2019-06-19 14:33:06 -耗时 : 6
2019-06-19 14:33:06 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:06 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:06.224(Timestamp)
2019-06-19 14:33:06 -<==    Updates: 1
2019-06-19 14:33:06 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:06 -HTTP METHOD : POST
2019-06-19 14:33:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:06 -参数 : [刘宇, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@23071095]
2019-06-19 14:33:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:06 -==> Parameters: 刘宇(String)
2019-06-19 14:33:06 -<==      Total: 1
2019-06-19 14:33:06 -耗时 : 8
2019-06-19 14:33:06 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:06 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:06.473(Timestamp)
2019-06-19 14:33:06 -<==    Updates: 1
2019-06-19 14:33:06 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:06 -HTTP METHOD : POST
2019-06-19 14:33:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:06 -参数 : [刘宇, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1a6a9e2a]
2019-06-19 14:33:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:06 -==> Parameters: 刘宇(String)
2019-06-19 14:33:06 -<==      Total: 1
2019-06-19 14:33:06 -耗时 : 37
2019-06-19 14:33:06 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:06 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 37(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:06.718(Timestamp)
2019-06-19 14:33:06 -<==    Updates: 1
2019-06-19 14:33:06 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:06 -HTTP METHOD : POST
2019-06-19 14:33:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:06 -参数 : [刘宇, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@52d30666]
2019-06-19 14:33:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:06 -==> Parameters: 刘宇(String)
2019-06-19 14:33:06 -<==      Total: 1
2019-06-19 14:33:06 -耗时 : 5
2019-06-19 14:33:06 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:06 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:06.885(Timestamp)
2019-06-19 14:33:06 -<==    Updates: 1
2019-06-19 14:33:07 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:07 -HTTP METHOD : POST
2019-06-19 14:33:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:07 -参数 : [刘宇, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@59955b1b]
2019-06-19 14:33:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:07 -==> Parameters: 刘宇(String)
2019-06-19 14:33:07 -<==      Total: 1
2019-06-19 14:33:07 -耗时 : 3
2019-06-19 14:33:07 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:07 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 3(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:07.076(Timestamp)
2019-06-19 14:33:07 -<==    Updates: 1
2019-06-19 14:33:07 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:07 -HTTP METHOD : POST
2019-06-19 14:33:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:07 -参数 : [刘宇, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7796adf7]
2019-06-19 14:33:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:07 -==> Parameters: 刘宇(String)
2019-06-19 14:33:07 -<==      Total: 1
2019-06-19 14:33:07 -耗时 : 3
2019-06-19 14:33:07 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:07 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 3(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:07.267(Timestamp)
2019-06-19 14:33:07 -<==    Updates: 1
2019-06-19 14:33:07 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:07 -HTTP METHOD : POST
2019-06-19 14:33:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:07 -参数 : [刘宇, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6927925]
2019-06-19 14:33:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:07 -==> Parameters: 刘宇(String)
2019-06-19 14:33:07 -<==      Total: 1
2019-06-19 14:33:07 -耗时 : 4
2019-06-19 14:33:07 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:07 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:07.516(Timestamp)
2019-06-19 14:33:07 -<==    Updates: 1
2019-06-19 14:33:18 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:18 -HTTP METHOD : POST
2019-06-19 14:33:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:18 -参数 : [刘桂艳, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d4f47b9]
2019-06-19 14:33:18 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:18 -==> Parameters: 刘桂艳(String)
2019-06-19 14:33:18 -<==      Total: 1
2019-06-19 14:33:18 -耗时 : 6
2019-06-19 14:33:18 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:18 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:18.361(Timestamp)
2019-06-19 14:33:18 -<==    Updates: 1
2019-06-19 14:33:18 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:18 -HTTP METHOD : POST
2019-06-19 14:33:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:18 -参数 : [刘桂艳, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@767f6375]
2019-06-19 14:33:18 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:18 -==> Parameters: 刘桂艳(String)
2019-06-19 14:33:18 -<==      Total: 1
2019-06-19 14:33:18 -耗时 : 4
2019-06-19 14:33:18 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:19 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:18.998(Timestamp)
2019-06-19 14:33:19 -<==    Updates: 1
2019-06-19 14:33:19 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:19 -HTTP METHOD : POST
2019-06-19 14:33:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:19 -参数 : [刘桂艳, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6a4d2bc8]
2019-06-19 14:33:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:19 -==> Parameters: 刘桂艳(String)
2019-06-19 14:33:19 -<==      Total: 1
2019-06-19 14:33:19 -耗时 : 4
2019-06-19 14:33:19 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:19 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:19.271(Timestamp)
2019-06-19 14:33:19 -<==    Updates: 1
2019-06-19 14:33:19 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:19 -HTTP METHOD : POST
2019-06-19 14:33:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:33:19 -参数 : [刘桂艳, 111111, 7935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6e4d7db2]
2019-06-19 14:33:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:33:19 -==> Parameters: 刘桂艳(String)
2019-06-19 14:33:19 -<==      Total: 1
2019-06-19 14:33:19 -耗时 : 5
2019-06-19 14:33:19 -返回值 : {msg=用户或密码错误, code=500}
2019-06-19 14:33:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:19 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:33:19.47(Timestamp)
2019-06-19 14:33:19 -<==    Updates: 1
2019-06-19 14:33:40 -请求地址 : http://localhost:8081/login;JSESSIONID=ef60951a-3bbe-4c34-bac2-281d46671705
2019-06-19 14:33:40 -HTTP METHOD : GET
2019-06-19 14:33:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:33:40 -参数 : [{}]
2019-06-19 14:33:40 -耗时 : 0
2019-06-19 14:33:40 -返回值 : login
2019-06-19 14:33:41 -请求地址 : http://localhost:8081/getVerify
2019-06-19 14:33:41 -HTTP METHOD : GET
2019-06-19 14:33:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 14:33:41 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7291ab49, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2dea9702]
2019-06-19 14:33:41 -0739
2019-06-19 14:33:41 -耗时 : 10
2019-06-19 14:33:41 -返回值 : null
2019-06-19 14:33:41 -请求地址 : http://localhost:8081/login
2019-06-19 14:33:41 -HTTP METHOD : GET
2019-06-19 14:33:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:33:41 -参数 : [{}]
2019-06-19 14:33:41 -耗时 : 1
2019-06-19 14:33:41 -返回值 : login
2019-06-19 14:33:58 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:197)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:33:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:33:58 -==> Parameters: null, null, error(String), null, http://localhost:8081/;JSESSIONID=ef60951a-3bbe-4c34-bac2-281d46671705login(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-06-19 14:33:58.169(Timestamp)
2019-06-19 14:33:58 -<==    Updates: 1
2019-06-19 14:34:11 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:197)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:34:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:34:11 -==> Parameters: null, null, error(String), null, http://localhost:8081/;JSESSIONID=ef60951a-3bbe-4c34-bac2-281d46671705login(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-06-19 14:34:11.612(Timestamp)
2019-06-19 14:34:11 -<==    Updates: 1
2019-06-19 14:34:46 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:197)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:34:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:34:46 -==> Parameters: null, null, error(String), null, http://localhost:8081/;JSESSIONID=ef60951a-3bbe-4c34-bac2-281d46671705login(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-06-19 14:34:46.075(Timestamp)
2019-06-19 14:34:46 -<==    Updates: 1
2019-06-19 14:34:46 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:197)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:34:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:34:46 -==> Parameters: null, null, error(String), null, http://localhost:8081/;JSESSIONID=ef60951a-3bbe-4c34-bac2-281d46671705login(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-06-19 14:34:46.965(Timestamp)
2019-06-19 14:34:47 -<==    Updates: 1
2019-06-19 14:34:48 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:197)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-06-19 14:34:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:34:48 -==> Parameters: null, null, error(String), null, http://localhost:8081/;JSESSIONID=ef60951a-3bbe-4c34-bac2-281d46671705login(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-06-19 14:34:48.011(Timestamp)
2019-06-19 14:34:48 -<==    Updates: 1
2019-06-19 14:35:19 -请求地址 : http://localhost:8081/login;JSESSIONID=ef60951a-3bbe-4c34-bac2-281d46671705
2019-06-19 14:35:19 -HTTP METHOD : GET
2019-06-19 14:35:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:35:19 -参数 : [{}]
2019-06-19 14:35:19 -耗时 : 1
2019-06-19 14:35:19 -返回值 : login
2019-06-19 14:35:20 -请求地址 : http://localhost:8081/getVerify
2019-06-19 14:35:20 -HTTP METHOD : GET
2019-06-19 14:35:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 14:35:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@11d3956b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5865430c]
2019-06-19 14:35:20 -2133
2019-06-19 14:35:20 -耗时 : 9
2019-06-19 14:35:20 -返回值 : null
2019-06-19 14:35:20 -请求地址 : http://localhost:8081/login
2019-06-19 14:35:20 -HTTP METHOD : GET
2019-06-19 14:35:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 14:35:20 -参数 : [{}]
2019-06-19 14:35:20 -耗时 : 0
2019-06-19 14:35:20 -返回值 : login
2019-06-19 14:35:49 -请求地址 : http://localhost:8081/login
2019-06-19 14:35:49 -HTTP METHOD : POST
2019-06-19 14:35:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 14:35:49 -参数 : [王楠, 111111, 2133, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6ecf446b]
2019-06-19 14:35:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 14:35:49 -==> Parameters: 王楠(String)
2019-06-19 14:35:49 -<==      Total: 1
2019-06-19 14:35:49 -耗时 : 7
2019-06-19 14:35:49 -返回值 : {msg=操作成功, code=0}
2019-06-19 14:35:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:35:49 -==> Parameters: 3(Long), 王楠(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 14:35:49.851(Timestamp)
2019-06-19 14:35:49 -请求地址 : http://localhost:8081/index
2019-06-19 14:35:49 -HTTP METHOD : GET
2019-06-19 14:35:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 14:35:49 -参数 : [{}]
2019-06-19 14:35:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 14:35:49 -==> Parameters: 3(Long)
2019-06-19 14:35:49 -<==      Total: 32
2019-06-19 14:35:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 14:35:49 -==> Parameters: null
2019-06-19 14:35:49 -<==      Total: 0
2019-06-19 14:35:49 -耗时 : 22
2019-06-19 14:35:49 -返回值 : index_v1
2019-06-19 14:35:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 14:35:49 -==> Parameters: 3(Long), 王楠(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-gear","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-calculator","url":"common/job"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","text":"计算器"},{"at(String), 127.0.0.1(String), 2019-06-19 14:35:49.907(Timestamp)
2019-06-19 14:35:50 -<==    Updates: 1
2019-06-19 14:35:50 -请求地址 : http://localhost:8081/main
2019-06-19 14:35:50 -HTTP METHOD : GET
2019-06-19 14:35:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 14:35:50 -参数 : []
2019-06-19 14:35:50 -耗时 : 1
2019-06-19 14:35:50 -返回值 : main
2019-06-19 14:35:50 -<==    Updates: 1
2019-06-19 14:35:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 14:35:50 -HTTP METHOD : GET
2019-06-19 14:35:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 14:35:50 -参数 : []
2019-06-19 14:35:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 14:35:50 -==> Parameters: 0(String), 3(Long), 0(Integer), 3(Integer)
2019-06-19 14:35:50 -<==      Total: 0
2019-06-19 14:35:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 14:35:50 -==> Parameters: 3(Long), 0(String)
2019-06-19 14:35:50 -<==      Total: 1
2019-06-19 14:35:50 -耗时 : 44
2019-06-19 14:35:50 -返回值 : com.bootdo.common.utils.PageUtils@76ac3c7d
2019-06-19 14:35:50 -请求地址 : http://localhost:8081/main
2019-06-19 14:35:50 -HTTP METHOD : GET
2019-06-19 14:35:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 14:35:50 -参数 : []
2019-06-19 14:35:50 -耗时 : 1
2019-06-19 14:35:50 -返回值 : main
2019-06-19 14:35:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 14:35:52 -==> Parameters: 3(Long)
2019-06-19 14:35:52 -<==      Total: 54
2019-06-19 14:35:52 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-19 14:35:52 -HTTP METHOD : GET
2019-06-19 14:35:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-19 14:35:52 -参数 : []
2019-06-19 14:35:52 -耗时 : 1
2019-06-19 14:35:52 -返回值 : moneyList/moneyList
2019-06-19 14:35:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 14:35:53 -HTTP METHOD : GET
2019-06-19 14:35:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 14:35:53 -参数 : []
2019-06-19 14:35:53 -耗时 : 0
2019-06-19 14:35:53 -返回值 : system/dept/deptTree
2019-06-19 14:35:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 14:35:54 -HTTP METHOD : GET
2019-06-19 14:35:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 14:35:54 -参数 : []
2019-06-19 14:35:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept WHERE dept_id = ? order by dept_id desc 
2019-06-19 14:35:54 -==> Parameters: 2(Long)
2019-06-19 14:35:54 -<==      Total: 1
2019-06-19 14:35:54 -耗时 : 3
2019-06-19 14:35:54 -返回值 : {"checked":true,"children":[],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-06-19 14:45:07 -Starting BootdoApplication on PC-201905091110 with PID 6980 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-06-19 14:45:07 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-06-19 14:45:07 -The following profiles are active: dev
2019-06-19 14:45:08 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bef0fe3: startup date [Wed Jun 19 14:45:08 CST 2019]; root of context hierarchy
2019-06-19 14:45:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-19 14:45:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5a86d482] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:45:18 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4ce00329] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:45:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:45:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:45:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:45:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-06-19 14:45:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-06-19 14:45:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:45:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:45:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:45:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-19 14:45:24 -Tomcat initialized with port(s): 8081 (http)
2019-06-19 14:45:24 -Initializing ProtocolHandler ["http-nio-8081"]
2019-06-19 14:45:24 -Starting service [Tomcat]
2019-06-19 14:45:24 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-06-19 14:45:24 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-06-19 14:45:25 -Initializing Spring embedded WebApplicationContext
2019-06-19 14:45:25 -Root WebApplicationContext: initialization completed in 17088 ms
2019-06-19 14:45:26 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-19 14:45:26 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-19 14:45:26 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-19 14:45:26 -Mapping filter: 'requestContextFilter' to: [/*]
2019-06-19 14:45:26 -Filter xssFilter was not registered (disabled)
2019-06-19 14:45:26 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-19 14:45:26 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-06-19 14:45:26 -Servlet statViewServlet mapped to [/druid/*]
2019-06-19 14:45:26 -Servlet dispatcherServlet mapped to [/]
2019-06-19 14:45:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bef0fe3: startup date [Wed Jun 19 14:45:08 CST 2019]; root of context hierarchy
2019-06-19 14:45:31 -Using default implementation for ThreadExecutor
2019-06-19 14:45:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-06-19 14:45:31 -Quartz Scheduler v.2.3.0 created.
2019-06-19 14:45:31 -RAMJobStore initialized.
2019-06-19 14:45:31 -Scheduler meta-data: Quartz Scheduler (v2.3.0) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-06-19 14:45:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-06-19 14:45:31 -Quartz scheduler version: 2.3.0
2019-06-19 14:45:31 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7f5e9949
2019-06-19 14:45:32 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-19 14:45:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-19 14:45:35 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:45:35 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-06-19 14:45:35 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:45:35 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-06-19 14:45:35 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countOweController.getCountOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-06-19 14:45:35 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-06-19 14:45:35 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:45:35 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-06-19 14:45:35 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-06-19 14:45:35 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:45:35 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:45:35 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-06-19 14:45:35 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-06-19 14:45:35 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-19 14:45:35 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-06-19 14:45:35 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-06-19 14:45:35 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:45:35 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-06-19 14:45:35 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-06-19 14:45:35 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-06-19 14:45:35 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-19 14:45:35 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-06-19 14:45:35 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-06-19 14:45:35 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Integer> com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-06-19 14:45:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-06-19 14:45:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-06-19 14:45:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-06-19 14:45:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-06-19 14:45:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-06-19 14:45:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-06-19 14:45:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-06-19 14:45:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-06-19 14:45:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-06-19 14:45:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-06-19 14:45:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-06-19 14:45:35 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-06-19 14:45:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-06-19 14:45:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-19 14:45:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-06-19 14:45:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-06-19 14:45:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-06-19 14:45:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-06-19 14:45:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-06-19 14:45:35 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-06-19 14:45:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-06-19 14:45:35 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-06-19 14:45:35 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-06-19 14:45:35 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-06-19 14:45:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-06-19 14:45:35 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-06-19 14:45:35 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-19 14:45:35 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-06-19 14:45:35 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-06-19 14:45:35 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-19 14:45:35 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-06-19 14:45:35 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-06-19 14:45:35 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-06-19 14:45:35 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-06-19 14:45:35 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-06-19 14:45:35 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-06-19 14:45:35 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-19 14:45:35 -Mapped "{[/elec/elecUpLoad/importElecUser]}" onto public java.lang.String com.bootdo.elec.controller.ElecUpLoadController.importElecUser(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:45:35 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-06-19 14:45:35 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-06-19 14:45:35 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-06-19 14:45:35 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-06-19 14:45:35 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-06-19 14:45:35 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-06-19 14:45:35 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-19 14:45:35 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-06-19 14:45:35 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-06-19 14:45:35 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-06-19 14:45:35 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-06-19 14:45:35 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-06-19 14:45:35 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:45:35 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-06-19 14:45:35 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-06-19 14:45:35 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-06-19 14:45:35 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-06-19 14:45:35 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-06-19 14:45:35 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-06-19 14:45:35 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-06-19 14:45:35 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-06-19 14:45:35 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:45:35 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-06-19 14:45:35 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/importElecLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.importElecLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:45:35 -Mapped "{[/moneyUpLoad/ElecLogUpLoad/exprotElecLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.exprotElecLogExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:45:35 -Mapped "{[/moneyUpLoad/ElecLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.ElecLogUpLoadController.ElecLogUpLoad()
2019-06-19 14:45:35 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/exprotHeatLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.exprotHeatLogExcel(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:45:35 -Mapped "{[/moneyUpLoad/HeatLogUpLoad/importHeatLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.importHeatLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:45:35 -Mapped "{[/moneyUpLoad/HeatLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.HeatLogUpLoadController.HeatLogUpLoad()
2019-06-19 14:45:35 -Mapped "{[/moneyUpLoad/WaterLogUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.WaterLogLogUpLoad()
2019-06-19 14:45:35 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/importWaterLogExcel]}" onto public java.lang.String com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.importWaterLogExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:45:35 -Mapped "{[/moneyUpLoad/WaterLogUpLoad/exprotWaterLogExcel],methods=[GET]}" onto public void com.bootdo.moneyUpLoad.Controller.WaterLogUpLoadController.exprotWaterLogExcel(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-06-19 14:45:35 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-06-19 14:45:35 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-06-19 14:45:35 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-06-19 14:45:35 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-06-19 14:45:35 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-06-19 14:45:35 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-06-19 14:45:35 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-06-19 14:45:35 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-06-19 14:45:35 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-06-19 14:45:35 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-06-19 14:45:35 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-06-19 14:45:35 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-06-19 14:45:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-06-19 14:45:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-06-19 14:45:35 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-06-19 14:45:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-06-19 14:45:35 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-06-19 14:45:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-06-19 14:45:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-19 14:45:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-06-19 14:45:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-06-19 14:45:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-06-19 14:45:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-06-19 14:45:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-06-19 14:45:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-06-19 14:45:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-06-19 14:45:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-06-19 14:45:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-06-19 14:45:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-06-19 14:45:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-06-19 14:45:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-06-19 14:45:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-06-19 14:45:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-06-19 14:45:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-06-19 14:45:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-06-19 14:45:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-06-19 14:45:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-06-19 14:45:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-06-19 14:45:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-06-19 14:45:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-19 14:45:35 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-06-19 14:45:35 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-06-19 14:45:35 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-06-19 14:45:35 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-06-19 14:45:35 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-06-19 14:45:35 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-06-19 14:45:35 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-06-19 14:45:35 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-06-19 14:45:35 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-06-19 14:45:35 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-06-19 14:45:35 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-06-19 14:45:35 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-19 14:45:35 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-06-19 14:45:35 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-06-19 14:45:35 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-06-19 14:45:35 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-06-19 14:45:35 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-06-19 14:45:35 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-06-19 14:45:35 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-06-19 14:45:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-06-19 14:45:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-19 14:45:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-19 14:45:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-19 14:45:36 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-19 14:45:36 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-19 14:45:36 -Initializing ExecutorService  'brokerChannelExecutor'
2019-06-19 14:45:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-19 14:45:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4bef0fe3: startup date [Wed Jun 19 14:45:08 CST 2019]; root of context hierarchy
2019-06-19 14:45:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-19 14:45:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-19 14:45:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-06-19 14:45:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-06-19 14:45:39 -Registering beans for JMX exposure on startup
2019-06-19 14:45:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-19 14:45:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-19 14:45:39 -Starting beans in phase 2147483647
2019-06-19 14:45:39 -Context refreshed
2019-06-19 14:45:40 -Found 1 custom documentation plugin(s)
2019-06-19 14:45:40 -Scanning for api listing references
2019-06-19 14:45:40 -Generating unique operation named: removeUsingPOST_1
2019-06-19 14:45:40 -Generating unique operation named: addUsingGET_1
2019-06-19 14:45:41 -Generating unique operation named: editUsingGET_1
2019-06-19 14:45:41 -Generating unique operation named: listUsingGET_1
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_2
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_3
2019-06-19 14:45:41 -Generating unique operation named: saveUsingPOST_1
2019-06-19 14:45:41 -Generating unique operation named: updateUsingGET_1
2019-06-19 14:45:41 -Generating unique operation named: updateUsingHEAD_1
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPOST_1
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPUT_1
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPATCH_1
2019-06-19 14:45:41 -Generating unique operation named: updateUsingDELETE_1
2019-06-19 14:45:41 -Generating unique operation named: updateUsingOPTIONS_1
2019-06-19 14:45:41 -Generating unique operation named: updateUsingTRACE_1
2019-06-19 14:45:41 -Generating unique operation named: addUsingGET_2
2019-06-19 14:45:41 -Generating unique operation named: editUsingGET_2
2019-06-19 14:45:41 -Generating unique operation named: listUsingGET_2
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_4
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_5
2019-06-19 14:45:41 -Generating unique operation named: saveUsingPOST_2
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPOST_2
2019-06-19 14:45:41 -Generating unique operation named: exprotExcelUsingGET_1
2019-06-19 14:45:41 -Generating unique operation named: addUsingGET_3
2019-06-19 14:45:41 -Generating unique operation named: editUsingGET_3
2019-06-19 14:45:41 -Generating unique operation named: listUsingGET_3
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_6
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_7
2019-06-19 14:45:41 -Generating unique operation named: saveUsingPOST_3
2019-06-19 14:45:41 -Generating unique operation named: updateUsingGET_2
2019-06-19 14:45:41 -Generating unique operation named: updateUsingHEAD_2
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPOST_3
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPUT_2
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPATCH_2
2019-06-19 14:45:41 -Generating unique operation named: updateUsingDELETE_2
2019-06-19 14:45:41 -Generating unique operation named: updateUsingOPTIONS_2
2019-06-19 14:45:41 -Generating unique operation named: updateUsingTRACE_2
2019-06-19 14:45:41 -Generating unique operation named: addUsingGET_4
2019-06-19 14:45:41 -Generating unique operation named: editUsingGET_4
2019-06-19 14:45:41 -Generating unique operation named: listUsingGET_4
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_8
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_9
2019-06-19 14:45:41 -Generating unique operation named: saveUsingPOST_4
2019-06-19 14:45:41 -Generating unique operation named: updateUsingGET_3
2019-06-19 14:45:41 -Generating unique operation named: updateUsingHEAD_3
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPOST_4
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPUT_3
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPATCH_3
2019-06-19 14:45:41 -Generating unique operation named: updateUsingDELETE_3
2019-06-19 14:45:41 -Generating unique operation named: updateUsingOPTIONS_3
2019-06-19 14:45:41 -Generating unique operation named: updateUsingTRACE_3
2019-06-19 14:45:41 -Generating unique operation named: ElecUsingGET_1
2019-06-19 14:45:41 -Generating unique operation named: addUsingGET_5
2019-06-19 14:45:41 -Generating unique operation named: editUsingGET_5
2019-06-19 14:45:41 -Generating unique operation named: listUsingGET_5
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_10
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_11
2019-06-19 14:45:41 -Generating unique operation named: saveUsingPOST_5
2019-06-19 14:45:41 -Generating unique operation named: updateUsingGET_4
2019-06-19 14:45:41 -Generating unique operation named: updateUsingHEAD_4
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPOST_5
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPUT_4
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPATCH_4
2019-06-19 14:45:41 -Generating unique operation named: updateUsingDELETE_4
2019-06-19 14:45:41 -Generating unique operation named: updateUsingOPTIONS_4
2019-06-19 14:45:41 -Generating unique operation named: updateUsingTRACE_4
2019-06-19 14:45:41 -Generating unique operation named: editUsingGET_6
2019-06-19 14:45:41 -Generating unique operation named: listUsingGET_6
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPOST_6
2019-06-19 14:45:41 -Generating unique operation named: addUsingGET_6
2019-06-19 14:45:41 -Generating unique operation named: editUsingGET_7
2019-06-19 14:45:41 -Generating unique operation named: exprotExcelUsingGET_2
2019-06-19 14:45:41 -Generating unique operation named: listUsingGET_7
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_12
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_13
2019-06-19 14:45:41 -Generating unique operation named: saveUsingPOST_6
2019-06-19 14:45:41 -Generating unique operation named: updateUsingGET_5
2019-06-19 14:45:41 -Generating unique operation named: updateUsingHEAD_5
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPOST_7
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPUT_5
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPATCH_5
2019-06-19 14:45:41 -Generating unique operation named: updateUsingDELETE_5
2019-06-19 14:45:41 -Generating unique operation named: updateUsingOPTIONS_5
2019-06-19 14:45:41 -Generating unique operation named: updateUsingTRACE_5
2019-06-19 14:45:41 -Generating unique operation named: exprotExcelUsingGET_3
2019-06-19 14:45:41 -Generating unique operation named: addUsingGET_7
2019-06-19 14:45:41 -Generating unique operation named: editUsingGET_8
2019-06-19 14:45:41 -Generating unique operation named: listUsingGET_8
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_14
2019-06-19 14:45:41 -Generating unique operation named: removeUsingPOST_15
2019-06-19 14:45:41 -Generating unique operation named: saveUsingPOST_7
2019-06-19 14:45:41 -Generating unique operation named: updateUsingGET_6
2019-06-19 14:45:41 -Generating unique operation named: updateUsingHEAD_6
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPOST_8
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPUT_6
2019-06-19 14:45:41 -Generating unique operation named: updateUsingPATCH_6
2019-06-19 14:45:41 -Generating unique operation named: updateUsingDELETE_6
2019-06-19 14:45:41 -Generating unique operation named: updateUsingOPTIONS_6
2019-06-19 14:45:41 -Generating unique operation named: updateUsingTRACE_6
2019-06-19 14:45:42 -Generating unique operation named: addUsingGET_8
2019-06-19 14:45:42 -Generating unique operation named: editUsingGET_9
2019-06-19 14:45:42 -Generating unique operation named: listUsingGET_9
2019-06-19 14:45:42 -Generating unique operation named: removeUsingPOST_16
2019-06-19 14:45:42 -Generating unique operation named: removeUsingPOST_17
2019-06-19 14:45:42 -Generating unique operation named: saveUsingPOST_8
2019-06-19 14:45:42 -Generating unique operation named: updateUsingGET_7
2019-06-19 14:45:42 -Generating unique operation named: updateUsingHEAD_7
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPOST_9
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPUT_7
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPATCH_7
2019-06-19 14:45:42 -Generating unique operation named: updateUsingDELETE_7
2019-06-19 14:45:42 -Generating unique operation named: updateUsingOPTIONS_7
2019-06-19 14:45:42 -Generating unique operation named: updateUsingTRACE_7
2019-06-19 14:45:42 -Generating unique operation named: addUsingGET_9
2019-06-19 14:45:42 -Generating unique operation named: editUsingGET_10
2019-06-19 14:45:42 -Generating unique operation named: infoUsingGET_1
2019-06-19 14:45:42 -Generating unique operation named: infoUsingHEAD_1
2019-06-19 14:45:42 -Generating unique operation named: infoUsingPOST_1
2019-06-19 14:45:42 -Generating unique operation named: infoUsingPUT_1
2019-06-19 14:45:42 -Generating unique operation named: infoUsingPATCH_1
2019-06-19 14:45:42 -Generating unique operation named: infoUsingDELETE_1
2019-06-19 14:45:42 -Generating unique operation named: infoUsingOPTIONS_1
2019-06-19 14:45:42 -Generating unique operation named: infoUsingTRACE_1
2019-06-19 14:45:42 -Generating unique operation named: listUsingGET_10
2019-06-19 14:45:42 -Generating unique operation named: removeUsingPOST_18
2019-06-19 14:45:42 -Generating unique operation named: removeUsingPOST_19
2019-06-19 14:45:42 -Generating unique operation named: saveUsingPOST_9
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPOST_10
2019-06-19 14:45:42 -Generating unique operation named: listUsingGET_11
2019-06-19 14:45:42 -Generating unique operation named: removeUsingPOST_20
2019-06-19 14:45:42 -Generating unique operation named: welcomeUsingGET_1
2019-06-19 14:45:42 -Generating unique operation named: addUsingGET_10
2019-06-19 14:45:42 -Generating unique operation named: editUsingGET_11
2019-06-19 14:45:42 -Generating unique operation named: listUsingGET_12
2019-06-19 14:45:42 -Generating unique operation named: removeUsingPOST_21
2019-06-19 14:45:42 -Generating unique operation named: saveUsingPOST_10
2019-06-19 14:45:42 -Generating unique operation named: treeUsingGET_1
2019-06-19 14:45:42 -Generating unique operation named: treeUsingGET_2
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPOST_11
2019-06-19 14:45:42 -Generating unique operation named: addUsingGET_11
2019-06-19 14:45:42 -Generating unique operation named: editUsingGET_12
2019-06-19 14:45:42 -Generating unique operation named: listUsingGET_13
2019-06-19 14:45:42 -Generating unique operation named: removeUsingPOST_22
2019-06-19 14:45:42 -Generating unique operation named: removeUsingPOST_23
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPOST_12
2019-06-19 14:45:42 -Generating unique operation named: addUsingGET_12
2019-06-19 14:45:42 -Generating unique operation named: editUsingGET_13
2019-06-19 14:45:42 -Generating unique operation named: listUsingGET_14
2019-06-19 14:45:42 -Generating unique operation named: removeUsingPOST_24
2019-06-19 14:45:42 -Generating unique operation named: removeUsingPOST_25
2019-06-19 14:45:42 -Generating unique operation named: saveUsingPOST_11
2019-06-19 14:45:42 -Generating unique operation named: updateUsingGET_8
2019-06-19 14:45:42 -Generating unique operation named: updateUsingHEAD_8
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPOST_13
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPUT_8
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPATCH_8
2019-06-19 14:45:42 -Generating unique operation named: updateUsingDELETE_8
2019-06-19 14:45:42 -Generating unique operation named: updateUsingOPTIONS_8
2019-06-19 14:45:42 -Generating unique operation named: updateUsingTRACE_8
2019-06-19 14:45:42 -Generating unique operation named: addUsingGET_13
2019-06-19 14:45:42 -Generating unique operation named: batchRemoveUsingPOST_1
2019-06-19 14:45:42 -Generating unique operation named: editUsingGET_14
2019-06-19 14:45:42 -Generating unique operation named: listUsingGET_15
2019-06-19 14:45:42 -Generating unique operation named: printEditUsingGET_1
2019-06-19 14:45:42 -Generating unique operation named: removeUsingPOST_26
2019-06-19 14:45:42 -Generating unique operation named: saveUsingPOST_12
2019-06-19 14:45:42 -Generating unique operation named: updateUsingGET_9
2019-06-19 14:45:42 -Generating unique operation named: updateUsingHEAD_9
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPOST_14
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPUT_9
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPATCH_9
2019-06-19 14:45:42 -Generating unique operation named: updateUsingDELETE_9
2019-06-19 14:45:42 -Generating unique operation named: updateUsingOPTIONS_9
2019-06-19 14:45:42 -Generating unique operation named: updateUsingTRACE_9
2019-06-19 14:45:42 -Generating unique operation named: addUsingGET_14
2019-06-19 14:45:42 -Generating unique operation named: batchRemoveUsingPOST_2
2019-06-19 14:45:42 -Generating unique operation named: editUsingGET_15
2019-06-19 14:45:42 -Generating unique operation named: listUsingGET_16
2019-06-19 14:45:42 -Generating unique operation named: saveUsingPOST_13
2019-06-19 14:45:42 -Generating unique operation named: saveUsingPOST_14
2019-06-19 14:45:42 -Generating unique operation named: updateUsingPOST_15
2019-06-19 14:45:42 -Generating unique operation named: listUsingGET_17
2019-06-19 14:45:42 -Generating unique operation named: listUsingHEAD_1
2019-06-19 14:45:42 -Generating unique operation named: listUsingPOST_1
2019-06-19 14:45:42 -Generating unique operation named: listUsingPUT_1
2019-06-19 14:45:42 -Generating unique operation named: listUsingPATCH_1
2019-06-19 14:45:42 -Generating unique operation named: listUsingDELETE_1
2019-06-19 14:45:42 -Generating unique operation named: listUsingOPTIONS_1
2019-06-19 14:45:42 -Generating unique operation named: listUsingTRACE_1
2019-06-19 14:45:42 -Generating unique operation named: countDDUsingGET_1
2019-06-19 14:45:42 -Generating unique operation named: exportDDUsingGET_1
2019-06-19 14:45:42 -Generating unique operation named: exportElecYYUsingGET_1
2019-06-19 14:45:43 -Generating unique operation named: addUsingGET_15
2019-06-19 14:45:43 -Generating unique operation named: batchRemoveUsingPOST_3
2019-06-19 14:45:43 -Generating unique operation named: editUsingGET_16
2019-06-19 14:45:43 -Generating unique operation named: listUsingGET_18
2019-06-19 14:45:43 -Generating unique operation named: removeUsingPOST_27
2019-06-19 14:45:43 -Generating unique operation named: saveUsingPOST_15
2019-06-19 14:45:43 -Generating unique operation named: treeUsingGET_3
2019-06-19 14:45:43 -Generating unique operation named: treeViewUsingGET_1
2019-06-19 14:45:43 -Generating unique operation named: updateUsingPOST_16
2019-06-19 14:45:43 -Generating unique operation named: addUsingGET_16
2019-06-19 14:45:43 -Generating unique operation named: editUsingGET_17
2019-06-19 14:45:43 -Generating unique operation named: exprotExcelUsingGET_4
2019-06-19 14:45:43 -Generating unique operation named: listUsingGET_19
2019-06-19 14:45:43 -Generating unique operation named: removeUsingPOST_28
2019-06-19 14:45:43 -Generating unique operation named: removeUsingPOST_29
2019-06-19 14:45:43 -Generating unique operation named: saveUsingPOST_16
2019-06-19 14:45:43 -Generating unique operation named: updateUsingGET_10
2019-06-19 14:45:43 -Generating unique operation named: updateUsingHEAD_10
2019-06-19 14:45:43 -Generating unique operation named: updateUsingPOST_17
2019-06-19 14:45:43 -Generating unique operation named: updateUsingPUT_10
2019-06-19 14:45:43 -Generating unique operation named: updateUsingPATCH_10
2019-06-19 14:45:43 -Generating unique operation named: updateUsingDELETE_10
2019-06-19 14:45:43 -Generating unique operation named: updateUsingOPTIONS_10
2019-06-19 14:45:43 -Generating unique operation named: updateUsingTRACE_10
2019-06-19 14:45:43 -Generating unique operation named: exprotExcelUsingGET_5
2019-06-19 14:45:43 -Generating unique operation named: addUsingGET_17
2019-06-19 14:45:43 -Generating unique operation named: editUsingGET_18
2019-06-19 14:45:43 -Generating unique operation named: listUsingGET_20
2019-06-19 14:45:43 -Generating unique operation named: removeUsingPOST_30
2019-06-19 14:45:43 -Generating unique operation named: removeUsingPOST_31
2019-06-19 14:45:43 -Generating unique operation named: saveUsingPOST_17
2019-06-19 14:45:43 -Generating unique operation named: updateUsingGET_11
2019-06-19 14:45:43 -Generating unique operation named: updateUsingHEAD_11
2019-06-19 14:45:43 -Generating unique operation named: updateUsingPOST_18
2019-06-19 14:45:43 -Generating unique operation named: updateUsingPUT_11
2019-06-19 14:45:43 -Generating unique operation named: updateUsingPATCH_11
2019-06-19 14:45:43 -Generating unique operation named: updateUsingDELETE_11
2019-06-19 14:45:43 -Generating unique operation named: updateUsingOPTIONS_11
2019-06-19 14:45:43 -Generating unique operation named: updateUsingTRACE_11
2019-06-19 14:45:43 -Generating unique operation named: addUsingGET_18
2019-06-19 14:45:43 -Generating unique operation named: editUsingGET_19
2019-06-19 14:45:43 -Generating unique operation named: listUsingGET_21
2019-06-19 14:45:43 -Generating unique operation named: removeUsingPOST_32
2019-06-19 14:45:43 -Generating unique operation named: removeUsingPOST_33
2019-06-19 14:45:43 -Generating unique operation named: saveUsingPOST_18
2019-06-19 14:45:43 -Generating unique operation named: updateUsingGET_12
2019-06-19 14:45:43 -Generating unique operation named: updateUsingHEAD_12
2019-06-19 14:45:43 -Generating unique operation named: updateUsingPOST_19
2019-06-19 14:45:43 -Generating unique operation named: updateUsingPUT_12
2019-06-19 14:45:43 -Generating unique operation named: updateUsingPATCH_12
2019-06-19 14:45:43 -Generating unique operation named: updateUsingDELETE_12
2019-06-19 14:45:43 -Generating unique operation named: updateUsingOPTIONS_12
2019-06-19 14:45:43 -Generating unique operation named: updateUsingTRACE_12
2019-06-19 14:45:43 -Starting Quartz Scheduler now
2019-06-19 14:45:43 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-06-19 14:45:43 -Starting...
2019-06-19 14:45:43 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-19 14:45:43 -Started.
2019-06-19 14:45:43 -Starting ProtocolHandler ["http-nio-8081"]
2019-06-19 14:45:43 -Using a shared selector for servlet write/read
2019-06-19 14:45:43 -Tomcat started on port(s): 8081 (http) with context path ''
2019-06-19 14:45:43 -Started BootdoApplication in 37.731 seconds (JVM running for 39.202)
2019-06-19 14:45:43 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-06-19 14:45:44 -==> Parameters: 
2019-06-19 14:45:44 -<==      Total: 1
2019-06-19 14:46:36 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-19 15:16:36 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-06-19 15:46:36 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2019-06-19 16:16:36 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]
2019-06-19 16:46:36 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 4]
2019-06-19 16:52:50 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-19 16:52:50 -FrameworkServlet 'dispatcherServlet': initialization started
2019-06-19 16:52:50 -FrameworkServlet 'dispatcherServlet': initialization completed in 146 ms
2019-06-19 16:52:51 -Enabling session validation scheduler...
2019-06-19 16:52:51 -请求地址 : http://localhost:8081/login;JSESSIONID=4140e8b8-8958-456c-8268-fa681c7c2025
2019-06-19 16:52:51 -HTTP METHOD : GET
2019-06-19 16:52:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 16:52:51 -参数 : [{}]
2019-06-19 16:52:51 -耗时 : 7
2019-06-19 16:52:51 -返回值 : login
2019-06-19 16:52:52 -请求地址 : http://localhost:8081/getVerify
2019-06-19 16:52:52 -HTTP METHOD : GET
2019-06-19 16:52:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 16:52:52 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1a0e3bd4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@14c9d6e5]
2019-06-19 16:52:56 -2809
2019-06-19 16:52:56 -耗时 : 3746
2019-06-19 16:52:56 -返回值 : null
2019-06-19 16:53:00 -请求地址 : http://localhost:8081/login
2019-06-19 16:53:00 -HTTP METHOD : POST
2019-06-19 16:53:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 16:53:00 -参数 : [admin, 111111, 2809, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3af0f724]
2019-06-19 16:53:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 16:53:00 -==> Parameters: admin(String)
2019-06-19 16:53:00 -<==      Total: 1
2019-06-19 16:53:00 -耗时 : 166
2019-06-19 16:53:00 -返回值 : {msg=操作成功, code=0}
2019-06-19 16:53:00 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-19 16:53:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 16:53:00 -==> Parameters: 1(Long), admin(String), 登录(String), 166(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 16:53:00.869(Timestamp)
2019-06-19 16:53:00 -<==    Updates: 1
2019-06-19 16:53:01 -请求地址 : http://localhost:8081/index
2019-06-19 16:53:01 -HTTP METHOD : GET
2019-06-19 16:53:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 16:53:01 -参数 : [{}]
2019-06-19 16:53:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 16:53:01 -==> Parameters: 1(Long)
2019-06-19 16:53:01 -<==      Total: 51
2019-06-19 16:53:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 16:53:01 -==> Parameters: 138(Long)
2019-06-19 16:53:01 -<==      Total: 1
2019-06-19 16:53:01 -耗时 : 366
2019-06-19 16:53:01 -返回值 : index_v1
2019-06-19 16:53:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 16:53:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 366(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 16:53:01.477(Timestamp)
2019-06-19 16:53:01 -<==    Updates: 1
2019-06-19 16:53:01 -请求地址 : http://localhost:8081/main
2019-06-19 16:53:01 -HTTP METHOD : GET
2019-06-19 16:53:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 16:53:01 -参数 : []
2019-06-19 16:53:01 -耗时 : 2
2019-06-19 16:53:01 -返回值 : main
2019-06-19 16:53:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 16:53:01 -HTTP METHOD : GET
2019-06-19 16:53:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 16:53:01 -参数 : []
2019-06-19 16:53:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 16:53:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 16:53:01 -<==      Total: 0
2019-06-19 16:53:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 16:53:01 -==> Parameters: 1(Long), 0(String)
2019-06-19 16:53:01 -<==      Total: 1
2019-06-19 16:53:01 -耗时 : 56
2019-06-19 16:53:01 -返回值 : com.bootdo.common.utils.PageUtils@333eb1eb
2019-06-19 16:53:01 -请求地址 : http://localhost:8081/main
2019-06-19 16:53:01 -HTTP METHOD : GET
2019-06-19 16:53:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 16:53:01 -参数 : []
2019-06-19 16:53:01 -耗时 : 1
2019-06-19 16:53:01 -返回值 : main
2019-06-19 16:53:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 16:53:03 -==> Parameters: 1(Long)
2019-06-19 16:53:03 -<==      Total: 95
2019-06-19 16:53:03 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-19 16:53:03 -HTTP METHOD : GET
2019-06-19 16:53:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-19 16:53:03 -参数 : []
2019-06-19 16:53:03 -耗时 : 1
2019-06-19 16:53:03 -返回值 : moneyList/moneyList
2019-06-19 16:53:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 16:53:05 -HTTP METHOD : GET
2019-06-19 16:53:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 16:53:05 -参数 : []
2019-06-19 16:53:05 -耗时 : 0
2019-06-19 16:53:05 -返回值 : system/dept/deptTree
2019-06-19 16:53:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 16:53:05 -HTTP METHOD : GET
2019-06-19 16:53:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 16:53:05 -参数 : []
2019-06-19 16:53:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 16:53:05 -==> Parameters: 
2019-06-19 16:53:05 -<==      Total: 3
2019-06-19 16:53:05 -耗时 : 57
2019-06-19 16:53:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 16:53:19 -请求地址 : http://localhost:8081/charts/countMM
2019-06-19 16:53:19 -HTTP METHOD : GET
2019-06-19 16:53:19 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-06-19 16:53:19 -参数 : []
2019-06-19 16:53:19 -耗时 : 22
2019-06-19 16:53:19 -返回值 : charts/countMM
2019-06-19 16:53:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 16:53:19 -HTTP METHOD : GET
2019-06-19 16:53:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 16:53:19 -参数 : [userType]
2019-06-19 16:53:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 16:53:19 -==> Parameters: userType(String)
2019-06-19 16:53:19 -<==      Total: 4
2019-06-19 16:53:19 -耗时 : 124
2019-06-19 16:53:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 16:53:22 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-06-19 16:53:22 -HTTP METHOD : GET
2019-06-19 16:53:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-19 16:53:22 -参数 : []
2019-06-19 16:53:22 -耗时 : 24
2019-06-19 16:53:22 -返回值 : charts/tableElecMM
2019-06-19 16:53:22 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 16:53:22 -HTTP METHOD : GET
2019-06-19 16:53:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 16:53:22 -参数 : [elecType]
2019-06-19 16:53:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 16:53:22 -==> Parameters: elecType(String)
2019-06-19 16:53:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 16:53:22 -HTTP METHOD : GET
2019-06-19 16:53:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 16:53:22 -参数 : [userType]
2019-06-19 16:53:22 -<==      Total: 11
2019-06-19 16:53:22 -耗时 : 9
2019-06-19 16:53:22 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 16:53:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 16:53:22 -==> Parameters: userType(String)
2019-06-19 16:53:22 -<==      Total: 4
2019-06-19 16:53:22 -耗时 : 23
2019-06-19 16:53:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 16:53:37 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-06-19 16:53:37 -HTTP METHOD : GET
2019-06-19 16:53:37 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-19 16:53:37 -参数 : []
2019-06-19 16:53:37 -耗时 : 146
2019-06-19 16:53:37 -返回值 : charts/tableHeatMM
2019-06-19 16:53:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 16:53:37 -HTTP METHOD : GET
2019-06-19 16:53:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 16:53:37 -参数 : [userType]
2019-06-19 16:53:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 16:53:37 -==> Parameters: userType(String)
2019-06-19 16:53:37 -<==      Total: 4
2019-06-19 16:53:37 -耗时 : 10
2019-06-19 16:53:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 16:53:40 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-06-19 16:53:40 -HTTP METHOD : GET
2019-06-19 16:53:40 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-06-19 16:53:40 -参数 : []
2019-06-19 16:53:40 -耗时 : 13
2019-06-19 16:53:40 -返回值 : charts/tableWaterMM
2019-06-19 16:53:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 16:53:40 -HTTP METHOD : GET
2019-06-19 16:53:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 16:53:40 -参数 : [userType]
2019-06-19 16:53:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 16:53:40 -==> Parameters: userType(String)
2019-06-19 16:53:40 -<==      Total: 4
2019-06-19 16:53:40 -耗时 : 8
2019-06-19 16:53:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 16:53:43 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-06-19 16:53:43 -HTTP METHOD : GET
2019-06-19 16:53:43 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-19 16:53:43 -参数 : []
2019-06-19 16:53:43 -耗时 : 0
2019-06-19 16:53:43 -返回值 : charts/tableHeatMM
2019-06-19 16:53:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 16:53:43 -HTTP METHOD : GET
2019-06-19 16:53:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 16:53:43 -参数 : [userType]
2019-06-19 16:53:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 16:53:43 -==> Parameters: userType(String)
2019-06-19 16:53:43 -<==      Total: 4
2019-06-19 16:53:43 -耗时 : 9
2019-06-19 16:53:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 16:53:44 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-06-19 16:53:44 -HTTP METHOD : GET
2019-06-19 16:53:44 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-06-19 16:53:44 -参数 : []
2019-06-19 16:53:44 -耗时 : 0
2019-06-19 16:53:44 -返回值 : charts/tableWaterMM
2019-06-19 16:53:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 16:53:44 -HTTP METHOD : GET
2019-06-19 16:53:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 16:53:44 -参数 : [userType]
2019-06-19 16:53:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 16:53:44 -==> Parameters: userType(String)
2019-06-19 16:53:44 -<==      Total: 4
2019-06-19 16:53:44 -耗时 : 7
2019-06-19 16:53:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 16:53:44 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-06-19 16:53:44 -HTTP METHOD : GET
2019-06-19 16:53:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-19 16:53:44 -参数 : []
2019-06-19 16:53:44 -耗时 : 1
2019-06-19 16:53:44 -返回值 : charts/tableHeatMM
2019-06-19 16:53:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 16:53:45 -HTTP METHOD : GET
2019-06-19 16:53:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 16:53:45 -参数 : [userType]
2019-06-19 16:53:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 16:53:45 -==> Parameters: userType(String)
2019-06-19 16:53:45 -<==      Total: 4
2019-06-19 16:53:45 -耗时 : 9
2019-06-19 16:53:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 16:53:45 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-06-19 16:53:45 -HTTP METHOD : GET
2019-06-19 16:53:45 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-19 16:53:45 -参数 : []
2019-06-19 16:53:45 -耗时 : 0
2019-06-19 16:53:45 -返回值 : charts/tableElecMM
2019-06-19 16:53:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 16:53:45 -HTTP METHOD : GET
2019-06-19 16:53:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 16:53:45 -参数 : [userType]
2019-06-19 16:53:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 16:53:45 -==> Parameters: userType(String)
2019-06-19 16:53:45 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 16:53:45 -HTTP METHOD : GET
2019-06-19 16:53:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 16:53:45 -参数 : [elecType]
2019-06-19 16:53:45 -<==      Total: 4
2019-06-19 16:53:45 -耗时 : 5
2019-06-19 16:53:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 16:53:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 16:53:45 -==> Parameters: elecType(String)
2019-06-19 16:53:45 -<==      Total: 11
2019-06-19 16:53:45 -耗时 : 11
2019-06-19 16:53:45 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:05:30 -请求地址 : http://localhost:8081/index
2019-06-19 17:05:30 -HTTP METHOD : GET
2019-06-19 17:05:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 17:05:30 -参数 : [{}]
2019-06-19 17:05:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 17:05:30 -==> Parameters: 1(Long)
2019-06-19 17:05:30 -<==      Total: 51
2019-06-19 17:05:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 17:05:30 -==> Parameters: 138(Long)
2019-06-19 17:05:30 -<==      Total: 1
2019-06-19 17:05:30 -耗时 : 444
2019-06-19 17:05:30 -返回值 : index_v1
2019-06-19 17:05:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 17:05:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 444(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 17:05:30.721(Timestamp)
2019-06-19 17:05:30 -<==    Updates: 1
2019-06-19 17:05:30 -请求地址 : http://localhost:8081/main
2019-06-19 17:05:30 -HTTP METHOD : GET
2019-06-19 17:05:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 17:05:30 -参数 : []
2019-06-19 17:05:30 -耗时 : 0
2019-06-19 17:05:30 -返回值 : main
2019-06-19 17:05:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 17:05:31 -HTTP METHOD : GET
2019-06-19 17:05:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 17:05:31 -参数 : []
2019-06-19 17:05:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 17:05:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 17:05:31 -请求地址 : http://localhost:8081/main
2019-06-19 17:05:31 -HTTP METHOD : GET
2019-06-19 17:05:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 17:05:31 -参数 : []
2019-06-19 17:05:31 -耗时 : 0
2019-06-19 17:05:31 -返回值 : main
2019-06-19 17:05:31 -<==      Total: 0
2019-06-19 17:05:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 17:05:31 -==> Parameters: 1(Long), 0(String)
2019-06-19 17:05:31 -<==      Total: 1
2019-06-19 17:05:31 -耗时 : 223
2019-06-19 17:05:31 -返回值 : com.bootdo.common.utils.PageUtils@72d30eee
2019-06-19 17:05:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 17:05:38 -==> Parameters: 1(Long)
2019-06-19 17:05:38 -<==      Total: 95
2019-06-19 17:05:38 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-06-19 17:05:38 -HTTP METHOD : GET
2019-06-19 17:05:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-19 17:05:38 -参数 : []
2019-06-19 17:05:38 -耗时 : 0
2019-06-19 17:05:38 -返回值 : charts/tableElecMM
2019-06-19 17:05:38 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 17:05:38 -HTTP METHOD : GET
2019-06-19 17:05:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:05:38 -参数 : [elecType]
2019-06-19 17:05:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:05:38 -HTTP METHOD : GET
2019-06-19 17:05:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:05:38 -参数 : [userType]
2019-06-19 17:05:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:05:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:05:38 -==> Parameters: elecType(String)
2019-06-19 17:05:38 -==> Parameters: userType(String)
2019-06-19 17:05:38 -<==      Total: 4
2019-06-19 17:05:38 -耗时 : 6
2019-06-19 17:05:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:05:38 -<==      Total: 11
2019-06-19 17:05:38 -耗时 : 209
2019-06-19 17:05:38 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:05:39 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-06-19 17:05:39 -HTTP METHOD : GET
2019-06-19 17:05:39 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-19 17:05:39 -参数 : []
2019-06-19 17:05:39 -耗时 : 0
2019-06-19 17:05:39 -返回值 : charts/tableHeatMM
2019-06-19 17:05:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:05:39 -HTTP METHOD : GET
2019-06-19 17:05:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:05:39 -参数 : [userType]
2019-06-19 17:05:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:05:39 -==> Parameters: userType(String)
2019-06-19 17:05:39 -<==      Total: 4
2019-06-19 17:05:39 -耗时 : 7
2019-06-19 17:05:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:05:50 -请求地址 : http://localhost:8081/charts/countYY
2019-06-19 17:05:50 -HTTP METHOD : GET
2019-06-19 17:05:50 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-06-19 17:05:50 -参数 : []
2019-06-19 17:05:50 -耗时 : 0
2019-06-19 17:05:50 -返回值 : charts/countYY
2019-06-19 17:05:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:05:50 -HTTP METHOD : GET
2019-06-19 17:05:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:05:50 -参数 : [userType]
2019-06-19 17:05:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:05:50 -==> Parameters: userType(String)
2019-06-19 17:05:50 -<==      Total: 4
2019-06-19 17:05:50 -耗时 : 4
2019-06-19 17:05:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:05:52 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-06-19 17:05:52 -HTTP METHOD : GET
2019-06-19 17:05:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-06-19 17:05:52 -参数 : []
2019-06-19 17:05:52 -耗时 : 11
2019-06-19 17:05:52 -返回值 : charts/tableElecYY
2019-06-19 17:05:52 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 17:05:52 -HTTP METHOD : GET
2019-06-19 17:05:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:05:52 -参数 : [elecType]
2019-06-19 17:05:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:05:52 -HTTP METHOD : GET
2019-06-19 17:05:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:05:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:05:52 -参数 : [userType]
2019-06-19 17:05:52 -==> Parameters: elecType(String)
2019-06-19 17:05:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:05:52 -==> Parameters: userType(String)
2019-06-19 17:05:52 -<==      Total: 4
2019-06-19 17:05:52 -<==      Total: 11
2019-06-19 17:05:52 -耗时 : 6
2019-06-19 17:05:52 -耗时 : 5
2019-06-19 17:05:52 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:05:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:10:19 -请求地址 : http://localhost:8081/login;JSESSIONID=fa73a359-67ca-4fa5-a0c3-c10bcc48bb1e
2019-06-19 17:10:19 -HTTP METHOD : GET
2019-06-19 17:10:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 17:10:19 -参数 : [{}]
2019-06-19 17:10:19 -耗时 : 0
2019-06-19 17:10:19 -返回值 : login
2019-06-19 17:10:20 -请求地址 : http://localhost:8081/getVerify
2019-06-19 17:10:20 -HTTP METHOD : GET
2019-06-19 17:10:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-06-19 17:10:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@68b86836, org.apache.shiro.web.servlet.ShiroHttpServletResponse@335584ca]
2019-06-19 17:10:20 -6529
2019-06-19 17:10:20 -耗时 : 30
2019-06-19 17:10:20 -返回值 : null
2019-06-19 17:10:20 -请求地址 : http://localhost:8081/login
2019-06-19 17:10:20 -HTTP METHOD : GET
2019-06-19 17:10:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-06-19 17:10:20 -参数 : [{}]
2019-06-19 17:10:20 -耗时 : 1
2019-06-19 17:10:20 -返回值 : login
2019-06-19 17:10:34 -请求地址 : http://localhost:8081/login
2019-06-19 17:10:34 -HTTP METHOD : POST
2019-06-19 17:10:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-06-19 17:10:34 -参数 : [admin, 111111, 6529, org.apache.shiro.web.servlet.ShiroHttpServletRequest@534b1505]
2019-06-19 17:10:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-06-19 17:10:34 -==> Parameters: admin(String)
2019-06-19 17:10:34 -<==      Total: 1
2019-06-19 17:10:34 -耗时 : 6
2019-06-19 17:10:34 -返回值 : {msg=操作成功, code=0}
2019-06-19 17:10:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 17:10:34 -==> Parameters: 1(Long), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-06-19 17:10:34.685(Timestamp)
2019-06-19 17:10:34 -请求地址 : http://localhost:8081/index
2019-06-19 17:10:34 -HTTP METHOD : GET
2019-06-19 17:10:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 17:10:34 -参数 : [{}]
2019-06-19 17:10:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 17:10:34 -==> Parameters: 1(Long)
2019-06-19 17:10:34 -<==      Total: 51
2019-06-19 17:10:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 17:10:34 -==> Parameters: 138(Long)
2019-06-19 17:10:34 -<==      Total: 1
2019-06-19 17:10:34 -耗时 : 33
2019-06-19 17:10:34 -返回值 : index_v1
2019-06-19 17:10:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 17:10:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 17:10:34.755(Timestamp)
2019-06-19 17:10:34 -<==    Updates: 1
2019-06-19 17:10:34 -请求地址 : http://localhost:8081/main
2019-06-19 17:10:34 -HTTP METHOD : GET
2019-06-19 17:10:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 17:10:34 -参数 : []
2019-06-19 17:10:34 -耗时 : 25
2019-06-19 17:10:34 -返回值 : main
2019-06-19 17:10:34 -<==    Updates: 1
2019-06-19 17:10:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 17:10:35 -HTTP METHOD : GET
2019-06-19 17:10:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 17:10:35 -参数 : []
2019-06-19 17:10:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 17:10:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 17:10:35 -<==      Total: 0
2019-06-19 17:10:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 17:10:35 -==> Parameters: 1(Long), 0(String)
2019-06-19 17:10:35 -<==      Total: 1
2019-06-19 17:10:35 -耗时 : 8
2019-06-19 17:10:35 -返回值 : com.bootdo.common.utils.PageUtils@4637c988
2019-06-19 17:10:35 -请求地址 : http://localhost:8081/main
2019-06-19 17:10:35 -HTTP METHOD : GET
2019-06-19 17:10:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 17:10:35 -参数 : []
2019-06-19 17:10:35 -耗时 : 1
2019-06-19 17:10:35 -返回值 : main
2019-06-19 17:10:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-06-19 17:10:44 -==> Parameters: 1(Long)
2019-06-19 17:10:44 -<==      Total: 95
2019-06-19 17:10:44 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-19 17:10:44 -HTTP METHOD : GET
2019-06-19 17:10:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-19 17:10:44 -参数 : []
2019-06-19 17:10:44 -耗时 : 1
2019-06-19 17:10:44 -返回值 : moneyList/moneyList
2019-06-19 17:10:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 17:10:46 -HTTP METHOD : GET
2019-06-19 17:10:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 17:10:46 -参数 : []
2019-06-19 17:10:46 -耗时 : 1
2019-06-19 17:10:46 -返回值 : system/dept/deptTree
2019-06-19 17:10:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 17:10:46 -HTTP METHOD : GET
2019-06-19 17:10:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 17:10:46 -参数 : []
2019-06-19 17:10:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 17:10:46 -==> Parameters: 
2019-06-19 17:10:46 -<==      Total: 3
2019-06-19 17:10:46 -耗时 : 56
2019-06-19 17:10:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 17:10:57 -请求地址 : http://localhost:8081/charts/countYY
2019-06-19 17:10:57 -HTTP METHOD : GET
2019-06-19 17:10:57 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-06-19 17:10:57 -参数 : []
2019-06-19 17:10:57 -耗时 : 1
2019-06-19 17:10:57 -返回值 : charts/countYY
2019-06-19 17:10:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:10:57 -HTTP METHOD : GET
2019-06-19 17:10:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:10:57 -参数 : [userType]
2019-06-19 17:10:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:10:57 -==> Parameters: userType(String)
2019-06-19 17:10:57 -<==      Total: 4
2019-06-19 17:10:57 -耗时 : 5
2019-06-19 17:10:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:10:58 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-06-19 17:10:58 -HTTP METHOD : GET
2019-06-19 17:10:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-06-19 17:10:58 -参数 : []
2019-06-19 17:10:58 -耗时 : 0
2019-06-19 17:10:58 -返回值 : charts/tableElecYY
2019-06-19 17:10:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:10:58 -HTTP METHOD : GET
2019-06-19 17:10:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:10:58 -参数 : [userType]
2019-06-19 17:10:58 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 17:10:58 -HTTP METHOD : GET
2019-06-19 17:10:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:10:58 -参数 : [elecType]
2019-06-19 17:10:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:10:58 -==> Parameters: userType(String)
2019-06-19 17:10:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:10:58 -==> Parameters: elecType(String)
2019-06-19 17:10:58 -<==      Total: 4
2019-06-19 17:10:58 -耗时 : 6
2019-06-19 17:10:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:10:58 -<==      Total: 11
2019-06-19 17:10:58 -耗时 : 7
2019-06-19 17:10:58 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:11:02 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-06-19 17:11:02 -HTTP METHOD : GET
2019-06-19 17:11:02 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-06-19 17:11:02 -参数 : []
2019-06-19 17:11:02 -耗时 : 7
2019-06-19 17:11:02 -返回值 : charts/tableHeatYY
2019-06-19 17:11:02 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 17:11:02 -HTTP METHOD : GET
2019-06-19 17:11:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:11:02 -HTTP METHOD : GET
2019-06-19 17:11:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:11:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:11:02 -参数 : [heatType]
2019-06-19 17:11:02 -参数 : [userType]
2019-06-19 17:11:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:11:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:11:02 -==> Parameters: userType(String)
2019-06-19 17:11:02 -==> Parameters: heatType(String)
2019-06-19 17:11:02 -<==      Total: 4
2019-06-19 17:11:02 -<==      Total: 4
2019-06-19 17:11:02 -耗时 : 5
2019-06-19 17:11:02 -耗时 : 5
2019-06-19 17:11:02 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:11:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:11:04 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-06-19 17:11:04 -HTTP METHOD : GET
2019-06-19 17:11:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-06-19 17:11:04 -参数 : []
2019-06-19 17:11:04 -耗时 : 6
2019-06-19 17:11:04 -返回值 : charts/tableWaterYY
2019-06-19 17:11:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:11:04 -HTTP METHOD : GET
2019-06-19 17:11:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:11:04 -参数 : [userType]
2019-06-19 17:11:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:11:04 -==> Parameters: userType(String)
2019-06-19 17:11:04 -<==      Total: 4
2019-06-19 17:11:04 -耗时 : 7
2019-06-19 17:11:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:11:04 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-19 17:11:04 -HTTP METHOD : GET
2019-06-19 17:11:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:11:04 -参数 : [waterType]
2019-06-19 17:11:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:11:04 -==> Parameters: waterType(String)
2019-06-19 17:11:04 -<==      Total: 4
2019-06-19 17:11:04 -耗时 : 6
2019-06-19 17:11:04 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:11:13 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-06-19 17:11:13 -HTTP METHOD : GET
2019-06-19 17:11:13 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-06-19 17:11:13 -参数 : []
2019-06-19 17:11:13 -耗时 : 1
2019-06-19 17:11:13 -返回值 : charts/tableElecMM
2019-06-19 17:11:13 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 17:11:13 -HTTP METHOD : GET
2019-06-19 17:11:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:11:13 -参数 : [elecType]
2019-06-19 17:11:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:11:13 -HTTP METHOD : GET
2019-06-19 17:11:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:11:13 -参数 : [userType]
2019-06-19 17:11:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:11:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:11:13 -==> Parameters: elecType(String)
2019-06-19 17:11:13 -==> Parameters: userType(String)
2019-06-19 17:11:13 -<==      Total: 11
2019-06-19 17:11:13 -耗时 : 5
2019-06-19 17:11:13 -<==      Total: 4
2019-06-19 17:11:13 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:11:13 -耗时 : 9
2019-06-19 17:11:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:11:17 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-06-19 17:11:17 -HTTP METHOD : GET
2019-06-19 17:11:17 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-06-19 17:11:17 -参数 : []
2019-06-19 17:11:17 -耗时 : 0
2019-06-19 17:11:17 -返回值 : charts/tableHeatMM
2019-06-19 17:11:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:11:18 -HTTP METHOD : GET
2019-06-19 17:11:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:11:18 -参数 : [userType]
2019-06-19 17:11:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:11:18 -==> Parameters: userType(String)
2019-06-19 17:11:18 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 17:11:18 -HTTP METHOD : GET
2019-06-19 17:11:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:11:18 -参数 : [heatType]
2019-06-19 17:11:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:11:18 -==> Parameters: heatType(String)
2019-06-19 17:11:18 -<==      Total: 4
2019-06-19 17:11:18 -耗时 : 5
2019-06-19 17:11:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:11:18 -<==      Total: 4
2019-06-19 17:11:18 -耗时 : 4
2019-06-19 17:11:18 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:11:20 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-06-19 17:11:20 -HTTP METHOD : GET
2019-06-19 17:11:20 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-06-19 17:11:20 -参数 : []
2019-06-19 17:11:20 -耗时 : 1
2019-06-19 17:11:20 -返回值 : charts/tableWaterMM
2019-06-19 17:11:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:11:20 -HTTP METHOD : GET
2019-06-19 17:11:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:11:20 -参数 : [userType]
2019-06-19 17:11:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:11:20 -==> Parameters: userType(String)
2019-06-19 17:11:20 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-19 17:11:20 -HTTP METHOD : GET
2019-06-19 17:11:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:11:20 -参数 : [waterType]
2019-06-19 17:11:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:11:20 -==> Parameters: waterType(String)
2019-06-19 17:11:20 -<==      Total: 4
2019-06-19 17:11:20 -耗时 : 5
2019-06-19 17:11:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:11:20 -<==      Total: 4
2019-06-19 17:11:20 -耗时 : 6
2019-06-19 17:11:20 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:11:43 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-19 17:11:43 -HTTP METHOD : GET
2019-06-19 17:11:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-19 17:11:43 -参数 : []
2019-06-19 17:11:43 -耗时 : 0
2019-06-19 17:11:43 -返回值 : moneyList/moneyList
2019-06-19 17:11:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 17:11:44 -HTTP METHOD : GET
2019-06-19 17:11:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 17:11:44 -参数 : []
2019-06-19 17:11:44 -耗时 : 3
2019-06-19 17:11:44 -返回值 : system/dept/deptTree
2019-06-19 17:11:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 17:11:44 -HTTP METHOD : GET
2019-06-19 17:11:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 17:11:44 -参数 : []
2019-06-19 17:11:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 17:11:44 -==> Parameters: 
2019-06-19 17:11:44 -<==      Total: 3
2019-06-19 17:11:44 -耗时 : 4
2019-06-19 17:11:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 17:13:56 -请求地址 : http://localhost:8081/index
2019-06-19 17:13:56 -HTTP METHOD : GET
2019-06-19 17:13:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 17:13:56 -参数 : [{}]
2019-06-19 17:13:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 17:13:56 -==> Parameters: 1(Long)
2019-06-19 17:13:56 -<==      Total: 51
2019-06-19 17:13:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 17:13:56 -==> Parameters: 138(Long)
2019-06-19 17:13:56 -<==      Total: 1
2019-06-19 17:13:56 -耗时 : 23
2019-06-19 17:13:56 -返回值 : index_v1
2019-06-19 17:13:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 17:13:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 17:13:56.109(Timestamp)
2019-06-19 17:13:56 -请求地址 : http://localhost:8081/main
2019-06-19 17:13:56 -HTTP METHOD : GET
2019-06-19 17:13:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 17:13:56 -参数 : []
2019-06-19 17:13:56 -耗时 : 0
2019-06-19 17:13:56 -返回值 : main
2019-06-19 17:13:56 -<==    Updates: 1
2019-06-19 17:13:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 17:13:56 -HTTP METHOD : GET
2019-06-19 17:13:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 17:13:56 -参数 : []
2019-06-19 17:13:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 17:13:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 17:13:56 -<==      Total: 0
2019-06-19 17:13:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 17:13:56 -==> Parameters: 1(Long), 0(String)
2019-06-19 17:13:56 -<==      Total: 1
2019-06-19 17:13:56 -耗时 : 5
2019-06-19 17:13:56 -返回值 : com.bootdo.common.utils.PageUtils@4b13fc43
2019-06-19 17:13:56 -请求地址 : http://localhost:8081/main
2019-06-19 17:13:56 -HTTP METHOD : GET
2019-06-19 17:13:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 17:13:56 -参数 : []
2019-06-19 17:13:56 -耗时 : 0
2019-06-19 17:13:56 -返回值 : main
2019-06-19 17:13:59 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-06-19 17:13:59 -HTTP METHOD : GET
2019-06-19 17:13:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-06-19 17:13:59 -参数 : []
2019-06-19 17:13:59 -耗时 : 0
2019-06-19 17:13:59 -返回值 : moneyList/moneyList
2019-06-19 17:14:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 17:14:29 -HTTP METHOD : GET
2019-06-19 17:14:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 17:14:29 -参数 : []
2019-06-19 17:14:29 -耗时 : 29
2019-06-19 17:14:29 -返回值 : system/dept/deptTree
2019-06-19 17:14:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 17:14:30 -HTTP METHOD : GET
2019-06-19 17:14:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 17:14:30 -参数 : []
2019-06-19 17:14:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 17:14:30 -==> Parameters: 
2019-06-19 17:14:30 -<==      Total: 3
2019-06-19 17:14:30 -耗时 : 5
2019-06-19 17:14:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 17:14:56 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-19 17:14:56 -HTTP METHOD : GET
2019-06-19 17:14:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-19 17:14:56 -参数 : []
2019-06-19 17:14:56 -耗时 : 0
2019-06-19 17:14:56 -返回值 : moneyLog/elecLog/elecLog
2019-06-19 17:14:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:14:57 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 17:14:57 -HTTP METHOD : GET
2019-06-19 17:14:57 -HTTP METHOD : GET
2019-06-19 17:14:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:14:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:14:57 -参数 : [userType]
2019-06-19 17:14:57 -参数 : [elecType]
2019-06-19 17:14:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:14:57 -==> Parameters: elecType(String)
2019-06-19 17:14:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:14:57 -==> Parameters: userType(String)
2019-06-19 17:14:57 -<==      Total: 4
2019-06-19 17:14:57 -耗时 : 4
2019-06-19 17:14:57 -<==      Total: 11
2019-06-19 17:14:57 -耗时 : 6
2019-06-19 17:14:57 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:14:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:14:57 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-19 17:14:57 -HTTP METHOD : GET
2019-06-19 17:14:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-19 17:14:57 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-19 17:14:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-19 17:14:57 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:14:57 -<==      Total: 10
2019-06-19 17:14:57 -==>  Preparing: select count(*) from elec_log 
2019-06-19 17:14:57 -==> Parameters: 
2019-06-19 17:14:57 -<==      Total: 1
2019-06-19 17:14:57 -耗时 : 91
2019-06-19 17:14:57 -返回值 : com.bootdo.common.utils.PageUtils@315173bf
2019-06-19 17:15:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-19 17:15:00 -HTTP METHOD : GET
2019-06-19 17:15:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-19 17:15:00 -参数 : []
2019-06-19 17:15:00 -耗时 : 0
2019-06-19 17:15:00 -返回值 : moneyLog/heatLog/heatLog
2019-06-19 17:15:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:15:00 -HTTP METHOD : GET
2019-06-19 17:15:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:00 -参数 : [userType]
2019-06-19 17:15:00 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 17:15:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:00 -HTTP METHOD : GET
2019-06-19 17:15:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:00 -参数 : [heatType]
2019-06-19 17:15:00 -==> Parameters: userType(String)
2019-06-19 17:15:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:00 -==> Parameters: heatType(String)
2019-06-19 17:15:00 -<==      Total: 4
2019-06-19 17:15:00 -耗时 : 4
2019-06-19 17:15:00 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:00 -<==      Total: 4
2019-06-19 17:15:00 -耗时 : 9
2019-06-19 17:15:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-19 17:15:01 -HTTP METHOD : GET
2019-06-19 17:15:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-19 17:15:01 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-19 17:15:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-19 17:15:01 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:15:01 -<==      Total: 10
2019-06-19 17:15:01 -==>  Preparing: select count(*) from heat_log 
2019-06-19 17:15:01 -==> Parameters: 
2019-06-19 17:15:01 -<==      Total: 1
2019-06-19 17:15:01 -耗时 : 48
2019-06-19 17:15:01 -返回值 : com.bootdo.common.utils.PageUtils@467671be
2019-06-19 17:15:01 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-19 17:15:01 -HTTP METHOD : GET
2019-06-19 17:15:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-19 17:15:01 -参数 : []
2019-06-19 17:15:01 -耗时 : 1
2019-06-19 17:15:01 -返回值 : moneyLog/waterLog/waterLog
2019-06-19 17:15:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:15:01 -HTTP METHOD : GET
2019-06-19 17:15:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:01 -参数 : [userType]
2019-06-19 17:15:01 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-19 17:15:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:01 -HTTP METHOD : GET
2019-06-19 17:15:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:01 -参数 : [waterType]
2019-06-19 17:15:01 -==> Parameters: userType(String)
2019-06-19 17:15:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:01 -==> Parameters: waterType(String)
2019-06-19 17:15:01 -<==      Total: 4
2019-06-19 17:15:01 -<==      Total: 4
2019-06-19 17:15:01 -耗时 : 3
2019-06-19 17:15:01 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:01 -耗时 : 6
2019-06-19 17:15:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:01 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-19 17:15:01 -HTTP METHOD : GET
2019-06-19 17:15:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-19 17:15:01 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-19 17:15:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-19 17:15:01 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:15:01 -<==      Total: 10
2019-06-19 17:15:01 -==>  Preparing: select count(*) from water_log 
2019-06-19 17:15:01 -==> Parameters: 
2019-06-19 17:15:01 -<==      Total: 1
2019-06-19 17:15:01 -耗时 : 109
2019-06-19 17:15:01 -返回值 : com.bootdo.common.utils.PageUtils@45d42537
2019-06-19 17:15:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-19 17:15:02 -HTTP METHOD : GET
2019-06-19 17:15:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-19 17:15:02 -参数 : []
2019-06-19 17:15:02 -耗时 : 2
2019-06-19 17:15:02 -返回值 : moneyLog/heatLog/heatLog
2019-06-19 17:15:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:15:02 -HTTP METHOD : GET
2019-06-19 17:15:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:02 -参数 : [userType]
2019-06-19 17:15:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:02 -==> Parameters: userType(String)
2019-06-19 17:15:02 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 17:15:02 -HTTP METHOD : GET
2019-06-19 17:15:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:02 -参数 : [heatType]
2019-06-19 17:15:02 -<==      Total: 4
2019-06-19 17:15:02 -耗时 : 4
2019-06-19 17:15:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:02 -==> Parameters: heatType(String)
2019-06-19 17:15:02 -<==      Total: 4
2019-06-19 17:15:02 -耗时 : 6
2019-06-19 17:15:02 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-19 17:15:02 -HTTP METHOD : GET
2019-06-19 17:15:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-19 17:15:02 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-19 17:15:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-19 17:15:02 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:15:02 -<==      Total: 10
2019-06-19 17:15:02 -==>  Preparing: select count(*) from heat_log 
2019-06-19 17:15:02 -==> Parameters: 
2019-06-19 17:15:02 -<==      Total: 1
2019-06-19 17:15:02 -耗时 : 35
2019-06-19 17:15:02 -返回值 : com.bootdo.common.utils.PageUtils@4ef60a38
2019-06-19 17:15:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-19 17:15:02 -HTTP METHOD : GET
2019-06-19 17:15:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-19 17:15:02 -参数 : []
2019-06-19 17:15:02 -耗时 : 0
2019-06-19 17:15:02 -返回值 : moneyLog/elecLog/elecLog
2019-06-19 17:15:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:15:03 -HTTP METHOD : GET
2019-06-19 17:15:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:03 -参数 : [userType]
2019-06-19 17:15:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:03 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 17:15:03 -==> Parameters: userType(String)
2019-06-19 17:15:03 -HTTP METHOD : GET
2019-06-19 17:15:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:03 -参数 : [elecType]
2019-06-19 17:15:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:03 -==> Parameters: elecType(String)
2019-06-19 17:15:03 -<==      Total: 4
2019-06-19 17:15:03 -耗时 : 3
2019-06-19 17:15:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:03 -<==      Total: 11
2019-06-19 17:15:03 -耗时 : 8
2019-06-19 17:15:03 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-19 17:15:03 -HTTP METHOD : GET
2019-06-19 17:15:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-19 17:15:03 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-19 17:15:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-19 17:15:03 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:15:03 -<==      Total: 10
2019-06-19 17:15:03 -==>  Preparing: select count(*) from elec_log 
2019-06-19 17:15:03 -==> Parameters: 
2019-06-19 17:15:03 -<==      Total: 1
2019-06-19 17:15:03 -耗时 : 14
2019-06-19 17:15:03 -返回值 : com.bootdo.common.utils.PageUtils@45c16036
2019-06-19 17:15:03 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-19 17:15:03 -HTTP METHOD : GET
2019-06-19 17:15:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-19 17:15:03 -参数 : []
2019-06-19 17:15:03 -耗时 : 0
2019-06-19 17:15:03 -返回值 : moneyLog/waterLog/waterLog
2019-06-19 17:15:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:15:03 -HTTP METHOD : GET
2019-06-19 17:15:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:03 -参数 : [userType]
2019-06-19 17:15:03 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-19 17:15:03 -HTTP METHOD : GET
2019-06-19 17:15:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:03 -参数 : [waterType]
2019-06-19 17:15:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:03 -==> Parameters: userType(String)
2019-06-19 17:15:03 -==> Parameters: waterType(String)
2019-06-19 17:15:03 -<==      Total: 4
2019-06-19 17:15:03 -耗时 : 4
2019-06-19 17:15:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:03 -<==      Total: 4
2019-06-19 17:15:03 -耗时 : 9
2019-06-19 17:15:03 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:03 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-19 17:15:03 -HTTP METHOD : GET
2019-06-19 17:15:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-19 17:15:03 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-19 17:15:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-19 17:15:03 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:15:03 -<==      Total: 10
2019-06-19 17:15:03 -==>  Preparing: select count(*) from water_log 
2019-06-19 17:15:03 -==> Parameters: 
2019-06-19 17:15:03 -<==      Total: 1
2019-06-19 17:15:03 -耗时 : 55
2019-06-19 17:15:03 -返回值 : com.bootdo.common.utils.PageUtils@622a6ff3
2019-06-19 17:15:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-19 17:15:05 -HTTP METHOD : GET
2019-06-19 17:15:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-19 17:15:05 -参数 : []
2019-06-19 17:15:05 -耗时 : 1
2019-06-19 17:15:05 -返回值 : moneyLog/heatLog/heatLog
2019-06-19 17:15:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:15:05 -HTTP METHOD : GET
2019-06-19 17:15:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:05 -参数 : [userType]
2019-06-19 17:15:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:05 -==> Parameters: userType(String)
2019-06-19 17:15:05 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 17:15:05 -HTTP METHOD : GET
2019-06-19 17:15:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:05 -参数 : [heatType]
2019-06-19 17:15:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:05 -==> Parameters: heatType(String)
2019-06-19 17:15:05 -<==      Total: 4
2019-06-19 17:15:05 -耗时 : 3
2019-06-19 17:15:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:05 -<==      Total: 4
2019-06-19 17:15:05 -耗时 : 3
2019-06-19 17:15:05 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-19 17:15:05 -HTTP METHOD : GET
2019-06-19 17:15:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-19 17:15:05 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-19 17:15:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-19 17:15:05 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:15:05 -<==      Total: 10
2019-06-19 17:15:05 -==>  Preparing: select count(*) from heat_log 
2019-06-19 17:15:05 -==> Parameters: 
2019-06-19 17:15:05 -<==      Total: 1
2019-06-19 17:15:05 -耗时 : 8
2019-06-19 17:15:05 -返回值 : com.bootdo.common.utils.PageUtils@5e0ab1d7
2019-06-19 17:15:07 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-19 17:15:07 -HTTP METHOD : GET
2019-06-19 17:15:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-19 17:15:07 -参数 : []
2019-06-19 17:15:07 -耗时 : 0
2019-06-19 17:15:07 -返回值 : moneyLog/elecLog/elecLog
2019-06-19 17:15:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:15:07 -HTTP METHOD : GET
2019-06-19 17:15:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:07 -参数 : [userType]
2019-06-19 17:15:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:07 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 17:15:07 -==> Parameters: userType(String)
2019-06-19 17:15:07 -HTTP METHOD : GET
2019-06-19 17:15:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:15:07 -参数 : [elecType]
2019-06-19 17:15:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:15:07 -==> Parameters: elecType(String)
2019-06-19 17:15:07 -<==      Total: 4
2019-06-19 17:15:07 -耗时 : 3
2019-06-19 17:15:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:07 -<==      Total: 11
2019-06-19 17:15:07 -耗时 : 5
2019-06-19 17:15:07 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:15:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-19 17:15:07 -HTTP METHOD : GET
2019-06-19 17:15:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-19 17:15:07 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-19 17:15:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-19 17:15:07 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:15:07 -<==      Total: 10
2019-06-19 17:15:07 -==>  Preparing: select count(*) from elec_log 
2019-06-19 17:15:07 -==> Parameters: 
2019-06-19 17:15:07 -<==      Total: 1
2019-06-19 17:15:07 -耗时 : 22
2019-06-19 17:15:07 -返回值 : com.bootdo.common.utils.PageUtils@43e1545d
2019-06-19 17:16:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-19 17:16:01 -HTTP METHOD : GET
2019-06-19 17:16:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-19 17:16:01 -参数 : []
2019-06-19 17:16:01 -耗时 : 0
2019-06-19 17:16:01 -返回值 : moneyLog/heatLog/heatLog
2019-06-19 17:16:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:16:02 -HTTP METHOD : GET
2019-06-19 17:16:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:02 -参数 : [userType]
2019-06-19 17:16:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:02 -==> Parameters: userType(String)
2019-06-19 17:16:02 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 17:16:02 -HTTP METHOD : GET
2019-06-19 17:16:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:02 -参数 : [heatType]
2019-06-19 17:16:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:02 -==> Parameters: heatType(String)
2019-06-19 17:16:02 -<==      Total: 4
2019-06-19 17:16:02 -耗时 : 3
2019-06-19 17:16:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:02 -<==      Total: 4
2019-06-19 17:16:02 -耗时 : 8
2019-06-19 17:16:02 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-19 17:16:02 -HTTP METHOD : GET
2019-06-19 17:16:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-19 17:16:02 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-19 17:16:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-19 17:16:02 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:16:02 -<==      Total: 10
2019-06-19 17:16:02 -==>  Preparing: select count(*) from heat_log 
2019-06-19 17:16:02 -==> Parameters: 
2019-06-19 17:16:02 -<==      Total: 1
2019-06-19 17:16:02 -耗时 : 7
2019-06-19 17:16:02 -返回值 : com.bootdo.common.utils.PageUtils@325cdf24
2019-06-19 17:16:02 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-19 17:16:02 -HTTP METHOD : GET
2019-06-19 17:16:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-19 17:16:02 -参数 : []
2019-06-19 17:16:02 -耗时 : 0
2019-06-19 17:16:02 -返回值 : moneyLog/waterLog/waterLog
2019-06-19 17:16:03 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-19 17:16:03 -HTTP METHOD : GET
2019-06-19 17:16:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:03 -参数 : [waterType]
2019-06-19 17:16:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:03 -==> Parameters: waterType(String)
2019-06-19 17:16:03 -<==      Total: 4
2019-06-19 17:16:03 -耗时 : 3
2019-06-19 17:16:03 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:16:03 -HTTP METHOD : GET
2019-06-19 17:16:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:03 -参数 : [userType]
2019-06-19 17:16:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:03 -==> Parameters: userType(String)
2019-06-19 17:16:03 -<==      Total: 4
2019-06-19 17:16:03 -耗时 : 26
2019-06-19 17:16:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:03 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-19 17:16:03 -HTTP METHOD : GET
2019-06-19 17:16:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-19 17:16:03 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-19 17:16:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-19 17:16:03 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:16:03 -<==      Total: 10
2019-06-19 17:16:03 -==>  Preparing: select count(*) from water_log 
2019-06-19 17:16:03 -==> Parameters: 
2019-06-19 17:16:03 -<==      Total: 1
2019-06-19 17:16:03 -耗时 : 8
2019-06-19 17:16:03 -返回值 : com.bootdo.common.utils.PageUtils@923140
2019-06-19 17:16:04 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-19 17:16:04 -HTTP METHOD : GET
2019-06-19 17:16:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-19 17:16:04 -参数 : []
2019-06-19 17:16:04 -耗时 : 0
2019-06-19 17:16:04 -返回值 : moneyLog/heatLog/heatLog
2019-06-19 17:16:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:16:04 -HTTP METHOD : GET
2019-06-19 17:16:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:04 -参数 : [userType]
2019-06-19 17:16:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:04 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 17:16:04 -HTTP METHOD : GET
2019-06-19 17:16:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:04 -参数 : [heatType]
2019-06-19 17:16:04 -==> Parameters: userType(String)
2019-06-19 17:16:04 -<==      Total: 4
2019-06-19 17:16:04 -耗时 : 6
2019-06-19 17:16:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:04 -==> Parameters: heatType(String)
2019-06-19 17:16:04 -<==      Total: 4
2019-06-19 17:16:04 -耗时 : 8
2019-06-19 17:16:04 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-19 17:16:04 -HTTP METHOD : GET
2019-06-19 17:16:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-19 17:16:04 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-19 17:16:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-19 17:16:04 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:16:04 -<==      Total: 10
2019-06-19 17:16:04 -==>  Preparing: select count(*) from heat_log 
2019-06-19 17:16:04 -==> Parameters: 
2019-06-19 17:16:04 -<==      Total: 1
2019-06-19 17:16:04 -耗时 : 8
2019-06-19 17:16:04 -返回值 : com.bootdo.common.utils.PageUtils@71d42dca
2019-06-19 17:16:04 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-19 17:16:04 -HTTP METHOD : GET
2019-06-19 17:16:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-19 17:16:04 -参数 : []
2019-06-19 17:16:04 -耗时 : 0
2019-06-19 17:16:04 -返回值 : moneyLog/elecLog/elecLog
2019-06-19 17:16:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:16:04 -HTTP METHOD : GET
2019-06-19 17:16:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:04 -参数 : [userType]
2019-06-19 17:16:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:04 -==> Parameters: userType(String)
2019-06-19 17:16:04 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 17:16:04 -HTTP METHOD : GET
2019-06-19 17:16:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:04 -参数 : [elecType]
2019-06-19 17:16:04 -<==      Total: 4
2019-06-19 17:16:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:04 -耗时 : 5
2019-06-19 17:16:04 -==> Parameters: elecType(String)
2019-06-19 17:16:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:04 -<==      Total: 11
2019-06-19 17:16:04 -耗时 : 6
2019-06-19 17:16:04 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-19 17:16:04 -HTTP METHOD : GET
2019-06-19 17:16:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-19 17:16:04 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-19 17:16:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-19 17:16:04 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:16:04 -<==      Total: 10
2019-06-19 17:16:04 -==>  Preparing: select count(*) from elec_log 
2019-06-19 17:16:04 -==> Parameters: 
2019-06-19 17:16:04 -<==      Total: 1
2019-06-19 17:16:04 -耗时 : 9
2019-06-19 17:16:04 -返回值 : com.bootdo.common.utils.PageUtils@2ddf8064
2019-06-19 17:16:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-19 17:16:05 -HTTP METHOD : GET
2019-06-19 17:16:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-19 17:16:05 -参数 : []
2019-06-19 17:16:05 -耗时 : 2
2019-06-19 17:16:05 -返回值 : moneyLog/heatLog/heatLog
2019-06-19 17:16:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:16:05 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 17:16:05 -HTTP METHOD : GET
2019-06-19 17:16:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:05 -参数 : [userType]
2019-06-19 17:16:05 -HTTP METHOD : GET
2019-06-19 17:16:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:05 -参数 : [heatType]
2019-06-19 17:16:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:05 -==> Parameters: heatType(String)
2019-06-19 17:16:05 -==> Parameters: userType(String)
2019-06-19 17:16:05 -<==      Total: 4
2019-06-19 17:16:05 -<==      Total: 4
2019-06-19 17:16:05 -耗时 : 4
2019-06-19 17:16:05 -耗时 : 4
2019-06-19 17:16:05 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-19 17:16:06 -HTTP METHOD : GET
2019-06-19 17:16:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-19 17:16:06 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-19 17:16:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-19 17:16:06 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:16:06 -<==      Total: 10
2019-06-19 17:16:06 -==>  Preparing: select count(*) from heat_log 
2019-06-19 17:16:06 -==> Parameters: 
2019-06-19 17:16:06 -<==      Total: 1
2019-06-19 17:16:06 -耗时 : 7
2019-06-19 17:16:06 -返回值 : com.bootdo.common.utils.PageUtils@cd27caf
2019-06-19 17:16:07 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-19 17:16:07 -HTTP METHOD : GET
2019-06-19 17:16:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-19 17:16:07 -参数 : []
2019-06-19 17:16:07 -耗时 : 0
2019-06-19 17:16:07 -返回值 : moneyLog/waterLog/waterLog
2019-06-19 17:16:07 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-19 17:16:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:16:07 -HTTP METHOD : GET
2019-06-19 17:16:07 -HTTP METHOD : GET
2019-06-19 17:16:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:07 -参数 : [userType]
2019-06-19 17:16:07 -参数 : [waterType]
2019-06-19 17:16:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:07 -==> Parameters: waterType(String)
2019-06-19 17:16:07 -==> Parameters: userType(String)
2019-06-19 17:16:07 -<==      Total: 4
2019-06-19 17:16:07 -<==      Total: 4
2019-06-19 17:16:07 -耗时 : 3
2019-06-19 17:16:07 -耗时 : 3
2019-06-19 17:16:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:07 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-19 17:16:07 -HTTP METHOD : GET
2019-06-19 17:16:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-19 17:16:07 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-19 17:16:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-19 17:16:07 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:16:07 -<==      Total: 10
2019-06-19 17:16:07 -==>  Preparing: select count(*) from water_log 
2019-06-19 17:16:07 -==> Parameters: 
2019-06-19 17:16:07 -<==      Total: 1
2019-06-19 17:16:07 -耗时 : 7
2019-06-19 17:16:07 -返回值 : com.bootdo.common.utils.PageUtils@4fcd49bd
2019-06-19 17:16:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-19 17:16:08 -HTTP METHOD : GET
2019-06-19 17:16:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-19 17:16:08 -参数 : []
2019-06-19 17:16:08 -耗时 : 0
2019-06-19 17:16:08 -返回值 : moneyLog/heatLog/heatLog
2019-06-19 17:16:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:16:08 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 17:16:08 -HTTP METHOD : GET
2019-06-19 17:16:08 -HTTP METHOD : GET
2019-06-19 17:16:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:08 -参数 : [userType]
2019-06-19 17:16:08 -参数 : [heatType]
2019-06-19 17:16:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:08 -==> Parameters: heatType(String)
2019-06-19 17:16:08 -==> Parameters: userType(String)
2019-06-19 17:16:08 -<==      Total: 4
2019-06-19 17:16:08 -耗时 : 3
2019-06-19 17:16:08 -<==      Total: 4
2019-06-19 17:16:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:08 -耗时 : 3
2019-06-19 17:16:08 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-19 17:16:08 -HTTP METHOD : GET
2019-06-19 17:16:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-19 17:16:08 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-19 17:16:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-19 17:16:08 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:16:08 -<==      Total: 10
2019-06-19 17:16:08 -==>  Preparing: select count(*) from heat_log 
2019-06-19 17:16:08 -==> Parameters: 
2019-06-19 17:16:08 -<==      Total: 1
2019-06-19 17:16:08 -耗时 : 6
2019-06-19 17:16:08 -返回值 : com.bootdo.common.utils.PageUtils@721ac991
2019-06-19 17:16:09 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-06-19 17:16:09 -HTTP METHOD : GET
2019-06-19 17:16:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-06-19 17:16:09 -参数 : []
2019-06-19 17:16:09 -耗时 : 1
2019-06-19 17:16:09 -返回值 : moneyLog/waterLog/waterLog
2019-06-19 17:16:09 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-06-19 17:16:09 -HTTP METHOD : GET
2019-06-19 17:16:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:09 -参数 : [waterType]
2019-06-19 17:16:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:16:09 -HTTP METHOD : GET
2019-06-19 17:16:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:09 -参数 : [userType]
2019-06-19 17:16:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:09 -==> Parameters: waterType(String)
2019-06-19 17:16:09 -==> Parameters: userType(String)
2019-06-19 17:16:09 -<==      Total: 4
2019-06-19 17:16:09 -<==      Total: 4
2019-06-19 17:16:09 -耗时 : 4
2019-06-19 17:16:09 -耗时 : 3
2019-06-19 17:16:09 -返回值 : [DictDO{id=188, name='民用水', value='1', type='waterType', description='水费性质', sort=10, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=187, name='商业水1', value='2', type='waterType', description='水费性质', sort=20, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=186, name='商业水2', value='3', type='waterType', description='水费性质', sort=30, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=185, name='商业水3', value='4', type='waterType', description='水费性质', sort=40, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:09 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-06-19 17:16:09 -HTTP METHOD : GET
2019-06-19 17:16:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-06-19 17:16:09 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-06-19 17:16:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-06-19 17:16:09 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:16:09 -<==      Total: 10
2019-06-19 17:16:09 -==>  Preparing: select count(*) from water_log 
2019-06-19 17:16:09 -==> Parameters: 
2019-06-19 17:16:09 -<==      Total: 1
2019-06-19 17:16:09 -耗时 : 8
2019-06-19 17:16:09 -返回值 : com.bootdo.common.utils.PageUtils@42b239e8
2019-06-19 17:16:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-06-19 17:16:14 -HTTP METHOD : GET
2019-06-19 17:16:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-06-19 17:16:14 -参数 : []
2019-06-19 17:16:14 -耗时 : 1
2019-06-19 17:16:14 -返回值 : system/dept/deptTree
2019-06-19 17:16:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-06-19 17:16:14 -HTTP METHOD : GET
2019-06-19 17:16:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-06-19 17:16:14 -参数 : []
2019-06-19 17:16:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-06-19 17:16:14 -==> Parameters: 
2019-06-19 17:16:14 -<==      Total: 3
2019-06-19 17:16:14 -耗时 : 2
2019-06-19 17:16:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-06-19 17:16:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-06-19 17:16:21 -HTTP METHOD : GET
2019-06-19 17:16:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-06-19 17:16:21 -参数 : []
2019-06-19 17:16:21 -耗时 : 0
2019-06-19 17:16:21 -返回值 : moneyLog/heatLog/heatLog
2019-06-19 17:16:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:16:21 -HTTP METHOD : GET
2019-06-19 17:16:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:21 -参数 : [userType]
2019-06-19 17:16:21 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-06-19 17:16:21 -HTTP METHOD : GET
2019-06-19 17:16:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:21 -参数 : [heatType]
2019-06-19 17:16:21 -==> Parameters: userType(String)
2019-06-19 17:16:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:21 -==> Parameters: heatType(String)
2019-06-19 17:16:21 -<==      Total: 4
2019-06-19 17:16:21 -耗时 : 3
2019-06-19 17:16:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:21 -<==      Total: 4
2019-06-19 17:16:21 -耗时 : 5
2019-06-19 17:16:21 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-06-19 17:16:21 -HTTP METHOD : GET
2019-06-19 17:16:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-06-19 17:16:21 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-06-19 17:16:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-06-19 17:16:21 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:16:21 -<==      Total: 10
2019-06-19 17:16:21 -==>  Preparing: select count(*) from heat_log 
2019-06-19 17:16:21 -==> Parameters: 
2019-06-19 17:16:21 -<==      Total: 1
2019-06-19 17:16:21 -耗时 : 7
2019-06-19 17:16:21 -返回值 : com.bootdo.common.utils.PageUtils@7cf739a4
2019-06-19 17:16:22 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-06-19 17:16:22 -HTTP METHOD : GET
2019-06-19 17:16:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-06-19 17:16:22 -参数 : []
2019-06-19 17:16:22 -耗时 : 0
2019-06-19 17:16:22 -返回值 : moneyLog/elecLog/elecLog
2019-06-19 17:16:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-06-19 17:16:22 -HTTP METHOD : GET
2019-06-19 17:16:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:22 -参数 : [userType]
2019-06-19 17:16:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:22 -==> Parameters: userType(String)
2019-06-19 17:16:22 -<==      Total: 4
2019-06-19 17:16:22 -耗时 : 4
2019-06-19 17:16:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:22 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-06-19 17:16:22 -HTTP METHOD : GET
2019-06-19 17:16:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-06-19 17:16:22 -参数 : [elecType]
2019-06-19 17:16:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-06-19 17:16:22 -==> Parameters: elecType(String)
2019-06-19 17:16:22 -<==      Total: 11
2019-06-19 17:16:22 -耗时 : 5
2019-06-19 17:16:22 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-06-19 17:16:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-06-19 17:16:22 -HTTP METHOD : GET
2019-06-19 17:16:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-06-19 17:16:22 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-06-19 17:16:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-06-19 17:16:22 -==> Parameters: 0(Integer), 10(Integer)
2019-06-19 17:16:22 -<==      Total: 10
2019-06-19 17:16:22 -==>  Preparing: select count(*) from elec_log 
2019-06-19 17:16:22 -==> Parameters: 
2019-06-19 17:16:22 -<==      Total: 1
2019-06-19 17:16:22 -耗时 : 8
2019-06-19 17:16:22 -返回值 : com.bootdo.common.utils.PageUtils@79482587
2019-06-19 17:16:36 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 342]
2019-06-19 17:22:40 -请求地址 : http://localhost:8081/index
2019-06-19 17:22:40 -HTTP METHOD : GET
2019-06-19 17:22:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-06-19 17:22:40 -参数 : [{}]
2019-06-19 17:22:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-06-19 17:22:40 -==> Parameters: 1(Long)
2019-06-19 17:22:40 -<==      Total: 51
2019-06-19 17:22:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-06-19 17:22:40 -==> Parameters: 138(Long)
2019-06-19 17:22:40 -<==      Total: 1
2019-06-19 17:22:40 -耗时 : 15
2019-06-19 17:22:40 -返回值 : index_v1
2019-06-19 17:22:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-06-19 17:22:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-bullseye","url":"/moneyUpLoad/ElecLogUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"165","parentId":"106","text":"缴费上传"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":tru(String), 127.0.0.1(String), 2019-06-19 17:22:40.325(Timestamp)
2019-06-19 17:22:40 -<==    Updates: 1
2019-06-19 17:22:40 -请求地址 : http://localhost:8081/main
2019-06-19 17:22:40 -HTTP METHOD : GET
2019-06-19 17:22:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 17:22:40 -参数 : []
2019-06-19 17:22:40 -耗时 : 1
2019-06-19 17:22:40 -返回值 : main
2019-06-19 17:22:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-06-19 17:22:40 -HTTP METHOD : GET
2019-06-19 17:22:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-06-19 17:22:40 -参数 : []
2019-06-19 17:22:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-06-19 17:22:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-06-19 17:22:40 -<==      Total: 0
2019-06-19 17:22:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-06-19 17:22:40 -==> Parameters: 1(Long), 0(String)
2019-06-19 17:22:40 -<==      Total: 1
2019-06-19 17:22:40 -耗时 : 6
2019-06-19 17:22:40 -返回值 : com.bootdo.common.utils.PageUtils@7464030b
2019-06-19 17:22:40 -请求地址 : http://localhost:8081/main
2019-06-19 17:22:40 -HTTP METHOD : GET
2019-06-19 17:22:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-06-19 17:22:40 -参数 : []
2019-06-19 17:22:40 -耗时 : 1
2019-06-19 17:22:40 -返回值 : main

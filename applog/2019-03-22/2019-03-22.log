2019-03-22 08:31:00 -Starting BootdoApplication on ZJZL-20180906VX with PID 11340 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-22 08:31:00 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-22 08:31:00 -The following profiles are active: dev
2019-03-22 08:31:00 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5f031ebd: startup date [Fri Mar 22 08:31:00 CST 2019]; root of context hierarchy
2019-03-22 08:31:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-22 08:31:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e3bc2b78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:31:13 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d6155a1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:31:14 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:31:14 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:31:14 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:31:14 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-22 08:31:14 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-22 08:31:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:31:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:31:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:31:15 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:31:16 -Tomcat initialized with port(s): 8081 (http)
2019-03-22 08:31:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-22 08:31:16 -Starting service [Tomcat]
2019-03-22 08:31:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-22 08:31:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-22 08:31:17 -Initializing Spring embedded WebApplicationContext
2019-03-22 08:31:17 -Root WebApplicationContext: initialization completed in 16505 ms
2019-03-22 08:31:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-22 08:31:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-22 08:31:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-22 08:31:18 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-22 08:31:18 -Filter xssFilter was not registered (disabled)
2019-03-22 08:31:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-22 08:31:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-22 08:31:18 -Servlet statViewServlet mapped to [/druid/*]
2019-03-22 08:31:18 -Servlet dispatcherServlet mapped to [/]
2019-03-22 08:31:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5f031ebd: startup date [Fri Mar 22 08:31:00 CST 2019]; root of context hierarchy
2019-03-22 08:31:23 -Using default implementation for ThreadExecutor
2019-03-22 08:31:23 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-22 08:31:23 -Quartz Scheduler v.2.2.1 created.
2019-03-22 08:31:23 -RAMJobStore initialized.
2019-03-22 08:31:23 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-22 08:31:23 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-22 08:31:23 -Quartz scheduler version: 2.2.1
2019-03-22 08:31:23 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3ee68377
2019-03-22 08:31:24 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-22 08:31:24 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-22 08:31:28 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-22 08:31:28 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-22 08:31:28 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:31:28 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-22 08:31:28 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-22 08:31:28 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-22 08:31:28 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-22 08:31:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-22 08:31:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-22 08:31:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-22 08:31:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-22 08:31:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-22 08:31:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-22 08:31:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-22 08:31:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-22 08:31:28 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-22 08:31:28 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-22 08:31:28 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-22 08:31:28 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-22 08:31:28 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-22 08:31:28 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 08:31:28 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-22 08:31:28 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 08:31:28 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-22 08:31:28 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-22 08:31:28 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-22 08:31:28 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-22 08:31:28 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-22 08:31:28 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-22 08:31:28 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-22 08:31:28 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-22 08:31:28 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:31:28 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:31:28 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-22 08:31:28 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-22 08:31:28 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-22 08:31:28 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-22 08:31:28 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:31:28 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-22 08:31:28 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:31:28 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-22 08:31:28 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-22 08:31:28 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-22 08:31:28 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-22 08:31:28 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-22 08:31:28 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-22 08:31:28 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-22 08:31:28 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 08:31:28 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-22 08:31:28 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-22 08:31:28 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-22 08:31:28 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-22 08:31:28 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-22 08:31:28 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:31:28 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-22 08:31:28 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:31:28 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-22 08:31:28 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-22 08:31:28 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 08:31:28 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 08:31:28 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-22 08:31:28 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-22 08:31:28 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-22 08:31:28 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 08:31:28 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-22 08:31:28 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-22 08:31:28 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-22 08:31:28 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-22 08:31:28 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-22 08:31:28 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-22 08:31:28 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-22 08:31:28 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-22 08:31:28 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:31:28 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-22 08:31:28 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-22 08:31:28 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-22 08:31:28 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-22 08:31:28 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-22 08:31:28 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-22 08:31:28 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-22 08:31:28 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-22 08:31:28 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-22 08:31:28 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-22 08:31:28 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:31:28 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-22 08:31:28 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-22 08:31:28 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-22 08:31:28 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-22 08:31:28 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-22 08:31:28 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-22 08:31:28 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-22 08:31:28 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-22 08:31:28 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:31:28 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:31:28 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-22 08:31:28 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-22 08:31:28 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-22 08:31:28 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-22 08:31:28 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-22 08:31:28 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-22 08:31:28 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-22 08:31:28 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-22 08:31:28 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-22 08:31:28 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-22 08:31:28 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-22 08:31:28 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-22 08:31:28 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-22 08:31:28 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-22 08:31:28 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-22 08:31:28 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:31:28 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-22 08:31:28 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 08:31:28 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 08:31:28 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-22 08:31:28 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-22 08:31:28 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-22 08:31:28 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-22 08:31:28 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-22 08:31:28 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:31:28 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-22 08:31:28 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:31:28 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-22 08:31:28 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-22 08:31:28 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-22 08:31:28 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-22 08:31:28 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 08:31:28 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 08:31:28 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:31:28 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-22 08:31:28 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:31:28 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-22 08:31:28 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:31:28 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-22 08:31:28 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-22 08:31:28 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-22 08:31:29 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-22 08:31:29 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-22 08:31:29 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-22 08:31:30 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:31:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5f031ebd: startup date [Fri Mar 22 08:31:00 CST 2019]; root of context hierarchy
2019-03-22 08:31:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:31:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:31:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:31:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-22 08:31:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-22 08:31:34 -Registering beans for JMX exposure on startup
2019-03-22 08:31:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-22 08:31:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-22 08:31:34 -Starting beans in phase 2147483647
2019-03-22 08:31:34 -Context refreshed
2019-03-22 08:31:34 -Found 1 custom documentation plugin(s)
2019-03-22 08:31:34 -Scanning for api listing references
2019-03-22 08:31:35 -Generating unique operation named: removeUsingPOST_1
2019-03-22 08:31:35 -Generating unique operation named: addUsingGET_1
2019-03-22 08:31:35 -Generating unique operation named: editUsingGET_1
2019-03-22 08:31:35 -Generating unique operation named: listUsingGET_1
2019-03-22 08:31:35 -Generating unique operation named: removeUsingPOST_2
2019-03-22 08:31:35 -Generating unique operation named: removeUsingPOST_3
2019-03-22 08:31:35 -Generating unique operation named: saveUsingPOST_1
2019-03-22 08:31:35 -Generating unique operation named: updateUsingGET_1
2019-03-22 08:31:35 -Generating unique operation named: updateUsingHEAD_1
2019-03-22 08:31:35 -Generating unique operation named: updateUsingPOST_1
2019-03-22 08:31:35 -Generating unique operation named: updateUsingPUT_1
2019-03-22 08:31:35 -Generating unique operation named: updateUsingPATCH_1
2019-03-22 08:31:35 -Generating unique operation named: updateUsingDELETE_1
2019-03-22 08:31:35 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-22 08:31:35 -Generating unique operation named: updateUsingTRACE_1
2019-03-22 08:31:35 -Generating unique operation named: addUsingGET_2
2019-03-22 08:31:35 -Generating unique operation named: editUsingGET_2
2019-03-22 08:31:35 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-22 08:31:35 -Generating unique operation named: listUsingGET_2
2019-03-22 08:31:35 -Generating unique operation named: removeUsingPOST_4
2019-03-22 08:31:35 -Generating unique operation named: removeUsingPOST_5
2019-03-22 08:31:35 -Generating unique operation named: saveUsingPOST_2
2019-03-22 08:31:35 -Generating unique operation named: updateUsingGET_2
2019-03-22 08:31:35 -Generating unique operation named: updateUsingHEAD_2
2019-03-22 08:31:35 -Generating unique operation named: updateUsingPOST_2
2019-03-22 08:31:35 -Generating unique operation named: updateUsingPUT_2
2019-03-22 08:31:35 -Generating unique operation named: updateUsingPATCH_2
2019-03-22 08:31:35 -Generating unique operation named: updateUsingDELETE_2
2019-03-22 08:31:35 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-22 08:31:35 -Generating unique operation named: updateUsingTRACE_2
2019-03-22 08:31:35 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-22 08:31:35 -Generating unique operation named: addUsingGET_3
2019-03-22 08:31:35 -Generating unique operation named: editUsingGET_3
2019-03-22 08:31:35 -Generating unique operation named: listUsingGET_3
2019-03-22 08:31:35 -Generating unique operation named: removeUsingPOST_6
2019-03-22 08:31:35 -Generating unique operation named: removeUsingPOST_7
2019-03-22 08:31:36 -Generating unique operation named: saveUsingPOST_3
2019-03-22 08:31:36 -Generating unique operation named: updateUsingGET_3
2019-03-22 08:31:36 -Generating unique operation named: updateUsingHEAD_3
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPOST_3
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPUT_3
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPATCH_3
2019-03-22 08:31:36 -Generating unique operation named: updateUsingDELETE_3
2019-03-22 08:31:36 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-22 08:31:36 -Generating unique operation named: updateUsingTRACE_3
2019-03-22 08:31:36 -Generating unique operation named: addUsingGET_4
2019-03-22 08:31:36 -Generating unique operation named: editUsingGET_4
2019-03-22 08:31:36 -Generating unique operation named: listUsingGET_4
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_8
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_9
2019-03-22 08:31:36 -Generating unique operation named: saveUsingPOST_4
2019-03-22 08:31:36 -Generating unique operation named: updateUsingGET_4
2019-03-22 08:31:36 -Generating unique operation named: updateUsingHEAD_4
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPOST_4
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPUT_4
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPATCH_4
2019-03-22 08:31:36 -Generating unique operation named: updateUsingDELETE_4
2019-03-22 08:31:36 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-22 08:31:36 -Generating unique operation named: updateUsingTRACE_4
2019-03-22 08:31:36 -Generating unique operation named: ElecUsingGET_1
2019-03-22 08:31:36 -Generating unique operation named: addUsingGET_5
2019-03-22 08:31:36 -Generating unique operation named: editUsingGET_5
2019-03-22 08:31:36 -Generating unique operation named: listUsingGET_5
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_10
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_11
2019-03-22 08:31:36 -Generating unique operation named: saveUsingPOST_5
2019-03-22 08:31:36 -Generating unique operation named: updateUsingGET_5
2019-03-22 08:31:36 -Generating unique operation named: updateUsingHEAD_5
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPOST_5
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPUT_5
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPATCH_5
2019-03-22 08:31:36 -Generating unique operation named: updateUsingDELETE_5
2019-03-22 08:31:36 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-22 08:31:36 -Generating unique operation named: updateUsingTRACE_5
2019-03-22 08:31:36 -Generating unique operation named: editUsingGET_6
2019-03-22 08:31:36 -Generating unique operation named: listUsingGET_6
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPOST_6
2019-03-22 08:31:36 -Generating unique operation named: addUsingGET_6
2019-03-22 08:31:36 -Generating unique operation named: editUsingGET_7
2019-03-22 08:31:36 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-22 08:31:36 -Generating unique operation named: listUsingGET_7
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_12
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_13
2019-03-22 08:31:36 -Generating unique operation named: saveUsingPOST_6
2019-03-22 08:31:36 -Generating unique operation named: updateUsingGET_6
2019-03-22 08:31:36 -Generating unique operation named: updateUsingHEAD_6
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPOST_7
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPUT_6
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPATCH_6
2019-03-22 08:31:36 -Generating unique operation named: updateUsingDELETE_6
2019-03-22 08:31:36 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-22 08:31:36 -Generating unique operation named: updateUsingTRACE_6
2019-03-22 08:31:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-22 08:31:36 -Generating unique operation named: addUsingGET_7
2019-03-22 08:31:36 -Generating unique operation named: editUsingGET_8
2019-03-22 08:31:36 -Generating unique operation named: listUsingGET_8
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_14
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_15
2019-03-22 08:31:36 -Generating unique operation named: saveUsingPOST_7
2019-03-22 08:31:36 -Generating unique operation named: updateUsingGET_7
2019-03-22 08:31:36 -Generating unique operation named: updateUsingHEAD_7
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPOST_8
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPUT_7
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPATCH_7
2019-03-22 08:31:36 -Generating unique operation named: updateUsingDELETE_7
2019-03-22 08:31:36 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-22 08:31:36 -Generating unique operation named: updateUsingTRACE_7
2019-03-22 08:31:36 -Generating unique operation named: addUsingGET_8
2019-03-22 08:31:36 -Generating unique operation named: editUsingGET_9
2019-03-22 08:31:36 -Generating unique operation named: listUsingGET_9
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_16
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_17
2019-03-22 08:31:36 -Generating unique operation named: saveUsingPOST_8
2019-03-22 08:31:36 -Generating unique operation named: updateUsingGET_8
2019-03-22 08:31:36 -Generating unique operation named: updateUsingHEAD_8
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPOST_9
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPUT_8
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPATCH_8
2019-03-22 08:31:36 -Generating unique operation named: updateUsingDELETE_8
2019-03-22 08:31:36 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-22 08:31:36 -Generating unique operation named: updateUsingTRACE_8
2019-03-22 08:31:36 -Generating unique operation named: addUsingGET_9
2019-03-22 08:31:36 -Generating unique operation named: editUsingGET_10
2019-03-22 08:31:36 -Generating unique operation named: infoUsingGET_1
2019-03-22 08:31:36 -Generating unique operation named: infoUsingHEAD_1
2019-03-22 08:31:36 -Generating unique operation named: infoUsingPOST_1
2019-03-22 08:31:36 -Generating unique operation named: infoUsingPUT_1
2019-03-22 08:31:36 -Generating unique operation named: infoUsingPATCH_1
2019-03-22 08:31:36 -Generating unique operation named: infoUsingDELETE_1
2019-03-22 08:31:36 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-22 08:31:36 -Generating unique operation named: infoUsingTRACE_1
2019-03-22 08:31:36 -Generating unique operation named: listUsingGET_10
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_18
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_19
2019-03-22 08:31:36 -Generating unique operation named: saveUsingPOST_9
2019-03-22 08:31:36 -Generating unique operation named: updateUsingPOST_10
2019-03-22 08:31:36 -Generating unique operation named: listUsingGET_11
2019-03-22 08:31:36 -Generating unique operation named: removeUsingPOST_20
2019-03-22 08:31:36 -Generating unique operation named: welcomeUsingGET_1
2019-03-22 08:31:37 -Generating unique operation named: addUsingGET_10
2019-03-22 08:31:37 -Generating unique operation named: editUsingGET_11
2019-03-22 08:31:37 -Generating unique operation named: listUsingGET_12
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_21
2019-03-22 08:31:37 -Generating unique operation named: saveUsingPOST_10
2019-03-22 08:31:37 -Generating unique operation named: treeUsingGET_1
2019-03-22 08:31:37 -Generating unique operation named: treeUsingGET_2
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPOST_11
2019-03-22 08:31:37 -Generating unique operation named: addUsingGET_11
2019-03-22 08:31:37 -Generating unique operation named: editUsingGET_12
2019-03-22 08:31:37 -Generating unique operation named: listUsingGET_13
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_22
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_23
2019-03-22 08:31:37 -Generating unique operation named: saveUsingPOST_11
2019-03-22 08:31:37 -Generating unique operation named: updateUsingGET_9
2019-03-22 08:31:37 -Generating unique operation named: updateUsingHEAD_9
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPOST_12
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPUT_9
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPATCH_9
2019-03-22 08:31:37 -Generating unique operation named: updateUsingDELETE_9
2019-03-22 08:31:37 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-22 08:31:37 -Generating unique operation named: updateUsingTRACE_9
2019-03-22 08:31:37 -Generating unique operation named: addUsingGET_12
2019-03-22 08:31:37 -Generating unique operation named: editUsingGET_13
2019-03-22 08:31:37 -Generating unique operation named: listUsingGET_14
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_24
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_25
2019-03-22 08:31:37 -Generating unique operation named: saveUsingPOST_12
2019-03-22 08:31:37 -Generating unique operation named: updateUsingGET_10
2019-03-22 08:31:37 -Generating unique operation named: updateUsingHEAD_10
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPOST_13
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPUT_10
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPATCH_10
2019-03-22 08:31:37 -Generating unique operation named: updateUsingDELETE_10
2019-03-22 08:31:37 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-22 08:31:37 -Generating unique operation named: updateUsingTRACE_10
2019-03-22 08:31:37 -Generating unique operation named: addUsingGET_13
2019-03-22 08:31:37 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-22 08:31:37 -Generating unique operation named: editUsingGET_14
2019-03-22 08:31:37 -Generating unique operation named: listUsingGET_15
2019-03-22 08:31:37 -Generating unique operation named: saveUsingPOST_13
2019-03-22 08:31:37 -Generating unique operation named: saveUsingPOST_14
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPOST_14
2019-03-22 08:31:37 -Generating unique operation named: listUsingGET_16
2019-03-22 08:31:37 -Generating unique operation named: listUsingHEAD_1
2019-03-22 08:31:37 -Generating unique operation named: listUsingPOST_1
2019-03-22 08:31:37 -Generating unique operation named: listUsingPUT_1
2019-03-22 08:31:37 -Generating unique operation named: listUsingPATCH_1
2019-03-22 08:31:37 -Generating unique operation named: listUsingDELETE_1
2019-03-22 08:31:37 -Generating unique operation named: listUsingOPTIONS_1
2019-03-22 08:31:37 -Generating unique operation named: listUsingTRACE_1
2019-03-22 08:31:37 -Generating unique operation named: addUsingGET_14
2019-03-22 08:31:37 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-22 08:31:37 -Generating unique operation named: editUsingGET_15
2019-03-22 08:31:37 -Generating unique operation named: listUsingGET_17
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_26
2019-03-22 08:31:37 -Generating unique operation named: saveUsingPOST_15
2019-03-22 08:31:37 -Generating unique operation named: treeUsingGET_3
2019-03-22 08:31:37 -Generating unique operation named: treeViewUsingGET_1
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPOST_15
2019-03-22 08:31:37 -Generating unique operation named: addUsingGET_15
2019-03-22 08:31:37 -Generating unique operation named: editUsingGET_16
2019-03-22 08:31:37 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-22 08:31:37 -Generating unique operation named: listUsingGET_18
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_27
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_28
2019-03-22 08:31:37 -Generating unique operation named: saveUsingPOST_16
2019-03-22 08:31:37 -Generating unique operation named: updateUsingGET_11
2019-03-22 08:31:37 -Generating unique operation named: updateUsingHEAD_11
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPOST_16
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPUT_11
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPATCH_11
2019-03-22 08:31:37 -Generating unique operation named: updateUsingDELETE_11
2019-03-22 08:31:37 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-22 08:31:37 -Generating unique operation named: updateUsingTRACE_11
2019-03-22 08:31:37 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-22 08:31:37 -Generating unique operation named: addUsingGET_16
2019-03-22 08:31:37 -Generating unique operation named: editUsingGET_17
2019-03-22 08:31:37 -Generating unique operation named: listUsingGET_19
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_29
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_30
2019-03-22 08:31:37 -Generating unique operation named: saveUsingPOST_17
2019-03-22 08:31:37 -Generating unique operation named: updateUsingGET_12
2019-03-22 08:31:37 -Generating unique operation named: updateUsingHEAD_12
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPOST_17
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPUT_12
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPATCH_12
2019-03-22 08:31:37 -Generating unique operation named: updateUsingDELETE_12
2019-03-22 08:31:37 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-22 08:31:37 -Generating unique operation named: updateUsingTRACE_12
2019-03-22 08:31:37 -Generating unique operation named: addUsingGET_17
2019-03-22 08:31:37 -Generating unique operation named: editUsingGET_18
2019-03-22 08:31:37 -Generating unique operation named: listUsingGET_20
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_31
2019-03-22 08:31:37 -Generating unique operation named: removeUsingPOST_32
2019-03-22 08:31:37 -Generating unique operation named: saveUsingPOST_18
2019-03-22 08:31:37 -Generating unique operation named: updateUsingGET_13
2019-03-22 08:31:37 -Generating unique operation named: updateUsingHEAD_13
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPOST_18
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPUT_13
2019-03-22 08:31:37 -Generating unique operation named: updateUsingPATCH_13
2019-03-22 08:31:37 -Generating unique operation named: updateUsingDELETE_13
2019-03-22 08:31:37 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-22 08:31:37 -Generating unique operation named: updateUsingTRACE_13
2019-03-22 08:31:37 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-22 08:31:37 -Starting Quartz Scheduler now
2019-03-22 08:31:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-22 08:31:37 -Starting...
2019-03-22 08:31:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 08:31:37 -Started.
2019-03-22 08:31:38 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-22 08:31:38 -Using a shared selector for servlet write/read
2019-03-22 08:31:38 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-22 08:31:38 -Started BootdoApplication in 41.737 seconds (JVM running for 43.746)
2019-03-22 08:31:38 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-22 08:31:38 -==> Parameters: 
2019-03-22 08:31:38 -<==      Total: 1
2019-03-22 08:31:49 -Starting BootdoApplication on ZJZL-20180906VX with PID 6796 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-22 08:31:50 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-22 08:31:50 -The following profiles are active: dev
2019-03-22 08:31:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Fri Mar 22 08:31:50 CST 2019]; root of context hierarchy
2019-03-22 08:31:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-22 08:31:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$da486b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:31:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$fffdb55e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:31:59 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:32:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:32:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:32:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-22 08:32:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-22 08:32:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:32:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:32:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:32:01 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:32:01 -Tomcat initialized with port(s): 8081 (http)
2019-03-22 08:32:02 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-22 08:32:02 -Starting service [Tomcat]
2019-03-22 08:32:02 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-22 08:32:02 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-22 08:32:02 -Initializing Spring embedded WebApplicationContext
2019-03-22 08:32:02 -Root WebApplicationContext: initialization completed in 12253 ms
2019-03-22 08:32:03 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-22 08:32:03 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-22 08:32:03 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-22 08:32:03 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-22 08:32:03 -Filter xssFilter was not registered (disabled)
2019-03-22 08:32:03 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-22 08:32:03 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-22 08:32:03 -Servlet statViewServlet mapped to [/druid/*]
2019-03-22 08:32:03 -Servlet dispatcherServlet mapped to [/]
2019-03-22 08:32:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Fri Mar 22 08:31:50 CST 2019]; root of context hierarchy
2019-03-22 08:32:07 -Using default implementation for ThreadExecutor
2019-03-22 08:32:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-22 08:32:07 -Quartz Scheduler v.2.2.1 created.
2019-03-22 08:32:07 -RAMJobStore initialized.
2019-03-22 08:32:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-22 08:32:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-22 08:32:07 -Quartz scheduler version: 2.2.1
2019-03-22 08:32:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6e90cec8
2019-03-22 08:32:08 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-22 08:32:08 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-22 08:32:12 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:32:12 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-22 08:32:12 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-22 08:32:12 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-22 08:32:12 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-22 08:32:12 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-22 08:32:12 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-22 08:32:12 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-22 08:32:12 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-22 08:32:12 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-22 08:32:12 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-22 08:32:12 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-22 08:32:12 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-22 08:32:12 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-22 08:32:12 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-22 08:32:12 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-22 08:32:12 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-22 08:32:12 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-22 08:32:12 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-22 08:32:12 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-22 08:32:12 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 08:32:12 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 08:32:12 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-22 08:32:12 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-22 08:32:12 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-22 08:32:12 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-22 08:32:12 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-22 08:32:12 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-22 08:32:12 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-22 08:32:12 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-22 08:32:12 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-22 08:32:12 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:32:12 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:32:12 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-22 08:32:12 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-22 08:32:12 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-22 08:32:12 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-22 08:32:12 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:32:12 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-22 08:32:12 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:32:12 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-22 08:32:12 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-22 08:32:12 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-22 08:32:12 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-22 08:32:12 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-22 08:32:12 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-22 08:32:12 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-22 08:32:12 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 08:32:12 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-22 08:32:12 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-22 08:32:12 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-22 08:32:12 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-22 08:32:12 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-22 08:32:12 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:32:12 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-22 08:32:12 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:32:12 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-22 08:32:12 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-22 08:32:12 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 08:32:12 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 08:32:12 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-22 08:32:12 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-22 08:32:12 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-22 08:32:12 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 08:32:12 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-22 08:32:12 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-22 08:32:12 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-22 08:32:12 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-22 08:32:12 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-22 08:32:12 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-22 08:32:12 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-22 08:32:12 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:32:12 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-22 08:32:12 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-22 08:32:12 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-22 08:32:12 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-22 08:32:12 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-22 08:32:12 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-22 08:32:12 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-22 08:32:12 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-22 08:32:12 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-22 08:32:12 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-22 08:32:12 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-22 08:32:12 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:32:12 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-22 08:32:12 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-22 08:32:12 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-22 08:32:12 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-22 08:32:12 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-22 08:32:12 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-22 08:32:12 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-22 08:32:12 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-22 08:32:12 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:32:12 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:32:12 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-22 08:32:12 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-22 08:32:12 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-22 08:32:12 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-22 08:32:12 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-22 08:32:12 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-22 08:32:12 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-22 08:32:12 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-22 08:32:12 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-22 08:32:12 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-22 08:32:12 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-22 08:32:12 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-22 08:32:12 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-22 08:32:12 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-22 08:32:12 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-22 08:32:12 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 08:32:12 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:32:12 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 08:32:12 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-22 08:32:12 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-22 08:32:12 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-22 08:32:12 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-22 08:32:12 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-22 08:32:12 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-22 08:32:12 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-22 08:32:12 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:32:12 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-22 08:32:12 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:32:12 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-22 08:32:12 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-22 08:32:12 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-22 08:32:12 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 08:32:12 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 08:32:12 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-22 08:32:12 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:32:12 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-22 08:32:12 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:32:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:32:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-22 08:32:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-22 08:32:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-22 08:32:13 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-22 08:32:13 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-22 08:32:14 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-22 08:32:14 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:32:14 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Fri Mar 22 08:31:50 CST 2019]; root of context hierarchy
2019-03-22 08:32:15 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:32:15 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:32:15 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:32:15 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-22 08:32:15 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-22 08:32:17 -Registering beans for JMX exposure on startup
2019-03-22 08:32:17 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-22 08:32:17 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-22 08:32:17 -Starting beans in phase 2147483647
2019-03-22 08:32:17 -Context refreshed
2019-03-22 08:32:18 -Found 1 custom documentation plugin(s)
2019-03-22 08:32:18 -Scanning for api listing references
2019-03-22 08:32:18 -Generating unique operation named: removeUsingPOST_1
2019-03-22 08:32:18 -Generating unique operation named: addUsingGET_1
2019-03-22 08:32:18 -Generating unique operation named: editUsingGET_1
2019-03-22 08:32:18 -Generating unique operation named: listUsingGET_1
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_2
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_3
2019-03-22 08:32:19 -Generating unique operation named: saveUsingPOST_1
2019-03-22 08:32:19 -Generating unique operation named: updateUsingGET_1
2019-03-22 08:32:19 -Generating unique operation named: updateUsingHEAD_1
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPOST_1
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPUT_1
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPATCH_1
2019-03-22 08:32:19 -Generating unique operation named: updateUsingDELETE_1
2019-03-22 08:32:19 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-22 08:32:19 -Generating unique operation named: updateUsingTRACE_1
2019-03-22 08:32:19 -Generating unique operation named: addUsingGET_2
2019-03-22 08:32:19 -Generating unique operation named: editUsingGET_2
2019-03-22 08:32:19 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-22 08:32:19 -Generating unique operation named: listUsingGET_2
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_4
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_5
2019-03-22 08:32:19 -Generating unique operation named: saveUsingPOST_2
2019-03-22 08:32:19 -Generating unique operation named: updateUsingGET_2
2019-03-22 08:32:19 -Generating unique operation named: updateUsingHEAD_2
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPOST_2
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPUT_2
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPATCH_2
2019-03-22 08:32:19 -Generating unique operation named: updateUsingDELETE_2
2019-03-22 08:32:19 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-22 08:32:19 -Generating unique operation named: updateUsingTRACE_2
2019-03-22 08:32:19 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-22 08:32:19 -Generating unique operation named: addUsingGET_3
2019-03-22 08:32:19 -Generating unique operation named: editUsingGET_3
2019-03-22 08:32:19 -Generating unique operation named: listUsingGET_3
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_6
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_7
2019-03-22 08:32:19 -Generating unique operation named: saveUsingPOST_3
2019-03-22 08:32:19 -Generating unique operation named: updateUsingGET_3
2019-03-22 08:32:19 -Generating unique operation named: updateUsingHEAD_3
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPOST_3
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPUT_3
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPATCH_3
2019-03-22 08:32:19 -Generating unique operation named: updateUsingDELETE_3
2019-03-22 08:32:19 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-22 08:32:19 -Generating unique operation named: updateUsingTRACE_3
2019-03-22 08:32:19 -Generating unique operation named: addUsingGET_4
2019-03-22 08:32:19 -Generating unique operation named: editUsingGET_4
2019-03-22 08:32:19 -Generating unique operation named: listUsingGET_4
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_8
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_9
2019-03-22 08:32:19 -Generating unique operation named: saveUsingPOST_4
2019-03-22 08:32:19 -Generating unique operation named: updateUsingGET_4
2019-03-22 08:32:19 -Generating unique operation named: updateUsingHEAD_4
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPOST_4
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPUT_4
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPATCH_4
2019-03-22 08:32:19 -Generating unique operation named: updateUsingDELETE_4
2019-03-22 08:32:19 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-22 08:32:19 -Generating unique operation named: updateUsingTRACE_4
2019-03-22 08:32:19 -Generating unique operation named: ElecUsingGET_1
2019-03-22 08:32:19 -Generating unique operation named: addUsingGET_5
2019-03-22 08:32:19 -Generating unique operation named: editUsingGET_5
2019-03-22 08:32:19 -Generating unique operation named: listUsingGET_5
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_10
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_11
2019-03-22 08:32:19 -Generating unique operation named: saveUsingPOST_5
2019-03-22 08:32:19 -Generating unique operation named: updateUsingGET_5
2019-03-22 08:32:19 -Generating unique operation named: updateUsingHEAD_5
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPOST_5
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPUT_5
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPATCH_5
2019-03-22 08:32:19 -Generating unique operation named: updateUsingDELETE_5
2019-03-22 08:32:19 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-22 08:32:19 -Generating unique operation named: updateUsingTRACE_5
2019-03-22 08:32:19 -Generating unique operation named: editUsingGET_6
2019-03-22 08:32:19 -Generating unique operation named: listUsingGET_6
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPOST_6
2019-03-22 08:32:19 -Generating unique operation named: addUsingGET_6
2019-03-22 08:32:19 -Generating unique operation named: editUsingGET_7
2019-03-22 08:32:19 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-22 08:32:19 -Generating unique operation named: listUsingGET_7
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_12
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_13
2019-03-22 08:32:19 -Generating unique operation named: saveUsingPOST_6
2019-03-22 08:32:19 -Generating unique operation named: updateUsingGET_6
2019-03-22 08:32:19 -Generating unique operation named: updateUsingHEAD_6
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPOST_7
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPUT_6
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPATCH_6
2019-03-22 08:32:19 -Generating unique operation named: updateUsingDELETE_6
2019-03-22 08:32:19 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-22 08:32:19 -Generating unique operation named: updateUsingTRACE_6
2019-03-22 08:32:19 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-22 08:32:19 -Generating unique operation named: addUsingGET_7
2019-03-22 08:32:19 -Generating unique operation named: editUsingGET_8
2019-03-22 08:32:19 -Generating unique operation named: listUsingGET_8
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_14
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_15
2019-03-22 08:32:19 -Generating unique operation named: saveUsingPOST_7
2019-03-22 08:32:19 -Generating unique operation named: updateUsingGET_7
2019-03-22 08:32:19 -Generating unique operation named: updateUsingHEAD_7
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPOST_8
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPUT_7
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPATCH_7
2019-03-22 08:32:19 -Generating unique operation named: updateUsingDELETE_7
2019-03-22 08:32:19 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-22 08:32:19 -Generating unique operation named: updateUsingTRACE_7
2019-03-22 08:32:19 -Generating unique operation named: addUsingGET_8
2019-03-22 08:32:19 -Generating unique operation named: editUsingGET_9
2019-03-22 08:32:19 -Generating unique operation named: listUsingGET_9
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_16
2019-03-22 08:32:19 -Generating unique operation named: removeUsingPOST_17
2019-03-22 08:32:19 -Generating unique operation named: saveUsingPOST_8
2019-03-22 08:32:19 -Generating unique operation named: updateUsingGET_8
2019-03-22 08:32:19 -Generating unique operation named: updateUsingHEAD_8
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPOST_9
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPUT_8
2019-03-22 08:32:19 -Generating unique operation named: updateUsingPATCH_8
2019-03-22 08:32:19 -Generating unique operation named: updateUsingDELETE_8
2019-03-22 08:32:19 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-22 08:32:19 -Generating unique operation named: updateUsingTRACE_8
2019-03-22 08:32:20 -Generating unique operation named: addUsingGET_9
2019-03-22 08:32:20 -Generating unique operation named: editUsingGET_10
2019-03-22 08:32:20 -Generating unique operation named: infoUsingGET_1
2019-03-22 08:32:20 -Generating unique operation named: infoUsingHEAD_1
2019-03-22 08:32:20 -Generating unique operation named: infoUsingPOST_1
2019-03-22 08:32:20 -Generating unique operation named: infoUsingPUT_1
2019-03-22 08:32:20 -Generating unique operation named: infoUsingPATCH_1
2019-03-22 08:32:20 -Generating unique operation named: infoUsingDELETE_1
2019-03-22 08:32:20 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-22 08:32:20 -Generating unique operation named: infoUsingTRACE_1
2019-03-22 08:32:20 -Generating unique operation named: listUsingGET_10
2019-03-22 08:32:20 -Generating unique operation named: removeUsingPOST_18
2019-03-22 08:32:20 -Generating unique operation named: removeUsingPOST_19
2019-03-22 08:32:20 -Generating unique operation named: saveUsingPOST_9
2019-03-22 08:32:20 -Generating unique operation named: updateUsingPOST_10
2019-03-22 08:32:20 -Generating unique operation named: listUsingGET_11
2019-03-22 08:32:20 -Generating unique operation named: removeUsingPOST_20
2019-03-22 08:32:20 -Generating unique operation named: welcomeUsingGET_1
2019-03-22 08:32:20 -Generating unique operation named: addUsingGET_10
2019-03-22 08:32:20 -Generating unique operation named: editUsingGET_11
2019-03-22 08:32:20 -Generating unique operation named: listUsingGET_12
2019-03-22 08:32:20 -Generating unique operation named: removeUsingPOST_21
2019-03-22 08:32:20 -Generating unique operation named: saveUsingPOST_10
2019-03-22 08:32:20 -Generating unique operation named: treeUsingGET_1
2019-03-22 08:32:20 -Generating unique operation named: treeUsingGET_2
2019-03-22 08:32:20 -Generating unique operation named: updateUsingPOST_11
2019-03-22 08:32:20 -Generating unique operation named: addUsingGET_11
2019-03-22 08:32:20 -Generating unique operation named: editUsingGET_12
2019-03-22 08:32:20 -Generating unique operation named: listUsingGET_13
2019-03-22 08:32:20 -Generating unique operation named: removeUsingPOST_22
2019-03-22 08:32:20 -Generating unique operation named: removeUsingPOST_23
2019-03-22 08:32:20 -Generating unique operation named: saveUsingPOST_11
2019-03-22 08:32:20 -Generating unique operation named: updateUsingGET_9
2019-03-22 08:32:20 -Generating unique operation named: updateUsingHEAD_9
2019-03-22 08:32:20 -Generating unique operation named: updateUsingPOST_12
2019-03-22 08:32:20 -Generating unique operation named: updateUsingPUT_9
2019-03-22 08:32:20 -Generating unique operation named: updateUsingPATCH_9
2019-03-22 08:32:20 -Generating unique operation named: updateUsingDELETE_9
2019-03-22 08:32:20 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-22 08:32:20 -Generating unique operation named: updateUsingTRACE_9
2019-03-22 08:32:20 -Generating unique operation named: addUsingGET_12
2019-03-22 08:32:20 -Generating unique operation named: editUsingGET_13
2019-03-22 08:32:20 -Generating unique operation named: listUsingGET_14
2019-03-22 08:32:20 -Generating unique operation named: removeUsingPOST_24
2019-03-22 08:32:20 -Generating unique operation named: removeUsingPOST_25
2019-03-22 08:32:20 -Generating unique operation named: saveUsingPOST_12
2019-03-22 08:32:20 -Generating unique operation named: updateUsingGET_10
2019-03-22 08:32:20 -Generating unique operation named: updateUsingHEAD_10
2019-03-22 08:32:20 -Generating unique operation named: updateUsingPOST_13
2019-03-22 08:32:20 -Generating unique operation named: updateUsingPUT_10
2019-03-22 08:32:20 -Generating unique operation named: updateUsingPATCH_10
2019-03-22 08:32:20 -Generating unique operation named: updateUsingDELETE_10
2019-03-22 08:32:20 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-22 08:32:20 -Generating unique operation named: updateUsingTRACE_10
2019-03-22 08:32:20 -Generating unique operation named: addUsingGET_13
2019-03-22 08:32:20 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-22 08:32:20 -Generating unique operation named: editUsingGET_14
2019-03-22 08:32:20 -Generating unique operation named: listUsingGET_15
2019-03-22 08:32:20 -Generating unique operation named: saveUsingPOST_13
2019-03-22 08:32:20 -Generating unique operation named: saveUsingPOST_14
2019-03-22 08:32:20 -Generating unique operation named: updateUsingPOST_14
2019-03-22 08:32:20 -Generating unique operation named: listUsingGET_16
2019-03-22 08:32:20 -Generating unique operation named: listUsingHEAD_1
2019-03-22 08:32:20 -Generating unique operation named: listUsingPOST_1
2019-03-22 08:32:20 -Generating unique operation named: listUsingPUT_1
2019-03-22 08:32:20 -Generating unique operation named: listUsingPATCH_1
2019-03-22 08:32:20 -Generating unique operation named: listUsingDELETE_1
2019-03-22 08:32:20 -Generating unique operation named: listUsingOPTIONS_1
2019-03-22 08:32:20 -Generating unique operation named: listUsingTRACE_1
2019-03-22 08:32:21 -Generating unique operation named: addUsingGET_14
2019-03-22 08:32:21 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-22 08:32:21 -Generating unique operation named: editUsingGET_15
2019-03-22 08:32:21 -Generating unique operation named: listUsingGET_17
2019-03-22 08:32:21 -Generating unique operation named: removeUsingPOST_26
2019-03-22 08:32:21 -Generating unique operation named: saveUsingPOST_15
2019-03-22 08:32:21 -Generating unique operation named: treeUsingGET_3
2019-03-22 08:32:21 -Generating unique operation named: treeViewUsingGET_1
2019-03-22 08:32:21 -Generating unique operation named: updateUsingPOST_15
2019-03-22 08:32:21 -Generating unique operation named: addUsingGET_15
2019-03-22 08:32:21 -Generating unique operation named: editUsingGET_16
2019-03-22 08:32:21 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-22 08:32:21 -Generating unique operation named: listUsingGET_18
2019-03-22 08:32:21 -Generating unique operation named: removeUsingPOST_27
2019-03-22 08:32:21 -Generating unique operation named: removeUsingPOST_28
2019-03-22 08:32:21 -Generating unique operation named: saveUsingPOST_16
2019-03-22 08:32:21 -Generating unique operation named: updateUsingGET_11
2019-03-22 08:32:21 -Generating unique operation named: updateUsingHEAD_11
2019-03-22 08:32:21 -Generating unique operation named: updateUsingPOST_16
2019-03-22 08:32:21 -Generating unique operation named: updateUsingPUT_11
2019-03-22 08:32:21 -Generating unique operation named: updateUsingPATCH_11
2019-03-22 08:32:21 -Generating unique operation named: updateUsingDELETE_11
2019-03-22 08:32:21 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-22 08:32:21 -Generating unique operation named: updateUsingTRACE_11
2019-03-22 08:32:21 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-22 08:32:21 -Generating unique operation named: addUsingGET_16
2019-03-22 08:32:21 -Generating unique operation named: editUsingGET_17
2019-03-22 08:32:21 -Generating unique operation named: listUsingGET_19
2019-03-22 08:32:21 -Generating unique operation named: removeUsingPOST_29
2019-03-22 08:32:21 -Generating unique operation named: removeUsingPOST_30
2019-03-22 08:32:21 -Generating unique operation named: saveUsingPOST_17
2019-03-22 08:32:21 -Generating unique operation named: updateUsingGET_12
2019-03-22 08:32:21 -Generating unique operation named: updateUsingHEAD_12
2019-03-22 08:32:21 -Generating unique operation named: updateUsingPOST_17
2019-03-22 08:32:21 -Generating unique operation named: updateUsingPUT_12
2019-03-22 08:32:21 -Generating unique operation named: updateUsingPATCH_12
2019-03-22 08:32:21 -Generating unique operation named: updateUsingDELETE_12
2019-03-22 08:32:21 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-22 08:32:21 -Generating unique operation named: updateUsingTRACE_12
2019-03-22 08:32:21 -Generating unique operation named: addUsingGET_17
2019-03-22 08:32:21 -Generating unique operation named: editUsingGET_18
2019-03-22 08:32:21 -Generating unique operation named: listUsingGET_20
2019-03-22 08:32:21 -Generating unique operation named: removeUsingPOST_31
2019-03-22 08:32:21 -Generating unique operation named: removeUsingPOST_32
2019-03-22 08:32:21 -Generating unique operation named: saveUsingPOST_18
2019-03-22 08:32:21 -Generating unique operation named: updateUsingGET_13
2019-03-22 08:32:21 -Generating unique operation named: updateUsingHEAD_13
2019-03-22 08:32:21 -Generating unique operation named: updateUsingPOST_18
2019-03-22 08:32:21 -Generating unique operation named: updateUsingPUT_13
2019-03-22 08:32:21 -Generating unique operation named: updateUsingPATCH_13
2019-03-22 08:32:21 -Generating unique operation named: updateUsingDELETE_13
2019-03-22 08:32:21 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-22 08:32:21 -Generating unique operation named: updateUsingTRACE_13
2019-03-22 08:32:21 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-22 08:32:21 -Starting Quartz Scheduler now
2019-03-22 08:32:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-22 08:32:21 -Starting...
2019-03-22 08:32:21 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 08:32:21 -Started.
2019-03-22 08:32:21 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-22 08:32:21 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-22 08:32:21 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-22 08:32:21 -Stopping service [Tomcat]
2019-03-22 08:32:21 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-22 08:32:21 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-22 08:32:21 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-22 08:32:21 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-22 08:32:21 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-22 08:32:21 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Fri Mar 22 08:31:50 CST 2019]; root of context hierarchy
2019-03-22 08:32:21 -Stopping beans in phase 2147483647
2019-03-22 08:32:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-22 08:32:21 -Stopping...
2019-03-22 08:32:21 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 08:32:21 -Stopped.
2019-03-22 08:32:22 -Unregistering JMX-exposed beans on shutdown
2019-03-22 08:32:22 -Unregistering JMX-exposed beans
2019-03-22 08:32:22 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-22 08:32:22 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-22 08:32:22 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-22 08:32:22 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-22 08:32:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-22 08:32:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-22 08:32:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-22 08:32:22 -Shutting down Quartz Scheduler
2019-03-22 08:32:29 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-22 08:33:40 -Starting BootdoApplication on ZJZL-20180906VX with PID 11800 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-22 08:33:40 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-22 08:33:40 -The following profiles are active: dev
2019-03-22 08:33:40 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@410ae9a3: startup date [Fri Mar 22 08:33:40 CST 2019]; root of context hierarchy
2019-03-22 08:33:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-22 08:33:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$307ae9ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:33:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$22d41852] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:33:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:33:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:33:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:33:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-22 08:33:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-22 08:33:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:33:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:33:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:33:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:33:52 -Tomcat initialized with port(s): 8081 (http)
2019-03-22 08:33:52 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-22 08:33:52 -Starting service [Tomcat]
2019-03-22 08:33:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-22 08:33:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-22 08:33:52 -Initializing Spring embedded WebApplicationContext
2019-03-22 08:33:52 -Root WebApplicationContext: initialization completed in 12213 ms
2019-03-22 08:33:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-22 08:33:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-22 08:33:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-22 08:33:53 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-22 08:33:53 -Filter xssFilter was not registered (disabled)
2019-03-22 08:33:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-22 08:33:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-22 08:33:53 -Servlet statViewServlet mapped to [/druid/*]
2019-03-22 08:33:53 -Servlet dispatcherServlet mapped to [/]
2019-03-22 08:33:56 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@410ae9a3: startup date [Fri Mar 22 08:33:40 CST 2019]; root of context hierarchy
2019-03-22 08:33:57 -Using default implementation for ThreadExecutor
2019-03-22 08:33:57 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-22 08:33:57 -Quartz Scheduler v.2.2.1 created.
2019-03-22 08:33:57 -RAMJobStore initialized.
2019-03-22 08:33:57 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-22 08:33:57 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-22 08:33:57 -Quartz scheduler version: 2.2.1
2019-03-22 08:33:57 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22ee7fdc
2019-03-22 08:33:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-22 08:33:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-22 08:34:01 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:34:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-22 08:34:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-22 08:34:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-22 08:34:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-22 08:34:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-22 08:34:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-22 08:34:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-22 08:34:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-22 08:34:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-22 08:34:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-22 08:34:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-22 08:34:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-22 08:34:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-22 08:34:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-22 08:34:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-22 08:34:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-22 08:34:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-22 08:34:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-22 08:34:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-22 08:34:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-22 08:34:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-22 08:34:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-22 08:34:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-22 08:34:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-22 08:34:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 08:34:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-22 08:34:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 08:34:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-22 08:34:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-22 08:34:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-22 08:34:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-22 08:34:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-22 08:34:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-22 08:34:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-22 08:34:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-22 08:34:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-22 08:34:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-22 08:34:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-22 08:34:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-22 08:34:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-22 08:34:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-22 08:34:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:34:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:34:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-22 08:34:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-22 08:34:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-22 08:34:01 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-22 08:34:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-22 08:34:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-22 08:34:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-22 08:34:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:34:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-22 08:34:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:34:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-22 08:34:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-22 08:34:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-22 08:34:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-22 08:34:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-22 08:34:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-22 08:34:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-22 08:34:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-22 08:34:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 08:34:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-22 08:34:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-22 08:34:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-22 08:34:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-22 08:34:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-22 08:34:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-22 08:34:01 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:34:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-22 08:34:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:34:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-22 08:34:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-22 08:34:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 08:34:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 08:34:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-22 08:34:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 08:34:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-22 08:34:02 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-22 08:34:02 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-22 08:34:02 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-22 08:34:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-22 08:34:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-22 08:34:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-22 08:34:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-22 08:34:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-22 08:34:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-22 08:34:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-22 08:34:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-22 08:34:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:34:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-22 08:34:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-22 08:34:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-22 08:34:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-22 08:34:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-22 08:34:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-22 08:34:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-22 08:34:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-22 08:34:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-22 08:34:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-22 08:34:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-22 08:34:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:34:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-22 08:34:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-22 08:34:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-22 08:34:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-22 08:34:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-22 08:34:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-22 08:34:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-22 08:34:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-22 08:34:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-22 08:34:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-22 08:34:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:34:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:34:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-22 08:34:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-22 08:34:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-22 08:34:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-22 08:34:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-22 08:34:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-22 08:34:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-22 08:34:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-22 08:34:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-22 08:34:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-22 08:34:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-22 08:34:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-22 08:34:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-22 08:34:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-22 08:34:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-22 08:34:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-22 08:34:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-22 08:34:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-22 08:34:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 08:34:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-22 08:34:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 08:34:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:34:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-22 08:34:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-22 08:34:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-22 08:34:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-22 08:34:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-22 08:34:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-22 08:34:02 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:34:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-22 08:34:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:34:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-22 08:34:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-22 08:34:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-22 08:34:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 08:34:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 08:34:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-22 08:34:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:34:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-22 08:34:02 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:34:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:34:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-22 08:34:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-22 08:34:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-22 08:34:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-22 08:34:02 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-22 08:34:02 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-22 08:34:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:34:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@410ae9a3: startup date [Fri Mar 22 08:33:40 CST 2019]; root of context hierarchy
2019-03-22 08:34:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:34:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:34:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:34:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-22 08:34:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-22 08:34:07 -Registering beans for JMX exposure on startup
2019-03-22 08:34:07 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-22 08:34:07 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-22 08:34:07 -Starting beans in phase 2147483647
2019-03-22 08:34:07 -Context refreshed
2019-03-22 08:34:07 -Found 1 custom documentation plugin(s)
2019-03-22 08:34:07 -Scanning for api listing references
2019-03-22 08:34:08 -Generating unique operation named: removeUsingPOST_1
2019-03-22 08:34:08 -Generating unique operation named: addUsingGET_1
2019-03-22 08:34:08 -Generating unique operation named: editUsingGET_1
2019-03-22 08:34:08 -Generating unique operation named: listUsingGET_1
2019-03-22 08:34:08 -Generating unique operation named: removeUsingPOST_2
2019-03-22 08:34:08 -Generating unique operation named: removeUsingPOST_3
2019-03-22 08:34:08 -Generating unique operation named: saveUsingPOST_1
2019-03-22 08:34:08 -Generating unique operation named: updateUsingGET_1
2019-03-22 08:34:08 -Generating unique operation named: updateUsingHEAD_1
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPOST_1
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPUT_1
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPATCH_1
2019-03-22 08:34:08 -Generating unique operation named: updateUsingDELETE_1
2019-03-22 08:34:08 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-22 08:34:08 -Generating unique operation named: updateUsingTRACE_1
2019-03-22 08:34:08 -Generating unique operation named: addUsingGET_2
2019-03-22 08:34:08 -Generating unique operation named: editUsingGET_2
2019-03-22 08:34:08 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-22 08:34:08 -Generating unique operation named: listUsingGET_2
2019-03-22 08:34:08 -Generating unique operation named: removeUsingPOST_4
2019-03-22 08:34:08 -Generating unique operation named: removeUsingPOST_5
2019-03-22 08:34:08 -Generating unique operation named: saveUsingPOST_2
2019-03-22 08:34:08 -Generating unique operation named: updateUsingGET_2
2019-03-22 08:34:08 -Generating unique operation named: updateUsingHEAD_2
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPOST_2
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPUT_2
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPATCH_2
2019-03-22 08:34:08 -Generating unique operation named: updateUsingDELETE_2
2019-03-22 08:34:08 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-22 08:34:08 -Generating unique operation named: updateUsingTRACE_2
2019-03-22 08:34:08 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-22 08:34:08 -Generating unique operation named: addUsingGET_3
2019-03-22 08:34:08 -Generating unique operation named: editUsingGET_3
2019-03-22 08:34:08 -Generating unique operation named: listUsingGET_3
2019-03-22 08:34:08 -Generating unique operation named: removeUsingPOST_6
2019-03-22 08:34:08 -Generating unique operation named: removeUsingPOST_7
2019-03-22 08:34:08 -Generating unique operation named: saveUsingPOST_3
2019-03-22 08:34:08 -Generating unique operation named: updateUsingGET_3
2019-03-22 08:34:08 -Generating unique operation named: updateUsingHEAD_3
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPOST_3
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPUT_3
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPATCH_3
2019-03-22 08:34:08 -Generating unique operation named: updateUsingDELETE_3
2019-03-22 08:34:08 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-22 08:34:08 -Generating unique operation named: updateUsingTRACE_3
2019-03-22 08:34:08 -Generating unique operation named: addUsingGET_4
2019-03-22 08:34:08 -Generating unique operation named: editUsingGET_4
2019-03-22 08:34:08 -Generating unique operation named: listUsingGET_4
2019-03-22 08:34:08 -Generating unique operation named: removeUsingPOST_8
2019-03-22 08:34:08 -Generating unique operation named: removeUsingPOST_9
2019-03-22 08:34:08 -Generating unique operation named: saveUsingPOST_4
2019-03-22 08:34:08 -Generating unique operation named: updateUsingGET_4
2019-03-22 08:34:08 -Generating unique operation named: updateUsingHEAD_4
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPOST_4
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPUT_4
2019-03-22 08:34:08 -Generating unique operation named: updateUsingPATCH_4
2019-03-22 08:34:08 -Generating unique operation named: updateUsingDELETE_4
2019-03-22 08:34:08 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-22 08:34:08 -Generating unique operation named: updateUsingTRACE_4
2019-03-22 08:34:08 -Generating unique operation named: ElecUsingGET_1
2019-03-22 08:34:08 -Generating unique operation named: addUsingGET_5
2019-03-22 08:34:08 -Generating unique operation named: editUsingGET_5
2019-03-22 08:34:09 -Generating unique operation named: listUsingGET_5
2019-03-22 08:34:09 -Generating unique operation named: removeUsingPOST_10
2019-03-22 08:34:09 -Generating unique operation named: removeUsingPOST_11
2019-03-22 08:34:09 -Generating unique operation named: saveUsingPOST_5
2019-03-22 08:34:09 -Generating unique operation named: updateUsingGET_5
2019-03-22 08:34:09 -Generating unique operation named: updateUsingHEAD_5
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPOST_5
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPUT_5
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPATCH_5
2019-03-22 08:34:09 -Generating unique operation named: updateUsingDELETE_5
2019-03-22 08:34:09 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-22 08:34:09 -Generating unique operation named: updateUsingTRACE_5
2019-03-22 08:34:09 -Generating unique operation named: editUsingGET_6
2019-03-22 08:34:09 -Generating unique operation named: listUsingGET_6
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPOST_6
2019-03-22 08:34:09 -Generating unique operation named: addUsingGET_6
2019-03-22 08:34:09 -Generating unique operation named: editUsingGET_7
2019-03-22 08:34:09 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-22 08:34:09 -Generating unique operation named: listUsingGET_7
2019-03-22 08:34:09 -Generating unique operation named: removeUsingPOST_12
2019-03-22 08:34:09 -Generating unique operation named: removeUsingPOST_13
2019-03-22 08:34:09 -Generating unique operation named: saveUsingPOST_6
2019-03-22 08:34:09 -Generating unique operation named: updateUsingGET_6
2019-03-22 08:34:09 -Generating unique operation named: updateUsingHEAD_6
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPOST_7
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPUT_6
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPATCH_6
2019-03-22 08:34:09 -Generating unique operation named: updateUsingDELETE_6
2019-03-22 08:34:09 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-22 08:34:09 -Generating unique operation named: updateUsingTRACE_6
2019-03-22 08:34:09 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-22 08:34:09 -Generating unique operation named: addUsingGET_7
2019-03-22 08:34:09 -Generating unique operation named: editUsingGET_8
2019-03-22 08:34:09 -Generating unique operation named: listUsingGET_8
2019-03-22 08:34:09 -Generating unique operation named: removeUsingPOST_14
2019-03-22 08:34:09 -Generating unique operation named: removeUsingPOST_15
2019-03-22 08:34:09 -Generating unique operation named: saveUsingPOST_7
2019-03-22 08:34:09 -Generating unique operation named: updateUsingGET_7
2019-03-22 08:34:09 -Generating unique operation named: updateUsingHEAD_7
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPOST_8
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPUT_7
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPATCH_7
2019-03-22 08:34:09 -Generating unique operation named: updateUsingDELETE_7
2019-03-22 08:34:09 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-22 08:34:09 -Generating unique operation named: updateUsingTRACE_7
2019-03-22 08:34:09 -Generating unique operation named: addUsingGET_8
2019-03-22 08:34:09 -Generating unique operation named: editUsingGET_9
2019-03-22 08:34:09 -Generating unique operation named: listUsingGET_9
2019-03-22 08:34:09 -Generating unique operation named: removeUsingPOST_16
2019-03-22 08:34:09 -Generating unique operation named: removeUsingPOST_17
2019-03-22 08:34:09 -Generating unique operation named: saveUsingPOST_8
2019-03-22 08:34:09 -Generating unique operation named: updateUsingGET_8
2019-03-22 08:34:09 -Generating unique operation named: updateUsingHEAD_8
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPOST_9
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPUT_8
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPATCH_8
2019-03-22 08:34:09 -Generating unique operation named: updateUsingDELETE_8
2019-03-22 08:34:09 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-22 08:34:09 -Generating unique operation named: updateUsingTRACE_8
2019-03-22 08:34:09 -Generating unique operation named: addUsingGET_9
2019-03-22 08:34:09 -Generating unique operation named: editUsingGET_10
2019-03-22 08:34:09 -Generating unique operation named: infoUsingGET_1
2019-03-22 08:34:09 -Generating unique operation named: infoUsingHEAD_1
2019-03-22 08:34:09 -Generating unique operation named: infoUsingPOST_1
2019-03-22 08:34:09 -Generating unique operation named: infoUsingPUT_1
2019-03-22 08:34:09 -Generating unique operation named: infoUsingPATCH_1
2019-03-22 08:34:09 -Generating unique operation named: infoUsingDELETE_1
2019-03-22 08:34:09 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-22 08:34:09 -Generating unique operation named: infoUsingTRACE_1
2019-03-22 08:34:09 -Generating unique operation named: listUsingGET_10
2019-03-22 08:34:09 -Generating unique operation named: removeUsingPOST_18
2019-03-22 08:34:09 -Generating unique operation named: removeUsingPOST_19
2019-03-22 08:34:09 -Generating unique operation named: saveUsingPOST_9
2019-03-22 08:34:09 -Generating unique operation named: updateUsingPOST_10
2019-03-22 08:34:09 -Generating unique operation named: listUsingGET_11
2019-03-22 08:34:09 -Generating unique operation named: removeUsingPOST_20
2019-03-22 08:34:09 -Generating unique operation named: welcomeUsingGET_1
2019-03-22 08:34:09 -Generating unique operation named: addUsingGET_10
2019-03-22 08:34:09 -Generating unique operation named: editUsingGET_11
2019-03-22 08:34:10 -Generating unique operation named: listUsingGET_12
2019-03-22 08:34:10 -Generating unique operation named: removeUsingPOST_21
2019-03-22 08:34:10 -Generating unique operation named: saveUsingPOST_10
2019-03-22 08:34:10 -Generating unique operation named: treeUsingGET_1
2019-03-22 08:34:10 -Generating unique operation named: treeUsingGET_2
2019-03-22 08:34:10 -Generating unique operation named: updateUsingPOST_11
2019-03-22 08:34:10 -Generating unique operation named: addUsingGET_11
2019-03-22 08:34:10 -Generating unique operation named: editUsingGET_12
2019-03-22 08:34:10 -Generating unique operation named: listUsingGET_13
2019-03-22 08:34:10 -Generating unique operation named: removeUsingPOST_22
2019-03-22 08:34:10 -Generating unique operation named: removeUsingPOST_23
2019-03-22 08:34:10 -Generating unique operation named: saveUsingPOST_11
2019-03-22 08:34:10 -Generating unique operation named: updateUsingGET_9
2019-03-22 08:34:10 -Generating unique operation named: updateUsingHEAD_9
2019-03-22 08:34:10 -Generating unique operation named: updateUsingPOST_12
2019-03-22 08:34:10 -Generating unique operation named: updateUsingPUT_9
2019-03-22 08:34:10 -Generating unique operation named: updateUsingPATCH_9
2019-03-22 08:34:10 -Generating unique operation named: updateUsingDELETE_9
2019-03-22 08:34:10 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-22 08:34:10 -Generating unique operation named: updateUsingTRACE_9
2019-03-22 08:34:10 -Generating unique operation named: addUsingGET_12
2019-03-22 08:34:10 -Generating unique operation named: editUsingGET_13
2019-03-22 08:34:10 -Generating unique operation named: listUsingGET_14
2019-03-22 08:34:10 -Generating unique operation named: removeUsingPOST_24
2019-03-22 08:34:10 -Generating unique operation named: removeUsingPOST_25
2019-03-22 08:34:10 -Generating unique operation named: saveUsingPOST_12
2019-03-22 08:34:10 -Generating unique operation named: updateUsingGET_10
2019-03-22 08:34:10 -Generating unique operation named: updateUsingHEAD_10
2019-03-22 08:34:10 -Generating unique operation named: updateUsingPOST_13
2019-03-22 08:34:10 -Generating unique operation named: updateUsingPUT_10
2019-03-22 08:34:10 -Generating unique operation named: updateUsingPATCH_10
2019-03-22 08:34:10 -Generating unique operation named: updateUsingDELETE_10
2019-03-22 08:34:10 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-22 08:34:10 -Generating unique operation named: updateUsingTRACE_10
2019-03-22 08:34:10 -Generating unique operation named: addUsingGET_13
2019-03-22 08:34:10 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-22 08:34:10 -Generating unique operation named: editUsingGET_14
2019-03-22 08:34:10 -Generating unique operation named: listUsingGET_15
2019-03-22 08:34:10 -Generating unique operation named: saveUsingPOST_13
2019-03-22 08:34:10 -Generating unique operation named: saveUsingPOST_14
2019-03-22 08:34:10 -Generating unique operation named: updateUsingPOST_14
2019-03-22 08:34:10 -Generating unique operation named: listUsingGET_16
2019-03-22 08:34:10 -Generating unique operation named: listUsingHEAD_1
2019-03-22 08:34:10 -Generating unique operation named: listUsingPOST_1
2019-03-22 08:34:10 -Generating unique operation named: listUsingPUT_1
2019-03-22 08:34:10 -Generating unique operation named: listUsingPATCH_1
2019-03-22 08:34:10 -Generating unique operation named: listUsingDELETE_1
2019-03-22 08:34:10 -Generating unique operation named: listUsingOPTIONS_1
2019-03-22 08:34:10 -Generating unique operation named: listUsingTRACE_1
2019-03-22 08:34:10 -Generating unique operation named: addUsingGET_14
2019-03-22 08:34:10 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-22 08:34:10 -Generating unique operation named: editUsingGET_15
2019-03-22 08:34:10 -Generating unique operation named: listUsingGET_17
2019-03-22 08:34:11 -Generating unique operation named: removeUsingPOST_26
2019-03-22 08:34:11 -Generating unique operation named: saveUsingPOST_15
2019-03-22 08:34:11 -Generating unique operation named: treeUsingGET_3
2019-03-22 08:34:11 -Generating unique operation named: treeViewUsingGET_1
2019-03-22 08:34:11 -Generating unique operation named: updateUsingPOST_15
2019-03-22 08:34:11 -Generating unique operation named: addUsingGET_15
2019-03-22 08:34:11 -Generating unique operation named: editUsingGET_16
2019-03-22 08:34:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-22 08:34:11 -Generating unique operation named: listUsingGET_18
2019-03-22 08:34:11 -Generating unique operation named: removeUsingPOST_27
2019-03-22 08:34:11 -Generating unique operation named: removeUsingPOST_28
2019-03-22 08:34:11 -Generating unique operation named: saveUsingPOST_16
2019-03-22 08:34:11 -Generating unique operation named: updateUsingGET_11
2019-03-22 08:34:11 -Generating unique operation named: updateUsingHEAD_11
2019-03-22 08:34:11 -Generating unique operation named: updateUsingPOST_16
2019-03-22 08:34:11 -Generating unique operation named: updateUsingPUT_11
2019-03-22 08:34:11 -Generating unique operation named: updateUsingPATCH_11
2019-03-22 08:34:11 -Generating unique operation named: updateUsingDELETE_11
2019-03-22 08:34:11 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-22 08:34:11 -Generating unique operation named: updateUsingTRACE_11
2019-03-22 08:34:11 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-22 08:34:11 -Generating unique operation named: addUsingGET_16
2019-03-22 08:34:11 -Generating unique operation named: editUsingGET_17
2019-03-22 08:34:11 -Generating unique operation named: listUsingGET_19
2019-03-22 08:34:11 -Generating unique operation named: removeUsingPOST_29
2019-03-22 08:34:11 -Generating unique operation named: removeUsingPOST_30
2019-03-22 08:34:11 -Generating unique operation named: saveUsingPOST_17
2019-03-22 08:34:11 -Generating unique operation named: updateUsingGET_12
2019-03-22 08:34:11 -Generating unique operation named: updateUsingHEAD_12
2019-03-22 08:34:11 -Generating unique operation named: updateUsingPOST_17
2019-03-22 08:34:11 -Generating unique operation named: updateUsingPUT_12
2019-03-22 08:34:11 -Generating unique operation named: updateUsingPATCH_12
2019-03-22 08:34:11 -Generating unique operation named: updateUsingDELETE_12
2019-03-22 08:34:11 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-22 08:34:11 -Generating unique operation named: updateUsingTRACE_12
2019-03-22 08:34:11 -Generating unique operation named: addUsingGET_17
2019-03-22 08:34:11 -Generating unique operation named: editUsingGET_18
2019-03-22 08:34:11 -Generating unique operation named: listUsingGET_20
2019-03-22 08:34:11 -Generating unique operation named: removeUsingPOST_31
2019-03-22 08:34:11 -Generating unique operation named: removeUsingPOST_32
2019-03-22 08:34:11 -Generating unique operation named: saveUsingPOST_18
2019-03-22 08:34:11 -Generating unique operation named: updateUsingGET_13
2019-03-22 08:34:11 -Generating unique operation named: updateUsingHEAD_13
2019-03-22 08:34:11 -Generating unique operation named: updateUsingPOST_18
2019-03-22 08:34:11 -Generating unique operation named: updateUsingPUT_13
2019-03-22 08:34:11 -Generating unique operation named: updateUsingPATCH_13
2019-03-22 08:34:11 -Generating unique operation named: updateUsingDELETE_13
2019-03-22 08:34:11 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-22 08:34:11 -Generating unique operation named: updateUsingTRACE_13
2019-03-22 08:34:11 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-22 08:34:11 -Starting Quartz Scheduler now
2019-03-22 08:34:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-22 08:34:11 -Starting...
2019-03-22 08:34:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 08:34:11 -Started.
2019-03-22 08:34:11 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-22 08:34:11 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-22 08:34:11 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-22 08:34:11 -Stopping service [Tomcat]
2019-03-22 08:34:11 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-22 08:34:11 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-22 08:34:11 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-22 08:34:11 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-22 08:34:11 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-22 08:34:11 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@410ae9a3: startup date [Fri Mar 22 08:33:40 CST 2019]; root of context hierarchy
2019-03-22 08:34:11 -Stopping beans in phase 2147483647
2019-03-22 08:34:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-22 08:34:11 -Stopping...
2019-03-22 08:34:11 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 08:34:11 -Stopped.
2019-03-22 08:34:11 -Unregistering JMX-exposed beans on shutdown
2019-03-22 08:34:11 -Unregistering JMX-exposed beans
2019-03-22 08:34:11 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-22 08:34:11 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-22 08:34:11 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-22 08:34:11 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-22 08:34:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-22 08:34:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-22 08:34:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-22 08:34:11 -Shutting down Quartz Scheduler
2019-03-22 08:39:22 -Starting BootdoApplication on ZJZL-20180906VX with PID 12144 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-22 08:39:22 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-22 08:39:22 -The following profiles are active: dev
2019-03-22 08:39:22 -Starting BootdoApplication on ZJZL-20180906VX with PID 7004 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-22 08:39:22 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-22 08:39:22 -The following profiles are active: dev
2019-03-22 08:39:23 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2611b9a3: startup date [Fri Mar 22 08:39:23 CST 2019]; root of context hierarchy
2019-03-22 08:39:23 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5049d8b2: startup date [Fri Mar 22 08:39:23 CST 2019]; root of context hierarchy
2019-03-22 08:39:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-22 08:39:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-22 08:39:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8463565f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$83fc8b38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:50 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$76bc8506] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:50 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7655b9df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:51 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:51 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-22 08:39:53 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-22 08:39:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-22 08:39:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-22 08:39:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:39:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 08:40:00 -Tomcat initialized with port(s): 8081 (http)
2019-03-22 08:40:00 -Tomcat initialized with port(s): 8081 (http)
2019-03-22 08:40:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-22 08:40:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-22 08:40:01 -Starting service [Tomcat]
2019-03-22 08:40:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-22 08:40:01 -Starting service [Tomcat]
2019-03-22 08:40:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-22 08:40:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-22 08:40:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-22 08:40:01 -Initializing Spring embedded WebApplicationContext
2019-03-22 08:40:01 -Root WebApplicationContext: initialization completed in 38699 ms
2019-03-22 08:40:01 -Initializing Spring embedded WebApplicationContext
2019-03-22 08:40:01 -Root WebApplicationContext: initialization completed in 38197 ms
2019-03-22 08:40:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-22 08:40:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-22 08:40:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-22 08:40:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-22 08:40:07 -Filter xssFilter was not registered (disabled)
2019-03-22 08:40:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-22 08:40:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-22 08:40:07 -Servlet statViewServlet mapped to [/druid/*]
2019-03-22 08:40:07 -Servlet dispatcherServlet mapped to [/]
2019-03-22 08:40:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-22 08:40:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-22 08:40:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-22 08:40:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-22 08:40:07 -Filter xssFilter was not registered (disabled)
2019-03-22 08:40:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-22 08:40:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-22 08:40:07 -Servlet statViewServlet mapped to [/druid/*]
2019-03-22 08:40:07 -Servlet dispatcherServlet mapped to [/]
2019-03-22 08:40:17 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5049d8b2: startup date [Fri Mar 22 08:39:23 CST 2019]; root of context hierarchy
2019-03-22 08:40:17 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2611b9a3: startup date [Fri Mar 22 08:39:23 CST 2019]; root of context hierarchy
2019-03-22 08:40:22 -Using default implementation for ThreadExecutor
2019-03-22 08:40:22 -Using default implementation for ThreadExecutor
2019-03-22 08:40:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-22 08:40:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-22 08:40:22 -Quartz Scheduler v.2.2.1 created.
2019-03-22 08:40:22 -Quartz Scheduler v.2.2.1 created.
2019-03-22 08:40:22 -RAMJobStore initialized.
2019-03-22 08:40:22 -RAMJobStore initialized.
2019-03-22 08:40:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-22 08:40:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-22 08:40:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-22 08:40:22 -Quartz scheduler version: 2.2.1
2019-03-22 08:40:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-22 08:40:22 -Quartz scheduler version: 2.2.1
2019-03-22 08:40:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@17dbca0a
2019-03-22 08:40:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@582ea164
2019-03-22 08:40:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-22 08:40:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-22 08:40:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-22 08:40:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-22 08:40:35 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-22 08:40:35 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:35 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-22 08:40:35 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-22 08:40:35 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:35 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-22 08:40:35 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-22 08:40:35 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-22 08:40:35 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-22 08:40:35 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-22 08:40:35 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-22 08:40:35 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-22 08:40:35 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-22 08:40:35 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-22 08:40:35 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:35 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-22 08:40:35 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-22 08:40:35 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-22 08:40:35 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:35 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-22 08:40:35 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-22 08:40:35 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-22 08:40:35 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:35 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-22 08:40:35 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-22 08:40:36 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-22 08:40:36 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-22 08:40:36 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-22 08:40:36 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-22 08:40:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-22 08:40:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-22 08:40:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-22 08:40:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-22 08:40:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-22 08:40:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-22 08:40:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:35 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-22 08:40:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 08:40:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-22 08:40:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 08:40:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-22 08:40:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-22 08:40:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-22 08:40:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-22 08:40:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-22 08:40:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-22 08:40:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-22 08:40:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-22 08:40:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-22 08:40:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-22 08:40:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-22 08:40:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-22 08:40:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-22 08:40:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-22 08:40:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-22 08:40:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-22 08:40:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-22 08:40:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 08:40:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 08:40:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 08:40:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-22 08:40:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-22 08:40:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-22 08:40:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-22 08:40:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-22 08:40:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-22 08:40:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-22 08:40:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-22 08:40:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-22 08:40:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-22 08:40:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-22 08:40:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-22 08:40:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-22 08:40:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-22 08:40:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-22 08:40:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-22 08:40:36 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-22 08:40:36 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 08:40:36 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-22 08:40:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-22 08:40:36 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 08:40:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-22 08:40:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-22 08:40:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-22 08:40:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-22 08:40:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-22 08:40:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-22 08:40:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-22 08:40:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-22 08:40:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-22 08:40:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-22 08:40:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-22 08:40:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-22 08:40:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 08:40:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-22 08:40:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-22 08:40:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-22 08:40:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-22 08:40:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-22 08:40:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-22 08:40:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-22 08:40:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-22 08:40:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-22 08:40:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-22 08:40:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-22 08:40:36 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 08:40:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-22 08:40:36 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-22 08:40:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-22 08:40:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:36 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-22 08:40:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-22 08:40:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-22 08:40:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-22 08:40:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-22 08:40:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-22 08:40:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-22 08:40:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-22 08:40:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-22 08:40:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-22 08:40:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-22 08:40:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-22 08:40:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-22 08:40:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-22 08:40:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-22 08:40:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-22 08:40:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-22 08:40:37 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-22 08:40:37 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-22 08:40:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-22 08:40:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-22 08:40:37 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-22 08:40:37 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-22 08:40:37 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-22 08:40:37 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:37 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:37 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-22 08:40:37 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-22 08:40:37 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-22 08:40:37 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-22 08:40:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-22 08:40:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-22 08:40:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-22 08:40:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-22 08:40:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-22 08:40:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-22 08:40:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-22 08:40:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-22 08:40:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-22 08:40:37 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-22 08:40:37 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-22 08:40:37 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-22 08:40:37 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-22 08:40:37 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-22 08:40:37 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-22 08:40:37 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-22 08:40:37 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-22 08:40:37 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-22 08:40:37 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-22 08:40:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-22 08:40:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-22 08:40:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-22 08:40:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-22 08:40:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-22 08:40:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 08:40:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 08:40:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-22 08:40:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-22 08:40:37 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-22 08:40:37 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-22 08:40:37 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-22 08:40:37 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-22 08:40:37 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-22 08:40:37 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:37 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-22 08:40:37 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-22 08:40:37 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-22 08:40:37 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-22 08:40:37 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-22 08:40:37 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-22 08:40:37 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:37 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 08:40:37 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 08:40:37 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-22 08:40:37 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-22 08:40:37 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-22 08:40:37 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-22 08:40:37 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-22 08:40:37 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:37 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-22 08:40:37 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:37 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-22 08:40:37 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-22 08:40:37 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:37 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-22 08:40:37 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-22 08:40:37 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 08:40:37 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 08:40:37 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-22 08:40:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-22 08:40:37 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 08:40:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-22 08:40:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-22 08:40:37 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-22 08:40:37 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-22 08:40:37 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-22 08:40:41 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-22 08:40:41 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-22 08:40:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-22 08:40:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-22 08:40:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-22 08:40:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-22 08:40:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:40:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:40:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5049d8b2: startup date [Fri Mar 22 08:39:23 CST 2019]; root of context hierarchy
2019-03-22 08:40:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2611b9a3: startup date [Fri Mar 22 08:39:23 CST 2019]; root of context hierarchy
2019-03-22 08:40:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:40:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:40:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:40:46 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:40:46 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:40:46 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 08:40:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-22 08:40:46 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-22 08:40:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-22 08:40:47 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-22 08:40:56 -Registering beans for JMX exposure on startup
2019-03-22 08:40:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-22 08:40:56 -Registering beans for JMX exposure on startup
2019-03-22 08:40:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-22 08:40:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-22 08:40:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-22 08:40:56 -Starting beans in phase 2147483647
2019-03-22 08:40:56 -Context refreshed
2019-03-22 08:40:56 -Starting beans in phase 2147483647
2019-03-22 08:40:56 -Context refreshed
2019-03-22 08:40:57 -Found 1 custom documentation plugin(s)
2019-03-22 08:40:57 -Found 1 custom documentation plugin(s)
2019-03-22 08:40:57 -Scanning for api listing references
2019-03-22 08:40:57 -Scanning for api listing references
2019-03-22 08:40:59 -Generating unique operation named: removeUsingPOST_1
2019-03-22 08:41:00 -Generating unique operation named: removeUsingPOST_1
2019-03-22 08:41:01 -Generating unique operation named: addUsingGET_1
2019-03-22 08:41:01 -Generating unique operation named: editUsingGET_1
2019-03-22 08:41:01 -Generating unique operation named: addUsingGET_1
2019-03-22 08:41:01 -Generating unique operation named: listUsingGET_1
2019-03-22 08:41:01 -Generating unique operation named: editUsingGET_1
2019-03-22 08:41:01 -Generating unique operation named: listUsingGET_1
2019-03-22 08:41:02 -Generating unique operation named: removeUsingPOST_2
2019-03-22 08:41:02 -Generating unique operation named: removeUsingPOST_3
2019-03-22 08:41:02 -Generating unique operation named: removeUsingPOST_2
2019-03-22 08:41:02 -Generating unique operation named: saveUsingPOST_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingGET_1
2019-03-22 08:41:02 -Generating unique operation named: removeUsingPOST_3
2019-03-22 08:41:02 -Generating unique operation named: updateUsingHEAD_1
2019-03-22 08:41:02 -Generating unique operation named: saveUsingPOST_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingPOST_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingGET_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingPUT_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingPATCH_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingHEAD_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingDELETE_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingPOST_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingPUT_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingPATCH_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingDELETE_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingTRACE_1
2019-03-22 08:41:02 -Generating unique operation named: addUsingGET_2
2019-03-22 08:41:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-22 08:41:02 -Generating unique operation named: updateUsingTRACE_1
2019-03-22 08:41:02 -Generating unique operation named: editUsingGET_2
2019-03-22 08:41:02 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-22 08:41:02 -Generating unique operation named: listUsingGET_2
2019-03-22 08:41:02 -Generating unique operation named: addUsingGET_2
2019-03-22 08:41:03 -Generating unique operation named: editUsingGET_2
2019-03-22 08:41:03 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-22 08:41:03 -Generating unique operation named: removeUsingPOST_4
2019-03-22 08:41:03 -Generating unique operation named: removeUsingPOST_5
2019-03-22 08:41:03 -Generating unique operation named: saveUsingPOST_2
2019-03-22 08:41:03 -Generating unique operation named: listUsingGET_2
2019-03-22 08:41:03 -Generating unique operation named: removeUsingPOST_4
2019-03-22 08:41:03 -Generating unique operation named: removeUsingPOST_5
2019-03-22 08:41:03 -Generating unique operation named: saveUsingPOST_2
2019-03-22 08:41:03 -Generating unique operation named: updateUsingGET_2
2019-03-22 08:41:03 -Generating unique operation named: updateUsingHEAD_2
2019-03-22 08:41:03 -Generating unique operation named: updateUsingPOST_2
2019-03-22 08:41:03 -Generating unique operation named: updateUsingPUT_2
2019-03-22 08:41:03 -Generating unique operation named: updateUsingGET_2
2019-03-22 08:41:03 -Generating unique operation named: updateUsingHEAD_2
2019-03-22 08:41:03 -Generating unique operation named: updateUsingPOST_2
2019-03-22 08:41:03 -Generating unique operation named: updateUsingPUT_2
2019-03-22 08:41:03 -Generating unique operation named: updateUsingPATCH_2
2019-03-22 08:41:03 -Generating unique operation named: updateUsingDELETE_2
2019-03-22 08:41:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-22 08:41:04 -Generating unique operation named: updateUsingTRACE_2
2019-03-22 08:41:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-22 08:41:03 -Generating unique operation named: updateUsingPATCH_2
2019-03-22 08:41:04 -Generating unique operation named: updateUsingDELETE_2
2019-03-22 08:41:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-22 08:41:04 -Generating unique operation named: updateUsingTRACE_2
2019-03-22 08:41:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-22 08:41:04 -Generating unique operation named: addUsingGET_3
2019-03-22 08:41:04 -Generating unique operation named: editUsingGET_3
2019-03-22 08:41:04 -Generating unique operation named: listUsingGET_3
2019-03-22 08:41:04 -Generating unique operation named: addUsingGET_3
2019-03-22 08:41:04 -Generating unique operation named: editUsingGET_3
2019-03-22 08:41:04 -Generating unique operation named: listUsingGET_3
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_6
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_6
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_7
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_7
2019-03-22 08:41:04 -Generating unique operation named: saveUsingPOST_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingGET_3
2019-03-22 08:41:04 -Generating unique operation named: saveUsingPOST_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingGET_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingHEAD_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingHEAD_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPOST_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPOST_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPUT_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPUT_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPATCH_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPATCH_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingDELETE_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingDELETE_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingTRACE_3
2019-03-22 08:41:04 -Generating unique operation named: updateUsingTRACE_3
2019-03-22 08:41:04 -Generating unique operation named: addUsingGET_4
2019-03-22 08:41:04 -Generating unique operation named: addUsingGET_4
2019-03-22 08:41:04 -Generating unique operation named: editUsingGET_4
2019-03-22 08:41:04 -Generating unique operation named: editUsingGET_4
2019-03-22 08:41:04 -Generating unique operation named: listUsingGET_4
2019-03-22 08:41:04 -Generating unique operation named: listUsingGET_4
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_8
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_8
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_9
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_9
2019-03-22 08:41:04 -Generating unique operation named: saveUsingPOST_4
2019-03-22 08:41:04 -Generating unique operation named: saveUsingPOST_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingGET_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingHEAD_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPOST_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingGET_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPUT_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingHEAD_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPOST_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPATCH_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPUT_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingDELETE_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPATCH_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingDELETE_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingTRACE_4
2019-03-22 08:41:04 -Generating unique operation named: updateUsingTRACE_4
2019-03-22 08:41:04 -Generating unique operation named: ElecUsingGET_1
2019-03-22 08:41:04 -Generating unique operation named: ElecUsingGET_1
2019-03-22 08:41:04 -Generating unique operation named: addUsingGET_5
2019-03-22 08:41:04 -Generating unique operation named: editUsingGET_5
2019-03-22 08:41:04 -Generating unique operation named: addUsingGET_5
2019-03-22 08:41:04 -Generating unique operation named: editUsingGET_5
2019-03-22 08:41:04 -Generating unique operation named: listUsingGET_5
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_10
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_11
2019-03-22 08:41:04 -Generating unique operation named: saveUsingPOST_5
2019-03-22 08:41:04 -Generating unique operation named: updateUsingGET_5
2019-03-22 08:41:04 -Generating unique operation named: listUsingGET_5
2019-03-22 08:41:04 -Generating unique operation named: updateUsingHEAD_5
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPOST_5
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPUT_5
2019-03-22 08:41:04 -Generating unique operation named: updateUsingPATCH_5
2019-03-22 08:41:04 -Generating unique operation named: updateUsingDELETE_5
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_10
2019-03-22 08:41:04 -Generating unique operation named: removeUsingPOST_11
2019-03-22 08:41:04 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-22 08:41:05 -Generating unique operation named: updateUsingTRACE_5
2019-03-22 08:41:04 -Generating unique operation named: saveUsingPOST_5
2019-03-22 08:41:05 -Generating unique operation named: updateUsingGET_5
2019-03-22 08:41:05 -Generating unique operation named: updateUsingHEAD_5
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPOST_5
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPUT_5
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPATCH_5
2019-03-22 08:41:05 -Generating unique operation named: updateUsingDELETE_5
2019-03-22 08:41:05 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-22 08:41:05 -Generating unique operation named: updateUsingTRACE_5
2019-03-22 08:41:05 -Generating unique operation named: editUsingGET_6
2019-03-22 08:41:05 -Generating unique operation named: listUsingGET_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPOST_6
2019-03-22 08:41:05 -Generating unique operation named: addUsingGET_6
2019-03-22 08:41:05 -Generating unique operation named: editUsingGET_7
2019-03-22 08:41:05 -Generating unique operation named: editUsingGET_6
2019-03-22 08:41:05 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-22 08:41:05 -Generating unique operation named: listUsingGET_7
2019-03-22 08:41:05 -Generating unique operation named: listUsingGET_6
2019-03-22 08:41:05 -Generating unique operation named: removeUsingPOST_12
2019-03-22 08:41:05 -Generating unique operation named: removeUsingPOST_13
2019-03-22 08:41:05 -Generating unique operation named: saveUsingPOST_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingGET_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingHEAD_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPOST_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPOST_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPUT_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPATCH_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingDELETE_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingTRACE_6
2019-03-22 08:41:05 -Generating unique operation named: addUsingGET_6
2019-03-22 08:41:05 -Generating unique operation named: editUsingGET_7
2019-03-22 08:41:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-22 08:41:05 -Generating unique operation named: addUsingGET_7
2019-03-22 08:41:05 -Generating unique operation named: editUsingGET_8
2019-03-22 08:41:05 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-22 08:41:05 -Generating unique operation named: listUsingGET_8
2019-03-22 08:41:05 -Generating unique operation named: listUsingGET_7
2019-03-22 08:41:05 -Generating unique operation named: removeUsingPOST_14
2019-03-22 08:41:05 -Generating unique operation named: removeUsingPOST_12
2019-03-22 08:41:05 -Generating unique operation named: removeUsingPOST_15
2019-03-22 08:41:05 -Generating unique operation named: removeUsingPOST_13
2019-03-22 08:41:05 -Generating unique operation named: saveUsingPOST_7
2019-03-22 08:41:05 -Generating unique operation named: saveUsingPOST_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingGET_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingHEAD_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingGET_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPOST_8
2019-03-22 08:41:05 -Generating unique operation named: updateUsingHEAD_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPOST_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPUT_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPUT_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPATCH_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingDELETE_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingTRACE_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPATCH_6
2019-03-22 08:41:05 -Generating unique operation named: updateUsingDELETE_6
2019-03-22 08:41:05 -Generating unique operation named: addUsingGET_8
2019-03-22 08:41:05 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-22 08:41:05 -Generating unique operation named: editUsingGET_9
2019-03-22 08:41:05 -Generating unique operation named: updateUsingTRACE_6
2019-03-22 08:41:05 -Generating unique operation named: listUsingGET_9
2019-03-22 08:41:05 -Generating unique operation named: removeUsingPOST_16
2019-03-22 08:41:05 -Generating unique operation named: removeUsingPOST_17
2019-03-22 08:41:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-22 08:41:05 -Generating unique operation named: addUsingGET_7
2019-03-22 08:41:05 -Generating unique operation named: editUsingGET_8
2019-03-22 08:41:05 -Generating unique operation named: listUsingGET_8
2019-03-22 08:41:05 -Generating unique operation named: removeUsingPOST_14
2019-03-22 08:41:05 -Generating unique operation named: removeUsingPOST_15
2019-03-22 08:41:05 -Generating unique operation named: saveUsingPOST_8
2019-03-22 08:41:05 -Generating unique operation named: updateUsingGET_8
2019-03-22 08:41:05 -Generating unique operation named: updateUsingHEAD_8
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPOST_9
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPUT_8
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPATCH_8
2019-03-22 08:41:05 -Generating unique operation named: updateUsingDELETE_8
2019-03-22 08:41:05 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-22 08:41:05 -Generating unique operation named: saveUsingPOST_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingGET_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingHEAD_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingTRACE_8
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPOST_8
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPUT_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingPATCH_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingDELETE_7
2019-03-22 08:41:05 -Generating unique operation named: addUsingGET_9
2019-03-22 08:41:05 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-22 08:41:05 -Generating unique operation named: updateUsingTRACE_7
2019-03-22 08:41:05 -Generating unique operation named: editUsingGET_10
2019-03-22 08:41:05 -Generating unique operation named: infoUsingGET_1
2019-03-22 08:41:05 -Generating unique operation named: infoUsingHEAD_1
2019-03-22 08:41:05 -Generating unique operation named: infoUsingPOST_1
2019-03-22 08:41:05 -Generating unique operation named: infoUsingPUT_1
2019-03-22 08:41:05 -Generating unique operation named: infoUsingPATCH_1
2019-03-22 08:41:05 -Generating unique operation named: infoUsingDELETE_1
2019-03-22 08:41:05 -Generating unique operation named: addUsingGET_8
2019-03-22 08:41:05 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-22 08:41:05 -Generating unique operation named: editUsingGET_9
2019-03-22 08:41:05 -Generating unique operation named: listUsingGET_9
2019-03-22 08:41:06 -Generating unique operation named: removeUsingPOST_16
2019-03-22 08:41:05 -Generating unique operation named: infoUsingTRACE_1
2019-03-22 08:41:06 -Generating unique operation named: removeUsingPOST_17
2019-03-22 08:41:06 -Generating unique operation named: listUsingGET_10
2019-03-22 08:41:06 -Generating unique operation named: removeUsingPOST_18
2019-03-22 08:41:06 -Generating unique operation named: removeUsingPOST_19
2019-03-22 08:41:06 -Generating unique operation named: saveUsingPOST_8
2019-03-22 08:41:06 -Generating unique operation named: saveUsingPOST_9
2019-03-22 08:41:06 -Generating unique operation named: updateUsingGET_8
2019-03-22 08:41:06 -Generating unique operation named: updateUsingHEAD_8
2019-03-22 08:41:06 -Generating unique operation named: updateUsingPOST_9
2019-03-22 08:41:06 -Generating unique operation named: updateUsingPUT_8
2019-03-22 08:41:06 -Generating unique operation named: updateUsingPOST_10
2019-03-22 08:41:06 -Generating unique operation named: listUsingGET_11
2019-03-22 08:41:06 -Generating unique operation named: updateUsingPATCH_8
2019-03-22 08:41:06 -Generating unique operation named: updateUsingDELETE_8
2019-03-22 08:41:06 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-22 08:41:06 -Generating unique operation named: updateUsingTRACE_8
2019-03-22 08:41:06 -Generating unique operation named: addUsingGET_9
2019-03-22 08:41:06 -Generating unique operation named: removeUsingPOST_20
2019-03-22 08:41:06 -Generating unique operation named: welcomeUsingGET_1
2019-03-22 08:41:06 -Generating unique operation named: editUsingGET_10
2019-03-22 08:41:06 -Generating unique operation named: infoUsingGET_1
2019-03-22 08:41:06 -Generating unique operation named: infoUsingHEAD_1
2019-03-22 08:41:06 -Generating unique operation named: infoUsingPOST_1
2019-03-22 08:41:06 -Generating unique operation named: infoUsingPUT_1
2019-03-22 08:41:06 -Generating unique operation named: infoUsingPATCH_1
2019-03-22 08:41:06 -Generating unique operation named: infoUsingDELETE_1
2019-03-22 08:41:06 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-22 08:41:06 -Generating unique operation named: infoUsingTRACE_1
2019-03-22 08:41:06 -Generating unique operation named: listUsingGET_10
2019-03-22 08:41:06 -Generating unique operation named: removeUsingPOST_18
2019-03-22 08:41:06 -Generating unique operation named: removeUsingPOST_19
2019-03-22 08:41:06 -Generating unique operation named: saveUsingPOST_9
2019-03-22 08:41:06 -Generating unique operation named: updateUsingPOST_10
2019-03-22 08:41:06 -Generating unique operation named: listUsingGET_11
2019-03-22 08:41:06 -Generating unique operation named: removeUsingPOST_20
2019-03-22 08:41:06 -Generating unique operation named: welcomeUsingGET_1
2019-03-22 08:41:06 -Generating unique operation named: addUsingGET_10
2019-03-22 08:41:06 -Generating unique operation named: editUsingGET_11
2019-03-22 08:41:06 -Generating unique operation named: listUsingGET_12
2019-03-22 08:41:06 -Generating unique operation named: addUsingGET_10
2019-03-22 08:41:06 -Generating unique operation named: editUsingGET_11
2019-03-22 08:41:06 -Generating unique operation named: listUsingGET_12
2019-03-22 08:41:06 -Generating unique operation named: removeUsingPOST_21
2019-03-22 08:41:06 -Generating unique operation named: removeUsingPOST_21
2019-03-22 08:41:06 -Generating unique operation named: saveUsingPOST_10
2019-03-22 08:41:06 -Generating unique operation named: saveUsingPOST_10
2019-03-22 08:41:06 -Generating unique operation named: treeUsingGET_1
2019-03-22 08:41:06 -Generating unique operation named: treeUsingGET_1
2019-03-22 08:41:06 -Generating unique operation named: treeUsingGET_2
2019-03-22 08:41:06 -Generating unique operation named: treeUsingGET_2
2019-03-22 08:41:06 -Generating unique operation named: updateUsingPOST_11
2019-03-22 08:41:06 -Generating unique operation named: addUsingGET_11
2019-03-22 08:41:06 -Generating unique operation named: editUsingGET_12
2019-03-22 08:41:06 -Generating unique operation named: updateUsingPOST_11
2019-03-22 08:41:07 -Generating unique operation named: addUsingGET_11
2019-03-22 08:41:07 -Generating unique operation named: editUsingGET_12
2019-03-22 08:41:07 -Generating unique operation named: listUsingGET_13
2019-03-22 08:41:07 -Generating unique operation named: listUsingGET_13
2019-03-22 08:41:07 -Generating unique operation named: removeUsingPOST_22
2019-03-22 08:41:07 -Generating unique operation named: removeUsingPOST_22
2019-03-22 08:41:07 -Generating unique operation named: removeUsingPOST_23
2019-03-22 08:41:07 -Generating unique operation named: removeUsingPOST_23
2019-03-22 08:41:07 -Generating unique operation named: saveUsingPOST_11
2019-03-22 08:41:07 -Generating unique operation named: saveUsingPOST_11
2019-03-22 08:41:07 -Generating unique operation named: updateUsingGET_9
2019-03-22 08:41:07 -Generating unique operation named: updateUsingGET_9
2019-03-22 08:41:07 -Generating unique operation named: updateUsingHEAD_9
2019-03-22 08:41:07 -Generating unique operation named: updateUsingHEAD_9
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPOST_12
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPOST_12
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPUT_9
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPATCH_9
2019-03-22 08:41:07 -Generating unique operation named: updateUsingDELETE_9
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPUT_9
2019-03-22 08:41:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPATCH_9
2019-03-22 08:41:07 -Generating unique operation named: updateUsingTRACE_9
2019-03-22 08:41:07 -Generating unique operation named: addUsingGET_12
2019-03-22 08:41:07 -Generating unique operation named: updateUsingDELETE_9
2019-03-22 08:41:07 -Generating unique operation named: editUsingGET_13
2019-03-22 08:41:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-22 08:41:07 -Generating unique operation named: updateUsingTRACE_9
2019-03-22 08:41:07 -Generating unique operation named: listUsingGET_14
2019-03-22 08:41:07 -Generating unique operation named: addUsingGET_12
2019-03-22 08:41:07 -Generating unique operation named: editUsingGET_13
2019-03-22 08:41:07 -Generating unique operation named: removeUsingPOST_24
2019-03-22 08:41:07 -Generating unique operation named: removeUsingPOST_25
2019-03-22 08:41:07 -Generating unique operation named: saveUsingPOST_12
2019-03-22 08:41:07 -Generating unique operation named: updateUsingGET_10
2019-03-22 08:41:07 -Generating unique operation named: listUsingGET_14
2019-03-22 08:41:07 -Generating unique operation named: updateUsingHEAD_10
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPOST_13
2019-03-22 08:41:07 -Generating unique operation named: removeUsingPOST_24
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPUT_10
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPATCH_10
2019-03-22 08:41:07 -Generating unique operation named: removeUsingPOST_25
2019-03-22 08:41:07 -Generating unique operation named: updateUsingDELETE_10
2019-03-22 08:41:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-22 08:41:07 -Generating unique operation named: saveUsingPOST_12
2019-03-22 08:41:07 -Generating unique operation named: updateUsingTRACE_10
2019-03-22 08:41:07 -Generating unique operation named: updateUsingGET_10
2019-03-22 08:41:07 -Generating unique operation named: addUsingGET_13
2019-03-22 08:41:07 -Generating unique operation named: updateUsingHEAD_10
2019-03-22 08:41:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPOST_13
2019-03-22 08:41:07 -Generating unique operation named: editUsingGET_14
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPUT_10
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPATCH_10
2019-03-22 08:41:07 -Generating unique operation named: listUsingGET_15
2019-03-22 08:41:07 -Generating unique operation named: updateUsingDELETE_10
2019-03-22 08:41:07 -Generating unique operation named: saveUsingPOST_13
2019-03-22 08:41:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-22 08:41:07 -Generating unique operation named: updateUsingTRACE_10
2019-03-22 08:41:07 -Generating unique operation named: addUsingGET_13
2019-03-22 08:41:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-22 08:41:07 -Generating unique operation named: editUsingGET_14
2019-03-22 08:41:07 -Generating unique operation named: saveUsingPOST_14
2019-03-22 08:41:07 -Generating unique operation named: listUsingGET_15
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPOST_14
2019-03-22 08:41:07 -Generating unique operation named: saveUsingPOST_13
2019-03-22 08:41:07 -Generating unique operation named: saveUsingPOST_14
2019-03-22 08:41:07 -Generating unique operation named: updateUsingPOST_14
2019-03-22 08:41:07 -Generating unique operation named: listUsingGET_16
2019-03-22 08:41:07 -Generating unique operation named: listUsingHEAD_1
2019-03-22 08:41:07 -Generating unique operation named: listUsingPOST_1
2019-03-22 08:41:07 -Generating unique operation named: listUsingPUT_1
2019-03-22 08:41:08 -Generating unique operation named: listUsingGET_16
2019-03-22 08:41:07 -Generating unique operation named: listUsingPATCH_1
2019-03-22 08:41:08 -Generating unique operation named: listUsingDELETE_1
2019-03-22 08:41:08 -Generating unique operation named: listUsingOPTIONS_1
2019-03-22 08:41:08 -Generating unique operation named: listUsingHEAD_1
2019-03-22 08:41:08 -Generating unique operation named: listUsingTRACE_1
2019-03-22 08:41:08 -Generating unique operation named: listUsingPOST_1
2019-03-22 08:41:08 -Generating unique operation named: listUsingPUT_1
2019-03-22 08:41:08 -Generating unique operation named: listUsingPATCH_1
2019-03-22 08:41:08 -Generating unique operation named: listUsingDELETE_1
2019-03-22 08:41:08 -Generating unique operation named: listUsingOPTIONS_1
2019-03-22 08:41:08 -Generating unique operation named: listUsingTRACE_1
2019-03-22 08:41:08 -Generating unique operation named: addUsingGET_14
2019-03-22 08:41:08 -Generating unique operation named: addUsingGET_14
2019-03-22 08:41:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-22 08:41:08 -Generating unique operation named: editUsingGET_15
2019-03-22 08:41:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-22 08:41:08 -Generating unique operation named: editUsingGET_15
2019-03-22 08:41:08 -Generating unique operation named: listUsingGET_17
2019-03-22 08:41:08 -Generating unique operation named: removeUsingPOST_26
2019-03-22 08:41:08 -Generating unique operation named: listUsingGET_17
2019-03-22 08:41:08 -Generating unique operation named: removeUsingPOST_26
2019-03-22 08:41:08 -Generating unique operation named: saveUsingPOST_15
2019-03-22 08:41:08 -Generating unique operation named: treeUsingGET_3
2019-03-22 08:41:08 -Generating unique operation named: treeViewUsingGET_1
2019-03-22 08:41:08 -Generating unique operation named: saveUsingPOST_15
2019-03-22 08:41:08 -Generating unique operation named: treeUsingGET_3
2019-03-22 08:41:08 -Generating unique operation named: treeViewUsingGET_1
2019-03-22 08:41:08 -Generating unique operation named: updateUsingPOST_15
2019-03-22 08:41:08 -Generating unique operation named: updateUsingPOST_15
2019-03-22 08:41:08 -Generating unique operation named: addUsingGET_15
2019-03-22 08:41:08 -Generating unique operation named: editUsingGET_16
2019-03-22 08:41:08 -Generating unique operation named: addUsingGET_15
2019-03-22 08:41:08 -Generating unique operation named: editUsingGET_16
2019-03-22 08:41:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-22 08:41:08 -Generating unique operation named: listUsingGET_18
2019-03-22 08:41:08 -Generating unique operation named: removeUsingPOST_27
2019-03-22 08:41:08 -Generating unique operation named: removeUsingPOST_28
2019-03-22 08:41:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-22 08:41:08 -Generating unique operation named: saveUsingPOST_16
2019-03-22 08:41:08 -Generating unique operation named: listUsingGET_18
2019-03-22 08:41:08 -Generating unique operation named: updateUsingGET_11
2019-03-22 08:41:08 -Generating unique operation named: removeUsingPOST_27
2019-03-22 08:41:08 -Generating unique operation named: updateUsingHEAD_11
2019-03-22 08:41:08 -Generating unique operation named: removeUsingPOST_28
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPOST_16
2019-03-22 08:41:09 -Generating unique operation named: saveUsingPOST_16
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPUT_11
2019-03-22 08:41:09 -Generating unique operation named: updateUsingGET_11
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPATCH_11
2019-03-22 08:41:09 -Generating unique operation named: updateUsingDELETE_11
2019-03-22 08:41:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-22 08:41:09 -Generating unique operation named: updateUsingTRACE_11
2019-03-22 08:41:09 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-22 08:41:09 -Generating unique operation named: updateUsingHEAD_11
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPOST_16
2019-03-22 08:41:09 -Generating unique operation named: addUsingGET_16
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPUT_11
2019-03-22 08:41:09 -Generating unique operation named: editUsingGET_17
2019-03-22 08:41:09 -Generating unique operation named: listUsingGET_19
2019-03-22 08:41:09 -Generating unique operation named: removeUsingPOST_29
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPATCH_11
2019-03-22 08:41:09 -Generating unique operation named: removeUsingPOST_30
2019-03-22 08:41:09 -Generating unique operation named: saveUsingPOST_17
2019-03-22 08:41:09 -Generating unique operation named: updateUsingDELETE_11
2019-03-22 08:41:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-22 08:41:09 -Generating unique operation named: updateUsingGET_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingHEAD_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPOST_17
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPUT_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPATCH_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingDELETE_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingTRACE_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingTRACE_11
2019-03-22 08:41:09 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-22 08:41:09 -Generating unique operation named: addUsingGET_16
2019-03-22 08:41:09 -Generating unique operation named: editUsingGET_17
2019-03-22 08:41:09 -Generating unique operation named: addUsingGET_17
2019-03-22 08:41:09 -Generating unique operation named: editUsingGET_18
2019-03-22 08:41:09 -Generating unique operation named: listUsingGET_20
2019-03-22 08:41:09 -Generating unique operation named: removeUsingPOST_31
2019-03-22 08:41:09 -Generating unique operation named: removeUsingPOST_32
2019-03-22 08:41:09 -Generating unique operation named: listUsingGET_19
2019-03-22 08:41:09 -Generating unique operation named: removeUsingPOST_29
2019-03-22 08:41:09 -Generating unique operation named: removeUsingPOST_30
2019-03-22 08:41:09 -Generating unique operation named: saveUsingPOST_18
2019-03-22 08:41:09 -Generating unique operation named: saveUsingPOST_17
2019-03-22 08:41:09 -Generating unique operation named: updateUsingGET_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingHEAD_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingGET_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPOST_18
2019-03-22 08:41:09 -Generating unique operation named: updateUsingHEAD_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPUT_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPOST_17
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPATCH_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPUT_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingDELETE_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPATCH_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingDELETE_12
2019-03-22 08:41:09 -Generating unique operation named: updateUsingTRACE_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-22 08:41:09 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-22 08:41:09 -Generating unique operation named: updateUsingTRACE_12
2019-03-22 08:41:09 -Generating unique operation named: addUsingGET_17
2019-03-22 08:41:09 -Generating unique operation named: editUsingGET_18
2019-03-22 08:41:09 -Generating unique operation named: listUsingGET_20
2019-03-22 08:41:09 -Generating unique operation named: removeUsingPOST_31
2019-03-22 08:41:09 -Generating unique operation named: removeUsingPOST_32
2019-03-22 08:41:09 -Generating unique operation named: saveUsingPOST_18
2019-03-22 08:41:09 -Generating unique operation named: updateUsingGET_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingHEAD_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPOST_18
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPUT_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingPATCH_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingDELETE_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-22 08:41:09 -Generating unique operation named: updateUsingTRACE_13
2019-03-22 08:41:09 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-22 08:41:09 -Starting Quartz Scheduler now
2019-03-22 08:41:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-22 08:41:09 -Starting...
2019-03-22 08:41:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 08:41:09 -Started.
2019-03-22 08:41:09 -Starting Quartz Scheduler now
2019-03-22 08:41:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-22 08:41:09 -Starting...
2019-03-22 08:41:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 08:41:09 -Started.
2019-03-22 08:41:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-22 08:41:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-22 08:41:11 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-22 08:41:12 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-22 08:41:12 -Stopping service [Tomcat]
2019-03-22 08:41:13 -Using a shared selector for servlet write/read
2019-03-22 08:41:13 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-22 08:41:13 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-22 08:41:13 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-22 08:41:13 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-22 08:41:13 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-22 08:41:13 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5049d8b2: startup date [Fri Mar 22 08:39:23 CST 2019]; root of context hierarchy
2019-03-22 08:41:13 -Stopping beans in phase 2147483647
2019-03-22 08:41:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-22 08:41:13 -Stopping...
2019-03-22 08:41:13 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 08:41:13 -Stopped.
2019-03-22 08:41:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-22 08:41:13 -Started BootdoApplication in 120.446 seconds (JVM running for 123.955)
2019-03-22 08:41:14 -Unregistering JMX-exposed beans on shutdown
2019-03-22 08:41:14 -Unregistering JMX-exposed beans
2019-03-22 08:41:14 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-22 08:41:14 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-22 08:41:14 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-22 08:41:14 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-22 08:41:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-22 08:41:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-22 08:41:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-22 08:41:14 -Shutting down Quartz Scheduler
2019-03-22 08:41:16 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-22 08:41:18 -==> Parameters: 
2019-03-22 08:41:19 -<==      Total: 1
2019-03-22 08:41:42 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-22 08:43:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-22 08:43:15 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-22 08:43:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 534 ms
2019-03-22 08:43:16 -Enabling session validation scheduler...
2019-03-22 08:43:16 -请求地址 : http://localhost:8081/
2019-03-22 08:43:16 -请求地址 : http://localhost:8081/
2019-03-22 08:43:16 -HTTP METHOD : GET
2019-03-22 08:43:16 -HTTP METHOD : GET
2019-03-22 08:43:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-22 08:43:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-22 08:43:16 -参数 : [{}]
2019-03-22 08:43:16 -参数 : [{}]
2019-03-22 08:43:16 -耗时 : 37
2019-03-22 08:43:16 -耗时 : 37
2019-03-22 08:43:16 -返回值 : redirect:/index
2019-03-22 08:43:16 -返回值 : redirect:/index
2019-03-22 08:43:19 -请求地址 : http://localhost:8081/login;JSESSIONID=74a3b738-4197-46c8-9ca0-b193e536b941
2019-03-22 08:43:19 -HTTP METHOD : GET
2019-03-22 08:43:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 08:43:19 -参数 : [{}]
2019-03-22 08:43:19 -耗时 : 34
2019-03-22 08:43:19 -返回值 : login
2019-03-22 08:43:33 -请求地址 : http://localhost:8081/getVerify
2019-03-22 08:43:33 -HTTP METHOD : GET
2019-03-22 08:43:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-22 08:43:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4203a670, org.apache.shiro.web.servlet.ShiroHttpServletResponse@340e2d36]
2019-03-22 08:43:46 -8612
2019-03-22 08:43:46 -耗时 : 13361
2019-03-22 08:43:46 -返回值 : null
2019-03-22 08:44:07 -请求地址 : http://localhost:8081/login
2019-03-22 08:44:07 -HTTP METHOD : POST
2019-03-22 08:44:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-22 08:44:07 -参数 : [admin, 111111, 8612, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7894fc3e]
2019-03-22 08:44:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-22 08:44:07 -==> Parameters: admin(String)
2019-03-22 08:44:08 -<==      Total: 1
2019-03-22 08:44:08 -耗时 : 846
2019-03-22 08:44:08 -返回值 : {msg=操作成功, code=0}
2019-03-22 08:44:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-22 08:44:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 08:44:08 -==> Parameters: 1(Long), admin(String), 登录(String), 847(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-22 08:44:08.564(Timestamp)
2019-03-22 08:44:09 -<==    Updates: 1
2019-03-22 08:44:09 -请求地址 : http://localhost:8081/index
2019-03-22 08:44:09 -HTTP METHOD : GET
2019-03-22 08:44:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 08:44:09 -参数 : [{}]
2019-03-22 08:44:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 08:44:10 -==> Parameters: 1(Long)
2019-03-22 08:44:10 -<==      Total: 46
2019-03-22 08:44:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 08:44:10 -==> Parameters: 138(Long)
2019-03-22 08:44:10 -<==      Total: 1
2019-03-22 08:44:10 -耗时 : 1100
2019-03-22 08:44:10 -返回值 : index_v1
2019-03-22 08:44:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 08:44:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1101(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 08:44:10.827(Timestamp)
2019-03-22 08:44:10 -<==    Updates: 1
2019-03-22 08:44:13 -请求地址 : http://localhost:8081/main
2019-03-22 08:44:13 -HTTP METHOD : GET
2019-03-22 08:44:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 08:44:13 -参数 : []
2019-03-22 08:44:13 -耗时 : 0
2019-03-22 08:44:13 -返回值 : main
2019-03-22 08:44:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 08:44:17 -HTTP METHOD : GET
2019-03-22 08:44:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 08:44:17 -参数 : []
2019-03-22 08:44:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 08:44:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 08:44:18 -请求地址 : http://localhost:8081/main
2019-03-22 08:44:18 -HTTP METHOD : GET
2019-03-22 08:44:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 08:44:18 -参数 : []
2019-03-22 08:44:18 -耗时 : 1
2019-03-22 08:44:18 -返回值 : main
2019-03-22 08:44:18 -<==      Total: 0
2019-03-22 08:44:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 08:44:18 -==> Parameters: 1(Long), 0(String)
2019-03-22 08:44:19 -<==      Total: 1
2019-03-22 08:44:19 -耗时 : 1446
2019-03-22 08:44:19 -返回值 : com.bootdo.common.utils.PageUtils@745566d5
2019-03-22 08:44:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 08:44:24 -==> Parameters: 1(Long)
2019-03-22 08:44:24 -<==      Total: 90
2019-03-22 08:44:25 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-22 08:44:25 -HTTP METHOD : GET
2019-03-22 08:44:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-22 08:44:25 -参数 : []
2019-03-22 08:44:25 -耗时 : 0
2019-03-22 08:44:25 -返回值 : /moneyList/moneyList
2019-03-22 09:02:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 09:02:28 -HTTP METHOD : GET
2019-03-22 09:02:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 09:02:28 -参数 : []
2019-03-22 09:02:28 -耗时 : 1
2019-03-22 09:02:28 -返回值 : system/dept/deptTree
2019-03-22 09:02:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 09:02:29 -HTTP METHOD : GET
2019-03-22 09:02:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 09:02:29 -参数 : []
2019-03-22 09:02:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 09:02:29 -==> Parameters: 
2019-03-22 09:02:29 -<==      Total: 3
2019-03-22 09:02:29 -耗时 : 540
2019-03-22 09:02:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 09:07:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 09:07:53 -==> Parameters: 1(Long)
2019-03-22 09:07:53 -<==      Total: 90
2019-03-22 09:07:53 -请求地址 : http://localhost:8081/print/print
2019-03-22 09:07:53 -HTTP METHOD : GET
2019-03-22 09:07:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-22 09:07:53 -参数 : []
2019-03-22 09:07:53 -耗时 : 1
2019-03-22 09:07:53 -返回值 : print/print/print
2019-03-22 09:07:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 09:07:54 -HTTP METHOD : GET
2019-03-22 09:07:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 09:07:54 -参数 : [userType]
2019-03-22 09:07:54 -请求地址 : http://localhost:8081/print/print/list
2019-03-22 09:07:54 -HTTP METHOD : GET
2019-03-22 09:07:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-22 09:07:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-22 09:07:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 09:07:54 -==> Parameters: userType(String)
2019-03-22 09:07:54 -<==      Total: 2
2019-03-22 09:07:54 -耗时 : 454
2019-03-22 09:07:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 09:07:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-22 09:07:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 09:07:55 -<==      Total: 3
2019-03-22 09:07:55 -==>  Preparing: select count(*) from print 
2019-03-22 09:07:55 -==> Parameters: 
2019-03-22 09:07:55 -<==      Total: 1
2019-03-22 09:07:55 -耗时 : 972
2019-03-22 09:07:55 -返回值 : com.bootdo.common.utils.PageUtils@271618a
2019-03-22 09:07:57 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-22 09:07:57 -HTTP METHOD : GET
2019-03-22 09:07:57 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-22 09:07:57 -参数 : [1, {}]
2019-03-22 09:07:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-22 09:07:57 -==> Parameters: 1(Long)
2019-03-22 09:07:57 -<==      Total: 1
2019-03-22 09:07:57 -耗时 : 9
2019-03-22 09:07:57 -返回值 : print/print/printEdit
2019-03-22 09:11:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 395]
2019-03-22 09:35:23 -Starting BootdoApplication on ZJZL-20180906VX with PID 1888 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-22 09:35:23 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-22 09:35:23 -The following profiles are active: dev
2019-03-22 09:35:24 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60d1a32f: startup date [Fri Mar 22 09:35:24 CST 2019]; root of context hierarchy
2019-03-22 09:35:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-22 09:35:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$39de4973] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 09:35:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2c37781a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 09:35:35 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 09:35:36 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 09:35:36 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 09:35:36 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-22 09:35:36 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-22 09:35:36 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 09:35:36 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 09:35:36 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 09:35:36 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 09:35:38 -Tomcat initialized with port(s): 8081 (http)
2019-03-22 09:35:38 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-22 09:35:39 -Starting service [Tomcat]
2019-03-22 09:35:39 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-22 09:35:39 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-22 09:35:41 -Initializing Spring embedded WebApplicationContext
2019-03-22 09:35:41 -Root WebApplicationContext: initialization completed in 17787 ms
2019-03-22 09:35:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-22 09:35:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-22 09:35:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-22 09:35:46 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-22 09:35:46 -Filter xssFilter was not registered (disabled)
2019-03-22 09:35:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-22 09:35:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-22 09:35:46 -Servlet statViewServlet mapped to [/druid/*]
2019-03-22 09:35:46 -Servlet dispatcherServlet mapped to [/]
2019-03-22 09:35:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60d1a32f: startup date [Fri Mar 22 09:35:24 CST 2019]; root of context hierarchy
2019-03-22 09:35:51 -Using default implementation for ThreadExecutor
2019-03-22 09:35:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-22 09:35:51 -Quartz Scheduler v.2.2.1 created.
2019-03-22 09:35:51 -RAMJobStore initialized.
2019-03-22 09:35:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-22 09:35:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-22 09:35:51 -Quartz scheduler version: 2.2.1
2019-03-22 09:35:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3e55eeb9
2019-03-22 09:35:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-22 09:35:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-22 09:35:55 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-22 09:35:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-22 09:35:55 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-22 09:35:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-22 09:35:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-22 09:35:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-22 09:35:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-22 09:35:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-22 09:35:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-22 09:35:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-22 09:35:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-22 09:35:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-22 09:35:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-22 09:35:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-22 09:35:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-22 09:35:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-22 09:35:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-22 09:35:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-22 09:35:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-22 09:35:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-22 09:35:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 09:35:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 09:35:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-22 09:35:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-22 09:35:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-22 09:35:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-22 09:35:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-22 09:35:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-22 09:35:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-22 09:35:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-22 09:35:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-22 09:35:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 09:35:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 09:35:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-22 09:35:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-22 09:35:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-22 09:35:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-22 09:35:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-22 09:35:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 09:35:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-22 09:35:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 09:35:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-22 09:35:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-22 09:35:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-22 09:35:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-22 09:35:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-22 09:35:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-22 09:35:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 09:35:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-22 09:35:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-22 09:35:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-22 09:35:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-22 09:35:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-22 09:35:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-22 09:35:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 09:35:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-22 09:35:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 09:35:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-22 09:35:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 09:35:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 09:35:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-22 09:35:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-22 09:35:55 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 09:35:55 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-22 09:35:55 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-22 09:35:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-22 09:35:55 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-22 09:35:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-22 09:35:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-22 09:35:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-22 09:35:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-22 09:35:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 09:35:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-22 09:35:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-22 09:35:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-22 09:35:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-22 09:35:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-22 09:35:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-22 09:35:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-22 09:35:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-22 09:35:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-22 09:35:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-22 09:35:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-22 09:35:55 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 09:35:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-22 09:35:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-22 09:35:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-22 09:35:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-22 09:35:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-22 09:35:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-22 09:35:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-22 09:35:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-22 09:35:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 09:35:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 09:35:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-22 09:35:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-22 09:35:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-22 09:35:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-22 09:35:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-22 09:35:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-22 09:35:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-22 09:35:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-22 09:35:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-22 09:35:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-22 09:35:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-22 09:35:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-22 09:35:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-22 09:35:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-22 09:35:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-22 09:35:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-22 09:35:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-22 09:35:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 09:35:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 09:35:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 09:35:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-22 09:35:55 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-22 09:35:55 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-22 09:35:55 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-22 09:35:55 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-22 09:35:55 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 09:35:55 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-22 09:35:55 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 09:35:55 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-22 09:35:55 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-22 09:35:55 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-22 09:35:55 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 09:35:55 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 09:35:55 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-22 09:35:55 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 09:35:55 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 09:35:55 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-22 09:35:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 09:35:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-22 09:35:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-22 09:35:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-22 09:35:56 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-22 09:35:56 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-22 09:35:56 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-22 09:35:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 09:35:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60d1a32f: startup date [Fri Mar 22 09:35:24 CST 2019]; root of context hierarchy
2019-03-22 09:35:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 09:35:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 09:35:57 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 09:35:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-22 09:35:57 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-22 09:36:00 -Registering beans for JMX exposure on startup
2019-03-22 09:36:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-22 09:36:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-22 09:36:00 -Starting beans in phase 2147483647
2019-03-22 09:36:00 -Context refreshed
2019-03-22 09:36:00 -Found 1 custom documentation plugin(s)
2019-03-22 09:36:00 -Scanning for api listing references
2019-03-22 09:36:01 -Generating unique operation named: removeUsingPOST_1
2019-03-22 09:36:01 -Generating unique operation named: addUsingGET_1
2019-03-22 09:36:01 -Generating unique operation named: editUsingGET_1
2019-03-22 09:36:01 -Generating unique operation named: listUsingGET_1
2019-03-22 09:36:01 -Generating unique operation named: removeUsingPOST_2
2019-03-22 09:36:01 -Generating unique operation named: removeUsingPOST_3
2019-03-22 09:36:01 -Generating unique operation named: saveUsingPOST_1
2019-03-22 09:36:01 -Generating unique operation named: updateUsingGET_1
2019-03-22 09:36:01 -Generating unique operation named: updateUsingHEAD_1
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPOST_1
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPUT_1
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPATCH_1
2019-03-22 09:36:01 -Generating unique operation named: updateUsingDELETE_1
2019-03-22 09:36:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-22 09:36:01 -Generating unique operation named: updateUsingTRACE_1
2019-03-22 09:36:01 -Generating unique operation named: addUsingGET_2
2019-03-22 09:36:01 -Generating unique operation named: editUsingGET_2
2019-03-22 09:36:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-22 09:36:01 -Generating unique operation named: listUsingGET_2
2019-03-22 09:36:01 -Generating unique operation named: removeUsingPOST_4
2019-03-22 09:36:01 -Generating unique operation named: removeUsingPOST_5
2019-03-22 09:36:01 -Generating unique operation named: saveUsingPOST_2
2019-03-22 09:36:01 -Generating unique operation named: updateUsingGET_2
2019-03-22 09:36:01 -Generating unique operation named: updateUsingHEAD_2
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPOST_2
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPUT_2
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPATCH_2
2019-03-22 09:36:01 -Generating unique operation named: updateUsingDELETE_2
2019-03-22 09:36:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-22 09:36:01 -Generating unique operation named: updateUsingTRACE_2
2019-03-22 09:36:01 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-22 09:36:01 -Generating unique operation named: addUsingGET_3
2019-03-22 09:36:01 -Generating unique operation named: editUsingGET_3
2019-03-22 09:36:01 -Generating unique operation named: listUsingGET_3
2019-03-22 09:36:01 -Generating unique operation named: removeUsingPOST_6
2019-03-22 09:36:01 -Generating unique operation named: removeUsingPOST_7
2019-03-22 09:36:01 -Generating unique operation named: saveUsingPOST_3
2019-03-22 09:36:01 -Generating unique operation named: updateUsingGET_3
2019-03-22 09:36:01 -Generating unique operation named: updateUsingHEAD_3
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPOST_3
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPUT_3
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPATCH_3
2019-03-22 09:36:01 -Generating unique operation named: updateUsingDELETE_3
2019-03-22 09:36:01 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-22 09:36:01 -Generating unique operation named: updateUsingTRACE_3
2019-03-22 09:36:01 -Generating unique operation named: addUsingGET_4
2019-03-22 09:36:01 -Generating unique operation named: editUsingGET_4
2019-03-22 09:36:01 -Generating unique operation named: listUsingGET_4
2019-03-22 09:36:01 -Generating unique operation named: removeUsingPOST_8
2019-03-22 09:36:01 -Generating unique operation named: removeUsingPOST_9
2019-03-22 09:36:01 -Generating unique operation named: saveUsingPOST_4
2019-03-22 09:36:01 -Generating unique operation named: updateUsingGET_4
2019-03-22 09:36:01 -Generating unique operation named: updateUsingHEAD_4
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPOST_4
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPUT_4
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPATCH_4
2019-03-22 09:36:01 -Generating unique operation named: updateUsingDELETE_4
2019-03-22 09:36:01 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-22 09:36:01 -Generating unique operation named: updateUsingTRACE_4
2019-03-22 09:36:01 -Generating unique operation named: ElecUsingGET_1
2019-03-22 09:36:01 -Generating unique operation named: addUsingGET_5
2019-03-22 09:36:01 -Generating unique operation named: editUsingGET_5
2019-03-22 09:36:01 -Generating unique operation named: listUsingGET_5
2019-03-22 09:36:01 -Generating unique operation named: removeUsingPOST_10
2019-03-22 09:36:01 -Generating unique operation named: removeUsingPOST_11
2019-03-22 09:36:01 -Generating unique operation named: saveUsingPOST_5
2019-03-22 09:36:01 -Generating unique operation named: updateUsingGET_5
2019-03-22 09:36:01 -Generating unique operation named: updateUsingHEAD_5
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPOST_5
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPUT_5
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPATCH_5
2019-03-22 09:36:01 -Generating unique operation named: updateUsingDELETE_5
2019-03-22 09:36:01 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-22 09:36:01 -Generating unique operation named: updateUsingTRACE_5
2019-03-22 09:36:01 -Generating unique operation named: editUsingGET_6
2019-03-22 09:36:01 -Generating unique operation named: listUsingGET_6
2019-03-22 09:36:01 -Generating unique operation named: updateUsingPOST_6
2019-03-22 09:36:01 -Generating unique operation named: addUsingGET_6
2019-03-22 09:36:02 -Generating unique operation named: editUsingGET_7
2019-03-22 09:36:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-22 09:36:02 -Generating unique operation named: listUsingGET_7
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_12
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_13
2019-03-22 09:36:02 -Generating unique operation named: saveUsingPOST_6
2019-03-22 09:36:02 -Generating unique operation named: updateUsingGET_6
2019-03-22 09:36:02 -Generating unique operation named: updateUsingHEAD_6
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPOST_7
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPUT_6
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPATCH_6
2019-03-22 09:36:02 -Generating unique operation named: updateUsingDELETE_6
2019-03-22 09:36:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-22 09:36:02 -Generating unique operation named: updateUsingTRACE_6
2019-03-22 09:36:02 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-22 09:36:02 -Generating unique operation named: addUsingGET_7
2019-03-22 09:36:02 -Generating unique operation named: editUsingGET_8
2019-03-22 09:36:02 -Generating unique operation named: listUsingGET_8
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_14
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_15
2019-03-22 09:36:02 -Generating unique operation named: saveUsingPOST_7
2019-03-22 09:36:02 -Generating unique operation named: updateUsingGET_7
2019-03-22 09:36:02 -Generating unique operation named: updateUsingHEAD_7
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPOST_8
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPUT_7
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPATCH_7
2019-03-22 09:36:02 -Generating unique operation named: updateUsingDELETE_7
2019-03-22 09:36:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-22 09:36:02 -Generating unique operation named: updateUsingTRACE_7
2019-03-22 09:36:02 -Generating unique operation named: addUsingGET_8
2019-03-22 09:36:02 -Generating unique operation named: editUsingGET_9
2019-03-22 09:36:02 -Generating unique operation named: listUsingGET_9
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_16
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_17
2019-03-22 09:36:02 -Generating unique operation named: saveUsingPOST_8
2019-03-22 09:36:02 -Generating unique operation named: updateUsingGET_8
2019-03-22 09:36:02 -Generating unique operation named: updateUsingHEAD_8
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPOST_9
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPUT_8
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPATCH_8
2019-03-22 09:36:02 -Generating unique operation named: updateUsingDELETE_8
2019-03-22 09:36:02 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-22 09:36:02 -Generating unique operation named: updateUsingTRACE_8
2019-03-22 09:36:02 -Generating unique operation named: addUsingGET_9
2019-03-22 09:36:02 -Generating unique operation named: editUsingGET_10
2019-03-22 09:36:02 -Generating unique operation named: infoUsingGET_1
2019-03-22 09:36:02 -Generating unique operation named: infoUsingHEAD_1
2019-03-22 09:36:02 -Generating unique operation named: infoUsingPOST_1
2019-03-22 09:36:02 -Generating unique operation named: infoUsingPUT_1
2019-03-22 09:36:02 -Generating unique operation named: infoUsingPATCH_1
2019-03-22 09:36:02 -Generating unique operation named: infoUsingDELETE_1
2019-03-22 09:36:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-22 09:36:02 -Generating unique operation named: infoUsingTRACE_1
2019-03-22 09:36:02 -Generating unique operation named: listUsingGET_10
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_18
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_19
2019-03-22 09:36:02 -Generating unique operation named: saveUsingPOST_9
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPOST_10
2019-03-22 09:36:02 -Generating unique operation named: listUsingGET_11
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_20
2019-03-22 09:36:02 -Generating unique operation named: welcomeUsingGET_1
2019-03-22 09:36:02 -Generating unique operation named: addUsingGET_10
2019-03-22 09:36:02 -Generating unique operation named: editUsingGET_11
2019-03-22 09:36:02 -Generating unique operation named: listUsingGET_12
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_21
2019-03-22 09:36:02 -Generating unique operation named: saveUsingPOST_10
2019-03-22 09:36:02 -Generating unique operation named: treeUsingGET_1
2019-03-22 09:36:02 -Generating unique operation named: treeUsingGET_2
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPOST_11
2019-03-22 09:36:02 -Generating unique operation named: addUsingGET_11
2019-03-22 09:36:02 -Generating unique operation named: editUsingGET_12
2019-03-22 09:36:02 -Generating unique operation named: listUsingGET_13
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_22
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_23
2019-03-22 09:36:02 -Generating unique operation named: saveUsingPOST_11
2019-03-22 09:36:02 -Generating unique operation named: updateUsingGET_9
2019-03-22 09:36:02 -Generating unique operation named: updateUsingHEAD_9
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPOST_12
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPUT_9
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPATCH_9
2019-03-22 09:36:02 -Generating unique operation named: updateUsingDELETE_9
2019-03-22 09:36:02 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-22 09:36:02 -Generating unique operation named: updateUsingTRACE_9
2019-03-22 09:36:02 -Generating unique operation named: addUsingGET_12
2019-03-22 09:36:02 -Generating unique operation named: editUsingGET_13
2019-03-22 09:36:02 -Generating unique operation named: listUsingGET_14
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_24
2019-03-22 09:36:02 -Generating unique operation named: removeUsingPOST_25
2019-03-22 09:36:02 -Generating unique operation named: saveUsingPOST_12
2019-03-22 09:36:02 -Generating unique operation named: updateUsingGET_10
2019-03-22 09:36:02 -Generating unique operation named: updateUsingHEAD_10
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPOST_13
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPUT_10
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPATCH_10
2019-03-22 09:36:02 -Generating unique operation named: updateUsingDELETE_10
2019-03-22 09:36:02 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-22 09:36:02 -Generating unique operation named: updateUsingTRACE_10
2019-03-22 09:36:02 -Generating unique operation named: addUsingGET_13
2019-03-22 09:36:02 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-22 09:36:02 -Generating unique operation named: editUsingGET_14
2019-03-22 09:36:02 -Generating unique operation named: listUsingGET_15
2019-03-22 09:36:02 -Generating unique operation named: saveUsingPOST_13
2019-03-22 09:36:02 -Generating unique operation named: saveUsingPOST_14
2019-03-22 09:36:02 -Generating unique operation named: updateUsingPOST_14
2019-03-22 09:36:02 -Generating unique operation named: listUsingGET_16
2019-03-22 09:36:02 -Generating unique operation named: listUsingHEAD_1
2019-03-22 09:36:03 -Generating unique operation named: listUsingPOST_1
2019-03-22 09:36:03 -Generating unique operation named: listUsingPUT_1
2019-03-22 09:36:03 -Generating unique operation named: listUsingPATCH_1
2019-03-22 09:36:03 -Generating unique operation named: listUsingDELETE_1
2019-03-22 09:36:03 -Generating unique operation named: listUsingOPTIONS_1
2019-03-22 09:36:03 -Generating unique operation named: listUsingTRACE_1
2019-03-22 09:36:03 -Generating unique operation named: addUsingGET_14
2019-03-22 09:36:03 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-22 09:36:03 -Generating unique operation named: editUsingGET_15
2019-03-22 09:36:03 -Generating unique operation named: listUsingGET_17
2019-03-22 09:36:03 -Generating unique operation named: removeUsingPOST_26
2019-03-22 09:36:03 -Generating unique operation named: saveUsingPOST_15
2019-03-22 09:36:03 -Generating unique operation named: treeUsingGET_3
2019-03-22 09:36:03 -Generating unique operation named: treeViewUsingGET_1
2019-03-22 09:36:03 -Generating unique operation named: updateUsingPOST_15
2019-03-22 09:36:03 -Generating unique operation named: addUsingGET_15
2019-03-22 09:36:03 -Generating unique operation named: editUsingGET_16
2019-03-22 09:36:03 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-22 09:36:03 -Generating unique operation named: listUsingGET_18
2019-03-22 09:36:03 -Generating unique operation named: removeUsingPOST_27
2019-03-22 09:36:03 -Generating unique operation named: removeUsingPOST_28
2019-03-22 09:36:03 -Generating unique operation named: saveUsingPOST_16
2019-03-22 09:36:03 -Generating unique operation named: updateUsingGET_11
2019-03-22 09:36:03 -Generating unique operation named: updateUsingHEAD_11
2019-03-22 09:36:03 -Generating unique operation named: updateUsingPOST_16
2019-03-22 09:36:03 -Generating unique operation named: updateUsingPUT_11
2019-03-22 09:36:03 -Generating unique operation named: updateUsingPATCH_11
2019-03-22 09:36:03 -Generating unique operation named: updateUsingDELETE_11
2019-03-22 09:36:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-22 09:36:03 -Generating unique operation named: updateUsingTRACE_11
2019-03-22 09:36:03 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-22 09:36:03 -Generating unique operation named: addUsingGET_16
2019-03-22 09:36:03 -Generating unique operation named: editUsingGET_17
2019-03-22 09:36:03 -Generating unique operation named: listUsingGET_19
2019-03-22 09:36:03 -Generating unique operation named: removeUsingPOST_29
2019-03-22 09:36:03 -Generating unique operation named: removeUsingPOST_30
2019-03-22 09:36:03 -Generating unique operation named: saveUsingPOST_17
2019-03-22 09:36:03 -Generating unique operation named: updateUsingGET_12
2019-03-22 09:36:03 -Generating unique operation named: updateUsingHEAD_12
2019-03-22 09:36:03 -Generating unique operation named: updateUsingPOST_17
2019-03-22 09:36:03 -Generating unique operation named: updateUsingPUT_12
2019-03-22 09:36:03 -Generating unique operation named: updateUsingPATCH_12
2019-03-22 09:36:03 -Generating unique operation named: updateUsingDELETE_12
2019-03-22 09:36:03 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-22 09:36:03 -Generating unique operation named: updateUsingTRACE_12
2019-03-22 09:36:03 -Generating unique operation named: addUsingGET_17
2019-03-22 09:36:03 -Generating unique operation named: editUsingGET_18
2019-03-22 09:36:03 -Generating unique operation named: listUsingGET_20
2019-03-22 09:36:03 -Generating unique operation named: removeUsingPOST_31
2019-03-22 09:36:03 -Generating unique operation named: removeUsingPOST_32
2019-03-22 09:36:03 -Generating unique operation named: saveUsingPOST_18
2019-03-22 09:36:03 -Generating unique operation named: updateUsingGET_13
2019-03-22 09:36:03 -Generating unique operation named: updateUsingHEAD_13
2019-03-22 09:36:03 -Generating unique operation named: updateUsingPOST_18
2019-03-22 09:36:03 -Generating unique operation named: updateUsingPUT_13
2019-03-22 09:36:03 -Generating unique operation named: updateUsingPATCH_13
2019-03-22 09:36:03 -Generating unique operation named: updateUsingDELETE_13
2019-03-22 09:36:03 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-22 09:36:03 -Generating unique operation named: updateUsingTRACE_13
2019-03-22 09:36:03 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-22 09:36:03 -Starting Quartz Scheduler now
2019-03-22 09:36:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-22 09:36:03 -Starting...
2019-03-22 09:36:03 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 09:36:03 -Started.
2019-03-22 09:36:03 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-22 09:36:03 -Using a shared selector for servlet write/read
2019-03-22 09:36:03 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-22 09:36:03 -Started BootdoApplication in 41.999 seconds (JVM running for 43.683)
2019-03-22 09:36:04 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-22 09:36:04 -==> Parameters: 
2019-03-22 09:36:04 -<==      Total: 1
2019-03-22 09:36:56 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-22 09:39:00 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-22 09:39:00 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-22 09:39:00 -FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2019-03-22 09:39:00 -Enabling session validation scheduler...
2019-03-22 09:39:00 -请求地址 : http://localhost:8081/login;JSESSIONID=ea9752ca-4dae-4afb-8882-2884bf96d9c5
2019-03-22 09:39:00 -HTTP METHOD : GET
2019-03-22 09:39:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 09:39:00 -参数 : [{}]
2019-03-22 09:39:00 -耗时 : 4
2019-03-22 09:39:00 -返回值 : login
2019-03-22 09:39:03 -请求地址 : http://localhost:8081/getVerify
2019-03-22 09:39:03 -HTTP METHOD : GET
2019-03-22 09:39:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-22 09:39:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1da97351, org.apache.shiro.web.servlet.ShiroHttpServletResponse@51e9bd5b]
2019-03-22 09:39:11 -4435
2019-03-22 09:39:11 -耗时 : 8423
2019-03-22 09:39:11 -返回值 : null
2019-03-22 09:39:12 -请求地址 : http://localhost:8081/login
2019-03-22 09:39:12 -HTTP METHOD : GET
2019-03-22 09:39:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 09:39:12 -参数 : [{}]
2019-03-22 09:39:12 -耗时 : 1
2019-03-22 09:39:12 -返回值 : login
2019-03-22 09:39:23 -请求地址 : http://localhost:8081/login
2019-03-22 09:39:23 -HTTP METHOD : POST
2019-03-22 09:39:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-22 09:39:23 -参数 : [admin, 111111, 4435, org.apache.shiro.web.servlet.ShiroHttpServletRequest@727723f5]
2019-03-22 09:39:23 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-22 09:39:23 -==> Parameters: admin(String)
2019-03-22 09:39:23 -<==      Total: 1
2019-03-22 09:39:23 -耗时 : 242
2019-03-22 09:39:23 -返回值 : {msg=操作成功, code=0}
2019-03-22 09:39:23 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-22 09:39:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 09:39:23 -==> Parameters: 1(Long), admin(String), 登录(String), 243(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-22 09:39:23.555(Timestamp)
2019-03-22 09:39:23 -请求地址 : http://localhost:8081/index
2019-03-22 09:39:23 -HTTP METHOD : GET
2019-03-22 09:39:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 09:39:23 -参数 : [{}]
2019-03-22 09:39:23 -<==    Updates: 1
2019-03-22 09:39:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 09:39:24 -==> Parameters: 1(Long)
2019-03-22 09:39:24 -<==      Total: 46
2019-03-22 09:39:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 09:39:24 -==> Parameters: 138(Long)
2019-03-22 09:39:24 -<==      Total: 1
2019-03-22 09:39:24 -耗时 : 644
2019-03-22 09:39:24 -返回值 : index_v1
2019-03-22 09:39:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 09:39:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 645(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 09:39:24.401(Timestamp)
2019-03-22 09:39:24 -<==    Updates: 1
2019-03-22 09:39:24 -请求地址 : http://localhost:8081/main
2019-03-22 09:39:24 -HTTP METHOD : GET
2019-03-22 09:39:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 09:39:24 -参数 : []
2019-03-22 09:39:24 -耗时 : 0
2019-03-22 09:39:24 -返回值 : main
2019-03-22 09:39:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 09:39:25 -HTTP METHOD : GET
2019-03-22 09:39:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 09:39:25 -参数 : []
2019-03-22 09:39:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 09:39:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 09:39:25 -<==      Total: 0
2019-03-22 09:39:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 09:39:25 -==> Parameters: 1(Long), 0(String)
2019-03-22 09:39:25 -<==      Total: 1
2019-03-22 09:39:25 -耗时 : 62
2019-03-22 09:39:25 -返回值 : com.bootdo.common.utils.PageUtils@2aed1366
2019-03-22 09:39:25 -请求地址 : http://localhost:8081/main
2019-03-22 09:39:25 -HTTP METHOD : GET
2019-03-22 09:39:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 09:39:25 -参数 : []
2019-03-22 09:39:25 -耗时 : 1
2019-03-22 09:39:25 -返回值 : main
2019-03-22 09:42:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 09:42:16 -==> Parameters: 1(Long)
2019-03-22 09:42:16 -<==      Total: 90
2019-03-22 09:42:16 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-22 09:42:16 -HTTP METHOD : GET
2019-03-22 09:42:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-22 09:42:16 -参数 : []
2019-03-22 09:42:16 -耗时 : 0
2019-03-22 09:42:16 -返回值 : /moneyLog/elecLog/elecLog
2019-03-22 09:42:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 09:42:17 -HTTP METHOD : GET
2019-03-22 09:42:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 09:42:17 -参数 : [userType]
2019-03-22 09:42:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 09:42:17 -==> Parameters: userType(String)
2019-03-22 09:42:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-22 09:42:17 -HTTP METHOD : GET
2019-03-22 09:42:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-22 09:42:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-22 09:42:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-22 09:42:17 -<==      Total: 2
2019-03-22 09:42:17 -耗时 : 99
2019-03-22 09:42:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 09:42:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 09:42:17 -<==      Total: 5
2019-03-22 09:42:17 -==>  Preparing: select count(*) from elec_log 
2019-03-22 09:42:17 -==> Parameters: 
2019-03-22 09:42:17 -<==      Total: 1
2019-03-22 09:42:17 -耗时 : 134
2019-03-22 09:42:17 -返回值 : com.bootdo.common.utils.PageUtils@2b16ed08
2019-03-22 09:42:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-22 09:42:34 -HTTP METHOD : GET
2019-03-22 09:42:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-22 09:42:34 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-22 09:42:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-22 09:42:34 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 09:42:34 -<==      Total: 3
2019-03-22 09:42:34 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-22 09:42:34 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-22 09:42:34 -<==      Total: 1
2019-03-22 09:42:34 -耗时 : 13
2019-03-22 09:42:34 -返回值 : com.bootdo.common.utils.PageUtils@9f75f5e
2019-03-22 09:42:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 09:42:35 -HTTP METHOD : GET
2019-03-22 09:42:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 09:42:35 -参数 : []
2019-03-22 09:42:35 -耗时 : 1
2019-03-22 09:42:35 -返回值 : system/dept/deptTree
2019-03-22 09:42:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 09:42:35 -HTTP METHOD : GET
2019-03-22 09:42:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 09:42:35 -参数 : []
2019-03-22 09:42:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 09:42:35 -==> Parameters: 
2019-03-22 09:42:36 -<==      Total: 3
2019-03-22 09:42:36 -耗时 : 31
2019-03-22 09:42:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 09:42:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-22 09:42:38 -HTTP METHOD : GET
2019-03-22 09:42:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-22 09:42:38 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-22 09:42:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-22 09:42:38 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 09:42:38 -<==      Total: 3
2019-03-22 09:42:38 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-22 09:42:38 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-22 09:42:38 -<==      Total: 1
2019-03-22 09:42:38 -耗时 : 17
2019-03-22 09:42:38 -返回值 : com.bootdo.common.utils.PageUtils@7f36d4ad
2019-03-22 09:42:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-22 09:42:39 -HTTP METHOD : GET
2019-03-22 09:42:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-03-22 09:42:39 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@633489ce, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6d215592, org.apache.shiro.web.servlet.ShiroHttpServletRequest@12f63350]
2019-03-22 09:43:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-22 09:43:08 -HTTP METHOD : GET
2019-03-22 09:43:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-03-22 09:43:08 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4b10b803, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5779365, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1915506e]
2019-03-22 09:45:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-22 09:45:00 -HTTP METHOD : GET
2019-03-22 09:45:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-03-22 09:45:00 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1dbd1162, org.apache.shiro.web.servlet.ShiroHttpServletResponse@24868894, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4e67fa0e]
2019-03-22 09:45:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-22 09:45:00 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-03-22 09:45:00 -<==      Total: 3
2019-03-22 09:45:01 -耗时 : 1117
2019-03-22 09:45:01 -返回值 : null
2019-03-22 10:06:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 398]
2019-03-22 10:08:09 -Starting BootdoApplication on ZJZL-20180906VX with PID 8868 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-22 10:08:09 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-22 10:08:09 -The following profiles are active: dev
2019-03-22 10:08:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60d1a32f: startup date [Fri Mar 22 10:08:09 CST 2019]; root of context hierarchy
2019-03-22 10:08:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-22 10:08:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9bc2b590] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:08:16 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8e1be437] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:08:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:08:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:08:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:08:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-22 10:08:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-22 10:08:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:08:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:08:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:08:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:08:22 -Tomcat initialized with port(s): 8081 (http)
2019-03-22 10:08:22 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-22 10:08:22 -Starting service [Tomcat]
2019-03-22 10:08:22 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-22 10:08:22 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-22 10:08:22 -Initializing Spring embedded WebApplicationContext
2019-03-22 10:08:22 -Root WebApplicationContext: initialization completed in 13563 ms
2019-03-22 10:08:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-22 10:08:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-22 10:08:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-22 10:08:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-22 10:08:23 -Filter xssFilter was not registered (disabled)
2019-03-22 10:08:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-22 10:08:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-22 10:08:23 -Servlet statViewServlet mapped to [/druid/*]
2019-03-22 10:08:23 -Servlet dispatcherServlet mapped to [/]
2019-03-22 10:08:32 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60d1a32f: startup date [Fri Mar 22 10:08:09 CST 2019]; root of context hierarchy
2019-03-22 10:08:33 -Using default implementation for ThreadExecutor
2019-03-22 10:08:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-22 10:08:33 -Quartz Scheduler v.2.2.1 created.
2019-03-22 10:08:33 -RAMJobStore initialized.
2019-03-22 10:08:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-22 10:08:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-22 10:08:33 -Quartz scheduler version: 2.2.1
2019-03-22 10:08:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@aa633e6
2019-03-22 10:08:34 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-22 10:08:34 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-22 10:08:37 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:08:37 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-22 10:08:37 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-22 10:08:37 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-22 10:08:37 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-22 10:08:37 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-22 10:08:37 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-22 10:08:37 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-22 10:08:37 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-22 10:08:37 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-22 10:08:37 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-22 10:08:37 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-22 10:08:37 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-22 10:08:37 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-22 10:08:37 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-22 10:08:37 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-22 10:08:37 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-22 10:08:37 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-22 10:08:37 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-22 10:08:37 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-22 10:08:37 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 10:08:37 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 10:08:37 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-22 10:08:37 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-22 10:08:37 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-22 10:08:37 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-22 10:08:37 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-22 10:08:37 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-22 10:08:37 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-22 10:08:37 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-22 10:08:37 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-22 10:08:37 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 10:08:37 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 10:08:37 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-22 10:08:37 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-22 10:08:37 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-22 10:08:37 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-22 10:08:37 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:08:37 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-22 10:08:37 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:08:37 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-22 10:08:37 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-22 10:08:37 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-22 10:08:37 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-22 10:08:37 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-22 10:08:37 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-22 10:08:37 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-22 10:08:37 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 10:08:37 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-22 10:08:37 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-22 10:08:37 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-22 10:08:37 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-22 10:08:37 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-22 10:08:37 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:08:37 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-22 10:08:37 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:08:37 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-22 10:08:37 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-22 10:08:37 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 10:08:37 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 10:08:37 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-22 10:08:37 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-22 10:08:37 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-22 10:08:37 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 10:08:37 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-22 10:08:37 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-22 10:08:37 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-22 10:08:37 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-22 10:08:37 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-22 10:08:37 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-22 10:08:37 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-22 10:08:37 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 10:08:37 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-22 10:08:37 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-22 10:08:37 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-22 10:08:37 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-22 10:08:37 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-22 10:08:37 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-22 10:08:37 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-22 10:08:37 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-22 10:08:37 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-22 10:08:37 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-22 10:08:37 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:37 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-22 10:08:37 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-22 10:08:37 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:37 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 10:08:38 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-22 10:08:38 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-22 10:08:38 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-22 10:08:38 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-22 10:08:38 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-22 10:08:38 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-22 10:08:38 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-22 10:08:38 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-22 10:08:38 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-22 10:08:38 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-22 10:08:38 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 10:08:38 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 10:08:38 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-22 10:08:38 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-22 10:08:38 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-22 10:08:38 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:38 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-22 10:08:38 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-22 10:08:38 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-22 10:08:38 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 10:08:38 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-22 10:08:38 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-22 10:08:38 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-22 10:08:38 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-22 10:08:38 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-22 10:08:38 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-22 10:08:38 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-22 10:08:38 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-22 10:08:38 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-22 10:08:38 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-22 10:08:38 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-22 10:08:38 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:38 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-22 10:08:38 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-22 10:08:38 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:38 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-22 10:08:38 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-22 10:08:38 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-22 10:08:38 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 10:08:38 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-22 10:08:38 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 10:08:38 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-22 10:08:38 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 10:08:38 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 10:08:38 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-22 10:08:38 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-22 10:08:38 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-22 10:08:38 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-22 10:08:38 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-22 10:08:38 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:38 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-22 10:08:38 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:08:38 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-22 10:08:38 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:38 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:08:38 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-22 10:08:38 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-22 10:08:38 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-22 10:08:38 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-22 10:08:38 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 10:08:38 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:38 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 10:08:38 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:08:38 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-22 10:08:38 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:08:38 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-22 10:08:38 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 10:08:38 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-22 10:08:38 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-22 10:08:38 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-22 10:08:38 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-22 10:08:38 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-22 10:08:38 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-22 10:08:39 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 10:08:39 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60d1a32f: startup date [Fri Mar 22 10:08:09 CST 2019]; root of context hierarchy
2019-03-22 10:08:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 10:08:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 10:08:40 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 10:08:40 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-22 10:08:40 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-22 10:08:42 -Registering beans for JMX exposure on startup
2019-03-22 10:08:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-22 10:08:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-22 10:08:42 -Starting beans in phase 2147483647
2019-03-22 10:08:42 -Context refreshed
2019-03-22 10:08:42 -Found 1 custom documentation plugin(s)
2019-03-22 10:08:42 -Scanning for api listing references
2019-03-22 10:08:43 -Generating unique operation named: removeUsingPOST_1
2019-03-22 10:08:43 -Generating unique operation named: addUsingGET_1
2019-03-22 10:08:43 -Generating unique operation named: editUsingGET_1
2019-03-22 10:08:43 -Generating unique operation named: listUsingGET_1
2019-03-22 10:08:43 -Generating unique operation named: removeUsingPOST_2
2019-03-22 10:08:43 -Generating unique operation named: removeUsingPOST_3
2019-03-22 10:08:43 -Generating unique operation named: saveUsingPOST_1
2019-03-22 10:08:43 -Generating unique operation named: updateUsingGET_1
2019-03-22 10:08:43 -Generating unique operation named: updateUsingHEAD_1
2019-03-22 10:08:43 -Generating unique operation named: updateUsingPOST_1
2019-03-22 10:08:43 -Generating unique operation named: updateUsingPUT_1
2019-03-22 10:08:43 -Generating unique operation named: updateUsingPATCH_1
2019-03-22 10:08:43 -Generating unique operation named: updateUsingDELETE_1
2019-03-22 10:08:43 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-22 10:08:43 -Generating unique operation named: updateUsingTRACE_1
2019-03-22 10:08:44 -Generating unique operation named: addUsingGET_2
2019-03-22 10:08:44 -Generating unique operation named: editUsingGET_2
2019-03-22 10:08:44 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-22 10:08:44 -Generating unique operation named: listUsingGET_2
2019-03-22 10:08:44 -Generating unique operation named: removeUsingPOST_4
2019-03-22 10:08:44 -Generating unique operation named: removeUsingPOST_5
2019-03-22 10:08:44 -Generating unique operation named: saveUsingPOST_2
2019-03-22 10:08:44 -Generating unique operation named: updateUsingGET_2
2019-03-22 10:08:44 -Generating unique operation named: updateUsingHEAD_2
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPOST_2
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPUT_2
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPATCH_2
2019-03-22 10:08:44 -Generating unique operation named: updateUsingDELETE_2
2019-03-22 10:08:44 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-22 10:08:44 -Generating unique operation named: updateUsingTRACE_2
2019-03-22 10:08:44 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-22 10:08:44 -Generating unique operation named: addUsingGET_3
2019-03-22 10:08:44 -Generating unique operation named: editUsingGET_3
2019-03-22 10:08:44 -Generating unique operation named: listUsingGET_3
2019-03-22 10:08:44 -Generating unique operation named: removeUsingPOST_6
2019-03-22 10:08:44 -Generating unique operation named: removeUsingPOST_7
2019-03-22 10:08:44 -Generating unique operation named: saveUsingPOST_3
2019-03-22 10:08:44 -Generating unique operation named: updateUsingGET_3
2019-03-22 10:08:44 -Generating unique operation named: updateUsingHEAD_3
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPOST_3
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPUT_3
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPATCH_3
2019-03-22 10:08:44 -Generating unique operation named: updateUsingDELETE_3
2019-03-22 10:08:44 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-22 10:08:44 -Generating unique operation named: updateUsingTRACE_3
2019-03-22 10:08:44 -Generating unique operation named: addUsingGET_4
2019-03-22 10:08:44 -Generating unique operation named: editUsingGET_4
2019-03-22 10:08:44 -Generating unique operation named: listUsingGET_4
2019-03-22 10:08:44 -Generating unique operation named: removeUsingPOST_8
2019-03-22 10:08:44 -Generating unique operation named: removeUsingPOST_9
2019-03-22 10:08:44 -Generating unique operation named: saveUsingPOST_4
2019-03-22 10:08:44 -Generating unique operation named: updateUsingGET_4
2019-03-22 10:08:44 -Generating unique operation named: updateUsingHEAD_4
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPOST_4
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPUT_4
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPATCH_4
2019-03-22 10:08:44 -Generating unique operation named: updateUsingDELETE_4
2019-03-22 10:08:44 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-22 10:08:44 -Generating unique operation named: updateUsingTRACE_4
2019-03-22 10:08:44 -Generating unique operation named: ElecUsingGET_1
2019-03-22 10:08:44 -Generating unique operation named: addUsingGET_5
2019-03-22 10:08:44 -Generating unique operation named: editUsingGET_5
2019-03-22 10:08:44 -Generating unique operation named: listUsingGET_5
2019-03-22 10:08:44 -Generating unique operation named: removeUsingPOST_10
2019-03-22 10:08:44 -Generating unique operation named: removeUsingPOST_11
2019-03-22 10:08:44 -Generating unique operation named: saveUsingPOST_5
2019-03-22 10:08:44 -Generating unique operation named: updateUsingGET_5
2019-03-22 10:08:44 -Generating unique operation named: updateUsingHEAD_5
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPOST_5
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPUT_5
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPATCH_5
2019-03-22 10:08:44 -Generating unique operation named: updateUsingDELETE_5
2019-03-22 10:08:44 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-22 10:08:44 -Generating unique operation named: updateUsingTRACE_5
2019-03-22 10:08:44 -Generating unique operation named: editUsingGET_6
2019-03-22 10:08:44 -Generating unique operation named: listUsingGET_6
2019-03-22 10:08:44 -Generating unique operation named: updateUsingPOST_6
2019-03-22 10:08:44 -Generating unique operation named: addUsingGET_6
2019-03-22 10:08:44 -Generating unique operation named: editUsingGET_7
2019-03-22 10:08:44 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-22 10:08:44 -Generating unique operation named: listUsingGET_7
2019-03-22 10:08:44 -Generating unique operation named: removeUsingPOST_12
2019-03-22 10:08:44 -Generating unique operation named: removeUsingPOST_13
2019-03-22 10:08:45 -Generating unique operation named: saveUsingPOST_6
2019-03-22 10:08:45 -Generating unique operation named: updateUsingGET_6
2019-03-22 10:08:45 -Generating unique operation named: updateUsingHEAD_6
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPOST_7
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPUT_6
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPATCH_6
2019-03-22 10:08:45 -Generating unique operation named: updateUsingDELETE_6
2019-03-22 10:08:45 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-22 10:08:45 -Generating unique operation named: updateUsingTRACE_6
2019-03-22 10:08:45 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-22 10:08:45 -Generating unique operation named: addUsingGET_7
2019-03-22 10:08:45 -Generating unique operation named: editUsingGET_8
2019-03-22 10:08:45 -Generating unique operation named: listUsingGET_8
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_14
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_15
2019-03-22 10:08:45 -Generating unique operation named: saveUsingPOST_7
2019-03-22 10:08:45 -Generating unique operation named: updateUsingGET_7
2019-03-22 10:08:45 -Generating unique operation named: updateUsingHEAD_7
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPOST_8
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPUT_7
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPATCH_7
2019-03-22 10:08:45 -Generating unique operation named: updateUsingDELETE_7
2019-03-22 10:08:45 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-22 10:08:45 -Generating unique operation named: updateUsingTRACE_7
2019-03-22 10:08:45 -Generating unique operation named: addUsingGET_8
2019-03-22 10:08:45 -Generating unique operation named: editUsingGET_9
2019-03-22 10:08:45 -Generating unique operation named: listUsingGET_9
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_16
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_17
2019-03-22 10:08:45 -Generating unique operation named: saveUsingPOST_8
2019-03-22 10:08:45 -Generating unique operation named: updateUsingGET_8
2019-03-22 10:08:45 -Generating unique operation named: updateUsingHEAD_8
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPOST_9
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPUT_8
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPATCH_8
2019-03-22 10:08:45 -Generating unique operation named: updateUsingDELETE_8
2019-03-22 10:08:45 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-22 10:08:45 -Generating unique operation named: updateUsingTRACE_8
2019-03-22 10:08:45 -Generating unique operation named: addUsingGET_9
2019-03-22 10:08:45 -Generating unique operation named: editUsingGET_10
2019-03-22 10:08:45 -Generating unique operation named: infoUsingGET_1
2019-03-22 10:08:45 -Generating unique operation named: infoUsingHEAD_1
2019-03-22 10:08:45 -Generating unique operation named: infoUsingPOST_1
2019-03-22 10:08:45 -Generating unique operation named: infoUsingPUT_1
2019-03-22 10:08:45 -Generating unique operation named: infoUsingPATCH_1
2019-03-22 10:08:45 -Generating unique operation named: infoUsingDELETE_1
2019-03-22 10:08:45 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-22 10:08:45 -Generating unique operation named: infoUsingTRACE_1
2019-03-22 10:08:45 -Generating unique operation named: listUsingGET_10
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_18
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_19
2019-03-22 10:08:45 -Generating unique operation named: saveUsingPOST_9
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPOST_10
2019-03-22 10:08:45 -Generating unique operation named: listUsingGET_11
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_20
2019-03-22 10:08:45 -Generating unique operation named: welcomeUsingGET_1
2019-03-22 10:08:45 -Generating unique operation named: addUsingGET_10
2019-03-22 10:08:45 -Generating unique operation named: editUsingGET_11
2019-03-22 10:08:45 -Generating unique operation named: listUsingGET_12
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_21
2019-03-22 10:08:45 -Generating unique operation named: saveUsingPOST_10
2019-03-22 10:08:45 -Generating unique operation named: treeUsingGET_1
2019-03-22 10:08:45 -Generating unique operation named: treeUsingGET_2
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPOST_11
2019-03-22 10:08:45 -Generating unique operation named: addUsingGET_11
2019-03-22 10:08:45 -Generating unique operation named: editUsingGET_12
2019-03-22 10:08:45 -Generating unique operation named: listUsingGET_13
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_22
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_23
2019-03-22 10:08:45 -Generating unique operation named: saveUsingPOST_11
2019-03-22 10:08:45 -Generating unique operation named: updateUsingGET_9
2019-03-22 10:08:45 -Generating unique operation named: updateUsingHEAD_9
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPOST_12
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPUT_9
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPATCH_9
2019-03-22 10:08:45 -Generating unique operation named: updateUsingDELETE_9
2019-03-22 10:08:45 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-22 10:08:45 -Generating unique operation named: updateUsingTRACE_9
2019-03-22 10:08:45 -Generating unique operation named: addUsingGET_12
2019-03-22 10:08:45 -Generating unique operation named: editUsingGET_13
2019-03-22 10:08:45 -Generating unique operation named: listUsingGET_14
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_24
2019-03-22 10:08:45 -Generating unique operation named: removeUsingPOST_25
2019-03-22 10:08:45 -Generating unique operation named: saveUsingPOST_12
2019-03-22 10:08:45 -Generating unique operation named: updateUsingGET_10
2019-03-22 10:08:45 -Generating unique operation named: updateUsingHEAD_10
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPOST_13
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPUT_10
2019-03-22 10:08:45 -Generating unique operation named: updateUsingPATCH_10
2019-03-22 10:08:45 -Generating unique operation named: updateUsingDELETE_10
2019-03-22 10:08:45 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-22 10:08:45 -Generating unique operation named: updateUsingTRACE_10
2019-03-22 10:08:45 -Generating unique operation named: addUsingGET_13
2019-03-22 10:08:45 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-22 10:08:45 -Generating unique operation named: editUsingGET_14
2019-03-22 10:08:45 -Generating unique operation named: listUsingGET_15
2019-03-22 10:08:46 -Generating unique operation named: saveUsingPOST_13
2019-03-22 10:08:46 -Generating unique operation named: saveUsingPOST_14
2019-03-22 10:08:46 -Generating unique operation named: updateUsingPOST_14
2019-03-22 10:08:46 -Generating unique operation named: listUsingGET_16
2019-03-22 10:08:46 -Generating unique operation named: listUsingHEAD_1
2019-03-22 10:08:46 -Generating unique operation named: listUsingPOST_1
2019-03-22 10:08:46 -Generating unique operation named: listUsingPUT_1
2019-03-22 10:08:46 -Generating unique operation named: listUsingPATCH_1
2019-03-22 10:08:46 -Generating unique operation named: listUsingDELETE_1
2019-03-22 10:08:46 -Generating unique operation named: listUsingOPTIONS_1
2019-03-22 10:08:46 -Generating unique operation named: listUsingTRACE_1
2019-03-22 10:08:46 -Generating unique operation named: addUsingGET_14
2019-03-22 10:08:46 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-22 10:08:46 -Generating unique operation named: editUsingGET_15
2019-03-22 10:08:46 -Generating unique operation named: listUsingGET_17
2019-03-22 10:08:46 -Generating unique operation named: removeUsingPOST_26
2019-03-22 10:08:46 -Generating unique operation named: saveUsingPOST_15
2019-03-22 10:08:46 -Generating unique operation named: treeUsingGET_3
2019-03-22 10:08:46 -Generating unique operation named: treeViewUsingGET_1
2019-03-22 10:08:46 -Generating unique operation named: updateUsingPOST_15
2019-03-22 10:08:46 -Generating unique operation named: addUsingGET_15
2019-03-22 10:08:46 -Generating unique operation named: editUsingGET_16
2019-03-22 10:08:46 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-22 10:08:46 -Generating unique operation named: listUsingGET_18
2019-03-22 10:08:46 -Generating unique operation named: removeUsingPOST_27
2019-03-22 10:08:46 -Generating unique operation named: removeUsingPOST_28
2019-03-22 10:08:46 -Generating unique operation named: saveUsingPOST_16
2019-03-22 10:08:46 -Generating unique operation named: updateUsingGET_11
2019-03-22 10:08:46 -Generating unique operation named: updateUsingHEAD_11
2019-03-22 10:08:46 -Generating unique operation named: updateUsingPOST_16
2019-03-22 10:08:46 -Generating unique operation named: updateUsingPUT_11
2019-03-22 10:08:46 -Generating unique operation named: updateUsingPATCH_11
2019-03-22 10:08:46 -Generating unique operation named: updateUsingDELETE_11
2019-03-22 10:08:46 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-22 10:08:46 -Generating unique operation named: updateUsingTRACE_11
2019-03-22 10:08:46 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-22 10:08:46 -Generating unique operation named: addUsingGET_16
2019-03-22 10:08:46 -Generating unique operation named: editUsingGET_17
2019-03-22 10:08:46 -Generating unique operation named: listUsingGET_19
2019-03-22 10:08:46 -Generating unique operation named: removeUsingPOST_29
2019-03-22 10:08:46 -Generating unique operation named: removeUsingPOST_30
2019-03-22 10:08:46 -Generating unique operation named: saveUsingPOST_17
2019-03-22 10:08:46 -Generating unique operation named: updateUsingGET_12
2019-03-22 10:08:46 -Generating unique operation named: updateUsingHEAD_12
2019-03-22 10:08:46 -Generating unique operation named: updateUsingPOST_17
2019-03-22 10:08:46 -Generating unique operation named: updateUsingPUT_12
2019-03-22 10:08:46 -Generating unique operation named: updateUsingPATCH_12
2019-03-22 10:08:46 -Generating unique operation named: updateUsingDELETE_12
2019-03-22 10:08:46 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-22 10:08:46 -Generating unique operation named: updateUsingTRACE_12
2019-03-22 10:08:46 -Generating unique operation named: addUsingGET_17
2019-03-22 10:08:46 -Generating unique operation named: editUsingGET_18
2019-03-22 10:08:46 -Generating unique operation named: listUsingGET_20
2019-03-22 10:08:46 -Generating unique operation named: removeUsingPOST_31
2019-03-22 10:08:46 -Generating unique operation named: removeUsingPOST_32
2019-03-22 10:08:46 -Generating unique operation named: saveUsingPOST_18
2019-03-22 10:08:46 -Generating unique operation named: updateUsingGET_13
2019-03-22 10:08:46 -Generating unique operation named: updateUsingHEAD_13
2019-03-22 10:08:46 -Generating unique operation named: updateUsingPOST_18
2019-03-22 10:08:46 -Generating unique operation named: updateUsingPUT_13
2019-03-22 10:08:46 -Generating unique operation named: updateUsingPATCH_13
2019-03-22 10:08:46 -Generating unique operation named: updateUsingDELETE_13
2019-03-22 10:08:46 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-22 10:08:46 -Generating unique operation named: updateUsingTRACE_13
2019-03-22 10:08:46 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-22 10:08:46 -Starting Quartz Scheduler now
2019-03-22 10:08:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-22 10:08:46 -Starting...
2019-03-22 10:08:46 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 10:08:46 -Started.
2019-03-22 10:08:46 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-22 10:08:46 -Using a shared selector for servlet write/read
2019-03-22 10:08:46 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-22 10:08:46 -Started BootdoApplication in 39.849 seconds (JVM running for 41.785)
2019-03-22 10:08:47 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-22 10:08:47 -==> Parameters: 
2019-03-22 10:08:47 -<==      Total: 1
2019-03-22 10:09:38 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-22 10:16:23 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-22 10:16:23 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-22 10:16:23 -FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
2019-03-22 10:16:23 -Enabling session validation scheduler...
2019-03-22 10:16:23 -请求地址 : http://localhost:8081/login;JSESSIONID=7c2f60c5-85a5-4767-9a63-bc7501b49c5a
2019-03-22 10:16:23 -HTTP METHOD : GET
2019-03-22 10:16:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 10:16:23 -参数 : [{}]
2019-03-22 10:16:23 -耗时 : 3
2019-03-22 10:16:23 -返回值 : login
2019-03-22 10:16:25 -请求地址 : http://localhost:8081/getVerify
2019-03-22 10:16:25 -HTTP METHOD : GET
2019-03-22 10:16:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-22 10:16:25 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a059b23, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7d087516]
2019-03-22 10:16:29 -1462
2019-03-22 10:16:30 -耗时 : 4427
2019-03-22 10:16:30 -返回值 : null
2019-03-22 10:16:30 -请求地址 : http://localhost:8081/login
2019-03-22 10:16:30 -HTTP METHOD : GET
2019-03-22 10:16:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 10:16:30 -参数 : [{}]
2019-03-22 10:16:30 -耗时 : 0
2019-03-22 10:16:30 -返回值 : login
2019-03-22 10:16:41 -请求地址 : http://localhost:8081/login
2019-03-22 10:16:41 -HTTP METHOD : POST
2019-03-22 10:16:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-22 10:16:41 -参数 : [admin, 111111, 1462, org.apache.shiro.web.servlet.ShiroHttpServletRequest@74325229]
2019-03-22 10:16:41 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-22 10:16:41 -==> Parameters: admin(String)
2019-03-22 10:16:41 -<==      Total: 1
2019-03-22 10:16:41 -耗时 : 174
2019-03-22 10:16:41 -返回值 : {msg=操作成功, code=0}
2019-03-22 10:16:41 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-22 10:16:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 10:16:41 -==> Parameters: 1(Long), admin(String), 登录(String), 175(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-22 10:16:41.912(Timestamp)
2019-03-22 10:16:42 -请求地址 : http://localhost:8081/index
2019-03-22 10:16:42 -HTTP METHOD : GET
2019-03-22 10:16:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 10:16:42 -参数 : [{}]
2019-03-22 10:16:42 -<==    Updates: 1
2019-03-22 10:16:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 10:16:42 -==> Parameters: 1(Long)
2019-03-22 10:16:42 -<==      Total: 46
2019-03-22 10:16:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 10:16:42 -==> Parameters: 138(Long)
2019-03-22 10:16:42 -<==      Total: 1
2019-03-22 10:16:42 -耗时 : 540
2019-03-22 10:16:42 -返回值 : index_v1
2019-03-22 10:16:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 10:16:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 541(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 10:16:42.655(Timestamp)
2019-03-22 10:16:42 -请求地址 : http://localhost:8081/main
2019-03-22 10:16:42 -HTTP METHOD : GET
2019-03-22 10:16:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 10:16:42 -参数 : []
2019-03-22 10:16:42 -耗时 : 0
2019-03-22 10:16:42 -返回值 : main
2019-03-22 10:16:43 -<==    Updates: 1
2019-03-22 10:16:43 -请求地址 : http://localhost:8081/main
2019-03-22 10:16:43 -HTTP METHOD : GET
2019-03-22 10:16:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 10:16:43 -参数 : []
2019-03-22 10:16:43 -耗时 : 1
2019-03-22 10:16:43 -返回值 : main
2019-03-22 10:16:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 10:16:43 -HTTP METHOD : GET
2019-03-22 10:16:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 10:16:43 -参数 : []
2019-03-22 10:16:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 10:16:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 10:16:43 -<==      Total: 0
2019-03-22 10:16:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 10:16:43 -==> Parameters: 1(Long), 0(String)
2019-03-22 10:16:43 -<==      Total: 1
2019-03-22 10:16:43 -耗时 : 129
2019-03-22 10:16:43 -返回值 : com.bootdo.common.utils.PageUtils@608efaa1
2019-03-22 10:16:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 10:16:54 -==> Parameters: 1(Long)
2019-03-22 10:16:55 -<==      Total: 90
2019-03-22 10:16:55 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-22 10:16:55 -HTTP METHOD : GET
2019-03-22 10:16:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-22 10:16:55 -参数 : []
2019-03-22 10:16:55 -耗时 : 0
2019-03-22 10:16:55 -返回值 : /moneyLog/elecLog/elecLog
2019-03-22 10:16:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 10:16:55 -HTTP METHOD : GET
2019-03-22 10:16:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 10:16:55 -参数 : [userType]
2019-03-22 10:16:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 10:16:56 -==> Parameters: userType(String)
2019-03-22 10:16:56 -<==      Total: 2
2019-03-22 10:16:56 -耗时 : 69
2019-03-22 10:16:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 10:16:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-22 10:16:56 -HTTP METHOD : GET
2019-03-22 10:16:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-22 10:16:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-22 10:16:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-22 10:16:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 10:16:56 -<==      Total: 5
2019-03-22 10:16:56 -==>  Preparing: select count(*) from elec_log 
2019-03-22 10:16:56 -==> Parameters: 
2019-03-22 10:16:56 -<==      Total: 1
2019-03-22 10:16:56 -耗时 : 187
2019-03-22 10:16:56 -返回值 : com.bootdo.common.utils.PageUtils@4421cb1d
2019-03-22 10:16:58 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-22 10:16:58 -HTTP METHOD : GET
2019-03-22 10:16:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-22 10:16:58 -参数 : []
2019-03-22 10:16:58 -耗时 : 1
2019-03-22 10:16:58 -返回值 : /moneyLog/heatLog/heatLog
2019-03-22 10:16:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 10:16:58 -HTTP METHOD : GET
2019-03-22 10:16:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 10:16:58 -参数 : [userType]
2019-03-22 10:16:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 10:16:58 -==> Parameters: userType(String)
2019-03-22 10:16:58 -<==      Total: 2
2019-03-22 10:16:58 -耗时 : 5
2019-03-22 10:16:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 10:16:58 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-22 10:16:58 -HTTP METHOD : GET
2019-03-22 10:16:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-22 10:16:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-22 10:16:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-22 10:16:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 10:16:58 -<==      Total: 4
2019-03-22 10:16:59 -==>  Preparing: select count(*) from heat_log 
2019-03-22 10:16:59 -==> Parameters: 
2019-03-22 10:16:59 -<==      Total: 1
2019-03-22 10:16:59 -耗时 : 305
2019-03-22 10:16:59 -返回值 : com.bootdo.common.utils.PageUtils@1e00334c
2019-03-22 10:17:12 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-22 10:17:12 -HTTP METHOD : GET
2019-03-22 10:17:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-22 10:17:12 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, heatDate=2019-03-08}]
2019-03-22 10:17:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and `heat_date` >= ? and `heat_date` <= ? order by id asc limit ?, ? 
2019-03-22 10:17:12 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 10:17:12 -<==      Total: 2
2019-03-22 10:17:12 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-03-22 10:17:12 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:17:12 -<==      Total: 1
2019-03-22 10:17:12 -耗时 : 27
2019-03-22 10:17:12 -返回值 : com.bootdo.common.utils.PageUtils@fbf4338
2019-03-22 10:17:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 10:17:16 -HTTP METHOD : GET
2019-03-22 10:17:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 10:17:16 -参数 : []
2019-03-22 10:17:16 -耗时 : 1
2019-03-22 10:17:16 -返回值 : system/dept/deptTree
2019-03-22 10:17:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 10:17:16 -HTTP METHOD : GET
2019-03-22 10:17:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 10:17:16 -参数 : []
2019-03-22 10:17:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 10:17:16 -==> Parameters: 
2019-03-22 10:17:16 -<==      Total: 3
2019-03-22 10:17:16 -耗时 : 26
2019-03-22 10:17:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 10:17:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-22 10:17:18 -HTTP METHOD : GET
2019-03-22 10:17:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-22 10:17:18 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, heatDate=2019-03-08}]
2019-03-22 10:17:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? order by id asc limit ?, ? 
2019-03-22 10:17:18 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 10:17:18 -<==      Total: 2
2019-03-22 10:17:18 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-03-22 10:17:18 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:17:18 -<==      Total: 1
2019-03-22 10:17:18 -耗时 : 16
2019-03-22 10:17:18 -返回值 : com.bootdo.common.utils.PageUtils@3457b2b2
2019-03-22 10:17:25 -请求地址 : http://localhost:8081/moneyLog/heatLog/exprotHeatLog
2019-03-22 10:17:25 -HTTP METHOD : GET
2019-03-22 10:17:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog
2019-03-22 10:17:25 -参数 : [com.bootdo.moneyLog.vo.HeatLogVo@24fc9cac, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2fdbab32, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7a9305c4]
2019-03-22 10:17:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-03-22 10:17:25 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:17:25 -<==      Total: 2
2019-03-22 10:17:26 -耗时 : 1020
2019-03-22 10:17:26 -返回值 : null
2019-03-22 10:17:46 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-22 10:17:46 -HTTP METHOD : GET
2019-03-22 10:17:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-22 10:17:46 -参数 : []
2019-03-22 10:17:46 -耗时 : 3
2019-03-22 10:17:46 -返回值 : /moneyLog/waterLog/waterLog
2019-03-22 10:17:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 10:17:46 -HTTP METHOD : GET
2019-03-22 10:17:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 10:17:46 -参数 : [userType]
2019-03-22 10:17:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 10:17:46 -==> Parameters: userType(String)
2019-03-22 10:17:46 -<==      Total: 2
2019-03-22 10:17:46 -耗时 : 5
2019-03-22 10:17:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 10:17:46 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-22 10:17:46 -HTTP METHOD : GET
2019-03-22 10:17:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-22 10:17:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-22 10:17:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-22 10:17:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 10:17:46 -<==      Total: 4
2019-03-22 10:17:46 -==>  Preparing: select count(*) from water_log 
2019-03-22 10:17:46 -==> Parameters: 
2019-03-22 10:17:46 -<==      Total: 1
2019-03-22 10:17:46 -耗时 : 131
2019-03-22 10:17:46 -返回值 : com.bootdo.common.utils.PageUtils@57dceb02
2019-03-22 10:17:51 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-22 10:17:51 -HTTP METHOD : GET
2019-03-22 10:17:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-22 10:17:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=2019-03-08}]
2019-03-22 10:17:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-03-22 10:17:51 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 10:17:51 -<==      Total: 3
2019-03-22 10:17:51 -==>  Preparing: select count(*) from water_log WHERE `heat_date` >= ? and `heat_date` <= ? 
2019-03-22 10:17:51 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:17:52 -{conn-10001, pstmt-20022} execute error. select count(*) from water_log
		  WHERE   `heat_date` >= ?
			     
			     
			      
			         and  `heat_date` <= ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 10:17:52 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-22 10:17:52 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-22 10:17:52 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE   `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE   `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-22 10:17:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 10:17:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE   `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'(String), null, 2019-03-22 10:17:52.236(Timestamp)
2019-03-22 10:17:52 -<==    Updates: 1
2019-03-22 10:18:02 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-22 10:18:02 -HTTP METHOD : GET
2019-03-22 10:18:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-22 10:18:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=2019-03-08}]
2019-03-22 10:18:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-03-22 10:18:02 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 10:18:02 -<==      Total: 3
2019-03-22 10:18:02 -==>  Preparing: select count(*) from water_log WHERE `heat_date` >= ? and `heat_date` <= ? 
2019-03-22 10:18:02 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:18:02 -{conn-10001, pstmt-20023} execute error. select count(*) from water_log
		  WHERE   `heat_date` >= ?
			     
			     
			      
			         and  `heat_date` <= ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 10:18:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 10:18:02 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE   `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE   `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-22 10:18:03 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE   `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'(String), null, 2019-03-22 10:18:02.99(Timestamp)
2019-03-22 10:18:03 -<==    Updates: 1
2019-03-22 10:18:05 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-22 10:18:05 -HTTP METHOD : GET
2019-03-22 10:18:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-22 10:18:05 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, waterDate=2019-03-08}]
2019-03-22 10:18:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-03-22 10:18:05 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 10:18:05 -<==      Total: 2
2019-03-22 10:18:05 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-03-22 10:18:05 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:18:06 -{conn-10001, pstmt-20025} execute error. select count(*) from water_log
		  WHERE  user_type = ? 
	  
	  
	   
	  
	  
	  
	  
	  
 	
			 
		     	  
			         and  `heat_date` >= ?
			     
			     
			      
			         and  `heat_date` <= ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 10:18:06 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?                                                                  and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?                                                                  and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-22 10:18:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 10:18:06 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?                                                                  and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'(String), null, 2019-03-22 10:18:06.012(Timestamp)
2019-03-22 10:18:06 -<==    Updates: 1
2019-03-22 10:18:07 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 10:18:07 -HTTP METHOD : GET
2019-03-22 10:18:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 10:18:07 -参数 : []
2019-03-22 10:18:07 -耗时 : 1
2019-03-22 10:18:07 -返回值 : system/dept/deptTree
2019-03-22 10:18:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 10:18:07 -HTTP METHOD : GET
2019-03-22 10:18:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 10:18:07 -参数 : []
2019-03-22 10:18:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 10:18:07 -==> Parameters: 
2019-03-22 10:18:07 -<==      Total: 3
2019-03-22 10:18:07 -耗时 : 4
2019-03-22 10:18:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 10:18:09 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-22 10:18:09 -HTTP METHOD : GET
2019-03-22 10:18:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-22 10:18:09 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, waterDate=2019-03-08}]
2019-03-22 10:18:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-03-22 10:18:09 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 10:18:09 -<==      Total: 2
2019-03-22 10:18:09 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-03-22 10:18:09 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:18:09 -{conn-10001, pstmt-20027} execute error. select count(*) from water_log
		  WHERE  user_type = ? 
	   and user_org = ? 
	  
	   
	  
	  
	  
	  
	  
 	
			 
		     	  
			         and  `heat_date` >= ?
			     
			     
			      
			         and  `heat_date` <= ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 10:18:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 10:18:09 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?      and user_org = ?                                                              and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?      and user_org = ?                                                              and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-22 10:18:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?      and user_org = ?                                                              and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'(String), null, 2019-03-22 10:18:09.423(Timestamp)
2019-03-22 10:18:09 -<==    Updates: 1
2019-03-22 10:18:10 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-22 10:18:10 -HTTP METHOD : GET
2019-03-22 10:18:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-22 10:18:10 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, waterDate=2019-03-08}]
2019-03-22 10:18:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-03-22 10:18:10 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 10:18:10 -<==      Total: 2
2019-03-22 10:18:10 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-03-22 10:18:10 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:18:10 -{conn-10001, pstmt-20028} execute error. select count(*) from water_log
		  WHERE  user_type = ? 
	   and user_org = ? 
	  
	   
	  
	  
	  
	  
	  
 	
			 
		     	  
			         and  `heat_date` >= ?
			     
			     
			      
			         and  `heat_date` <= ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 10:18:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 10:18:10 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?      and user_org = ?                                                              and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?      and user_org = ?                                                              and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-22 10:18:10 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?      and user_org = ?                                                              and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'(String), null, 2019-03-22 10:18:10.29(Timestamp)
2019-03-22 10:18:10 -<==    Updates: 1
2019-03-22 10:18:10 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-22 10:18:10 -HTTP METHOD : GET
2019-03-22 10:18:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-22 10:18:10 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, waterDate=2019-03-08}]
2019-03-22 10:18:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-03-22 10:18:10 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 10:18:10 -<==      Total: 2
2019-03-22 10:18:10 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-03-22 10:18:10 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:18:10 -{conn-10001, pstmt-20029} execute error. select count(*) from water_log
		  WHERE  user_type = ? 
	   and user_org = ? 
	  
	   
	  
	  
	  
	  
	  
 	
			 
		     	  
			         and  `heat_date` >= ?
			     
			     
			      
			         and  `heat_date` <= ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 10:18:10 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?      and user_org = ?                                                              and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?      and user_org = ?                                                              and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy104.count(Unknown Source)
	at com.bootdo.moneyLog.service.impl.WaterLogServiceImpl.count(WaterLogServiceImpl.java:31)
	at com.bootdo.moneyLog.controller.WaterLogController.list(WaterLogController.java:72)
	at com.bootdo.moneyLog.controller.WaterLogController$$FastClassBySpringCGLIB$$3a5e3635.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.WaterLogController$$EnhancerBySpringCGLIB$$c64f8c53.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-22 10:18:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 10:18:10 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/waterLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\WaterLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select count(*) from water_log     WHERE  user_type = ?      and user_org = ?                                                              and  `heat_date` >= ?                                         and  `heat_date` <= ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_date' in 'where clause'(String), null, 2019-03-22 10:18:10.752(Timestamp)
2019-03-22 10:18:10 -<==    Updates: 1
2019-03-22 10:21:04 -Starting BootdoApplication on ZJZL-20180906VX with PID 17976 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-22 10:21:04 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-22 10:21:04 -The following profiles are active: dev
2019-03-22 10:21:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75c9e76b: startup date [Fri Mar 22 10:21:04 CST 2019]; root of context hierarchy
2019-03-22 10:21:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-22 10:21:11 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ca39af07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:21:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bc92ddae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:21:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:21:13 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:21:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:21:13 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-22 10:21:13 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-22 10:21:13 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:21:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:21:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:21:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 10:21:14 -Tomcat initialized with port(s): 8081 (http)
2019-03-22 10:21:15 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-22 10:21:15 -Starting service [Tomcat]
2019-03-22 10:21:15 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-22 10:21:15 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-22 10:21:15 -Initializing Spring embedded WebApplicationContext
2019-03-22 10:21:15 -Root WebApplicationContext: initialization completed in 10880 ms
2019-03-22 10:21:16 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-22 10:21:16 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-22 10:21:16 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-22 10:21:16 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-22 10:21:16 -Filter xssFilter was not registered (disabled)
2019-03-22 10:21:16 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-22 10:21:16 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-22 10:21:16 -Servlet statViewServlet mapped to [/druid/*]
2019-03-22 10:21:16 -Servlet dispatcherServlet mapped to [/]
2019-03-22 10:21:19 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75c9e76b: startup date [Fri Mar 22 10:21:04 CST 2019]; root of context hierarchy
2019-03-22 10:21:20 -Using default implementation for ThreadExecutor
2019-03-22 10:21:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-22 10:21:20 -Quartz Scheduler v.2.2.1 created.
2019-03-22 10:21:20 -RAMJobStore initialized.
2019-03-22 10:21:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-22 10:21:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-22 10:21:20 -Quartz scheduler version: 2.2.1
2019-03-22 10:21:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@10a064bd
2019-03-22 10:21:20 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-22 10:21:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-22 10:21:24 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:21:24 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-22 10:21:24 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-22 10:21:24 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-22 10:21:24 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-22 10:21:24 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-22 10:21:24 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-22 10:21:24 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-22 10:21:24 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-22 10:21:24 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-22 10:21:24 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-22 10:21:24 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-22 10:21:24 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-22 10:21:24 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-22 10:21:24 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-22 10:21:24 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-22 10:21:24 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-22 10:21:24 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-22 10:21:24 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-22 10:21:24 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-22 10:21:24 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 10:21:24 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 10:21:24 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-22 10:21:24 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-22 10:21:24 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-22 10:21:24 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-22 10:21:24 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-22 10:21:24 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-22 10:21:24 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-22 10:21:24 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-22 10:21:24 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-22 10:21:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 10:21:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 10:21:24 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-22 10:21:24 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-22 10:21:24 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-22 10:21:24 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-22 10:21:24 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-22 10:21:24 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:21:24 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-22 10:21:24 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-22 10:21:24 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:21:24 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-22 10:21:24 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-22 10:21:24 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-22 10:21:24 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-22 10:21:24 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-22 10:21:24 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 10:21:24 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-22 10:21:24 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-22 10:21:24 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-22 10:21:24 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-22 10:21:24 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-22 10:21:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-22 10:21:24 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:21:24 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-22 10:21:24 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:21:24 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-22 10:21:24 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 10:21:24 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 10:21:24 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-22 10:21:24 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-22 10:21:24 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 10:21:24 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-22 10:21:24 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-22 10:21:24 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-22 10:21:24 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-22 10:21:24 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-22 10:21:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-22 10:21:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-22 10:21:24 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-22 10:21:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-22 10:21:24 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 10:21:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-22 10:21:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-22 10:21:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-22 10:21:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-22 10:21:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-22 10:21:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-22 10:21:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-22 10:21:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-22 10:21:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-22 10:21:24 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 10:21:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-22 10:21:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-22 10:21:24 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-22 10:21:24 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-22 10:21:24 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-22 10:21:24 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-22 10:21:24 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-22 10:21:24 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-22 10:21:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-22 10:21:24 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 10:21:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 10:21:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-22 10:21:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-22 10:21:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-22 10:21:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-22 10:21:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-22 10:21:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-22 10:21:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-22 10:21:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-22 10:21:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-22 10:21:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-22 10:21:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-22 10:21:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-22 10:21:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-22 10:21:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-22 10:21:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-22 10:21:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-22 10:21:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-22 10:21:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 10:21:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 10:21:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 10:21:24 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-22 10:21:24 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-22 10:21:24 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-22 10:21:24 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-22 10:21:24 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:21:24 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-22 10:21:24 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 10:21:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-22 10:21:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-22 10:21:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-22 10:21:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-22 10:21:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 10:21:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 10:21:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 10:21:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-22 10:21:24 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 10:21:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-22 10:21:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 10:21:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-22 10:21:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-22 10:21:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-22 10:21:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-22 10:21:25 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-22 10:21:25 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-22 10:21:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 10:21:26 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75c9e76b: startup date [Fri Mar 22 10:21:04 CST 2019]; root of context hierarchy
2019-03-22 10:21:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 10:21:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 10:21:26 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 10:21:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-22 10:21:26 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-22 10:21:29 -Registering beans for JMX exposure on startup
2019-03-22 10:21:29 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-22 10:21:29 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-22 10:21:29 -Starting beans in phase 2147483647
2019-03-22 10:21:29 -Context refreshed
2019-03-22 10:21:29 -Found 1 custom documentation plugin(s)
2019-03-22 10:21:29 -Scanning for api listing references
2019-03-22 10:21:30 -Generating unique operation named: removeUsingPOST_1
2019-03-22 10:21:30 -Generating unique operation named: addUsingGET_1
2019-03-22 10:21:30 -Generating unique operation named: editUsingGET_1
2019-03-22 10:21:30 -Generating unique operation named: listUsingGET_1
2019-03-22 10:21:30 -Generating unique operation named: removeUsingPOST_2
2019-03-22 10:21:30 -Generating unique operation named: removeUsingPOST_3
2019-03-22 10:21:30 -Generating unique operation named: saveUsingPOST_1
2019-03-22 10:21:30 -Generating unique operation named: updateUsingGET_1
2019-03-22 10:21:30 -Generating unique operation named: updateUsingHEAD_1
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPOST_1
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPUT_1
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPATCH_1
2019-03-22 10:21:30 -Generating unique operation named: updateUsingDELETE_1
2019-03-22 10:21:30 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-22 10:21:30 -Generating unique operation named: updateUsingTRACE_1
2019-03-22 10:21:30 -Generating unique operation named: addUsingGET_2
2019-03-22 10:21:30 -Generating unique operation named: editUsingGET_2
2019-03-22 10:21:30 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-22 10:21:30 -Generating unique operation named: listUsingGET_2
2019-03-22 10:21:30 -Generating unique operation named: removeUsingPOST_4
2019-03-22 10:21:30 -Generating unique operation named: removeUsingPOST_5
2019-03-22 10:21:30 -Generating unique operation named: saveUsingPOST_2
2019-03-22 10:21:30 -Generating unique operation named: updateUsingGET_2
2019-03-22 10:21:30 -Generating unique operation named: updateUsingHEAD_2
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPOST_2
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPUT_2
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPATCH_2
2019-03-22 10:21:30 -Generating unique operation named: updateUsingDELETE_2
2019-03-22 10:21:30 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-22 10:21:30 -Generating unique operation named: updateUsingTRACE_2
2019-03-22 10:21:30 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-22 10:21:30 -Generating unique operation named: addUsingGET_3
2019-03-22 10:21:30 -Generating unique operation named: editUsingGET_3
2019-03-22 10:21:30 -Generating unique operation named: listUsingGET_3
2019-03-22 10:21:30 -Generating unique operation named: removeUsingPOST_6
2019-03-22 10:21:30 -Generating unique operation named: removeUsingPOST_7
2019-03-22 10:21:30 -Generating unique operation named: saveUsingPOST_3
2019-03-22 10:21:30 -Generating unique operation named: updateUsingGET_3
2019-03-22 10:21:30 -Generating unique operation named: updateUsingHEAD_3
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPOST_3
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPUT_3
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPATCH_3
2019-03-22 10:21:30 -Generating unique operation named: updateUsingDELETE_3
2019-03-22 10:21:30 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-22 10:21:30 -Generating unique operation named: updateUsingTRACE_3
2019-03-22 10:21:30 -Generating unique operation named: addUsingGET_4
2019-03-22 10:21:30 -Generating unique operation named: editUsingGET_4
2019-03-22 10:21:30 -Generating unique operation named: listUsingGET_4
2019-03-22 10:21:30 -Generating unique operation named: removeUsingPOST_8
2019-03-22 10:21:30 -Generating unique operation named: removeUsingPOST_9
2019-03-22 10:21:30 -Generating unique operation named: saveUsingPOST_4
2019-03-22 10:21:30 -Generating unique operation named: updateUsingGET_4
2019-03-22 10:21:30 -Generating unique operation named: updateUsingHEAD_4
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPOST_4
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPUT_4
2019-03-22 10:21:30 -Generating unique operation named: updateUsingPATCH_4
2019-03-22 10:21:30 -Generating unique operation named: updateUsingDELETE_4
2019-03-22 10:21:30 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-22 10:21:30 -Generating unique operation named: updateUsingTRACE_4
2019-03-22 10:21:30 -Generating unique operation named: ElecUsingGET_1
2019-03-22 10:21:30 -Generating unique operation named: addUsingGET_5
2019-03-22 10:21:30 -Generating unique operation named: editUsingGET_5
2019-03-22 10:21:31 -Generating unique operation named: listUsingGET_5
2019-03-22 10:21:31 -Generating unique operation named: removeUsingPOST_10
2019-03-22 10:21:31 -Generating unique operation named: removeUsingPOST_11
2019-03-22 10:21:31 -Generating unique operation named: saveUsingPOST_5
2019-03-22 10:21:31 -Generating unique operation named: updateUsingGET_5
2019-03-22 10:21:31 -Generating unique operation named: updateUsingHEAD_5
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPOST_5
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPUT_5
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPATCH_5
2019-03-22 10:21:31 -Generating unique operation named: updateUsingDELETE_5
2019-03-22 10:21:31 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-22 10:21:31 -Generating unique operation named: updateUsingTRACE_5
2019-03-22 10:21:31 -Generating unique operation named: editUsingGET_6
2019-03-22 10:21:31 -Generating unique operation named: listUsingGET_6
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPOST_6
2019-03-22 10:21:31 -Generating unique operation named: addUsingGET_6
2019-03-22 10:21:31 -Generating unique operation named: editUsingGET_7
2019-03-22 10:21:31 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-22 10:21:31 -Generating unique operation named: listUsingGET_7
2019-03-22 10:21:31 -Generating unique operation named: removeUsingPOST_12
2019-03-22 10:21:31 -Generating unique operation named: removeUsingPOST_13
2019-03-22 10:21:31 -Generating unique operation named: saveUsingPOST_6
2019-03-22 10:21:31 -Generating unique operation named: updateUsingGET_6
2019-03-22 10:21:31 -Generating unique operation named: updateUsingHEAD_6
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPOST_7
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPUT_6
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPATCH_6
2019-03-22 10:21:31 -Generating unique operation named: updateUsingDELETE_6
2019-03-22 10:21:31 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-22 10:21:31 -Generating unique operation named: updateUsingTRACE_6
2019-03-22 10:21:31 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-22 10:21:31 -Generating unique operation named: addUsingGET_7
2019-03-22 10:21:31 -Generating unique operation named: editUsingGET_8
2019-03-22 10:21:31 -Generating unique operation named: listUsingGET_8
2019-03-22 10:21:31 -Generating unique operation named: removeUsingPOST_14
2019-03-22 10:21:31 -Generating unique operation named: removeUsingPOST_15
2019-03-22 10:21:31 -Generating unique operation named: saveUsingPOST_7
2019-03-22 10:21:31 -Generating unique operation named: updateUsingGET_7
2019-03-22 10:21:31 -Generating unique operation named: updateUsingHEAD_7
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPOST_8
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPUT_7
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPATCH_7
2019-03-22 10:21:31 -Generating unique operation named: updateUsingDELETE_7
2019-03-22 10:21:31 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-22 10:21:31 -Generating unique operation named: updateUsingTRACE_7
2019-03-22 10:21:31 -Generating unique operation named: addUsingGET_8
2019-03-22 10:21:31 -Generating unique operation named: editUsingGET_9
2019-03-22 10:21:31 -Generating unique operation named: listUsingGET_9
2019-03-22 10:21:31 -Generating unique operation named: removeUsingPOST_16
2019-03-22 10:21:31 -Generating unique operation named: removeUsingPOST_17
2019-03-22 10:21:31 -Generating unique operation named: saveUsingPOST_8
2019-03-22 10:21:31 -Generating unique operation named: updateUsingGET_8
2019-03-22 10:21:31 -Generating unique operation named: updateUsingHEAD_8
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPOST_9
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPUT_8
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPATCH_8
2019-03-22 10:21:31 -Generating unique operation named: updateUsingDELETE_8
2019-03-22 10:21:31 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-22 10:21:31 -Generating unique operation named: updateUsingTRACE_8
2019-03-22 10:21:31 -Generating unique operation named: addUsingGET_9
2019-03-22 10:21:31 -Generating unique operation named: editUsingGET_10
2019-03-22 10:21:31 -Generating unique operation named: infoUsingGET_1
2019-03-22 10:21:31 -Generating unique operation named: infoUsingHEAD_1
2019-03-22 10:21:31 -Generating unique operation named: infoUsingPOST_1
2019-03-22 10:21:31 -Generating unique operation named: infoUsingPUT_1
2019-03-22 10:21:31 -Generating unique operation named: infoUsingPATCH_1
2019-03-22 10:21:31 -Generating unique operation named: infoUsingDELETE_1
2019-03-22 10:21:31 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-22 10:21:31 -Generating unique operation named: infoUsingTRACE_1
2019-03-22 10:21:31 -Generating unique operation named: listUsingGET_10
2019-03-22 10:21:31 -Generating unique operation named: removeUsingPOST_18
2019-03-22 10:21:31 -Generating unique operation named: removeUsingPOST_19
2019-03-22 10:21:31 -Generating unique operation named: saveUsingPOST_9
2019-03-22 10:21:31 -Generating unique operation named: updateUsingPOST_10
2019-03-22 10:21:31 -Generating unique operation named: listUsingGET_11
2019-03-22 10:21:31 -Generating unique operation named: removeUsingPOST_20
2019-03-22 10:21:31 -Generating unique operation named: welcomeUsingGET_1
2019-03-22 10:21:31 -Generating unique operation named: addUsingGET_10
2019-03-22 10:21:32 -Generating unique operation named: editUsingGET_11
2019-03-22 10:21:32 -Generating unique operation named: listUsingGET_12
2019-03-22 10:21:32 -Generating unique operation named: removeUsingPOST_21
2019-03-22 10:21:32 -Generating unique operation named: saveUsingPOST_10
2019-03-22 10:21:32 -Generating unique operation named: treeUsingGET_1
2019-03-22 10:21:32 -Generating unique operation named: treeUsingGET_2
2019-03-22 10:21:32 -Generating unique operation named: updateUsingPOST_11
2019-03-22 10:21:32 -Generating unique operation named: addUsingGET_11
2019-03-22 10:21:32 -Generating unique operation named: editUsingGET_12
2019-03-22 10:21:32 -Generating unique operation named: listUsingGET_13
2019-03-22 10:21:32 -Generating unique operation named: removeUsingPOST_22
2019-03-22 10:21:32 -Generating unique operation named: removeUsingPOST_23
2019-03-22 10:21:32 -Generating unique operation named: saveUsingPOST_11
2019-03-22 10:21:32 -Generating unique operation named: updateUsingGET_9
2019-03-22 10:21:32 -Generating unique operation named: updateUsingHEAD_9
2019-03-22 10:21:32 -Generating unique operation named: updateUsingPOST_12
2019-03-22 10:21:32 -Generating unique operation named: updateUsingPUT_9
2019-03-22 10:21:32 -Generating unique operation named: updateUsingPATCH_9
2019-03-22 10:21:32 -Generating unique operation named: updateUsingDELETE_9
2019-03-22 10:21:32 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-22 10:21:32 -Generating unique operation named: updateUsingTRACE_9
2019-03-22 10:21:32 -Generating unique operation named: addUsingGET_12
2019-03-22 10:21:32 -Generating unique operation named: editUsingGET_13
2019-03-22 10:21:32 -Generating unique operation named: listUsingGET_14
2019-03-22 10:21:32 -Generating unique operation named: removeUsingPOST_24
2019-03-22 10:21:32 -Generating unique operation named: removeUsingPOST_25
2019-03-22 10:21:32 -Generating unique operation named: saveUsingPOST_12
2019-03-22 10:21:32 -Generating unique operation named: updateUsingGET_10
2019-03-22 10:21:32 -Generating unique operation named: updateUsingHEAD_10
2019-03-22 10:21:32 -Generating unique operation named: updateUsingPOST_13
2019-03-22 10:21:32 -Generating unique operation named: updateUsingPUT_10
2019-03-22 10:21:32 -Generating unique operation named: updateUsingPATCH_10
2019-03-22 10:21:32 -Generating unique operation named: updateUsingDELETE_10
2019-03-22 10:21:32 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-22 10:21:32 -Generating unique operation named: updateUsingTRACE_10
2019-03-22 10:21:32 -Generating unique operation named: addUsingGET_13
2019-03-22 10:21:32 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-22 10:21:32 -Generating unique operation named: editUsingGET_14
2019-03-22 10:21:32 -Generating unique operation named: listUsingGET_15
2019-03-22 10:21:32 -Generating unique operation named: saveUsingPOST_13
2019-03-22 10:21:32 -Generating unique operation named: saveUsingPOST_14
2019-03-22 10:21:32 -Generating unique operation named: updateUsingPOST_14
2019-03-22 10:21:32 -Generating unique operation named: listUsingGET_16
2019-03-22 10:21:32 -Generating unique operation named: listUsingHEAD_1
2019-03-22 10:21:32 -Generating unique operation named: listUsingPOST_1
2019-03-22 10:21:32 -Generating unique operation named: listUsingPUT_1
2019-03-22 10:21:32 -Generating unique operation named: listUsingPATCH_1
2019-03-22 10:21:32 -Generating unique operation named: listUsingDELETE_1
2019-03-22 10:21:32 -Generating unique operation named: listUsingOPTIONS_1
2019-03-22 10:21:32 -Generating unique operation named: listUsingTRACE_1
2019-03-22 10:21:32 -Generating unique operation named: addUsingGET_14
2019-03-22 10:21:32 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-22 10:21:32 -Generating unique operation named: editUsingGET_15
2019-03-22 10:21:32 -Generating unique operation named: listUsingGET_17
2019-03-22 10:21:32 -Generating unique operation named: removeUsingPOST_26
2019-03-22 10:21:32 -Generating unique operation named: saveUsingPOST_15
2019-03-22 10:21:32 -Generating unique operation named: treeUsingGET_3
2019-03-22 10:21:32 -Generating unique operation named: treeViewUsingGET_1
2019-03-22 10:21:32 -Generating unique operation named: updateUsingPOST_15
2019-03-22 10:21:32 -Generating unique operation named: addUsingGET_15
2019-03-22 10:21:32 -Generating unique operation named: editUsingGET_16
2019-03-22 10:21:32 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-22 10:21:32 -Generating unique operation named: listUsingGET_18
2019-03-22 10:21:32 -Generating unique operation named: removeUsingPOST_27
2019-03-22 10:21:32 -Generating unique operation named: removeUsingPOST_28
2019-03-22 10:21:32 -Generating unique operation named: saveUsingPOST_16
2019-03-22 10:21:32 -Generating unique operation named: updateUsingGET_11
2019-03-22 10:21:33 -Generating unique operation named: updateUsingHEAD_11
2019-03-22 10:21:33 -Generating unique operation named: updateUsingPOST_16
2019-03-22 10:21:33 -Generating unique operation named: updateUsingPUT_11
2019-03-22 10:21:33 -Generating unique operation named: updateUsingPATCH_11
2019-03-22 10:21:33 -Generating unique operation named: updateUsingDELETE_11
2019-03-22 10:21:33 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-22 10:21:33 -Generating unique operation named: updateUsingTRACE_11
2019-03-22 10:21:33 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-22 10:21:33 -Generating unique operation named: addUsingGET_16
2019-03-22 10:21:33 -Generating unique operation named: editUsingGET_17
2019-03-22 10:21:33 -Generating unique operation named: listUsingGET_19
2019-03-22 10:21:33 -Generating unique operation named: removeUsingPOST_29
2019-03-22 10:21:33 -Generating unique operation named: removeUsingPOST_30
2019-03-22 10:21:33 -Generating unique operation named: saveUsingPOST_17
2019-03-22 10:21:33 -Generating unique operation named: updateUsingGET_12
2019-03-22 10:21:33 -Generating unique operation named: updateUsingHEAD_12
2019-03-22 10:21:33 -Generating unique operation named: updateUsingPOST_17
2019-03-22 10:21:33 -Generating unique operation named: updateUsingPUT_12
2019-03-22 10:21:33 -Generating unique operation named: updateUsingPATCH_12
2019-03-22 10:21:33 -Generating unique operation named: updateUsingDELETE_12
2019-03-22 10:21:33 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-22 10:21:33 -Generating unique operation named: updateUsingTRACE_12
2019-03-22 10:21:33 -Generating unique operation named: addUsingGET_17
2019-03-22 10:21:33 -Generating unique operation named: editUsingGET_18
2019-03-22 10:21:33 -Generating unique operation named: listUsingGET_20
2019-03-22 10:21:33 -Generating unique operation named: removeUsingPOST_31
2019-03-22 10:21:33 -Generating unique operation named: removeUsingPOST_32
2019-03-22 10:21:33 -Generating unique operation named: saveUsingPOST_18
2019-03-22 10:21:33 -Generating unique operation named: updateUsingGET_13
2019-03-22 10:21:33 -Generating unique operation named: updateUsingHEAD_13
2019-03-22 10:21:33 -Generating unique operation named: updateUsingPOST_18
2019-03-22 10:21:33 -Generating unique operation named: updateUsingPUT_13
2019-03-22 10:21:33 -Generating unique operation named: updateUsingPATCH_13
2019-03-22 10:21:33 -Generating unique operation named: updateUsingDELETE_13
2019-03-22 10:21:33 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-22 10:21:33 -Generating unique operation named: updateUsingTRACE_13
2019-03-22 10:21:33 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-22 10:21:33 -Starting Quartz Scheduler now
2019-03-22 10:21:33 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-22 10:21:33 -Starting...
2019-03-22 10:21:33 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 10:21:33 -Started.
2019-03-22 10:21:33 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-22 10:21:33 -Using a shared selector for servlet write/read
2019-03-22 10:21:33 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-22 10:21:33 -Started BootdoApplication in 31.606 seconds (JVM running for 33.625)
2019-03-22 10:21:33 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-22 10:21:33 -==> Parameters: 
2019-03-22 10:21:34 -<==      Total: 1
2019-03-22 10:22:25 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-22 10:27:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-22 10:27:29 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-22 10:27:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 106 ms
2019-03-22 10:27:30 -Enabling session validation scheduler...
2019-03-22 10:27:30 -请求地址 : http://localhost:8081/login;JSESSIONID=7b01072e-90f2-47ae-b149-38b92eacd313
2019-03-22 10:27:30 -HTTP METHOD : GET
2019-03-22 10:27:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 10:27:30 -参数 : [{}]
2019-03-22 10:27:30 -耗时 : 7
2019-03-22 10:27:30 -返回值 : login
2019-03-22 10:27:33 -请求地址 : http://localhost:8081/getVerify
2019-03-22 10:27:33 -HTTP METHOD : GET
2019-03-22 10:27:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-22 10:27:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2641e8d3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@227e68c3]
2019-03-22 10:27:34 -8046
2019-03-22 10:27:34 -耗时 : 801
2019-03-22 10:27:34 -返回值 : null
2019-03-22 10:27:34 -请求地址 : http://localhost:8081/login
2019-03-22 10:27:34 -HTTP METHOD : GET
2019-03-22 10:27:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 10:27:34 -参数 : [{}]
2019-03-22 10:27:34 -耗时 : 0
2019-03-22 10:27:34 -返回值 : login
2019-03-22 10:27:39 -请求地址 : http://localhost:8081/login
2019-03-22 10:27:39 -HTTP METHOD : POST
2019-03-22 10:27:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-22 10:27:39 -参数 : [admin, 111111, 8046, org.apache.shiro.web.servlet.ShiroHttpServletRequest@75e44e04]
2019-03-22 10:27:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-22 10:27:39 -==> Parameters: admin(String)
2019-03-22 10:27:39 -<==      Total: 1
2019-03-22 10:27:39 -耗时 : 300
2019-03-22 10:27:39 -返回值 : {msg=操作成功, code=0}
2019-03-22 10:27:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-22 10:27:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 10:27:39 -==> Parameters: 1(Long), admin(String), 登录(String), 301(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-22 10:27:39.761(Timestamp)
2019-03-22 10:27:39 -请求地址 : http://localhost:8081/index
2019-03-22 10:27:39 -HTTP METHOD : GET
2019-03-22 10:27:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 10:27:39 -参数 : [{}]
2019-03-22 10:27:40 -<==    Updates: 1
2019-03-22 10:27:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 10:27:40 -==> Parameters: 1(Long)
2019-03-22 10:27:41 -<==      Total: 46
2019-03-22 10:27:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 10:27:41 -==> Parameters: 138(Long)
2019-03-22 10:27:41 -<==      Total: 1
2019-03-22 10:27:41 -耗时 : 1305
2019-03-22 10:27:41 -返回值 : index_v1
2019-03-22 10:27:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 10:27:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1306(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 10:27:41.19(Timestamp)
2019-03-22 10:27:41 -请求地址 : http://localhost:8081/main
2019-03-22 10:27:41 -HTTP METHOD : GET
2019-03-22 10:27:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 10:27:41 -参数 : []
2019-03-22 10:27:41 -耗时 : 0
2019-03-22 10:27:41 -返回值 : main
2019-03-22 10:27:41 -<==    Updates: 1
2019-03-22 10:27:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 10:27:41 -HTTP METHOD : GET
2019-03-22 10:27:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 10:27:41 -参数 : []
2019-03-22 10:27:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 10:27:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 10:27:41 -请求地址 : http://localhost:8081/main
2019-03-22 10:27:41 -HTTP METHOD : GET
2019-03-22 10:27:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 10:27:41 -参数 : []
2019-03-22 10:27:41 -耗时 : 1
2019-03-22 10:27:41 -返回值 : main
2019-03-22 10:27:41 -<==      Total: 0
2019-03-22 10:27:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 10:27:41 -==> Parameters: 1(Long), 0(String)
2019-03-22 10:27:42 -<==      Total: 1
2019-03-22 10:27:42 -耗时 : 367
2019-03-22 10:27:42 -返回值 : com.bootdo.common.utils.PageUtils@40f5ad63
2019-03-22 10:28:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 10:28:00 -==> Parameters: 1(Long)
2019-03-22 10:28:00 -<==      Total: 90
2019-03-22 10:28:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-22 10:28:00 -HTTP METHOD : GET
2019-03-22 10:28:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-22 10:28:00 -参数 : []
2019-03-22 10:28:00 -耗时 : 0
2019-03-22 10:28:00 -返回值 : /moneyLog/elecLog/elecLog
2019-03-22 10:28:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 10:28:01 -HTTP METHOD : GET
2019-03-22 10:28:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 10:28:01 -参数 : [userType]
2019-03-22 10:28:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 10:28:01 -==> Parameters: userType(String)
2019-03-22 10:28:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-22 10:28:01 -HTTP METHOD : GET
2019-03-22 10:28:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-22 10:28:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-22 10:28:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-22 10:28:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 10:28:01 -<==      Total: 5
2019-03-22 10:28:01 -==>  Preparing: select count(*) from elec_log 
2019-03-22 10:28:01 -==> Parameters: 
2019-03-22 10:28:01 -<==      Total: 1
2019-03-22 10:28:01 -耗时 : 183
2019-03-22 10:28:01 -返回值 : com.bootdo.common.utils.PageUtils@73d30db5
2019-03-22 10:28:01 -<==      Total: 2
2019-03-22 10:28:01 -耗时 : 278
2019-03-22 10:28:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 10:28:03 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-22 10:28:03 -HTTP METHOD : GET
2019-03-22 10:28:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-22 10:28:03 -参数 : []
2019-03-22 10:28:03 -耗时 : 1
2019-03-22 10:28:03 -返回值 : /moneyLog/waterLog/waterLog
2019-03-22 10:28:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 10:28:03 -HTTP METHOD : GET
2019-03-22 10:28:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 10:28:03 -参数 : [userType]
2019-03-22 10:28:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 10:28:03 -==> Parameters: userType(String)
2019-03-22 10:28:03 -<==      Total: 2
2019-03-22 10:28:03 -耗时 : 20
2019-03-22 10:28:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 10:28:03 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-22 10:28:03 -HTTP METHOD : GET
2019-03-22 10:28:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-22 10:28:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-22 10:28:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-22 10:28:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 10:28:03 -<==      Total: 4
2019-03-22 10:28:03 -==>  Preparing: select count(*) from water_log 
2019-03-22 10:28:03 -==> Parameters: 
2019-03-22 10:28:03 -<==      Total: 1
2019-03-22 10:28:03 -耗时 : 93
2019-03-22 10:28:03 -返回值 : com.bootdo.common.utils.PageUtils@36a1e17b
2019-03-22 10:28:11 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-22 10:28:11 -HTTP METHOD : GET
2019-03-22 10:28:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-22 10:28:11 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, waterDate=2019-03-08}]
2019-03-22 10:28:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-03-22 10:28:11 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 10:28:11 -<==      Total: 2
2019-03-22 10:28:11 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and `water_date` >= ? and `water_date` <= ? 
2019-03-22 10:28:11 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:28:11 -<==      Total: 1
2019-03-22 10:28:11 -耗时 : 34
2019-03-22 10:28:11 -返回值 : com.bootdo.common.utils.PageUtils@65f6dff6
2019-03-22 10:28:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 10:28:12 -HTTP METHOD : GET
2019-03-22 10:28:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 10:28:12 -参数 : []
2019-03-22 10:28:12 -耗时 : 1
2019-03-22 10:28:12 -返回值 : system/dept/deptTree
2019-03-22 10:28:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 10:28:12 -HTTP METHOD : GET
2019-03-22 10:28:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 10:28:12 -参数 : []
2019-03-22 10:28:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 10:28:12 -==> Parameters: 
2019-03-22 10:28:12 -<==      Total: 3
2019-03-22 10:28:12 -耗时 : 25
2019-03-22 10:28:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 10:28:15 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-22 10:28:15 -HTTP METHOD : GET
2019-03-22 10:28:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-22 10:28:15 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, waterDate=2019-03-08}]
2019-03-22 10:28:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-03-22 10:28:15 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-22 10:28:15 -<==      Total: 2
2019-03-22 10:28:15 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-03-22 10:28:15 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:28:15 -<==      Total: 1
2019-03-22 10:28:15 -耗时 : 15
2019-03-22 10:28:15 -返回值 : com.bootdo.common.utils.PageUtils@15eefcd
2019-03-22 10:28:16 -请求地址 : http://localhost:8081/moneyLog/waterLog/exprotWaterLog
2019-03-22 10:28:16 -HTTP METHOD : GET
2019-03-22 10:28:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog
2019-03-22 10:28:16 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@518a150d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@197bedf2, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5e0f29a3]
2019-03-22 10:28:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-03-22 10:28:16 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:28:16 -<==      Total: 2
2019-03-22 10:28:16 -耗时 : 376
2019-03-22 10:28:16 -返回值 : null
2019-03-22 10:28:43 -请求地址 : http://localhost:8081/moneyLog/waterLog/exprotWaterLog
2019-03-22 10:28:43 -HTTP METHOD : GET
2019-03-22 10:28:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog
2019-03-22 10:28:43 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@65c02105, org.apache.shiro.web.servlet.ShiroHttpServletResponse@547847bd, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7b166a40]
2019-03-22 10:28:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-03-22 10:28:43 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-03-22 10:28:43 -<==      Total: 2
2019-03-22 10:28:43 -耗时 : 22
2019-03-22 10:28:43 -返回值 : null
2019-03-22 10:30:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-22 10:30:08 -HTTP METHOD : GET
2019-03-22 10:30:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-22 10:30:08 -参数 : []
2019-03-22 10:30:08 -耗时 : 1
2019-03-22 10:30:08 -返回值 : /moneyLog/heatLog/heatLog
2019-03-22 10:30:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 10:30:08 -HTTP METHOD : GET
2019-03-22 10:30:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 10:30:08 -参数 : [userType]
2019-03-22 10:30:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 10:30:08 -==> Parameters: userType(String)
2019-03-22 10:30:08 -<==      Total: 2
2019-03-22 10:30:08 -耗时 : 7
2019-03-22 10:30:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 10:30:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-22 10:30:08 -HTTP METHOD : GET
2019-03-22 10:30:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-22 10:30:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-22 10:30:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-22 10:30:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 10:30:08 -<==      Total: 4
2019-03-22 10:30:08 -==>  Preparing: select count(*) from heat_log 
2019-03-22 10:30:08 -==> Parameters: 
2019-03-22 10:30:08 -<==      Total: 1
2019-03-22 10:30:08 -耗时 : 176
2019-03-22 10:30:08 -返回值 : com.bootdo.common.utils.PageUtils@3a6ba75d
2019-03-22 10:30:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-22 10:30:08 -HTTP METHOD : GET
2019-03-22 10:30:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-22 10:30:08 -参数 : []
2019-03-22 10:30:08 -耗时 : 1
2019-03-22 10:30:08 -返回值 : /moneyLog/elecLog/elecLog
2019-03-22 10:30:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 10:30:09 -HTTP METHOD : GET
2019-03-22 10:30:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 10:30:09 -参数 : [userType]
2019-03-22 10:30:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 10:30:09 -==> Parameters: userType(String)
2019-03-22 10:30:09 -<==      Total: 2
2019-03-22 10:30:09 -耗时 : 4
2019-03-22 10:30:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 10:30:09 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-22 10:30:09 -HTTP METHOD : GET
2019-03-22 10:30:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-22 10:30:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-22 10:30:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-22 10:30:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 10:30:09 -<==      Total: 5
2019-03-22 10:30:09 -==>  Preparing: select count(*) from elec_log 
2019-03-22 10:30:09 -==> Parameters: 
2019-03-22 10:30:09 -<==      Total: 1
2019-03-22 10:30:09 -耗时 : 73
2019-03-22 10:30:09 -返回值 : com.bootdo.common.utils.PageUtils@31e1359d
2019-03-22 10:30:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-22 10:30:11 -HTTP METHOD : GET
2019-03-22 10:30:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-22 10:30:11 -参数 : []
2019-03-22 10:30:11 -耗时 : 1
2019-03-22 10:30:11 -返回值 : moneyLog/elecLog/add
2019-03-22 10:30:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 10:30:11 -HTTP METHOD : GET
2019-03-22 10:30:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 10:30:11 -参数 : [userType]
2019-03-22 10:30:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 10:30:11 -==> Parameters: userType(String)
2019-03-22 10:30:11 -<==      Total: 2
2019-03-22 10:30:11 -耗时 : 6
2019-03-22 10:30:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 10:50:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 10:50:28 -==> Parameters: 1(Long)
2019-03-22 10:50:28 -<==      Total: 90
2019-03-22 10:50:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-22 10:50:28 -HTTP METHOD : GET
2019-03-22 10:50:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-22 10:50:28 -参数 : [1, {}]
2019-03-22 10:50:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-22 10:50:28 -==> Parameters: 1(Long)
2019-03-22 10:50:28 -<==      Total: 1
2019-03-22 10:50:28 -耗时 : 15
2019-03-22 10:50:28 -返回值 : moneyLog/elecLog/edit
2019-03-22 10:50:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 10:50:29 -HTTP METHOD : GET
2019-03-22 10:50:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 10:50:29 -参数 : [userType]
2019-03-22 10:50:29 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-22 10:50:29 -HTTP METHOD : GET
2019-03-22 10:50:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 10:50:29 -参数 : [userOrg]
2019-03-22 10:50:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 10:50:29 -==> Parameters: userOrg(String)
2019-03-22 10:50:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 10:50:29 -<==      Total: 0
2019-03-22 10:50:29 -耗时 : 8
2019-03-22 10:50:29 -==> Parameters: userType(String)
2019-03-22 10:50:29 -返回值 : []
2019-03-22 10:50:29 -<==      Total: 2
2019-03-22 10:50:29 -耗时 : 185
2019-03-22 10:50:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 10:52:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 357]
2019-03-22 11:02:02 -请求地址 : http://localhost:8081/index
2019-03-22 11:02:02 -HTTP METHOD : GET
2019-03-22 11:02:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 11:02:02 -参数 : [{}]
2019-03-22 11:02:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 11:02:02 -==> Parameters: 1(Long)
2019-03-22 11:02:03 -<==      Total: 46
2019-03-22 11:02:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 11:02:03 -==> Parameters: 138(Long)
2019-03-22 11:02:03 -<==      Total: 1
2019-03-22 11:02:03 -耗时 : 260
2019-03-22 11:02:03 -返回值 : index_v1
2019-03-22 11:02:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 11:02:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 260(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 11:02:03.154(Timestamp)
2019-03-22 11:02:03 -请求地址 : http://localhost:8081/main
2019-03-22 11:02:03 -HTTP METHOD : GET
2019-03-22 11:02:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 11:02:03 -参数 : []
2019-03-22 11:02:03 -耗时 : 3
2019-03-22 11:02:03 -返回值 : main
2019-03-22 11:02:03 -<==    Updates: 1
2019-03-22 11:02:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 11:02:03 -HTTP METHOD : GET
2019-03-22 11:02:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 11:02:03 -参数 : []
2019-03-22 11:02:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 11:02:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 11:02:04 -请求地址 : http://localhost:8081/main
2019-03-22 11:02:04 -HTTP METHOD : GET
2019-03-22 11:02:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 11:02:04 -参数 : []
2019-03-22 11:02:04 -耗时 : 1
2019-03-22 11:02:04 -返回值 : main
2019-03-22 11:02:04 -<==      Total: 0
2019-03-22 11:02:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 11:02:04 -==> Parameters: 1(Long), 0(String)
2019-03-22 11:02:04 -<==      Total: 1
2019-03-22 11:02:04 -耗时 : 126
2019-03-22 11:02:04 -返回值 : com.bootdo.common.utils.PageUtils@1da619b5
2019-03-22 11:02:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 11:02:35 -==> Parameters: 1(Long)
2019-03-22 11:02:35 -<==      Total: 90
2019-03-22 11:02:35 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-22 11:02:35 -HTTP METHOD : GET
2019-03-22 11:02:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-22 11:02:35 -参数 : []
2019-03-22 11:02:35 -耗时 : 0
2019-03-22 11:02:35 -返回值 : /moneyLog/elecLog/elecLog
2019-03-22 11:02:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:02:36 -HTTP METHOD : GET
2019-03-22 11:02:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:02:36 -参数 : [userType]
2019-03-22 11:02:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:02:36 -==> Parameters: userType(String)
2019-03-22 11:02:36 -<==      Total: 2
2019-03-22 11:02:36 -耗时 : 5
2019-03-22 11:02:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:02:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-22 11:02:36 -HTTP METHOD : GET
2019-03-22 11:02:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-22 11:02:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-22 11:02:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-22 11:02:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 11:02:36 -<==      Total: 5
2019-03-22 11:02:36 -==>  Preparing: select count(*) from elec_log 
2019-03-22 11:02:36 -==> Parameters: 
2019-03-22 11:02:36 -<==      Total: 1
2019-03-22 11:02:36 -耗时 : 31
2019-03-22 11:02:36 -返回值 : com.bootdo.common.utils.PageUtils@6b476b04
2019-03-22 11:02:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-22 11:02:37 -HTTP METHOD : GET
2019-03-22 11:02:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-22 11:02:37 -参数 : [1, {}]
2019-03-22 11:02:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-22 11:02:37 -==> Parameters: 1(Long)
2019-03-22 11:02:37 -<==      Total: 1
2019-03-22 11:02:37 -耗时 : 15
2019-03-22 11:02:37 -返回值 : moneyLog/elecLog/edit
2019-03-22 11:02:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:02:37 -HTTP METHOD : GET
2019-03-22 11:02:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:02:37 -参数 : [userType]
2019-03-22 11:02:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:02:37 -==> Parameters: userType(String)
2019-03-22 11:02:37 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-22 11:02:37 -HTTP METHOD : GET
2019-03-22 11:02:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:02:37 -参数 : [userOrg]
2019-03-22 11:02:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:02:37 -==> Parameters: userOrg(String)
2019-03-22 11:02:37 -<==      Total: 0
2019-03-22 11:02:37 -耗时 : 5
2019-03-22 11:02:37 -返回值 : []
2019-03-22 11:02:37 -<==      Total: 2
2019-03-22 11:02:37 -耗时 : 12
2019-03-22 11:02:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:08:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-22 11:08:13 -HTTP METHOD : GET
2019-03-22 11:08:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-22 11:08:13 -参数 : []
2019-03-22 11:08:13 -耗时 : 1
2019-03-22 11:08:13 -返回值 : moneyLog/elecLog/add
2019-03-22 11:08:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:08:13 -HTTP METHOD : GET
2019-03-22 11:08:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:08:13 -参数 : [userType]
2019-03-22 11:08:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:08:13 -==> Parameters: userType(String)
2019-03-22 11:08:13 -<==      Total: 2
2019-03-22 11:08:13 -耗时 : 6
2019-03-22 11:08:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:08:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-22 11:08:17 -HTTP METHOD : GET
2019-03-22 11:08:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-22 11:08:17 -参数 : []
2019-03-22 11:08:17 -耗时 : 1
2019-03-22 11:08:17 -返回值 : /moneyLog/heatLog/heatLog
2019-03-22 11:08:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:08:17 -HTTP METHOD : GET
2019-03-22 11:08:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:08:17 -参数 : [userType]
2019-03-22 11:08:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:08:17 -==> Parameters: userType(String)
2019-03-22 11:08:17 -<==      Total: 2
2019-03-22 11:08:17 -耗时 : 4
2019-03-22 11:08:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:08:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-22 11:08:17 -HTTP METHOD : GET
2019-03-22 11:08:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-22 11:08:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-22 11:08:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-22 11:08:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 11:08:17 -<==      Total: 4
2019-03-22 11:08:17 -==>  Preparing: select count(*) from heat_log 
2019-03-22 11:08:17 -==> Parameters: 
2019-03-22 11:08:17 -<==      Total: 1
2019-03-22 11:08:17 -耗时 : 214
2019-03-22 11:08:17 -返回值 : com.bootdo.common.utils.PageUtils@3e461348
2019-03-22 11:08:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-22 11:08:18 -HTTP METHOD : GET
2019-03-22 11:08:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-22 11:08:18 -参数 : []
2019-03-22 11:08:18 -耗时 : 1
2019-03-22 11:08:18 -返回值 : moneyLog/heatLog/add
2019-03-22 11:08:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:08:18 -HTTP METHOD : GET
2019-03-22 11:08:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:08:18 -参数 : [userType]
2019-03-22 11:08:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:08:18 -==> Parameters: userType(String)
2019-03-22 11:08:18 -<==      Total: 2
2019-03-22 11:08:18 -耗时 : 8
2019-03-22 11:08:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:08:22 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-22 11:08:22 -HTTP METHOD : GET
2019-03-22 11:08:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-22 11:08:22 -参数 : [1, {}]
2019-03-22 11:08:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-22 11:08:22 -==> Parameters: 1(Long)
2019-03-22 11:08:22 -<==      Total: 1
2019-03-22 11:08:22 -耗时 : 11
2019-03-22 11:08:22 -返回值 : moneyLog/heatLog/edit
2019-03-22 11:08:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:08:22 -HTTP METHOD : GET
2019-03-22 11:08:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:08:22 -参数 : [userType]
2019-03-22 11:08:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:08:22 -==> Parameters: userType(String)
2019-03-22 11:08:22 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-22 11:08:22 -HTTP METHOD : GET
2019-03-22 11:08:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:08:22 -参数 : [userArea]
2019-03-22 11:08:22 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-22 11:08:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:08:22 -<==      Total: 2
2019-03-22 11:08:22 -HTTP METHOD : GET
2019-03-22 11:08:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:08:22 -==> Parameters: userArea(String)
2019-03-22 11:08:22 -参数 : [userOrg]
2019-03-22 11:08:22 -耗时 : 4
2019-03-22 11:08:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:08:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:08:22 -==> Parameters: userOrg(String)
2019-03-22 11:08:22 -<==      Total: 0
2019-03-22 11:08:22 -耗时 : 4
2019-03-22 11:08:22 -<==      Total: 0
2019-03-22 11:08:22 -返回值 : []
2019-03-22 11:08:22 -耗时 : 3
2019-03-22 11:08:22 -返回值 : []
2019-03-22 11:12:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 11:12:49 -==> Parameters: 1(Long)
2019-03-22 11:12:49 -<==      Total: 90
2019-03-22 11:12:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-22 11:12:49 -HTTP METHOD : GET
2019-03-22 11:12:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-22 11:12:49 -参数 : [1, {}]
2019-03-22 11:12:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-22 11:12:49 -==> Parameters: 1(Long)
2019-03-22 11:12:49 -<==      Total: 1
2019-03-22 11:12:49 -耗时 : 46
2019-03-22 11:12:49 -返回值 : moneyLog/heatLog/edit
2019-03-22 11:12:50 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-22 11:12:50 -HTTP METHOD : GET
2019-03-22 11:12:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:12:50 -HTTP METHOD : GET
2019-03-22 11:12:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:12:50 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-22 11:12:50 -参数 : [userType]
2019-03-22 11:12:50 -HTTP METHOD : GET
2019-03-22 11:12:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:12:50 -参数 : [userOrg]
2019-03-22 11:12:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:12:50 -==> Parameters: userType(String)
2019-03-22 11:12:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:12:50 -==> Parameters: userOrg(String)
2019-03-22 11:12:50 -<==      Total: 0
2019-03-22 11:12:50 -耗时 : 4
2019-03-22 11:12:50 -返回值 : []
2019-03-22 11:12:50 -<==      Total: 2
2019-03-22 11:12:50 -耗时 : 5
2019-03-22 11:12:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:12:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:12:50 -参数 : [userArea]
2019-03-22 11:12:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:12:50 -==> Parameters: userArea(String)
2019-03-22 11:12:50 -<==      Total: 0
2019-03-22 11:12:50 -耗时 : 34
2019-03-22 11:12:50 -返回值 : []
2019-03-22 11:12:53 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-22 11:12:53 -HTTP METHOD : GET
2019-03-22 11:12:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-22 11:12:53 -参数 : [1, {}]
2019-03-22 11:12:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-22 11:12:53 -==> Parameters: 1(Long)
2019-03-22 11:12:53 -<==      Total: 1
2019-03-22 11:12:53 -耗时 : 5
2019-03-22 11:12:53 -返回值 : moneyLog/heatLog/edit
2019-03-22 11:12:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:12:54 -HTTP METHOD : GET
2019-03-22 11:12:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:12:54 -参数 : [userType]
2019-03-22 11:12:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:12:54 -==> Parameters: userType(String)
2019-03-22 11:12:54 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-22 11:12:54 -HTTP METHOD : GET
2019-03-22 11:12:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:12:54 -参数 : [userOrg]
2019-03-22 11:12:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:12:54 -==> Parameters: userOrg(String)
2019-03-22 11:12:54 -<==      Total: 0
2019-03-22 11:12:54 -耗时 : 6
2019-03-22 11:12:54 -返回值 : []
2019-03-22 11:12:54 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-22 11:12:54 -HTTP METHOD : GET
2019-03-22 11:12:54 -<==      Total: 2
2019-03-22 11:12:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:12:54 -参数 : [userArea]
2019-03-22 11:12:54 -耗时 : 17
2019-03-22 11:12:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:12:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:12:54 -==> Parameters: userArea(String)
2019-03-22 11:12:54 -<==      Total: 0
2019-03-22 11:12:54 -耗时 : 11
2019-03-22 11:12:54 -返回值 : []
2019-03-22 11:13:28 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-22 11:13:28 -HTTP METHOD : GET
2019-03-22 11:13:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-22 11:13:28 -参数 : []
2019-03-22 11:13:28 -耗时 : 1
2019-03-22 11:13:28 -返回值 : /moneyLog/elecLog/elecLog
2019-03-22 11:13:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:13:28 -HTTP METHOD : GET
2019-03-22 11:13:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:13:28 -参数 : [userType]
2019-03-22 11:13:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:13:28 -==> Parameters: userType(String)
2019-03-22 11:13:28 -<==      Total: 2
2019-03-22 11:13:28 -耗时 : 44
2019-03-22 11:13:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:13:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-22 11:13:28 -HTTP METHOD : GET
2019-03-22 11:13:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-22 11:13:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-22 11:13:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-22 11:13:28 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 11:13:28 -<==      Total: 5
2019-03-22 11:13:28 -==>  Preparing: select count(*) from elec_log 
2019-03-22 11:13:28 -==> Parameters: 
2019-03-22 11:13:28 -<==      Total: 1
2019-03-22 11:13:28 -耗时 : 27
2019-03-22 11:13:28 -返回值 : com.bootdo.common.utils.PageUtils@613d4502
2019-03-22 11:13:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/2
2019-03-22 11:13:30 -HTTP METHOD : GET
2019-03-22 11:13:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-22 11:13:30 -参数 : [2, {}]
2019-03-22 11:13:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-22 11:13:30 -==> Parameters: 2(Long)
2019-03-22 11:13:30 -<==      Total: 1
2019-03-22 11:13:30 -耗时 : 4
2019-03-22 11:13:30 -返回值 : moneyLog/elecLog/edit
2019-03-22 11:13:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:13:31 -HTTP METHOD : GET
2019-03-22 11:13:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:13:31 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-22 11:13:31 -HTTP METHOD : GET
2019-03-22 11:13:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:13:31 -参数 : [userOrg]
2019-03-22 11:13:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:13:31 -==> Parameters: userOrg(String)
2019-03-22 11:13:31 -参数 : [userType]
2019-03-22 11:13:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:13:31 -==> Parameters: userType(String)
2019-03-22 11:13:31 -<==      Total: 0
2019-03-22 11:13:31 -耗时 : 34
2019-03-22 11:13:31 -返回值 : []
2019-03-22 11:13:31 -<==      Total: 2
2019-03-22 11:13:31 -耗时 : 94
2019-03-22 11:13:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:13:34 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-22 11:13:34 -HTTP METHOD : GET
2019-03-22 11:13:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-22 11:13:34 -参数 : []
2019-03-22 11:13:34 -耗时 : 0
2019-03-22 11:13:34 -返回值 : /moneyLog/waterLog/waterLog
2019-03-22 11:13:34 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-22 11:13:34 -HTTP METHOD : GET
2019-03-22 11:13:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-22 11:13:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-22 11:13:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:13:34 -HTTP METHOD : GET
2019-03-22 11:13:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:13:34 -参数 : [userType]
2019-03-22 11:13:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:13:34 -==> Parameters: userType(String)
2019-03-22 11:13:34 -<==      Total: 2
2019-03-22 11:13:34 -耗时 : 7
2019-03-22 11:13:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:13:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-22 11:13:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 11:13:34 -<==      Total: 4
2019-03-22 11:13:34 -==>  Preparing: select count(*) from water_log 
2019-03-22 11:13:34 -==> Parameters: 
2019-03-22 11:13:34 -<==      Total: 1
2019-03-22 11:13:34 -耗时 : 216
2019-03-22 11:13:34 -返回值 : com.bootdo.common.utils.PageUtils@3ff80b5b
2019-03-22 11:13:34 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-22 11:13:34 -HTTP METHOD : GET
2019-03-22 11:13:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-22 11:13:34 -参数 : []
2019-03-22 11:13:34 -耗时 : 0
2019-03-22 11:13:34 -返回值 : /moneyLog/heatLog/heatLog
2019-03-22 11:13:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 11:13:35 -HTTP METHOD : GET
2019-03-22 11:13:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 11:13:35 -参数 : [userType]
2019-03-22 11:13:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 11:13:35 -==> Parameters: userType(String)
2019-03-22 11:13:35 -<==      Total: 2
2019-03-22 11:13:35 -耗时 : 30
2019-03-22 11:13:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 11:13:35 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-22 11:13:35 -HTTP METHOD : GET
2019-03-22 11:13:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-22 11:13:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-22 11:13:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-22 11:13:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 11:13:35 -<==      Total: 4
2019-03-22 11:13:35 -==>  Preparing: select count(*) from heat_log 
2019-03-22 11:13:35 -==> Parameters: 
2019-03-22 11:13:35 -<==      Total: 1
2019-03-22 11:13:35 -耗时 : 24
2019-03-22 11:13:35 -返回值 : com.bootdo.common.utils.PageUtils@1aa1a1ea
2019-03-22 11:22:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 789]
2019-03-22 11:27:30 -Validating all active sessions...
2019-03-22 11:27:30 -Finished session validation.  No sessions were stopped.
2019-03-22 11:52:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1222]
2019-03-22 12:22:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1655]
2019-03-22 12:27:30 -Validating all active sessions...
2019-03-22 12:27:30 -Finished session validation.  [1] sessions were stopped.
2019-03-22 12:52:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2088]
2019-03-22 13:22:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2521]
2019-03-22 13:27:30 -Validating all active sessions...
2019-03-22 13:27:30 -Finished session validation.  No sessions were stopped.
2019-03-22 13:32:01 -请求地址 : http://localhost:8081/login;JSESSIONID=2d96b7d4-a2e3-45b8-9291-6e947ac78e13
2019-03-22 13:32:01 -HTTP METHOD : GET
2019-03-22 13:32:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 13:32:01 -参数 : [{}]
2019-03-22 13:32:01 -耗时 : 18
2019-03-22 13:32:01 -返回值 : login
2019-03-22 13:32:03 -请求地址 : http://localhost:8081/login;JSESSIONID=2d96b7d4-a2e3-45b8-9291-6e947ac78e13
2019-03-22 13:32:03 -HTTP METHOD : GET
2019-03-22 13:32:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 13:32:03 -参数 : [{}]
2019-03-22 13:32:03 -耗时 : 45
2019-03-22 13:32:03 -返回值 : login
2019-03-22 13:32:06 -请求地址 : http://localhost:8081/getVerify
2019-03-22 13:32:06 -HTTP METHOD : GET
2019-03-22 13:32:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-22 13:32:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@12158a3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@462fa573]
2019-03-22 13:32:09 -7091
2019-03-22 13:32:10 -耗时 : 3759
2019-03-22 13:32:10 -返回值 : null
2019-03-22 13:32:17 -请求地址 : http://localhost:8081/login
2019-03-22 13:32:17 -HTTP METHOD : POST
2019-03-22 13:32:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-22 13:32:17 -参数 : [admin, 111111, 7091, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5590b16]
2019-03-22 13:32:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-22 13:32:17 -==> Parameters: admin(String)
2019-03-22 13:32:18 -<==      Total: 1
2019-03-22 13:32:18 -耗时 : 887
2019-03-22 13:32:18 -返回值 : {msg=操作成功, code=0}
2019-03-22 13:32:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 13:32:18 -==> Parameters: 1(Long), admin(String), 登录(String), 888(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-22 13:32:18.254(Timestamp)
2019-03-22 13:32:18 -请求地址 : http://localhost:8081/index
2019-03-22 13:32:18 -HTTP METHOD : GET
2019-03-22 13:32:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 13:32:18 -参数 : [{}]
2019-03-22 13:32:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 13:32:19 -==> Parameters: 1(Long)
2019-03-22 13:32:19 -<==      Total: 46
2019-03-22 13:32:19 -<==    Updates: 1
2019-03-22 13:32:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 13:32:19 -==> Parameters: 138(Long)
2019-03-22 13:32:19 -<==      Total: 1
2019-03-22 13:32:19 -耗时 : 901
2019-03-22 13:32:19 -返回值 : index_v1
2019-03-22 13:32:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 13:32:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 901(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 13:32:19.833(Timestamp)
2019-03-22 13:32:20 -<==    Updates: 1
2019-03-22 13:32:21 -请求地址 : http://localhost:8081/main
2019-03-22 13:32:21 -HTTP METHOD : GET
2019-03-22 13:32:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 13:32:21 -参数 : []
2019-03-22 13:32:21 -耗时 : 2
2019-03-22 13:32:21 -返回值 : main
2019-03-22 13:32:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 13:32:23 -请求地址 : http://localhost:8081/main
2019-03-22 13:32:24 -HTTP METHOD : GET
2019-03-22 13:32:24 -HTTP METHOD : GET
2019-03-22 13:32:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 13:32:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 13:32:24 -参数 : []
2019-03-22 13:32:24 -参数 : []
2019-03-22 13:32:24 -耗时 : 225
2019-03-22 13:32:24 -返回值 : main
2019-03-22 13:32:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 13:32:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 13:32:24 -<==      Total: 0
2019-03-22 13:32:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 13:32:24 -==> Parameters: 1(Long), 0(String)
2019-03-22 13:32:24 -<==      Total: 1
2019-03-22 13:32:24 -耗时 : 366
2019-03-22 13:32:24 -返回值 : com.bootdo.common.utils.PageUtils@4e5a1006
2019-03-22 13:32:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 13:32:31 -==> Parameters: 1(Long)
2019-03-22 13:32:31 -<==      Total: 90
2019-03-22 13:32:31 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-22 13:32:31 -HTTP METHOD : GET
2019-03-22 13:32:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-22 13:32:31 -参数 : []
2019-03-22 13:32:31 -耗时 : 0
2019-03-22 13:32:31 -返回值 : /moneyLog/elecLog/elecLog
2019-03-22 13:32:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 13:32:36 -HTTP METHOD : GET
2019-03-22 13:32:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 13:32:36 -参数 : [userType]
2019-03-22 13:32:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 13:32:36 -==> Parameters: userType(String)
2019-03-22 13:32:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-22 13:32:36 -HTTP METHOD : GET
2019-03-22 13:32:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-22 13:32:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-22 13:32:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-22 13:32:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 13:32:36 -<==      Total: 2
2019-03-22 13:32:36 -耗时 : 182
2019-03-22 13:32:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 13:32:36 -<==      Total: 5
2019-03-22 13:32:36 -==>  Preparing: select count(*) from elec_log 
2019-03-22 13:32:36 -==> Parameters: 
2019-03-22 13:32:36 -<==      Total: 1
2019-03-22 13:32:36 -耗时 : 306
2019-03-22 13:32:36 -返回值 : com.bootdo.common.utils.PageUtils@1a3b08c5
2019-03-22 13:32:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-22 13:32:37 -HTTP METHOD : GET
2019-03-22 13:32:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-22 13:32:37 -参数 : [1, {}]
2019-03-22 13:32:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-22 13:32:37 -==> Parameters: 1(Long)
2019-03-22 13:32:37 -<==      Total: 1
2019-03-22 13:32:37 -耗时 : 4
2019-03-22 13:32:37 -返回值 : moneyLog/elecLog/edit
2019-03-22 13:32:39 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-22 13:32:39 -HTTP METHOD : GET
2019-03-22 13:32:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 13:32:39 -参数 : [userOrg]
2019-03-22 13:32:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 13:32:39 -==> Parameters: userOrg(String)
2019-03-22 13:32:39 -<==      Total: 0
2019-03-22 13:32:39 -耗时 : 36
2019-03-22 13:32:39 -返回值 : []
2019-03-22 13:32:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 13:32:39 -HTTP METHOD : GET
2019-03-22 13:32:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 13:32:39 -参数 : [userType]
2019-03-22 13:32:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 13:32:39 -==> Parameters: userType(String)
2019-03-22 13:32:39 -<==      Total: 2
2019-03-22 13:32:39 -耗时 : 130
2019-03-22 13:32:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 13:52:25 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2952]
2019-03-22 14:13:35 -Starting BootdoApplication on ZJZL-20180906VX with PID 14836 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-22 14:13:35 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-22 14:13:35 -The following profiles are active: dev
2019-03-22 14:13:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@25b2cfcb: startup date [Fri Mar 22 14:13:35 CST 2019]; root of context hierarchy
2019-03-22 14:13:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-22 14:13:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2957df5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:13:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1bb10e01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:13:57 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:13:58 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:13:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:13:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-22 14:13:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-22 14:13:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:13:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:13:58 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:13:58 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:14:00 -Tomcat initialized with port(s): 8081 (http)
2019-03-22 14:14:00 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-22 14:14:00 -Starting service [Tomcat]
2019-03-22 14:14:00 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-22 14:14:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-22 14:14:02 -Initializing Spring embedded WebApplicationContext
2019-03-22 14:14:02 -Root WebApplicationContext: initialization completed in 26735 ms
2019-03-22 14:14:06 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-22 14:14:06 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-22 14:14:06 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-22 14:14:06 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-22 14:14:06 -Filter xssFilter was not registered (disabled)
2019-03-22 14:14:06 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-22 14:14:06 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-22 14:14:06 -Servlet statViewServlet mapped to [/druid/*]
2019-03-22 14:14:06 -Servlet dispatcherServlet mapped to [/]
2019-03-22 14:14:12 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@25b2cfcb: startup date [Fri Mar 22 14:13:35 CST 2019]; root of context hierarchy
2019-03-22 14:14:12 -Using default implementation for ThreadExecutor
2019-03-22 14:14:12 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-22 14:14:12 -Quartz Scheduler v.2.2.1 created.
2019-03-22 14:14:12 -RAMJobStore initialized.
2019-03-22 14:14:12 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-22 14:14:12 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-22 14:14:12 -Quartz scheduler version: 2.2.1
2019-03-22 14:14:12 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@520ee6b3
2019-03-22 14:14:13 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-22 14:14:13 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-22 14:14:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-22 14:14:17 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:14:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-22 14:14:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-22 14:14:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-22 14:14:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-22 14:14:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-22 14:14:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-22 14:14:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-22 14:14:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-22 14:14:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-22 14:14:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-22 14:14:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-22 14:14:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-22 14:14:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-22 14:14:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-22 14:14:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-22 14:14:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-22 14:14:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-22 14:14:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-22 14:14:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 14:14:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 14:14:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-22 14:14:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-22 14:14:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-22 14:14:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-22 14:14:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-22 14:14:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-22 14:14:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-22 14:14:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-22 14:14:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-22 14:14:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 14:14:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 14:14:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-22 14:14:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-22 14:14:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-22 14:14:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-22 14:14:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-22 14:14:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:14:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-22 14:14:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:14:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-22 14:14:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-22 14:14:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-22 14:14:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-22 14:14:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-22 14:14:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-22 14:14:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 14:14:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-22 14:14:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-22 14:14:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-22 14:14:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-22 14:14:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-22 14:14:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-22 14:14:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:14:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-22 14:14:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:14:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-22 14:14:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 14:14:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 14:14:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-22 14:14:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-22 14:14:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-22 14:14:17 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-22 14:14:17 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-22 14:14:17 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-22 14:14:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-22 14:14:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-22 14:14:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-22 14:14:17 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-22 14:14:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 14:14:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-22 14:14:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-22 14:14:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-22 14:14:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-22 14:14:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-22 14:14:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-22 14:14:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-22 14:14:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-22 14:14:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-22 14:14:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-22 14:14:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-22 14:14:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 14:14:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-22 14:14:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-22 14:14:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-22 14:14:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-22 14:14:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-22 14:14:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-22 14:14:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-22 14:14:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-22 14:14:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 14:14:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 14:14:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-22 14:14:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-22 14:14:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-22 14:14:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-22 14:14:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-22 14:14:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-22 14:14:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-22 14:14:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-22 14:14:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-22 14:14:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-22 14:14:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-22 14:14:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-22 14:14:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-22 14:14:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-22 14:14:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-22 14:14:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 14:14:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 14:14:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-22 14:14:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 14:14:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-22 14:14:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-22 14:14:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-22 14:14:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-22 14:14:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-22 14:14:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-22 14:14:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-22 14:14:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-22 14:14:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-22 14:14:17 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:14:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-22 14:14:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:14:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-22 14:14:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-22 14:14:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-22 14:14:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 14:14:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 14:14:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-22 14:14:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:14:18 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:14:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-22 14:14:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 14:14:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-22 14:14:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-22 14:14:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-22 14:14:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-22 14:14:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-22 14:14:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-22 14:14:19 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 14:14:20 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@25b2cfcb: startup date [Fri Mar 22 14:13:35 CST 2019]; root of context hierarchy
2019-03-22 14:14:20 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 14:14:20 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 14:14:20 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 14:14:20 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-22 14:14:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-22 14:14:25 -Registering beans for JMX exposure on startup
2019-03-22 14:14:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-22 14:14:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-22 14:14:26 -Starting beans in phase 2147483647
2019-03-22 14:14:26 -Context refreshed
2019-03-22 14:14:26 -Found 1 custom documentation plugin(s)
2019-03-22 14:14:26 -Scanning for api listing references
2019-03-22 14:14:27 -Generating unique operation named: removeUsingPOST_1
2019-03-22 14:14:27 -Generating unique operation named: addUsingGET_1
2019-03-22 14:14:27 -Generating unique operation named: editUsingGET_1
2019-03-22 14:14:27 -Generating unique operation named: listUsingGET_1
2019-03-22 14:14:27 -Generating unique operation named: removeUsingPOST_2
2019-03-22 14:14:27 -Generating unique operation named: removeUsingPOST_3
2019-03-22 14:14:27 -Generating unique operation named: saveUsingPOST_1
2019-03-22 14:14:27 -Generating unique operation named: updateUsingGET_1
2019-03-22 14:14:27 -Generating unique operation named: updateUsingHEAD_1
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPOST_1
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPUT_1
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPATCH_1
2019-03-22 14:14:27 -Generating unique operation named: updateUsingDELETE_1
2019-03-22 14:14:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-22 14:14:27 -Generating unique operation named: updateUsingTRACE_1
2019-03-22 14:14:27 -Generating unique operation named: addUsingGET_2
2019-03-22 14:14:27 -Generating unique operation named: editUsingGET_2
2019-03-22 14:14:27 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-22 14:14:27 -Generating unique operation named: listUsingGET_2
2019-03-22 14:14:27 -Generating unique operation named: removeUsingPOST_4
2019-03-22 14:14:27 -Generating unique operation named: removeUsingPOST_5
2019-03-22 14:14:27 -Generating unique operation named: saveUsingPOST_2
2019-03-22 14:14:27 -Generating unique operation named: updateUsingGET_2
2019-03-22 14:14:27 -Generating unique operation named: updateUsingHEAD_2
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPOST_2
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPUT_2
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPATCH_2
2019-03-22 14:14:27 -Generating unique operation named: updateUsingDELETE_2
2019-03-22 14:14:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-22 14:14:27 -Generating unique operation named: updateUsingTRACE_2
2019-03-22 14:14:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-22 14:14:27 -Generating unique operation named: addUsingGET_3
2019-03-22 14:14:27 -Generating unique operation named: editUsingGET_3
2019-03-22 14:14:27 -Generating unique operation named: listUsingGET_3
2019-03-22 14:14:27 -Generating unique operation named: removeUsingPOST_6
2019-03-22 14:14:27 -Generating unique operation named: removeUsingPOST_7
2019-03-22 14:14:27 -Generating unique operation named: saveUsingPOST_3
2019-03-22 14:14:27 -Generating unique operation named: updateUsingGET_3
2019-03-22 14:14:27 -Generating unique operation named: updateUsingHEAD_3
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPOST_3
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPUT_3
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPATCH_3
2019-03-22 14:14:27 -Generating unique operation named: updateUsingDELETE_3
2019-03-22 14:14:27 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-22 14:14:27 -Generating unique operation named: updateUsingTRACE_3
2019-03-22 14:14:27 -Generating unique operation named: addUsingGET_4
2019-03-22 14:14:27 -Generating unique operation named: editUsingGET_4
2019-03-22 14:14:27 -Generating unique operation named: listUsingGET_4
2019-03-22 14:14:27 -Generating unique operation named: removeUsingPOST_8
2019-03-22 14:14:27 -Generating unique operation named: removeUsingPOST_9
2019-03-22 14:14:27 -Generating unique operation named: saveUsingPOST_4
2019-03-22 14:14:27 -Generating unique operation named: updateUsingGET_4
2019-03-22 14:14:27 -Generating unique operation named: updateUsingHEAD_4
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPOST_4
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPUT_4
2019-03-22 14:14:27 -Generating unique operation named: updateUsingPATCH_4
2019-03-22 14:14:27 -Generating unique operation named: updateUsingDELETE_4
2019-03-22 14:14:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-22 14:14:27 -Generating unique operation named: updateUsingTRACE_4
2019-03-22 14:14:28 -Generating unique operation named: ElecUsingGET_1
2019-03-22 14:14:28 -Generating unique operation named: addUsingGET_5
2019-03-22 14:14:28 -Generating unique operation named: editUsingGET_5
2019-03-22 14:14:28 -Generating unique operation named: listUsingGET_5
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_10
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_11
2019-03-22 14:14:28 -Generating unique operation named: saveUsingPOST_5
2019-03-22 14:14:28 -Generating unique operation named: updateUsingGET_5
2019-03-22 14:14:28 -Generating unique operation named: updateUsingHEAD_5
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPOST_5
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPUT_5
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPATCH_5
2019-03-22 14:14:28 -Generating unique operation named: updateUsingDELETE_5
2019-03-22 14:14:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-22 14:14:28 -Generating unique operation named: updateUsingTRACE_5
2019-03-22 14:14:28 -Generating unique operation named: editUsingGET_6
2019-03-22 14:14:28 -Generating unique operation named: listUsingGET_6
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPOST_6
2019-03-22 14:14:28 -Generating unique operation named: addUsingGET_6
2019-03-22 14:14:28 -Generating unique operation named: editUsingGET_7
2019-03-22 14:14:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-22 14:14:28 -Generating unique operation named: listUsingGET_7
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_12
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_13
2019-03-22 14:14:28 -Generating unique operation named: saveUsingPOST_6
2019-03-22 14:14:28 -Generating unique operation named: updateUsingGET_6
2019-03-22 14:14:28 -Generating unique operation named: updateUsingHEAD_6
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPOST_7
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPUT_6
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPATCH_6
2019-03-22 14:14:28 -Generating unique operation named: updateUsingDELETE_6
2019-03-22 14:14:28 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-22 14:14:28 -Generating unique operation named: updateUsingTRACE_6
2019-03-22 14:14:28 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-22 14:14:28 -Generating unique operation named: addUsingGET_7
2019-03-22 14:14:28 -Generating unique operation named: editUsingGET_8
2019-03-22 14:14:28 -Generating unique operation named: listUsingGET_8
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_14
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_15
2019-03-22 14:14:28 -Generating unique operation named: saveUsingPOST_7
2019-03-22 14:14:28 -Generating unique operation named: updateUsingGET_7
2019-03-22 14:14:28 -Generating unique operation named: updateUsingHEAD_7
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPOST_8
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPUT_7
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPATCH_7
2019-03-22 14:14:28 -Generating unique operation named: updateUsingDELETE_7
2019-03-22 14:14:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-22 14:14:28 -Generating unique operation named: updateUsingTRACE_7
2019-03-22 14:14:28 -Generating unique operation named: addUsingGET_8
2019-03-22 14:14:28 -Generating unique operation named: editUsingGET_9
2019-03-22 14:14:28 -Generating unique operation named: listUsingGET_9
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_16
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_17
2019-03-22 14:14:28 -Generating unique operation named: saveUsingPOST_8
2019-03-22 14:14:28 -Generating unique operation named: updateUsingGET_8
2019-03-22 14:14:28 -Generating unique operation named: updateUsingHEAD_8
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPOST_9
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPUT_8
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPATCH_8
2019-03-22 14:14:28 -Generating unique operation named: updateUsingDELETE_8
2019-03-22 14:14:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-22 14:14:28 -Generating unique operation named: updateUsingTRACE_8
2019-03-22 14:14:28 -Generating unique operation named: addUsingGET_9
2019-03-22 14:14:28 -Generating unique operation named: editUsingGET_10
2019-03-22 14:14:28 -Generating unique operation named: infoUsingGET_1
2019-03-22 14:14:28 -Generating unique operation named: infoUsingHEAD_1
2019-03-22 14:14:28 -Generating unique operation named: infoUsingPOST_1
2019-03-22 14:14:28 -Generating unique operation named: infoUsingPUT_1
2019-03-22 14:14:28 -Generating unique operation named: infoUsingPATCH_1
2019-03-22 14:14:28 -Generating unique operation named: infoUsingDELETE_1
2019-03-22 14:14:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-22 14:14:28 -Generating unique operation named: infoUsingTRACE_1
2019-03-22 14:14:28 -Generating unique operation named: listUsingGET_10
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_18
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_19
2019-03-22 14:14:28 -Generating unique operation named: saveUsingPOST_9
2019-03-22 14:14:28 -Generating unique operation named: updateUsingPOST_10
2019-03-22 14:14:28 -Generating unique operation named: listUsingGET_11
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_20
2019-03-22 14:14:28 -Generating unique operation named: welcomeUsingGET_1
2019-03-22 14:14:28 -Generating unique operation named: addUsingGET_10
2019-03-22 14:14:28 -Generating unique operation named: editUsingGET_11
2019-03-22 14:14:28 -Generating unique operation named: listUsingGET_12
2019-03-22 14:14:28 -Generating unique operation named: removeUsingPOST_21
2019-03-22 14:14:29 -Generating unique operation named: saveUsingPOST_10
2019-03-22 14:14:29 -Generating unique operation named: treeUsingGET_1
2019-03-22 14:14:29 -Generating unique operation named: treeUsingGET_2
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPOST_11
2019-03-22 14:14:29 -Generating unique operation named: addUsingGET_11
2019-03-22 14:14:29 -Generating unique operation named: editUsingGET_12
2019-03-22 14:14:29 -Generating unique operation named: listUsingGET_13
2019-03-22 14:14:29 -Generating unique operation named: removeUsingPOST_22
2019-03-22 14:14:29 -Generating unique operation named: removeUsingPOST_23
2019-03-22 14:14:29 -Generating unique operation named: saveUsingPOST_11
2019-03-22 14:14:29 -Generating unique operation named: updateUsingGET_9
2019-03-22 14:14:29 -Generating unique operation named: updateUsingHEAD_9
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPOST_12
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPUT_9
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPATCH_9
2019-03-22 14:14:29 -Generating unique operation named: updateUsingDELETE_9
2019-03-22 14:14:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-22 14:14:29 -Generating unique operation named: updateUsingTRACE_9
2019-03-22 14:14:29 -Generating unique operation named: addUsingGET_12
2019-03-22 14:14:29 -Generating unique operation named: editUsingGET_13
2019-03-22 14:14:29 -Generating unique operation named: listUsingGET_14
2019-03-22 14:14:29 -Generating unique operation named: removeUsingPOST_24
2019-03-22 14:14:29 -Generating unique operation named: removeUsingPOST_25
2019-03-22 14:14:29 -Generating unique operation named: saveUsingPOST_12
2019-03-22 14:14:29 -Generating unique operation named: updateUsingGET_10
2019-03-22 14:14:29 -Generating unique operation named: updateUsingHEAD_10
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPOST_13
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPUT_10
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPATCH_10
2019-03-22 14:14:29 -Generating unique operation named: updateUsingDELETE_10
2019-03-22 14:14:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-22 14:14:29 -Generating unique operation named: updateUsingTRACE_10
2019-03-22 14:14:29 -Generating unique operation named: addUsingGET_13
2019-03-22 14:14:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-22 14:14:29 -Generating unique operation named: editUsingGET_14
2019-03-22 14:14:29 -Generating unique operation named: listUsingGET_15
2019-03-22 14:14:29 -Generating unique operation named: saveUsingPOST_13
2019-03-22 14:14:29 -Generating unique operation named: saveUsingPOST_14
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPOST_14
2019-03-22 14:14:29 -Generating unique operation named: listUsingGET_16
2019-03-22 14:14:29 -Generating unique operation named: listUsingHEAD_1
2019-03-22 14:14:29 -Generating unique operation named: listUsingPOST_1
2019-03-22 14:14:29 -Generating unique operation named: listUsingPUT_1
2019-03-22 14:14:29 -Generating unique operation named: listUsingPATCH_1
2019-03-22 14:14:29 -Generating unique operation named: listUsingDELETE_1
2019-03-22 14:14:29 -Generating unique operation named: listUsingOPTIONS_1
2019-03-22 14:14:29 -Generating unique operation named: listUsingTRACE_1
2019-03-22 14:14:29 -Generating unique operation named: addUsingGET_14
2019-03-22 14:14:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-22 14:14:29 -Generating unique operation named: editUsingGET_15
2019-03-22 14:14:29 -Generating unique operation named: listUsingGET_17
2019-03-22 14:14:29 -Generating unique operation named: removeUsingPOST_26
2019-03-22 14:14:29 -Generating unique operation named: saveUsingPOST_15
2019-03-22 14:14:29 -Generating unique operation named: treeUsingGET_3
2019-03-22 14:14:29 -Generating unique operation named: treeViewUsingGET_1
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPOST_15
2019-03-22 14:14:29 -Generating unique operation named: addUsingGET_15
2019-03-22 14:14:29 -Generating unique operation named: editUsingGET_16
2019-03-22 14:14:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-22 14:14:29 -Generating unique operation named: listUsingGET_18
2019-03-22 14:14:29 -Generating unique operation named: removeUsingPOST_27
2019-03-22 14:14:29 -Generating unique operation named: removeUsingPOST_28
2019-03-22 14:14:29 -Generating unique operation named: saveUsingPOST_16
2019-03-22 14:14:29 -Generating unique operation named: updateUsingGET_11
2019-03-22 14:14:29 -Generating unique operation named: updateUsingHEAD_11
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPOST_16
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPUT_11
2019-03-22 14:14:29 -Generating unique operation named: updateUsingPATCH_11
2019-03-22 14:14:30 -Generating unique operation named: updateUsingDELETE_11
2019-03-22 14:14:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-22 14:14:30 -Generating unique operation named: updateUsingTRACE_11
2019-03-22 14:14:30 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-22 14:14:30 -Generating unique operation named: addUsingGET_16
2019-03-22 14:14:30 -Generating unique operation named: editUsingGET_17
2019-03-22 14:14:30 -Generating unique operation named: listUsingGET_19
2019-03-22 14:14:30 -Generating unique operation named: removeUsingPOST_29
2019-03-22 14:14:30 -Generating unique operation named: removeUsingPOST_30
2019-03-22 14:14:30 -Generating unique operation named: saveUsingPOST_17
2019-03-22 14:14:30 -Generating unique operation named: updateUsingGET_12
2019-03-22 14:14:30 -Generating unique operation named: updateUsingHEAD_12
2019-03-22 14:14:30 -Generating unique operation named: updateUsingPOST_17
2019-03-22 14:14:30 -Generating unique operation named: updateUsingPUT_12
2019-03-22 14:14:30 -Generating unique operation named: updateUsingPATCH_12
2019-03-22 14:14:30 -Generating unique operation named: updateUsingDELETE_12
2019-03-22 14:14:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-22 14:14:30 -Generating unique operation named: updateUsingTRACE_12
2019-03-22 14:14:30 -Generating unique operation named: addUsingGET_17
2019-03-22 14:14:30 -Generating unique operation named: editUsingGET_18
2019-03-22 14:14:30 -Generating unique operation named: listUsingGET_20
2019-03-22 14:14:30 -Generating unique operation named: removeUsingPOST_31
2019-03-22 14:14:30 -Generating unique operation named: removeUsingPOST_32
2019-03-22 14:14:30 -Generating unique operation named: saveUsingPOST_18
2019-03-22 14:14:30 -Generating unique operation named: updateUsingGET_13
2019-03-22 14:14:30 -Generating unique operation named: updateUsingHEAD_13
2019-03-22 14:14:30 -Generating unique operation named: updateUsingPOST_18
2019-03-22 14:14:30 -Generating unique operation named: updateUsingPUT_13
2019-03-22 14:14:30 -Generating unique operation named: updateUsingPATCH_13
2019-03-22 14:14:30 -Generating unique operation named: updateUsingDELETE_13
2019-03-22 14:14:30 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-22 14:14:30 -Generating unique operation named: updateUsingTRACE_13
2019-03-22 14:14:30 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-22 14:14:30 -Starting Quartz Scheduler now
2019-03-22 14:14:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-22 14:14:30 -Starting...
2019-03-22 14:14:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 14:14:30 -Started.
2019-03-22 14:14:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-22 14:14:30 -Using a shared selector for servlet write/read
2019-03-22 14:14:30 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-22 14:14:30 -Started BootdoApplication in 57.67 seconds (JVM running for 60.019)
2019-03-22 14:14:31 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-22 14:14:31 -==> Parameters: 
2019-03-22 14:14:32 -<==      Total: 1
2019-03-22 14:14:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-22 14:14:51 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-22 14:14:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2019-03-22 14:14:51 -Enabling session validation scheduler...
2019-03-22 14:14:51 -请求地址 : http://localhost:8081/login;JSESSIONID=277d5a0b-bb74-41a2-a4e2-58cae60afd8a
2019-03-22 14:14:51 -HTTP METHOD : GET
2019-03-22 14:14:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 14:14:51 -参数 : [{}]
2019-03-22 14:14:51 -耗时 : 5
2019-03-22 14:14:51 -返回值 : login
2019-03-22 14:14:57 -请求地址 : http://localhost:8081/getVerify
2019-03-22 14:14:57 -HTTP METHOD : GET
2019-03-22 14:14:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-22 14:14:57 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6de6c23a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@679b574d]
2019-03-22 14:15:09 -5042
2019-03-22 14:15:09 -耗时 : 12265
2019-03-22 14:15:09 -返回值 : null
2019-03-22 14:15:11 -请求地址 : http://localhost:8081/login
2019-03-22 14:15:11 -HTTP METHOD : GET
2019-03-22 14:15:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 14:15:11 -参数 : [{}]
2019-03-22 14:15:11 -耗时 : 1
2019-03-22 14:15:11 -返回值 : login
2019-03-22 14:15:18 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-22 14:15:19 -请求地址 : http://localhost:8081/login
2019-03-22 14:15:19 -HTTP METHOD : POST
2019-03-22 14:15:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-22 14:15:19 -参数 : [admin, 111111, 5042, org.apache.shiro.web.servlet.ShiroHttpServletRequest@9010b4e]
2019-03-22 14:15:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-22 14:15:20 -==> Parameters: admin(String)
2019-03-22 14:15:20 -<==      Total: 1
2019-03-22 14:15:20 -耗时 : 1664
2019-03-22 14:15:20 -返回值 : {msg=操作成功, code=0}
2019-03-22 14:15:20 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-22 14:15:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:15:21 -==> Parameters: 1(Long), admin(String), 登录(String), 1665(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-22 14:15:20.985(Timestamp)
2019-03-22 14:15:21 -<==    Updates: 1
2019-03-22 14:15:21 -请求地址 : http://localhost:8081/index
2019-03-22 14:15:21 -HTTP METHOD : GET
2019-03-22 14:15:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 14:15:21 -参数 : [{}]
2019-03-22 14:15:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 14:15:22 -==> Parameters: 1(Long)
2019-03-22 14:15:22 -<==      Total: 46
2019-03-22 14:15:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 14:15:22 -==> Parameters: 138(Long)
2019-03-22 14:15:22 -<==      Total: 1
2019-03-22 14:15:22 -耗时 : 1078
2019-03-22 14:15:22 -返回值 : index_v1
2019-03-22 14:15:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:15:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1079(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 14:15:22.948(Timestamp)
2019-03-22 14:15:23 -<==    Updates: 1
2019-03-22 14:15:24 -请求地址 : http://localhost:8081/main
2019-03-22 14:15:24 -HTTP METHOD : GET
2019-03-22 14:15:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:15:24 -参数 : []
2019-03-22 14:15:24 -耗时 : 2
2019-03-22 14:15:24 -返回值 : main
2019-03-22 14:15:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 14:15:25 -HTTP METHOD : GET
2019-03-22 14:15:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 14:15:25 -参数 : []
2019-03-22 14:15:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 14:15:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 14:15:25 -<==      Total: 0
2019-03-22 14:15:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 14:15:26 -==> Parameters: 1(Long), 0(String)
2019-03-22 14:15:26 -<==      Total: 1
2019-03-22 14:15:26 -耗时 : 349
2019-03-22 14:15:26 -返回值 : com.bootdo.common.utils.PageUtils@3ae972e9
2019-03-22 14:15:27 -请求地址 : http://localhost:8081/main
2019-03-22 14:15:27 -HTTP METHOD : GET
2019-03-22 14:15:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:15:27 -参数 : []
2019-03-22 14:15:27 -耗时 : 1
2019-03-22 14:15:27 -返回值 : main
2019-03-22 14:16:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 14:16:40 -==> Parameters: 1(Long)
2019-03-22 14:16:40 -<==      Total: 90
2019-03-22 14:16:40 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-22 14:16:40 -HTTP METHOD : GET
2019-03-22 14:16:40 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-22 14:16:40 -参数 : []
2019-03-22 14:16:40 -耗时 : 0
2019-03-22 14:16:40 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-22 14:16:49 -请求地址 : http://localhost:8081/file/downImport/heatUser
2019-03-22 14:16:49 -HTTP METHOD : GET
2019-03-22 14:16:49 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-22 14:16:49 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@2258fe0d, heatUser]
2019-03-22 14:16:50 -耗时 : 265
2019-03-22 14:16:50 -返回值 : null
2019-03-22 14:18:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 14:18:54 -HTTP METHOD : GET
2019-03-22 14:18:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 14:18:54 -参数 : []
2019-03-22 14:18:54 -耗时 : 1
2019-03-22 14:18:54 -返回值 : system/dept/deptTree
2019-03-22 14:18:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 14:18:54 -HTTP METHOD : GET
2019-03-22 14:18:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 14:18:54 -参数 : []
2019-03-22 14:18:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 14:18:54 -==> Parameters: 
2019-03-22 14:18:54 -<==      Total: 3
2019-03-22 14:18:54 -耗时 : 152
2019-03-22 14:18:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 14:19:01 -请求地址 : http://localhost:8081/index
2019-03-22 14:19:01 -HTTP METHOD : GET
2019-03-22 14:19:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 14:19:01 -参数 : [{}]
2019-03-22 14:19:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 14:19:01 -==> Parameters: 1(Long)
2019-03-22 14:19:01 -<==      Total: 46
2019-03-22 14:19:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 14:19:01 -==> Parameters: 138(Long)
2019-03-22 14:19:01 -<==      Total: 1
2019-03-22 14:19:01 -耗时 : 39
2019-03-22 14:19:01 -返回值 : index_v1
2019-03-22 14:19:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:19:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 14:19:01.436(Timestamp)
2019-03-22 14:19:01 -请求地址 : http://localhost:8081/main
2019-03-22 14:19:01 -HTTP METHOD : GET
2019-03-22 14:19:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:19:01 -参数 : []
2019-03-22 14:19:01 -耗时 : 0
2019-03-22 14:19:01 -返回值 : main
2019-03-22 14:19:01 -<==    Updates: 1
2019-03-22 14:19:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 14:19:01 -HTTP METHOD : GET
2019-03-22 14:19:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 14:19:01 -参数 : []
2019-03-22 14:19:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 14:19:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 14:19:01 -<==      Total: 0
2019-03-22 14:19:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 14:19:01 -==> Parameters: 1(Long), 0(String)
2019-03-22 14:19:01 -<==      Total: 1
2019-03-22 14:19:01 -耗时 : 25
2019-03-22 14:19:01 -返回值 : com.bootdo.common.utils.PageUtils@18511550
2019-03-22 14:19:01 -请求地址 : http://localhost:8081/main
2019-03-22 14:19:01 -HTTP METHOD : GET
2019-03-22 14:19:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:19:01 -参数 : []
2019-03-22 14:19:01 -耗时 : 1
2019-03-22 14:19:01 -返回值 : main
2019-03-22 14:19:05 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-22 14:19:05 -HTTP METHOD : GET
2019-03-22 14:19:05 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-22 14:19:05 -参数 : []
2019-03-22 14:19:05 -耗时 : 1
2019-03-22 14:19:05 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-22 14:19:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 14:19:18 -HTTP METHOD : GET
2019-03-22 14:19:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 14:19:18 -参数 : []
2019-03-22 14:19:18 -耗时 : 0
2019-03-22 14:19:18 -返回值 : system/dept/deptTree
2019-03-22 14:19:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 14:19:18 -HTTP METHOD : GET
2019-03-22 14:19:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 14:19:18 -参数 : []
2019-03-22 14:19:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 14:19:18 -==> Parameters: 
2019-03-22 14:19:18 -<==      Total: 3
2019-03-22 14:19:18 -耗时 : 32
2019-03-22 14:19:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 14:19:24 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-03-22 14:19:24 -HTTP METHOD : POST
2019-03-22 14:19:24 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-03-22 14:19:24 -参数 : [com.bootdo.heat.domain.HeatDO@55d605c6]
2019-03-22 14:19:24 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:19:24 -==> Parameters: 2019-03(String), 2(String)
2019-03-22 14:19:24 -<==      Total: 1
2019-03-22 14:19:24 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:19:24 -==> Parameters: 2019-04(String), 2(String)
2019-03-22 14:19:24 -<==      Total: 0
2019-03-22 14:19:24 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:19:24 -==> Parameters: 2019-04(String), 2(String)
2019-03-22 14:19:24 -<==      Total: 0
2019-03-22 14:19:24 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:19:24 -==> Parameters: 1-002(String), 新东方(String), A(String), 2(String), null, 1(String), 10002(String), 1(String), 1.00(BigDecimal), 100.00(BigDecimal), 100.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-03-12 16:13:29.0(Timestamp), 1(Long), null
2019-03-22 14:19:24 -<==    Updates: 1
2019-03-22 14:19:24 -耗时 : 333
2019-03-22 14:19:24 -返回值 : success
2019-03-22 14:19:43 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 14:20:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 14:20:57 -HTTP METHOD : GET
2019-03-22 14:20:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 14:20:57 -参数 : []
2019-03-22 14:20:57 -耗时 : 0
2019-03-22 14:20:57 -返回值 : system/dept/deptTree
2019-03-22 14:20:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 14:20:57 -HTTP METHOD : GET
2019-03-22 14:20:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 14:20:57 -参数 : []
2019-03-22 14:20:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 14:20:57 -==> Parameters: 
2019-03-22 14:20:57 -<==      Total: 3
2019-03-22 14:20:57 -耗时 : 4
2019-03-22 14:20:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 14:21:02 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-03-22 14:21:02 -HTTP METHOD : POST
2019-03-22 14:21:02 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-03-22 14:21:02 -参数 : [com.bootdo.heat.domain.HeatDO@11b7a7c4]
2019-03-22 14:21:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:21:02 -==> Parameters: 2019-03(String), 3(String)
2019-03-22 14:21:02 -<==      Total: 6
2019-03-22 14:21:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:21:02 -==> Parameters: 2019-04(String), 3(String)
2019-03-22 14:21:02 -<==      Total: 0
2019-03-22 14:21:02 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:21:02 -==> Parameters: 2019-04(String), 3(String)
2019-03-22 14:21:02 -<==      Total: 0
2019-03-22 14:21:02 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:21:02 -==> Parameters: 1-003(String), 阿萨德(String), B(String), 3(String), null, 1(String), null, 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-03-12 16:14:16.0(Timestamp), 1(Long), null
2019-03-22 14:21:02 -<==    Updates: 1
2019-03-22 14:21:02 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:21:02 -==> Parameters: 1-004(String), 话说得(String), B(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-03-12 16:14:53.0(Timestamp), 1(Long), null
2019-03-22 14:21:02 -<==    Updates: 1
2019-03-22 14:21:02 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:21:02 -==> Parameters: 1-005(String), 阿萨德(String), A(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-03-12 16:15:31.0(Timestamp), 1(Long), null
2019-03-22 14:21:02 -<==    Updates: 1
2019-03-22 14:21:02 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:21:02 -==> Parameters: 1-006(String), 是的法定(String), A(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-03-12 16:16:26.0(Timestamp), 1(Long), null
2019-03-22 14:21:02 -<==    Updates: 1
2019-03-22 14:21:02 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:21:02 -==> Parameters: 1-0007(String), 爱仕达(String), B(String), 3(String), null, 0(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-03-12 16:17:11.0(Timestamp), 1(Long), null
2019-03-22 14:21:02 -<==    Updates: 1
2019-03-22 14:21:02 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:21:02 -==> Parameters: 1-0009(String), 阿斯达(String), A(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 0.00(BigDecimal), 2019-04(String), 1(Long), 2019-03-12 16:18:17.0(Timestamp), 1(Long), null
2019-03-22 14:21:02 -<==    Updates: 1
2019-03-22 14:21:02 -耗时 : 657
2019-03-22 14:21:02 -返回值 : success
2019-03-22 14:21:58 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-03-22 14:21:58 -HTTP METHOD : POST
2019-03-22 14:21:58 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-03-22 14:21:58 -参数 : [com.bootdo.heat.domain.HeatDO@bbde2b4]
2019-03-22 14:21:58 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:21:58 -==> Parameters: 2019-03(String), 3(String)
2019-03-22 14:21:58 -<==      Total: 6
2019-03-22 14:21:58 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:21:58 -==> Parameters: 2019-04(String), 3(String)
2019-03-22 14:21:58 -<==      Total: 6
2019-03-22 14:21:58 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:21:58 -==> Parameters: 2019-04(String), 3(String)
2019-03-22 14:21:58 -<==      Total: 6
2019-03-22 14:21:58 -耗时 : 44
2019-03-22 14:21:58 -返回值 : fail
2019-03-22 14:22:58 -请求地址 : http://localhost:8081/index
2019-03-22 14:22:58 -HTTP METHOD : GET
2019-03-22 14:22:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 14:22:58 -参数 : [{}]
2019-03-22 14:22:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 14:22:58 -==> Parameters: 1(Long)
2019-03-22 14:22:58 -<==      Total: 46
2019-03-22 14:22:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 14:22:58 -==> Parameters: 138(Long)
2019-03-22 14:22:58 -<==      Total: 1
2019-03-22 14:22:58 -耗时 : 178
2019-03-22 14:22:58 -返回值 : index_v1
2019-03-22 14:22:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:22:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 179(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 14:22:58.9(Timestamp)
2019-03-22 14:22:58 -<==    Updates: 1
2019-03-22 14:22:59 -请求地址 : http://localhost:8081/main
2019-03-22 14:22:59 -HTTP METHOD : GET
2019-03-22 14:22:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:22:59 -参数 : []
2019-03-22 14:22:59 -耗时 : 1
2019-03-22 14:22:59 -返回值 : main
2019-03-22 14:22:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 14:22:59 -HTTP METHOD : GET
2019-03-22 14:22:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 14:22:59 -参数 : []
2019-03-22 14:22:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 14:22:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 14:22:59 -<==      Total: 0
2019-03-22 14:22:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 14:22:59 -==> Parameters: 1(Long), 0(String)
2019-03-22 14:22:59 -<==      Total: 1
2019-03-22 14:22:59 -耗时 : 41
2019-03-22 14:22:59 -返回值 : com.bootdo.common.utils.PageUtils@3a67c924
2019-03-22 14:22:59 -请求地址 : http://localhost:8081/main
2019-03-22 14:22:59 -HTTP METHOD : GET
2019-03-22 14:22:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:22:59 -参数 : []
2019-03-22 14:22:59 -耗时 : 0
2019-03-22 14:22:59 -返回值 : main
2019-03-22 14:24:22 -请求地址 : http://localhost:8081/heat/heat
2019-03-22 14:24:22 -HTTP METHOD : GET
2019-03-22 14:24:22 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-22 14:24:22 -参数 : []
2019-03-22 14:24:22 -耗时 : 1
2019-03-22 14:24:22 -返回值 : heat/heat/heat
2019-03-22 14:24:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 14:24:23 -HTTP METHOD : GET
2019-03-22 14:24:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 14:24:23 -参数 : [userType]
2019-03-22 14:24:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 14:24:23 -==> Parameters: userType(String)
2019-03-22 14:24:23 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-22 14:24:23 -HTTP METHOD : GET
2019-03-22 14:24:23 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-22 14:24:23 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-22 14:24:23 -<==      Total: 2
2019-03-22 14:24:23 -耗时 : 123
2019-03-22 14:24:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 14:24:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-22 14:24:23 -==> Parameters: 0(Integer), 3(Integer)
2019-03-22 14:24:23 -<==      Total: 3
2019-03-22 14:24:23 -==>  Preparing: select count(*) from heat 
2019-03-22 14:24:23 -==> Parameters: 
2019-03-22 14:24:23 -<==      Total: 1
2019-03-22 14:24:23 -耗时 : 192
2019-03-22 14:24:23 -返回值 : com.bootdo.common.utils.PageUtils@56a6aa42
2019-03-22 14:24:29 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-22 14:24:29 -HTTP METHOD : GET
2019-03-22 14:24:29 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-22 14:24:29 -参数 : []
2019-03-22 14:24:29 -耗时 : 0
2019-03-22 14:24:29 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-22 14:24:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 14:24:36 -HTTP METHOD : GET
2019-03-22 14:24:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 14:24:36 -参数 : []
2019-03-22 14:24:36 -耗时 : 1
2019-03-22 14:24:36 -返回值 : system/dept/deptTree
2019-03-22 14:24:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 14:24:36 -HTTP METHOD : GET
2019-03-22 14:24:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 14:24:36 -参数 : []
2019-03-22 14:24:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 14:24:36 -==> Parameters: 
2019-03-22 14:24:36 -<==      Total: 3
2019-03-22 14:24:36 -耗时 : 3
2019-03-22 14:24:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 14:24:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 14:24:40 -HTTP METHOD : GET
2019-03-22 14:24:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 14:24:40 -参数 : []
2019-03-22 14:24:40 -耗时 : 1
2019-03-22 14:24:40 -返回值 : system/dept/deptTree
2019-03-22 14:24:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 14:24:40 -HTTP METHOD : GET
2019-03-22 14:24:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 14:24:40 -参数 : []
2019-03-22 14:24:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 14:24:40 -==> Parameters: 
2019-03-22 14:24:40 -<==      Total: 3
2019-03-22 14:24:40 -耗时 : 3
2019-03-22 14:24:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 14:24:43 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-03-22 14:24:43 -HTTP METHOD : POST
2019-03-22 14:24:43 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-03-22 14:24:43 -参数 : [com.bootdo.heat.domain.HeatDO@1ef964f2]
2019-03-22 14:24:43 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:24:43 -==> Parameters: 2019-04(String), 3(String)
2019-03-22 14:24:43 -<==      Total: 6
2019-03-22 14:24:43 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:24:43 -==> Parameters: 2019-05(String), 3(String)
2019-03-22 14:24:43 -<==      Total: 0
2019-03-22 14:24:43 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:24:43 -==> Parameters: 2019-05(String), 3(String)
2019-03-22 14:24:43 -<==      Total: 0
2019-03-22 14:24:43 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:24:43 -==> Parameters: 1-003(String), 阿萨德(String), B(String), 3(String), null, 1(String), null, 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -1.00(BigDecimal), 2019-05(String), 1(Long), 2019-03-12 16:14:16.0(Timestamp), 1(Long), null
2019-03-22 14:24:43 -<==    Updates: 1
2019-03-22 14:24:43 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:24:43 -==> Parameters: 1-004(String), 话说得(String), B(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -1.00(BigDecimal), 2019-05(String), 1(Long), 2019-03-12 16:14:53.0(Timestamp), 1(Long), null
2019-03-22 14:24:43 -<==    Updates: 1
2019-03-22 14:24:43 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:24:43 -==> Parameters: 1-005(String), 阿萨德(String), A(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -1.00(BigDecimal), 2019-05(String), 1(Long), 2019-03-12 16:15:31.0(Timestamp), 1(Long), null
2019-03-22 14:24:43 -<==    Updates: 1
2019-03-22 14:24:43 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:24:43 -==> Parameters: 1-006(String), 是的法定(String), A(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -1.00(BigDecimal), 2019-05(String), 1(Long), 2019-03-12 16:16:26.0(Timestamp), 1(Long), null
2019-03-22 14:24:44 -<==    Updates: 1
2019-03-22 14:24:44 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:24:44 -==> Parameters: 1-0007(String), 爱仕达(String), B(String), 3(String), null, 0(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -1.00(BigDecimal), 2019-05(String), 1(Long), 2019-03-12 16:17:11.0(Timestamp), 1(Long), null
2019-03-22 14:24:44 -<==    Updates: 1
2019-03-22 14:24:44 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:24:44 -==> Parameters: 1-0009(String), 阿斯达(String), A(String), 3(String), null, 1(String), 1(String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), -1.00(BigDecimal), 2019-05(String), 1(Long), 2019-03-12 16:18:17.0(Timestamp), 1(Long), null
2019-03-22 14:24:44 -<==    Updates: 1
2019-03-22 14:24:44 -耗时 : 416
2019-03-22 14:24:44 -返回值 : success
2019-03-22 14:25:51 -请求地址 : http://localhost:8081/heat/heatUpLoad/createHeatExcel
2019-03-22 14:25:51 -HTTP METHOD : POST
2019-03-22 14:25:51 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel
2019-03-22 14:25:51 -参数 : [com.bootdo.heat.domain.HeatDO@693ee41e]
2019-03-22 14:25:51 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:25:51 -==> Parameters: 2019-04(String), 3(String)
2019-03-22 14:25:51 -<==      Total: 6
2019-03-22 14:25:51 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:25:51 -==> Parameters: 2019-05(String), 3(String)
2019-03-22 14:25:51 -<==      Total: 6
2019-03-22 14:25:51 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM HEAT WHERE create_time = ? and user_org = ? 
2019-03-22 14:25:51 -==> Parameters: 2019-05(String), 3(String)
2019-03-22 14:25:51 -<==      Total: 6
2019-03-22 14:25:51 -耗时 : 18
2019-03-22 14:25:51 -返回值 : fail
2019-03-22 14:26:10 -请求地址 : http://localhost:8081/index
2019-03-22 14:26:10 -HTTP METHOD : GET
2019-03-22 14:26:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 14:26:10 -参数 : [{}]
2019-03-22 14:26:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 14:26:10 -==> Parameters: 1(Long)
2019-03-22 14:26:10 -<==      Total: 46
2019-03-22 14:26:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 14:26:10 -==> Parameters: 138(Long)
2019-03-22 14:26:10 -<==      Total: 1
2019-03-22 14:26:10 -耗时 : 91
2019-03-22 14:26:10 -返回值 : index_v1
2019-03-22 14:26:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:26:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 91(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 14:26:10.698(Timestamp)
2019-03-22 14:26:10 -<==    Updates: 1
2019-03-22 14:26:10 -请求地址 : http://localhost:8081/main
2019-03-22 14:26:10 -HTTP METHOD : GET
2019-03-22 14:26:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:26:10 -参数 : []
2019-03-22 14:26:10 -耗时 : 1
2019-03-22 14:26:10 -返回值 : main
2019-03-22 14:26:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 14:26:10 -HTTP METHOD : GET
2019-03-22 14:26:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 14:26:10 -参数 : []
2019-03-22 14:26:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 14:26:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 14:26:10 -<==      Total: 0
2019-03-22 14:26:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 14:26:11 -==> Parameters: 1(Long), 0(String)
2019-03-22 14:26:11 -<==      Total: 1
2019-03-22 14:26:11 -耗时 : 9
2019-03-22 14:26:11 -返回值 : com.bootdo.common.utils.PageUtils@3109f638
2019-03-22 14:26:11 -请求地址 : http://localhost:8081/main
2019-03-22 14:26:11 -HTTP METHOD : GET
2019-03-22 14:26:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:26:11 -参数 : []
2019-03-22 14:26:11 -耗时 : 1
2019-03-22 14:26:11 -返回值 : main
2019-03-22 14:27:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 14:27:11 -==> Parameters: 1(Long)
2019-03-22 14:27:11 -<==      Total: 90
2019-03-22 14:27:11 -请求地址 : http://localhost:8081/heat/heat
2019-03-22 14:27:11 -HTTP METHOD : GET
2019-03-22 14:27:11 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-22 14:27:11 -参数 : []
2019-03-22 14:27:11 -耗时 : 1
2019-03-22 14:27:11 -返回值 : heat/heat/heat
2019-03-22 14:27:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 14:27:12 -HTTP METHOD : GET
2019-03-22 14:27:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 14:27:12 -参数 : [userType]
2019-03-22 14:27:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 14:27:12 -==> Parameters: userType(String)
2019-03-22 14:27:12 -<==      Total: 2
2019-03-22 14:27:12 -耗时 : 6
2019-03-22 14:27:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 14:27:12 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-22 14:27:12 -HTTP METHOD : GET
2019-03-22 14:27:12 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-22 14:27:12 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-22 14:27:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-22 14:27:12 -==> Parameters: 0(Integer), 3(Integer)
2019-03-22 14:27:12 -<==      Total: 3
2019-03-22 14:27:12 -==>  Preparing: select count(*) from heat 
2019-03-22 14:27:12 -==> Parameters: 
2019-03-22 14:27:12 -<==      Total: 1
2019-03-22 14:27:12 -耗时 : 13
2019-03-22 14:27:12 -返回值 : com.bootdo.common.utils.PageUtils@6eed0844
2019-03-22 14:27:16 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-22 14:27:16 -HTTP METHOD : GET
2019-03-22 14:27:16 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-22 14:27:16 -参数 : []
2019-03-22 14:27:16 -耗时 : 1
2019-03-22 14:27:16 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-22 14:27:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 14:27:41 -HTTP METHOD : GET
2019-03-22 14:27:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 14:27:41 -参数 : []
2019-03-22 14:27:41 -耗时 : 1
2019-03-22 14:27:41 -返回值 : system/dept/deptTree
2019-03-22 14:27:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 14:27:41 -HTTP METHOD : GET
2019-03-22 14:27:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 14:27:41 -参数 : []
2019-03-22 14:27:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 14:27:41 -==> Parameters: 
2019-03-22 14:27:41 -<==      Total: 3
2019-03-22 14:27:41 -耗时 : 6
2019-03-22 14:27:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 14:28:10 -请求地址 : http://localhost:8081/file/downImport/heatUser
2019-03-22 14:28:10 -HTTP METHOD : GET
2019-03-22 14:28:10 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-22 14:28:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@3b6ec10b, heatUser]
2019-03-22 14:28:10 -耗时 : 3
2019-03-22 14:28:10 -返回值 : null
2019-03-22 14:28:47 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-22 14:28:47 -HTTP METHOD : POST
2019-03-22 14:28:47 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-22 14:28:47 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7b1c5237, 2019-08, 2]
2019-03-22 14:28:50 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-22 14:28:50 -==> Parameters: 1-0001(String)
2019-03-22 14:28:50 -<==      Total: 1
2019-03-22 14:28:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:28:50 -9
java.lang.ArrayIndexOutOfBoundsException: 9
	at com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(HeatUpLoadController.java:147)
	at com.bootdo.heat.controller.HeatUpLoadController$$FastClassBySpringCGLIB$$9e643945.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.heat.controller.HeatUpLoadController$$EnhancerBySpringCGLIB$$88f2fc8d.importHeatExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 14:28:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/heat/heatUpLoad/importHeatExcel(String), java.lang.ArrayIndexOutOfBoundsException: 9(String), null, 2019-03-22 14:28:50.274(Timestamp)
2019-03-22 14:28:50 -<==    Updates: 1
2019-03-22 14:32:36 -Starting BootdoApplication on ZJZL-20180906VX with PID 14432 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-22 14:32:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-22 14:32:36 -The following profiles are active: dev
2019-03-22 14:32:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@40e10ff8: startup date [Fri Mar 22 14:32:37 CST 2019]; root of context hierarchy
2019-03-22 14:32:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-22 14:32:47 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ebf5316f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:32:48 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$de4e6016] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:32:49 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:32:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:32:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:32:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-22 14:32:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-22 14:32:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:32:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:32:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:32:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 14:32:52 -Tomcat initialized with port(s): 8081 (http)
2019-03-22 14:32:52 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-22 14:32:52 -Starting service [Tomcat]
2019-03-22 14:32:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-22 14:32:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-22 14:32:52 -Initializing Spring embedded WebApplicationContext
2019-03-22 14:32:52 -Root WebApplicationContext: initialization completed in 15841 ms
2019-03-22 14:32:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-22 14:32:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-22 14:32:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-22 14:32:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-22 14:32:54 -Filter xssFilter was not registered (disabled)
2019-03-22 14:32:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-22 14:32:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-22 14:32:54 -Servlet statViewServlet mapped to [/druid/*]
2019-03-22 14:32:54 -Servlet dispatcherServlet mapped to [/]
2019-03-22 14:32:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@40e10ff8: startup date [Fri Mar 22 14:32:37 CST 2019]; root of context hierarchy
2019-03-22 14:32:59 -Using default implementation for ThreadExecutor
2019-03-22 14:32:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-22 14:32:59 -Quartz Scheduler v.2.2.1 created.
2019-03-22 14:32:59 -RAMJobStore initialized.
2019-03-22 14:32:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-22 14:32:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-22 14:32:59 -Quartz scheduler version: 2.2.1
2019-03-22 14:32:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7b10472e
2019-03-22 14:33:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-22 14:33:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-22 14:33:07 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-22 14:33:07 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-22 14:33:07 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:33:07 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-22 14:33:07 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-22 14:33:07 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-22 14:33:07 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-22 14:33:07 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-22 14:33:07 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-22 14:33:07 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-22 14:33:07 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-22 14:33:07 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-22 14:33:07 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-22 14:33:07 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-22 14:33:07 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-22 14:33:07 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-22 14:33:07 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-22 14:33:07 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-22 14:33:07 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-22 14:33:07 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-22 14:33:07 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 14:33:07 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-22 14:33:07 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 14:33:07 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-22 14:33:07 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-22 14:33:07 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-22 14:33:07 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-22 14:33:07 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-22 14:33:07 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-22 14:33:07 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-22 14:33:07 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-22 14:33:07 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 14:33:07 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 14:33:07 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-22 14:33:07 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-22 14:33:07 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-22 14:33:07 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-22 14:33:07 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:33:07 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-22 14:33:07 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:33:07 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-22 14:33:07 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-22 14:33:07 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-22 14:33:07 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-22 14:33:07 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-22 14:33:07 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-22 14:33:07 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-22 14:33:07 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 14:33:07 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-22 14:33:07 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-22 14:33:07 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-22 14:33:07 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-22 14:33:07 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-22 14:33:07 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:33:07 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-22 14:33:07 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:33:07 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-22 14:33:07 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-22 14:33:07 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 14:33:07 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 14:33:07 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-22 14:33:07 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-22 14:33:07 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-22 14:33:07 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-22 14:33:07 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-22 14:33:07 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-22 14:33:07 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-22 14:33:07 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-22 14:33:07 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-22 14:33:07 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-22 14:33:07 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-22 14:33:07 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 14:33:07 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-22 14:33:07 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-22 14:33:07 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-22 14:33:07 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-22 14:33:07 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-22 14:33:07 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-22 14:33:07 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-22 14:33:07 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-22 14:33:07 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-22 14:33:07 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-22 14:33:07 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 14:33:07 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-22 14:33:07 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-22 14:33:07 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-22 14:33:07 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-22 14:33:07 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-22 14:33:07 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-22 14:33:07 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-22 14:33:07 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-22 14:33:07 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-22 14:33:07 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 14:33:07 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 14:33:07 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-22 14:33:07 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-22 14:33:07 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-22 14:33:07 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-22 14:33:07 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-22 14:33:07 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-22 14:33:07 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-22 14:33:07 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-22 14:33:07 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-22 14:33:07 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-22 14:33:07 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-22 14:33:07 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-22 14:33:07 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-22 14:33:07 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-22 14:33:07 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-22 14:33:07 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-22 14:33:07 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-22 14:33:07 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 14:33:07 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 14:33:07 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 14:33:07 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-22 14:33:07 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-22 14:33:07 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-22 14:33:07 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-22 14:33:07 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:33:07 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-22 14:33:07 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 14:33:07 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-22 14:33:07 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-22 14:33:07 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-22 14:33:07 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-22 14:33:07 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 14:33:07 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 14:33:07 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 14:33:07 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-22 14:33:07 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 14:33:07 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-22 14:33:07 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 14:33:07 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-22 14:33:07 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-22 14:33:07 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-22 14:33:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-22 14:33:08 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-22 14:33:08 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-22 14:33:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 14:33:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@40e10ff8: startup date [Fri Mar 22 14:32:37 CST 2019]; root of context hierarchy
2019-03-22 14:33:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 14:33:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 14:33:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 14:33:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-22 14:33:10 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-22 14:33:14 -Registering beans for JMX exposure on startup
2019-03-22 14:33:14 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-22 14:33:14 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-22 14:33:14 -Starting beans in phase 2147483647
2019-03-22 14:33:14 -Context refreshed
2019-03-22 14:33:15 -Found 1 custom documentation plugin(s)
2019-03-22 14:33:15 -Scanning for api listing references
2019-03-22 14:33:15 -Generating unique operation named: removeUsingPOST_1
2019-03-22 14:33:15 -Generating unique operation named: addUsingGET_1
2019-03-22 14:33:15 -Generating unique operation named: editUsingGET_1
2019-03-22 14:33:15 -Generating unique operation named: listUsingGET_1
2019-03-22 14:33:16 -Generating unique operation named: removeUsingPOST_2
2019-03-22 14:33:16 -Generating unique operation named: removeUsingPOST_3
2019-03-22 14:33:16 -Generating unique operation named: saveUsingPOST_1
2019-03-22 14:33:16 -Generating unique operation named: updateUsingGET_1
2019-03-22 14:33:16 -Generating unique operation named: updateUsingHEAD_1
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPOST_1
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPUT_1
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPATCH_1
2019-03-22 14:33:16 -Generating unique operation named: updateUsingDELETE_1
2019-03-22 14:33:16 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-22 14:33:16 -Generating unique operation named: updateUsingTRACE_1
2019-03-22 14:33:16 -Generating unique operation named: addUsingGET_2
2019-03-22 14:33:16 -Generating unique operation named: editUsingGET_2
2019-03-22 14:33:16 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-22 14:33:16 -Generating unique operation named: listUsingGET_2
2019-03-22 14:33:16 -Generating unique operation named: removeUsingPOST_4
2019-03-22 14:33:16 -Generating unique operation named: removeUsingPOST_5
2019-03-22 14:33:16 -Generating unique operation named: saveUsingPOST_2
2019-03-22 14:33:16 -Generating unique operation named: updateUsingGET_2
2019-03-22 14:33:16 -Generating unique operation named: updateUsingHEAD_2
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPOST_2
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPUT_2
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPATCH_2
2019-03-22 14:33:16 -Generating unique operation named: updateUsingDELETE_2
2019-03-22 14:33:16 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-22 14:33:16 -Generating unique operation named: updateUsingTRACE_2
2019-03-22 14:33:16 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-22 14:33:16 -Generating unique operation named: addUsingGET_3
2019-03-22 14:33:16 -Generating unique operation named: editUsingGET_3
2019-03-22 14:33:16 -Generating unique operation named: listUsingGET_3
2019-03-22 14:33:16 -Generating unique operation named: removeUsingPOST_6
2019-03-22 14:33:16 -Generating unique operation named: removeUsingPOST_7
2019-03-22 14:33:16 -Generating unique operation named: saveUsingPOST_3
2019-03-22 14:33:16 -Generating unique operation named: updateUsingGET_3
2019-03-22 14:33:16 -Generating unique operation named: updateUsingHEAD_3
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPOST_3
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPUT_3
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPATCH_3
2019-03-22 14:33:16 -Generating unique operation named: updateUsingDELETE_3
2019-03-22 14:33:16 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-22 14:33:16 -Generating unique operation named: updateUsingTRACE_3
2019-03-22 14:33:16 -Generating unique operation named: addUsingGET_4
2019-03-22 14:33:16 -Generating unique operation named: editUsingGET_4
2019-03-22 14:33:16 -Generating unique operation named: listUsingGET_4
2019-03-22 14:33:16 -Generating unique operation named: removeUsingPOST_8
2019-03-22 14:33:16 -Generating unique operation named: removeUsingPOST_9
2019-03-22 14:33:16 -Generating unique operation named: saveUsingPOST_4
2019-03-22 14:33:16 -Generating unique operation named: updateUsingGET_4
2019-03-22 14:33:16 -Generating unique operation named: updateUsingHEAD_4
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPOST_4
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPUT_4
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPATCH_4
2019-03-22 14:33:16 -Generating unique operation named: updateUsingDELETE_4
2019-03-22 14:33:16 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-22 14:33:16 -Generating unique operation named: updateUsingTRACE_4
2019-03-22 14:33:16 -Generating unique operation named: ElecUsingGET_1
2019-03-22 14:33:16 -Generating unique operation named: addUsingGET_5
2019-03-22 14:33:16 -Generating unique operation named: editUsingGET_5
2019-03-22 14:33:16 -Generating unique operation named: listUsingGET_5
2019-03-22 14:33:16 -Generating unique operation named: removeUsingPOST_10
2019-03-22 14:33:16 -Generating unique operation named: removeUsingPOST_11
2019-03-22 14:33:16 -Generating unique operation named: saveUsingPOST_5
2019-03-22 14:33:16 -Generating unique operation named: updateUsingGET_5
2019-03-22 14:33:16 -Generating unique operation named: updateUsingHEAD_5
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPOST_5
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPUT_5
2019-03-22 14:33:16 -Generating unique operation named: updateUsingPATCH_5
2019-03-22 14:33:16 -Generating unique operation named: updateUsingDELETE_5
2019-03-22 14:33:16 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-22 14:33:16 -Generating unique operation named: updateUsingTRACE_5
2019-03-22 14:33:17 -Generating unique operation named: editUsingGET_6
2019-03-22 14:33:17 -Generating unique operation named: listUsingGET_6
2019-03-22 14:33:17 -Generating unique operation named: updateUsingPOST_6
2019-03-22 14:33:17 -Generating unique operation named: addUsingGET_6
2019-03-22 14:33:17 -Generating unique operation named: editUsingGET_7
2019-03-22 14:33:17 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-22 14:33:17 -Generating unique operation named: listUsingGET_7
2019-03-22 14:33:17 -Generating unique operation named: removeUsingPOST_12
2019-03-22 14:33:17 -Generating unique operation named: removeUsingPOST_13
2019-03-22 14:33:17 -Generating unique operation named: saveUsingPOST_6
2019-03-22 14:33:17 -Generating unique operation named: updateUsingGET_6
2019-03-22 14:33:17 -Generating unique operation named: updateUsingHEAD_6
2019-03-22 14:33:17 -Generating unique operation named: updateUsingPOST_7
2019-03-22 14:33:17 -Generating unique operation named: updateUsingPUT_6
2019-03-22 14:33:17 -Generating unique operation named: updateUsingPATCH_6
2019-03-22 14:33:17 -Generating unique operation named: updateUsingDELETE_6
2019-03-22 14:33:17 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-22 14:33:17 -Generating unique operation named: updateUsingTRACE_6
2019-03-22 14:33:17 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-22 14:33:17 -Generating unique operation named: addUsingGET_7
2019-03-22 14:33:17 -Generating unique operation named: editUsingGET_8
2019-03-22 14:33:17 -Generating unique operation named: listUsingGET_8
2019-03-22 14:33:17 -Generating unique operation named: removeUsingPOST_14
2019-03-22 14:33:17 -Generating unique operation named: removeUsingPOST_15
2019-03-22 14:33:17 -Generating unique operation named: saveUsingPOST_7
2019-03-22 14:33:17 -Generating unique operation named: updateUsingGET_7
2019-03-22 14:33:17 -Generating unique operation named: updateUsingHEAD_7
2019-03-22 14:33:17 -Generating unique operation named: updateUsingPOST_8
2019-03-22 14:33:17 -Generating unique operation named: updateUsingPUT_7
2019-03-22 14:33:17 -Generating unique operation named: updateUsingPATCH_7
2019-03-22 14:33:17 -Generating unique operation named: updateUsingDELETE_7
2019-03-22 14:33:17 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-22 14:33:17 -Generating unique operation named: updateUsingTRACE_7
2019-03-22 14:33:17 -Generating unique operation named: addUsingGET_8
2019-03-22 14:33:17 -Generating unique operation named: editUsingGET_9
2019-03-22 14:33:17 -Generating unique operation named: listUsingGET_9
2019-03-22 14:33:17 -Generating unique operation named: removeUsingPOST_16
2019-03-22 14:33:17 -Generating unique operation named: removeUsingPOST_17
2019-03-22 14:33:17 -Generating unique operation named: saveUsingPOST_8
2019-03-22 14:33:17 -Generating unique operation named: updateUsingGET_8
2019-03-22 14:33:17 -Generating unique operation named: updateUsingHEAD_8
2019-03-22 14:33:17 -Generating unique operation named: updateUsingPOST_9
2019-03-22 14:33:17 -Generating unique operation named: updateUsingPUT_8
2019-03-22 14:33:17 -Generating unique operation named: updateUsingPATCH_8
2019-03-22 14:33:17 -Generating unique operation named: updateUsingDELETE_8
2019-03-22 14:33:17 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-22 14:33:17 -Generating unique operation named: updateUsingTRACE_8
2019-03-22 14:33:17 -Generating unique operation named: addUsingGET_9
2019-03-22 14:33:17 -Generating unique operation named: editUsingGET_10
2019-03-22 14:33:17 -Generating unique operation named: infoUsingGET_1
2019-03-22 14:33:17 -Generating unique operation named: infoUsingHEAD_1
2019-03-22 14:33:17 -Generating unique operation named: infoUsingPOST_1
2019-03-22 14:33:17 -Generating unique operation named: infoUsingPUT_1
2019-03-22 14:33:17 -Generating unique operation named: infoUsingPATCH_1
2019-03-22 14:33:17 -Generating unique operation named: infoUsingDELETE_1
2019-03-22 14:33:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-22 14:33:17 -Generating unique operation named: infoUsingTRACE_1
2019-03-22 14:33:17 -Generating unique operation named: listUsingGET_10
2019-03-22 14:33:17 -Generating unique operation named: removeUsingPOST_18
2019-03-22 14:33:17 -Generating unique operation named: removeUsingPOST_19
2019-03-22 14:33:17 -Generating unique operation named: saveUsingPOST_9
2019-03-22 14:33:17 -Generating unique operation named: updateUsingPOST_10
2019-03-22 14:33:17 -Generating unique operation named: listUsingGET_11
2019-03-22 14:33:17 -Generating unique operation named: removeUsingPOST_20
2019-03-22 14:33:17 -Generating unique operation named: welcomeUsingGET_1
2019-03-22 14:33:17 -Generating unique operation named: addUsingGET_10
2019-03-22 14:33:17 -Generating unique operation named: editUsingGET_11
2019-03-22 14:33:17 -Generating unique operation named: listUsingGET_12
2019-03-22 14:33:17 -Generating unique operation named: removeUsingPOST_21
2019-03-22 14:33:18 -Generating unique operation named: saveUsingPOST_10
2019-03-22 14:33:18 -Generating unique operation named: treeUsingGET_1
2019-03-22 14:33:18 -Generating unique operation named: treeUsingGET_2
2019-03-22 14:33:18 -Generating unique operation named: updateUsingPOST_11
2019-03-22 14:33:18 -Generating unique operation named: addUsingGET_11
2019-03-22 14:33:18 -Generating unique operation named: editUsingGET_12
2019-03-22 14:33:18 -Generating unique operation named: listUsingGET_13
2019-03-22 14:33:18 -Generating unique operation named: removeUsingPOST_22
2019-03-22 14:33:18 -Generating unique operation named: removeUsingPOST_23
2019-03-22 14:33:18 -Generating unique operation named: saveUsingPOST_11
2019-03-22 14:33:18 -Generating unique operation named: updateUsingGET_9
2019-03-22 14:33:18 -Generating unique operation named: updateUsingHEAD_9
2019-03-22 14:33:18 -Generating unique operation named: updateUsingPOST_12
2019-03-22 14:33:18 -Generating unique operation named: updateUsingPUT_9
2019-03-22 14:33:18 -Generating unique operation named: updateUsingPATCH_9
2019-03-22 14:33:18 -Generating unique operation named: updateUsingDELETE_9
2019-03-22 14:33:18 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-22 14:33:18 -Generating unique operation named: updateUsingTRACE_9
2019-03-22 14:33:18 -Generating unique operation named: addUsingGET_12
2019-03-22 14:33:18 -Generating unique operation named: editUsingGET_13
2019-03-22 14:33:18 -Generating unique operation named: listUsingGET_14
2019-03-22 14:33:18 -Generating unique operation named: removeUsingPOST_24
2019-03-22 14:33:18 -Generating unique operation named: removeUsingPOST_25
2019-03-22 14:33:18 -Generating unique operation named: saveUsingPOST_12
2019-03-22 14:33:18 -Generating unique operation named: updateUsingGET_10
2019-03-22 14:33:18 -Generating unique operation named: updateUsingHEAD_10
2019-03-22 14:33:18 -Generating unique operation named: updateUsingPOST_13
2019-03-22 14:33:18 -Generating unique operation named: updateUsingPUT_10
2019-03-22 14:33:18 -Generating unique operation named: updateUsingPATCH_10
2019-03-22 14:33:18 -Generating unique operation named: updateUsingDELETE_10
2019-03-22 14:33:18 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-22 14:33:18 -Generating unique operation named: updateUsingTRACE_10
2019-03-22 14:33:18 -Generating unique operation named: addUsingGET_13
2019-03-22 14:33:18 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-22 14:33:18 -Generating unique operation named: editUsingGET_14
2019-03-22 14:33:19 -Generating unique operation named: listUsingGET_15
2019-03-22 14:33:19 -Generating unique operation named: saveUsingPOST_13
2019-03-22 14:33:19 -Generating unique operation named: saveUsingPOST_14
2019-03-22 14:33:19 -Generating unique operation named: updateUsingPOST_14
2019-03-22 14:33:19 -Generating unique operation named: listUsingGET_16
2019-03-22 14:33:19 -Generating unique operation named: listUsingHEAD_1
2019-03-22 14:33:19 -Generating unique operation named: listUsingPOST_1
2019-03-22 14:33:19 -Generating unique operation named: listUsingPUT_1
2019-03-22 14:33:19 -Generating unique operation named: listUsingPATCH_1
2019-03-22 14:33:19 -Generating unique operation named: listUsingDELETE_1
2019-03-22 14:33:19 -Generating unique operation named: listUsingOPTIONS_1
2019-03-22 14:33:19 -Generating unique operation named: listUsingTRACE_1
2019-03-22 14:33:19 -Generating unique operation named: addUsingGET_14
2019-03-22 14:33:19 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-22 14:33:19 -Generating unique operation named: editUsingGET_15
2019-03-22 14:33:19 -Generating unique operation named: listUsingGET_17
2019-03-22 14:33:19 -Generating unique operation named: removeUsingPOST_26
2019-03-22 14:33:19 -Generating unique operation named: saveUsingPOST_15
2019-03-22 14:33:19 -Generating unique operation named: treeUsingGET_3
2019-03-22 14:33:19 -Generating unique operation named: treeViewUsingGET_1
2019-03-22 14:33:19 -Generating unique operation named: updateUsingPOST_15
2019-03-22 14:33:19 -Generating unique operation named: addUsingGET_15
2019-03-22 14:33:19 -Generating unique operation named: editUsingGET_16
2019-03-22 14:33:19 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-22 14:33:19 -Generating unique operation named: listUsingGET_18
2019-03-22 14:33:19 -Generating unique operation named: removeUsingPOST_27
2019-03-22 14:33:19 -Generating unique operation named: removeUsingPOST_28
2019-03-22 14:33:19 -Generating unique operation named: saveUsingPOST_16
2019-03-22 14:33:19 -Generating unique operation named: updateUsingGET_11
2019-03-22 14:33:19 -Generating unique operation named: updateUsingHEAD_11
2019-03-22 14:33:19 -Generating unique operation named: updateUsingPOST_16
2019-03-22 14:33:19 -Generating unique operation named: updateUsingPUT_11
2019-03-22 14:33:19 -Generating unique operation named: updateUsingPATCH_11
2019-03-22 14:33:19 -Generating unique operation named: updateUsingDELETE_11
2019-03-22 14:33:19 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-22 14:33:19 -Generating unique operation named: updateUsingTRACE_11
2019-03-22 14:33:19 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-22 14:33:19 -Generating unique operation named: addUsingGET_16
2019-03-22 14:33:19 -Generating unique operation named: editUsingGET_17
2019-03-22 14:33:19 -Generating unique operation named: listUsingGET_19
2019-03-22 14:33:19 -Generating unique operation named: removeUsingPOST_29
2019-03-22 14:33:19 -Generating unique operation named: removeUsingPOST_30
2019-03-22 14:33:19 -Generating unique operation named: saveUsingPOST_17
2019-03-22 14:33:19 -Generating unique operation named: updateUsingGET_12
2019-03-22 14:33:19 -Generating unique operation named: updateUsingHEAD_12
2019-03-22 14:33:19 -Generating unique operation named: updateUsingPOST_17
2019-03-22 14:33:19 -Generating unique operation named: updateUsingPUT_12
2019-03-22 14:33:19 -Generating unique operation named: updateUsingPATCH_12
2019-03-22 14:33:19 -Generating unique operation named: updateUsingDELETE_12
2019-03-22 14:33:19 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-22 14:33:19 -Generating unique operation named: updateUsingTRACE_12
2019-03-22 14:33:19 -Generating unique operation named: addUsingGET_17
2019-03-22 14:33:19 -Generating unique operation named: editUsingGET_18
2019-03-22 14:33:19 -Generating unique operation named: listUsingGET_20
2019-03-22 14:33:19 -Generating unique operation named: removeUsingPOST_31
2019-03-22 14:33:19 -Generating unique operation named: removeUsingPOST_32
2019-03-22 14:33:19 -Generating unique operation named: saveUsingPOST_18
2019-03-22 14:33:19 -Generating unique operation named: updateUsingGET_13
2019-03-22 14:33:19 -Generating unique operation named: updateUsingHEAD_13
2019-03-22 14:33:19 -Generating unique operation named: updateUsingPOST_18
2019-03-22 14:33:19 -Generating unique operation named: updateUsingPUT_13
2019-03-22 14:33:19 -Generating unique operation named: updateUsingPATCH_13
2019-03-22 14:33:19 -Generating unique operation named: updateUsingDELETE_13
2019-03-22 14:33:20 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-22 14:33:20 -Generating unique operation named: updateUsingTRACE_13
2019-03-22 14:33:20 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-22 14:33:20 -Starting Quartz Scheduler now
2019-03-22 14:33:20 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-22 14:33:20 -Starting...
2019-03-22 14:33:20 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 14:33:20 -Started.
2019-03-22 14:33:20 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-22 14:33:20 -Using a shared selector for servlet write/read
2019-03-22 14:33:20 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-22 14:33:20 -Started BootdoApplication in 45.936 seconds (JVM running for 47.808)
2019-03-22 14:33:20 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-22 14:33:20 -==> Parameters: 
2019-03-22 14:33:21 -<==      Total: 1
2019-03-22 14:33:56 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-22 14:33:56 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-22 14:33:56 -FrameworkServlet 'dispatcherServlet': initialization completed in 96 ms
2019-03-22 14:33:56 -Enabling session validation scheduler...
2019-03-22 14:33:56 -请求地址 : http://localhost:8081/login;JSESSIONID=a71758ef-0903-431d-9091-d9cff3666e51
2019-03-22 14:33:56 -HTTP METHOD : GET
2019-03-22 14:33:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 14:33:56 -参数 : [{}]
2019-03-22 14:33:56 -耗时 : 5
2019-03-22 14:33:56 -返回值 : login
2019-03-22 14:33:58 -请求地址 : http://localhost:8081/getVerify
2019-03-22 14:33:58 -HTTP METHOD : GET
2019-03-22 14:33:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-22 14:33:58 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6b778e1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8708647]
2019-03-22 14:34:02 -请求地址 : http://localhost:8081/getVerify
2019-03-22 14:34:02 -HTTP METHOD : GET
2019-03-22 14:34:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-22 14:34:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c705c37, org.apache.shiro.web.servlet.ShiroHttpServletResponse@12b7b1c9]
2019-03-22 14:34:03 -6026
2019-03-22 14:34:03 -0513
2019-03-22 14:34:03 -耗时 : 840
2019-03-22 14:34:03 -耗时 : 5050
2019-03-22 14:34:03 -返回值 : null
2019-03-22 14:34:03 -返回值 : null
2019-03-22 14:34:08 -请求地址 : http://localhost:8081/login
2019-03-22 14:34:08 -HTTP METHOD : POST
2019-03-22 14:34:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-22 14:34:08 -参数 : [admin, 111111, 0513, org.apache.shiro.web.servlet.ShiroHttpServletRequest@280a0d14]
2019-03-22 14:34:08 -耗时 : 8
2019-03-22 14:34:08 -返回值 : {msg=请输入正确的验证码, code=500}
2019-03-22 14:34:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-22 14:34:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:34:08 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-22 14:34:08.316(Timestamp)
2019-03-22 14:34:08 -<==    Updates: 1
2019-03-22 14:34:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-22 14:34:18 -请求地址 : http://localhost:8081/login
2019-03-22 14:34:18 -HTTP METHOD : POST
2019-03-22 14:34:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-22 14:34:18 -参数 : [admin, 111111, 0513, org.apache.shiro.web.servlet.ShiroHttpServletRequest@eede747]
2019-03-22 14:34:18 -耗时 : 1
2019-03-22 14:34:18 -返回值 : {msg=请输入正确的验证码, code=500}
2019-03-22 14:34:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:34:18 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 1(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-22 14:34:18.609(Timestamp)
2019-03-22 14:34:18 -<==    Updates: 1
2019-03-22 14:34:21 -请求地址 : http://localhost:8081/login;JSESSIONID=a71758ef-0903-431d-9091-d9cff3666e51
2019-03-22 14:34:21 -HTTP METHOD : GET
2019-03-22 14:34:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 14:34:21 -参数 : [{}]
2019-03-22 14:34:21 -耗时 : 1
2019-03-22 14:34:21 -返回值 : login
2019-03-22 14:34:21 -请求地址 : http://localhost:8081/getVerify
2019-03-22 14:34:21 -HTTP METHOD : GET
2019-03-22 14:34:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-22 14:34:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@23651fbb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4a6744fc]
2019-03-22 14:34:21 -9479
2019-03-22 14:34:21 -耗时 : 14
2019-03-22 14:34:21 -返回值 : null
2019-03-22 14:34:21 -请求地址 : http://localhost:8081/login
2019-03-22 14:34:21 -HTTP METHOD : GET
2019-03-22 14:34:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 14:34:21 -参数 : [{}]
2019-03-22 14:34:21 -耗时 : 1
2019-03-22 14:34:21 -返回值 : login
2019-03-22 14:34:29 -请求地址 : http://localhost:8081/login
2019-03-22 14:34:29 -HTTP METHOD : POST
2019-03-22 14:34:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-22 14:34:29 -参数 : [admin, 111111, 9479, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7b3f4236]
2019-03-22 14:34:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-22 14:34:29 -==> Parameters: admin(String)
2019-03-22 14:34:29 -<==      Total: 1
2019-03-22 14:34:29 -耗时 : 394
2019-03-22 14:34:29 -返回值 : {msg=操作成功, code=0}
2019-03-22 14:34:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:34:29 -==> Parameters: 1(Long), admin(String), 登录(String), 395(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-22 14:34:29.893(Timestamp)
2019-03-22 14:34:29 -请求地址 : http://localhost:8081/index
2019-03-22 14:34:29 -HTTP METHOD : GET
2019-03-22 14:34:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 14:34:29 -参数 : [{}]
2019-03-22 14:34:30 -<==    Updates: 1
2019-03-22 14:34:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 14:34:30 -==> Parameters: 1(Long)
2019-03-22 14:34:30 -<==      Total: 46
2019-03-22 14:34:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 14:34:30 -==> Parameters: 138(Long)
2019-03-22 14:34:30 -<==      Total: 1
2019-03-22 14:34:30 -耗时 : 721
2019-03-22 14:34:30 -返回值 : index_v1
2019-03-22 14:34:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:34:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 721(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 14:34:30.792(Timestamp)
2019-03-22 14:34:30 -<==    Updates: 1
2019-03-22 14:34:31 -请求地址 : http://localhost:8081/main
2019-03-22 14:34:31 -HTTP METHOD : GET
2019-03-22 14:34:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:34:31 -参数 : []
2019-03-22 14:34:31 -耗时 : 1
2019-03-22 14:34:31 -返回值 : main
2019-03-22 14:34:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 14:34:31 -HTTP METHOD : GET
2019-03-22 14:34:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 14:34:31 -参数 : []
2019-03-22 14:34:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 14:34:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 14:34:31 -<==      Total: 0
2019-03-22 14:34:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 14:34:31 -==> Parameters: 1(Long), 0(String)
2019-03-22 14:34:31 -<==      Total: 1
2019-03-22 14:34:31 -耗时 : 72
2019-03-22 14:34:31 -返回值 : com.bootdo.common.utils.PageUtils@5a6611b4
2019-03-22 14:34:31 -请求地址 : http://localhost:8081/main
2019-03-22 14:34:31 -HTTP METHOD : GET
2019-03-22 14:34:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:34:31 -参数 : []
2019-03-22 14:34:31 -耗时 : 0
2019-03-22 14:34:31 -返回值 : main
2019-03-22 14:34:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 14:34:33 -==> Parameters: 1(Long)
2019-03-22 14:34:33 -<==      Total: 90
2019-03-22 14:34:33 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-22 14:34:33 -HTTP METHOD : GET
2019-03-22 14:34:33 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-22 14:34:33 -参数 : []
2019-03-22 14:34:33 -耗时 : 1
2019-03-22 14:34:33 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-22 14:34:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 14:34:47 -HTTP METHOD : GET
2019-03-22 14:34:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 14:34:47 -参数 : []
2019-03-22 14:34:47 -耗时 : 0
2019-03-22 14:34:47 -返回值 : system/dept/deptTree
2019-03-22 14:34:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 14:34:48 -HTTP METHOD : GET
2019-03-22 14:34:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 14:34:48 -参数 : []
2019-03-22 14:34:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 14:34:48 -==> Parameters: 
2019-03-22 14:34:48 -<==      Total: 3
2019-03-22 14:34:48 -耗时 : 45
2019-03-22 14:34:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 14:35:01 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-22 14:35:01 -HTTP METHOD : POST
2019-03-22 14:35:01 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-22 14:35:01 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@224891e2, 2019-03, 3]
2019-03-22 14:37:06 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-22 14:37:06 -==> Parameters: 1-0001(String)
2019-03-22 14:37:06 -<==      Total: 1
2019-03-22 14:37:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:37:18 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/heat/heatUpLoad/importHeatExcel(String), java.lang.ArrayIndexOutOfBoundsException: 9(String), null, 2019-03-22 14:37:18.74(Timestamp)
2019-03-22 14:37:18 -9
java.lang.ArrayIndexOutOfBoundsException: 9
	at com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(HeatUpLoadController.java:147)
	at com.bootdo.heat.controller.HeatUpLoadController$$FastClassBySpringCGLIB$$9e643945.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.heat.controller.HeatUpLoadController$$EnhancerBySpringCGLIB$$fad71dec.importHeatExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 14:37:19 -<==    Updates: 1
2019-03-22 14:37:44 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-22 14:37:44 -HTTP METHOD : POST
2019-03-22 14:37:44 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-22 14:37:44 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5efe2edb, 2019-03, 3]
2019-03-22 14:37:55 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-22 14:37:55 -==> Parameters: 1-0001(String)
2019-03-22 14:37:55 -<==      Total: 1
2019-03-22 14:38:19 -9
java.lang.ArrayIndexOutOfBoundsException: 9
	at com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(HeatUpLoadController.java:147)
	at com.bootdo.heat.controller.HeatUpLoadController$$FastClassBySpringCGLIB$$9e643945.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.heat.controller.HeatUpLoadController$$EnhancerBySpringCGLIB$$fad71dec.importHeatExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 14:38:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:38:19 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/heat/heatUpLoad/importHeatExcel(String), java.lang.ArrayIndexOutOfBoundsException: 9(String), null, 2019-03-22 14:38:19.228(Timestamp)
2019-03-22 14:38:19 -<==    Updates: 1
2019-03-22 14:39:38 -请求地址 : http://localhost:8081/index
2019-03-22 14:39:38 -HTTP METHOD : GET
2019-03-22 14:39:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 14:39:38 -参数 : [{}]
2019-03-22 14:39:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 14:39:38 -==> Parameters: 1(Long)
2019-03-22 14:39:38 -<==      Total: 46
2019-03-22 14:39:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 14:39:38 -==> Parameters: 138(Long)
2019-03-22 14:39:38 -<==      Total: 1
2019-03-22 14:39:38 -耗时 : 31
2019-03-22 14:39:38 -返回值 : index_v1
2019-03-22 14:39:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:39:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 14:39:38.712(Timestamp)
2019-03-22 14:39:38 -请求地址 : http://localhost:8081/main
2019-03-22 14:39:38 -HTTP METHOD : GET
2019-03-22 14:39:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:39:38 -参数 : []
2019-03-22 14:39:38 -耗时 : 1
2019-03-22 14:39:38 -返回值 : main
2019-03-22 14:39:38 -<==    Updates: 1
2019-03-22 14:39:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 14:39:38 -HTTP METHOD : GET
2019-03-22 14:39:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 14:39:38 -参数 : []
2019-03-22 14:39:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 14:39:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 14:39:38 -<==      Total: 0
2019-03-22 14:39:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 14:39:38 -==> Parameters: 1(Long), 0(String)
2019-03-22 14:39:38 -<==      Total: 1
2019-03-22 14:39:38 -耗时 : 9
2019-03-22 14:39:38 -返回值 : com.bootdo.common.utils.PageUtils@7561e977
2019-03-22 14:39:39 -请求地址 : http://localhost:8081/main
2019-03-22 14:39:39 -HTTP METHOD : GET
2019-03-22 14:39:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:39:39 -参数 : []
2019-03-22 14:39:39 -耗时 : 0
2019-03-22 14:39:39 -返回值 : main
2019-03-22 14:39:41 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-22 14:39:41 -HTTP METHOD : GET
2019-03-22 14:39:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-22 14:39:41 -参数 : []
2019-03-22 14:39:41 -耗时 : 2
2019-03-22 14:39:41 -返回值 : /moneyLog/elecLog/elecLog
2019-03-22 14:39:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-22 14:39:41 -HTTP METHOD : GET
2019-03-22 14:39:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-22 14:39:41 -参数 : [userType]
2019-03-22 14:39:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-22 14:39:41 -==> Parameters: userType(String)
2019-03-22 14:39:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-22 14:39:41 -HTTP METHOD : GET
2019-03-22 14:39:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-22 14:39:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-22 14:39:42 -<==      Total: 2
2019-03-22 14:39:42 -耗时 : 200
2019-03-22 14:39:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-22 14:39:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-22 14:39:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-22 14:39:42 -<==      Total: 5
2019-03-22 14:39:42 -==>  Preparing: select count(*) from elec_log 
2019-03-22 14:39:42 -==> Parameters: 
2019-03-22 14:39:42 -<==      Total: 1
2019-03-22 14:39:42 -耗时 : 604
2019-03-22 14:39:42 -返回值 : com.bootdo.common.utils.PageUtils@151fd667
2019-03-22 14:39:42 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-22 14:39:42 -HTTP METHOD : GET
2019-03-22 14:39:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-22 14:39:42 -参数 : []
2019-03-22 14:39:42 -耗时 : 1
2019-03-22 14:39:42 -返回值 : /moneyList/moneyList
2019-03-22 14:39:45 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-22 14:39:45 -HTTP METHOD : GET
2019-03-22 14:39:45 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-22 14:39:45 -参数 : []
2019-03-22 14:39:45 -耗时 : 0
2019-03-22 14:39:45 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-22 14:39:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 14:39:52 -HTTP METHOD : GET
2019-03-22 14:39:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 14:39:52 -参数 : []
2019-03-22 14:39:52 -耗时 : 0
2019-03-22 14:39:52 -返回值 : system/dept/deptTree
2019-03-22 14:39:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 14:39:52 -HTTP METHOD : GET
2019-03-22 14:39:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 14:39:52 -参数 : []
2019-03-22 14:39:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 14:39:52 -==> Parameters: 
2019-03-22 14:39:52 -<==      Total: 3
2019-03-22 14:39:52 -耗时 : 4
2019-03-22 14:39:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 14:39:55 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-22 14:39:55 -HTTP METHOD : POST
2019-03-22 14:39:55 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-22 14:39:55 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@69dbed3c, 2019-03, 3]
2019-03-22 14:40:01 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-22 14:40:01 -==> Parameters: 1-0001(String)
2019-03-22 14:40:01 -<==      Total: 1
2019-03-22 14:40:27 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 14:42:11 -请求地址 : http://localhost:8081/index
2019-03-22 14:42:11 -HTTP METHOD : GET
2019-03-22 14:42:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 14:42:11 -参数 : [{}]
2019-03-22 14:42:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 14:42:11 -==> Parameters: 1(Long)
2019-03-22 14:42:12 -<==      Total: 46
2019-03-22 14:42:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 14:42:12 -==> Parameters: 138(Long)
2019-03-22 14:42:12 -<==      Total: 1
2019-03-22 14:42:12 -耗时 : 38
2019-03-22 14:42:12 -返回值 : index_v1
2019-03-22 14:42:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:42:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 14:42:12.015(Timestamp)
2019-03-22 14:42:12 -<==    Updates: 1
2019-03-22 14:42:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 14:42:16 -9
java.lang.ArrayIndexOutOfBoundsException: 9
	at com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(HeatUpLoadController.java:147)
	at com.bootdo.heat.controller.HeatUpLoadController$$FastClassBySpringCGLIB$$9e643945.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.heat.controller.HeatUpLoadController$$EnhancerBySpringCGLIB$$fad71dec.importHeatExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-22 14:42:16 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/heat/heatUpLoad/importHeatExcel(String), java.lang.ArrayIndexOutOfBoundsException: 9(String), null, 2019-03-22 14:42:16.441(Timestamp)
2019-03-22 14:42:16 -<==    Updates: 1
2019-03-22 14:42:19 -请求地址 : http://localhost:8081/main
2019-03-22 14:42:19 -HTTP METHOD : GET
2019-03-22 14:42:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:42:19 -参数 : []
2019-03-22 14:42:19 -耗时 : 0
2019-03-22 14:42:19 -返回值 : main
2019-03-22 14:42:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 14:42:19 -HTTP METHOD : GET
2019-03-22 14:42:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 14:42:19 -参数 : []
2019-03-22 14:42:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 14:42:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 14:42:19 -<==      Total: 0
2019-03-22 14:42:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 14:42:19 -==> Parameters: 1(Long), 0(String)
2019-03-22 14:42:19 -<==      Total: 1
2019-03-22 14:42:19 -耗时 : 7
2019-03-22 14:42:19 -返回值 : com.bootdo.common.utils.PageUtils@42b5445b
2019-03-22 14:42:19 -请求地址 : http://localhost:8081/main
2019-03-22 14:42:19 -HTTP METHOD : GET
2019-03-22 14:42:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 14:42:19 -参数 : []
2019-03-22 14:42:19 -耗时 : 0
2019-03-22 14:42:19 -返回值 : main
2019-03-22 14:42:22 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-22 14:42:22 -HTTP METHOD : GET
2019-03-22 14:42:22 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-22 14:42:22 -参数 : []
2019-03-22 14:42:22 -耗时 : 0
2019-03-22 14:42:22 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-22 14:42:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 14:42:31 -HTTP METHOD : GET
2019-03-22 14:42:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 14:42:31 -参数 : []
2019-03-22 14:42:31 -耗时 : 1
2019-03-22 14:42:31 -返回值 : system/dept/deptTree
2019-03-22 14:42:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 14:42:31 -HTTP METHOD : GET
2019-03-22 14:42:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 14:42:31 -参数 : []
2019-03-22 14:42:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 14:42:31 -==> Parameters: 
2019-03-22 14:42:31 -<==      Total: 3
2019-03-22 14:42:31 -耗时 : 5
2019-03-22 14:42:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 14:42:32 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-03-22 14:42:32 -HTTP METHOD : POST
2019-03-22 14:42:32 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-03-22 14:42:32 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@67a914de, 2019-03, 3]
2019-03-22 14:42:43 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-03-22 14:42:43 -==> Parameters: 1-0001(String)
2019-03-22 14:42:43 -<==      Total: 1
2019-03-22 15:04:08 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 39], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 387]
2019-03-22 15:05:56 -Starting BootdoApplication on ZJZL-20180906VX with PID 12144 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-22 15:05:56 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-22 15:05:56 -The following profiles are active: dev
2019-03-22 15:05:56 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fffff43: startup date [Fri Mar 22 15:05:56 CST 2019]; root of context hierarchy
2019-03-22 15:06:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-22 15:06:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2fe3a1e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 15:06:03 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$223cd08a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 15:06:05 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 15:06:07 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 15:06:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 15:06:07 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-22 15:06:07 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-22 15:06:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 15:06:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 15:06:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 15:06:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-22 15:06:16 -Tomcat initialized with port(s): 8081 (http)
2019-03-22 15:06:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-22 15:06:16 -Starting service [Tomcat]
2019-03-22 15:06:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-22 15:06:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-22 15:06:19 -Initializing Spring embedded WebApplicationContext
2019-03-22 15:06:19 -Root WebApplicationContext: initialization completed in 22568 ms
2019-03-22 15:06:20 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-22 15:06:20 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-22 15:06:20 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-22 15:06:20 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-22 15:06:20 -Filter xssFilter was not registered (disabled)
2019-03-22 15:06:20 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-22 15:06:20 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-22 15:06:20 -Servlet statViewServlet mapped to [/druid/*]
2019-03-22 15:06:20 -Servlet dispatcherServlet mapped to [/]
2019-03-22 15:06:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fffff43: startup date [Fri Mar 22 15:05:56 CST 2019]; root of context hierarchy
2019-03-22 15:06:27 -Using default implementation for ThreadExecutor
2019-03-22 15:06:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-22 15:06:27 -Quartz Scheduler v.2.2.1 created.
2019-03-22 15:06:27 -RAMJobStore initialized.
2019-03-22 15:06:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-22 15:06:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-22 15:06:27 -Quartz scheduler version: 2.2.1
2019-03-22 15:06:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3991fe6d
2019-03-22 15:06:27 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-22 15:06:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-22 15:06:32 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-22 15:06:32 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-22 15:06:32 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-22 15:06:32 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-22 15:06:32 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-22 15:06:32 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-22 15:06:32 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-22 15:06:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-22 15:06:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-22 15:06:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-22 15:06:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-22 15:06:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-22 15:06:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-22 15:06:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-22 15:06:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-22 15:06:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-22 15:06:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-22 15:06:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-22 15:06:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-22 15:06:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-22 15:06:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 15:06:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-22 15:06:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-22 15:06:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-22 15:06:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-22 15:06:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-22 15:06:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-22 15:06:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-22 15:06:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-22 15:06:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-22 15:06:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-22 15:06:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 15:06:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 15:06:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-22 15:06:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-22 15:06:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-22 15:06:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-22 15:06:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-22 15:06:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 15:06:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-22 15:06:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-22 15:06:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-22 15:06:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-22 15:06:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-22 15:06:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-22 15:06:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-22 15:06:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-22 15:06:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-22 15:06:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-22 15:06:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-22 15:06:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-22 15:06:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-22 15:06:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-22 15:06:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-22 15:06:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 15:06:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-22 15:06:32 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 15:06:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-22 15:06:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 15:06:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-22 15:06:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-22 15:06:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-03-22 15:06:32 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-03-22 15:06:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-22 15:06:32 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-22 15:06:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-22 15:06:32 -Mapped "{[/moneyList/moneyList/UserList],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-22 15:06:32 -Mapped "{[/moneyList/moneyList/LikeName],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.LikeName(org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-22 15:06:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-22 15:06:32 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-22 15:06:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-22 15:06:32 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-22 15:06:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-22 15:06:32 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 15:06:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-22 15:06:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-22 15:06:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-22 15:06:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-22 15:06:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-22 15:06:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-22 15:06:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-22 15:06:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-22 15:06:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-22 15:06:32 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-22 15:06:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-22 15:06:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-22 15:06:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-22 15:06:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-22 15:06:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-22 15:06:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-22 15:06:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-22 15:06:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-22 15:06:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-22 15:06:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-22 15:06:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 15:06:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-22 15:06:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-22 15:06:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-22 15:06:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-22 15:06:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-22 15:06:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-22 15:06:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-22 15:06:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-22 15:06:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-22 15:06:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-22 15:06:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-22 15:06:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-22 15:06:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-22 15:06:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-22 15:06:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-22 15:06:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-22 15:06:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-22 15:06:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 15:06:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-22 15:06:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 15:06:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-22 15:06:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-22 15:06:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-22 15:06:32 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-22 15:06:32 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-22 15:06:32 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 15:06:32 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-22 15:06:32 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-22 15:06:32 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-22 15:06:32 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-22 15:06:32 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-22 15:06:32 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 15:06:32 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-22 15:06:32 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-22 15:06:32 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-22 15:06:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-22 15:06:32 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-22 15:06:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-22 15:06:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-22 15:06:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-22 15:06:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-22 15:06:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-22 15:06:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-22 15:06:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-22 15:06:34 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 15:06:35 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3fffff43: startup date [Fri Mar 22 15:05:56 CST 2019]; root of context hierarchy
2019-03-22 15:06:35 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 15:06:35 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 15:06:35 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-22 15:06:35 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-22 15:06:35 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-22 15:06:38 -Registering beans for JMX exposure on startup
2019-03-22 15:06:38 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-22 15:06:38 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-22 15:06:38 -Starting beans in phase 2147483647
2019-03-22 15:06:38 -Context refreshed
2019-03-22 15:06:38 -Found 1 custom documentation plugin(s)
2019-03-22 15:06:38 -Scanning for api listing references
2019-03-22 15:06:39 -Generating unique operation named: removeUsingPOST_1
2019-03-22 15:06:39 -Generating unique operation named: addUsingGET_1
2019-03-22 15:06:39 -Generating unique operation named: editUsingGET_1
2019-03-22 15:06:39 -Generating unique operation named: listUsingGET_1
2019-03-22 15:06:39 -Generating unique operation named: removeUsingPOST_2
2019-03-22 15:06:39 -Generating unique operation named: removeUsingPOST_3
2019-03-22 15:06:39 -Generating unique operation named: saveUsingPOST_1
2019-03-22 15:06:39 -Generating unique operation named: updateUsingGET_1
2019-03-22 15:06:39 -Generating unique operation named: updateUsingHEAD_1
2019-03-22 15:06:39 -Generating unique operation named: updateUsingPOST_1
2019-03-22 15:06:39 -Generating unique operation named: updateUsingPUT_1
2019-03-22 15:06:39 -Generating unique operation named: updateUsingPATCH_1
2019-03-22 15:06:39 -Generating unique operation named: updateUsingDELETE_1
2019-03-22 15:06:39 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-22 15:06:39 -Generating unique operation named: updateUsingTRACE_1
2019-03-22 15:06:39 -Generating unique operation named: addUsingGET_2
2019-03-22 15:06:39 -Generating unique operation named: editUsingGET_2
2019-03-22 15:06:39 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-22 15:06:39 -Generating unique operation named: listUsingGET_2
2019-03-22 15:06:39 -Generating unique operation named: removeUsingPOST_4
2019-03-22 15:06:39 -Generating unique operation named: removeUsingPOST_5
2019-03-22 15:06:39 -Generating unique operation named: saveUsingPOST_2
2019-03-22 15:06:39 -Generating unique operation named: updateUsingGET_2
2019-03-22 15:06:39 -Generating unique operation named: updateUsingHEAD_2
2019-03-22 15:06:39 -Generating unique operation named: updateUsingPOST_2
2019-03-22 15:06:39 -Generating unique operation named: updateUsingPUT_2
2019-03-22 15:06:39 -Generating unique operation named: updateUsingPATCH_2
2019-03-22 15:06:39 -Generating unique operation named: updateUsingDELETE_2
2019-03-22 15:06:39 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-22 15:06:39 -Generating unique operation named: updateUsingTRACE_2
2019-03-22 15:06:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-22 15:06:39 -Generating unique operation named: addUsingGET_3
2019-03-22 15:06:39 -Generating unique operation named: editUsingGET_3
2019-03-22 15:06:39 -Generating unique operation named: listUsingGET_3
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_6
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_7
2019-03-22 15:06:40 -Generating unique operation named: saveUsingPOST_3
2019-03-22 15:06:40 -Generating unique operation named: updateUsingGET_3
2019-03-22 15:06:40 -Generating unique operation named: updateUsingHEAD_3
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPOST_3
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPUT_3
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPATCH_3
2019-03-22 15:06:40 -Generating unique operation named: updateUsingDELETE_3
2019-03-22 15:06:40 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-22 15:06:40 -Generating unique operation named: updateUsingTRACE_3
2019-03-22 15:06:40 -Generating unique operation named: addUsingGET_4
2019-03-22 15:06:40 -Generating unique operation named: editUsingGET_4
2019-03-22 15:06:40 -Generating unique operation named: listUsingGET_4
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_8
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_9
2019-03-22 15:06:40 -Generating unique operation named: saveUsingPOST_4
2019-03-22 15:06:40 -Generating unique operation named: updateUsingGET_4
2019-03-22 15:06:40 -Generating unique operation named: updateUsingHEAD_4
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPOST_4
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPUT_4
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPATCH_4
2019-03-22 15:06:40 -Generating unique operation named: updateUsingDELETE_4
2019-03-22 15:06:40 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-22 15:06:40 -Generating unique operation named: updateUsingTRACE_4
2019-03-22 15:06:40 -Generating unique operation named: ElecUsingGET_1
2019-03-22 15:06:40 -Generating unique operation named: addUsingGET_5
2019-03-22 15:06:40 -Generating unique operation named: editUsingGET_5
2019-03-22 15:06:40 -Generating unique operation named: listUsingGET_5
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_10
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_11
2019-03-22 15:06:40 -Generating unique operation named: saveUsingPOST_5
2019-03-22 15:06:40 -Generating unique operation named: updateUsingGET_5
2019-03-22 15:06:40 -Generating unique operation named: updateUsingHEAD_5
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPOST_5
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPUT_5
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPATCH_5
2019-03-22 15:06:40 -Generating unique operation named: updateUsingDELETE_5
2019-03-22 15:06:40 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-22 15:06:40 -Generating unique operation named: updateUsingTRACE_5
2019-03-22 15:06:40 -Generating unique operation named: editUsingGET_6
2019-03-22 15:06:40 -Generating unique operation named: listUsingGET_6
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPOST_6
2019-03-22 15:06:40 -Generating unique operation named: addUsingGET_6
2019-03-22 15:06:40 -Generating unique operation named: editUsingGET_7
2019-03-22 15:06:40 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-22 15:06:40 -Generating unique operation named: listUsingGET_7
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_12
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_13
2019-03-22 15:06:40 -Generating unique operation named: saveUsingPOST_6
2019-03-22 15:06:40 -Generating unique operation named: updateUsingGET_6
2019-03-22 15:06:40 -Generating unique operation named: updateUsingHEAD_6
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPOST_7
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPUT_6
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPATCH_6
2019-03-22 15:06:40 -Generating unique operation named: updateUsingDELETE_6
2019-03-22 15:06:40 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-22 15:06:40 -Generating unique operation named: updateUsingTRACE_6
2019-03-22 15:06:40 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-22 15:06:40 -Generating unique operation named: addUsingGET_7
2019-03-22 15:06:40 -Generating unique operation named: editUsingGET_8
2019-03-22 15:06:40 -Generating unique operation named: listUsingGET_8
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_14
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_15
2019-03-22 15:06:40 -Generating unique operation named: saveUsingPOST_7
2019-03-22 15:06:40 -Generating unique operation named: updateUsingGET_7
2019-03-22 15:06:40 -Generating unique operation named: updateUsingHEAD_7
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPOST_8
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPUT_7
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPATCH_7
2019-03-22 15:06:40 -Generating unique operation named: updateUsingDELETE_7
2019-03-22 15:06:40 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-22 15:06:40 -Generating unique operation named: updateUsingTRACE_7
2019-03-22 15:06:40 -Generating unique operation named: addUsingGET_8
2019-03-22 15:06:40 -Generating unique operation named: editUsingGET_9
2019-03-22 15:06:40 -Generating unique operation named: listUsingGET_9
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_16
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_17
2019-03-22 15:06:40 -Generating unique operation named: saveUsingPOST_8
2019-03-22 15:06:40 -Generating unique operation named: updateUsingGET_8
2019-03-22 15:06:40 -Generating unique operation named: updateUsingHEAD_8
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPOST_9
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPUT_8
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPATCH_8
2019-03-22 15:06:40 -Generating unique operation named: updateUsingDELETE_8
2019-03-22 15:06:40 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-22 15:06:40 -Generating unique operation named: updateUsingTRACE_8
2019-03-22 15:06:40 -Generating unique operation named: addUsingGET_9
2019-03-22 15:06:40 -Generating unique operation named: editUsingGET_10
2019-03-22 15:06:40 -Generating unique operation named: infoUsingGET_1
2019-03-22 15:06:40 -Generating unique operation named: infoUsingHEAD_1
2019-03-22 15:06:40 -Generating unique operation named: infoUsingPOST_1
2019-03-22 15:06:40 -Generating unique operation named: infoUsingPUT_1
2019-03-22 15:06:40 -Generating unique operation named: infoUsingPATCH_1
2019-03-22 15:06:40 -Generating unique operation named: infoUsingDELETE_1
2019-03-22 15:06:40 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-22 15:06:40 -Generating unique operation named: infoUsingTRACE_1
2019-03-22 15:06:40 -Generating unique operation named: listUsingGET_10
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_18
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_19
2019-03-22 15:06:40 -Generating unique operation named: saveUsingPOST_9
2019-03-22 15:06:40 -Generating unique operation named: updateUsingPOST_10
2019-03-22 15:06:40 -Generating unique operation named: listUsingGET_11
2019-03-22 15:06:40 -Generating unique operation named: removeUsingPOST_20
2019-03-22 15:06:40 -Generating unique operation named: welcomeUsingGET_1
2019-03-22 15:06:41 -Generating unique operation named: addUsingGET_10
2019-03-22 15:06:41 -Generating unique operation named: editUsingGET_11
2019-03-22 15:06:41 -Generating unique operation named: listUsingGET_12
2019-03-22 15:06:41 -Generating unique operation named: removeUsingPOST_21
2019-03-22 15:06:41 -Generating unique operation named: saveUsingPOST_10
2019-03-22 15:06:41 -Generating unique operation named: treeUsingGET_1
2019-03-22 15:06:41 -Generating unique operation named: treeUsingGET_2
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPOST_11
2019-03-22 15:06:41 -Generating unique operation named: addUsingGET_11
2019-03-22 15:06:41 -Generating unique operation named: editUsingGET_12
2019-03-22 15:06:41 -Generating unique operation named: listUsingGET_13
2019-03-22 15:06:41 -Generating unique operation named: removeUsingPOST_22
2019-03-22 15:06:41 -Generating unique operation named: removeUsingPOST_23
2019-03-22 15:06:41 -Generating unique operation named: saveUsingPOST_11
2019-03-22 15:06:41 -Generating unique operation named: updateUsingGET_9
2019-03-22 15:06:41 -Generating unique operation named: updateUsingHEAD_9
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPOST_12
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPUT_9
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPATCH_9
2019-03-22 15:06:41 -Generating unique operation named: updateUsingDELETE_9
2019-03-22 15:06:41 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-22 15:06:41 -Generating unique operation named: updateUsingTRACE_9
2019-03-22 15:06:41 -Generating unique operation named: addUsingGET_12
2019-03-22 15:06:41 -Generating unique operation named: editUsingGET_13
2019-03-22 15:06:41 -Generating unique operation named: listUsingGET_14
2019-03-22 15:06:41 -Generating unique operation named: removeUsingPOST_24
2019-03-22 15:06:41 -Generating unique operation named: removeUsingPOST_25
2019-03-22 15:06:41 -Generating unique operation named: saveUsingPOST_12
2019-03-22 15:06:41 -Generating unique operation named: updateUsingGET_10
2019-03-22 15:06:41 -Generating unique operation named: updateUsingHEAD_10
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPOST_13
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPUT_10
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPATCH_10
2019-03-22 15:06:41 -Generating unique operation named: updateUsingDELETE_10
2019-03-22 15:06:41 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-22 15:06:41 -Generating unique operation named: updateUsingTRACE_10
2019-03-22 15:06:41 -Generating unique operation named: addUsingGET_13
2019-03-22 15:06:41 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-22 15:06:41 -Generating unique operation named: editUsingGET_14
2019-03-22 15:06:41 -Generating unique operation named: listUsingGET_15
2019-03-22 15:06:41 -Generating unique operation named: saveUsingPOST_13
2019-03-22 15:06:41 -Generating unique operation named: saveUsingPOST_14
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPOST_14
2019-03-22 15:06:41 -Generating unique operation named: listUsingGET_16
2019-03-22 15:06:41 -Generating unique operation named: listUsingHEAD_1
2019-03-22 15:06:41 -Generating unique operation named: listUsingPOST_1
2019-03-22 15:06:41 -Generating unique operation named: listUsingPUT_1
2019-03-22 15:06:41 -Generating unique operation named: listUsingPATCH_1
2019-03-22 15:06:41 -Generating unique operation named: listUsingDELETE_1
2019-03-22 15:06:41 -Generating unique operation named: listUsingOPTIONS_1
2019-03-22 15:06:41 -Generating unique operation named: listUsingTRACE_1
2019-03-22 15:06:41 -Generating unique operation named: addUsingGET_14
2019-03-22 15:06:41 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-22 15:06:41 -Generating unique operation named: editUsingGET_15
2019-03-22 15:06:41 -Generating unique operation named: listUsingGET_17
2019-03-22 15:06:41 -Generating unique operation named: removeUsingPOST_26
2019-03-22 15:06:41 -Generating unique operation named: saveUsingPOST_15
2019-03-22 15:06:41 -Generating unique operation named: treeUsingGET_3
2019-03-22 15:06:41 -Generating unique operation named: treeViewUsingGET_1
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPOST_15
2019-03-22 15:06:41 -Generating unique operation named: addUsingGET_15
2019-03-22 15:06:41 -Generating unique operation named: editUsingGET_16
2019-03-22 15:06:41 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-22 15:06:41 -Generating unique operation named: listUsingGET_18
2019-03-22 15:06:41 -Generating unique operation named: removeUsingPOST_27
2019-03-22 15:06:41 -Generating unique operation named: removeUsingPOST_28
2019-03-22 15:06:41 -Generating unique operation named: saveUsingPOST_16
2019-03-22 15:06:41 -Generating unique operation named: updateUsingGET_11
2019-03-22 15:06:41 -Generating unique operation named: updateUsingHEAD_11
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPOST_16
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPUT_11
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPATCH_11
2019-03-22 15:06:41 -Generating unique operation named: updateUsingDELETE_11
2019-03-22 15:06:41 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-22 15:06:41 -Generating unique operation named: updateUsingTRACE_11
2019-03-22 15:06:41 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-22 15:06:41 -Generating unique operation named: addUsingGET_16
2019-03-22 15:06:41 -Generating unique operation named: editUsingGET_17
2019-03-22 15:06:41 -Generating unique operation named: listUsingGET_19
2019-03-22 15:06:41 -Generating unique operation named: removeUsingPOST_29
2019-03-22 15:06:41 -Generating unique operation named: removeUsingPOST_30
2019-03-22 15:06:41 -Generating unique operation named: saveUsingPOST_17
2019-03-22 15:06:41 -Generating unique operation named: updateUsingGET_12
2019-03-22 15:06:41 -Generating unique operation named: updateUsingHEAD_12
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPOST_17
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPUT_12
2019-03-22 15:06:41 -Generating unique operation named: updateUsingPATCH_12
2019-03-22 15:06:41 -Generating unique operation named: updateUsingDELETE_12
2019-03-22 15:06:41 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-22 15:06:41 -Generating unique operation named: updateUsingTRACE_12
2019-03-22 15:06:41 -Generating unique operation named: addUsingGET_17
2019-03-22 15:06:41 -Generating unique operation named: editUsingGET_18
2019-03-22 15:06:41 -Generating unique operation named: listUsingGET_20
2019-03-22 15:06:41 -Generating unique operation named: removeUsingPOST_31
2019-03-22 15:06:42 -Generating unique operation named: removeUsingPOST_32
2019-03-22 15:06:42 -Generating unique operation named: saveUsingPOST_18
2019-03-22 15:06:42 -Generating unique operation named: updateUsingGET_13
2019-03-22 15:06:42 -Generating unique operation named: updateUsingHEAD_13
2019-03-22 15:06:42 -Generating unique operation named: updateUsingPOST_18
2019-03-22 15:06:42 -Generating unique operation named: updateUsingPUT_13
2019-03-22 15:06:42 -Generating unique operation named: updateUsingPATCH_13
2019-03-22 15:06:42 -Generating unique operation named: updateUsingDELETE_13
2019-03-22 15:06:42 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-22 15:06:42 -Generating unique operation named: updateUsingTRACE_13
2019-03-22 15:06:42 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-22 15:06:42 -Starting Quartz Scheduler now
2019-03-22 15:06:42 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-22 15:06:42 -Starting...
2019-03-22 15:06:42 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-22 15:06:42 -Started.
2019-03-22 15:06:42 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-22 15:06:42 -Using a shared selector for servlet write/read
2019-03-22 15:06:42 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-22 15:06:42 -Started BootdoApplication in 48.233 seconds (JVM running for 50.061)
2019-03-22 15:06:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-22 15:06:42 -==> Parameters: 
2019-03-22 15:06:42 -<==      Total: 1
2019-03-22 15:07:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-22 15:08:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-22 15:08:20 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-22 15:08:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2019-03-22 15:08:20 -Enabling session validation scheduler...
2019-03-22 15:08:20 -请求地址 : http://localhost:8081/
2019-03-22 15:08:20 -HTTP METHOD : GET
2019-03-22 15:08:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-22 15:08:20 -参数 : [{}]
2019-03-22 15:08:20 -耗时 : 3
2019-03-22 15:08:20 -返回值 : redirect:/index
2019-03-22 15:08:21 -请求地址 : http://localhost:8081/login;JSESSIONID=33e9ed1e-c559-46d7-ad02-76d9d0c27979
2019-03-22 15:08:21 -HTTP METHOD : GET
2019-03-22 15:08:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-22 15:08:21 -参数 : [{}]
2019-03-22 15:08:21 -耗时 : 1
2019-03-22 15:08:21 -返回值 : login
2019-03-22 15:08:24 -请求地址 : http://localhost:8081/getVerify
2019-03-22 15:08:24 -HTTP METHOD : GET
2019-03-22 15:08:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-22 15:08:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5de9b674, org.apache.shiro.web.servlet.ShiroHttpServletResponse@791e0620]
2019-03-22 15:08:43 -4891
2019-03-22 15:08:44 -耗时 : 20027
2019-03-22 15:08:44 -返回值 : null
2019-03-22 15:08:52 -请求地址 : http://localhost:8081/login
2019-03-22 15:08:52 -HTTP METHOD : POST
2019-03-22 15:08:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-22 15:08:52 -参数 : [admin, 111111, 4891, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d9957fa]
2019-03-22 15:08:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-22 15:08:55 -==> Parameters: admin(String)
2019-03-22 15:08:56 -<==      Total: 1
2019-03-22 15:08:56 -耗时 : 4216
2019-03-22 15:08:56 -返回值 : {msg=操作成功, code=0}
2019-03-22 15:08:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-22 15:08:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 15:08:57 -==> Parameters: 1(Long), admin(String), 登录(String), 4216(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-22 15:08:57.396(Timestamp)
2019-03-22 15:08:57 -<==    Updates: 1
2019-03-22 15:08:57 -请求地址 : http://localhost:8081/index
2019-03-22 15:08:57 -HTTP METHOD : GET
2019-03-22 15:08:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-22 15:08:57 -参数 : [{}]
2019-03-22 15:08:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-22 15:08:58 -==> Parameters: 1(Long)
2019-03-22 15:08:58 -<==      Total: 46
2019-03-22 15:08:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-22 15:08:58 -==> Parameters: 138(Long)
2019-03-22 15:08:58 -<==      Total: 1
2019-03-22 15:08:58 -耗时 : 1002
2019-03-22 15:08:58 -返回值 : index_v1
2019-03-22 15:08:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-22 15:08:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1002(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-22 15:08:59.13(Timestamp)
2019-03-22 15:08:59 -<==    Updates: 1
2019-03-22 15:08:59 -请求地址 : http://localhost:8081/main
2019-03-22 15:08:59 -HTTP METHOD : GET
2019-03-22 15:08:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 15:08:59 -参数 : []
2019-03-22 15:08:59 -耗时 : 0
2019-03-22 15:08:59 -返回值 : main
2019-03-22 15:09:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-22 15:09:00 -HTTP METHOD : GET
2019-03-22 15:09:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-22 15:09:00 -参数 : []
2019-03-22 15:09:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-22 15:09:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-22 15:09:00 -请求地址 : http://localhost:8081/main
2019-03-22 15:09:00 -HTTP METHOD : GET
2019-03-22 15:09:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-22 15:09:00 -参数 : []
2019-03-22 15:09:00 -耗时 : 1
2019-03-22 15:09:00 -返回值 : main
2019-03-22 15:09:01 -<==      Total: 0
2019-03-22 15:09:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-22 15:09:01 -==> Parameters: 1(Long), 0(String)
2019-03-22 15:09:01 -<==      Total: 1
2019-03-22 15:09:01 -耗时 : 637
2019-03-22 15:09:01 -返回值 : com.bootdo.common.utils.PageUtils@7207cf2d
2019-03-22 15:09:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 15:09:08 -==> Parameters: 1(Long)
2019-03-22 15:09:08 -<==      Total: 90
2019-03-22 15:09:08 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-22 15:09:08 -HTTP METHOD : GET
2019-03-22 15:09:08 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-22 15:09:08 -参数 : []
2019-03-22 15:09:08 -耗时 : 0
2019-03-22 15:09:08 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-22 15:09:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-22 15:09:20 -HTTP METHOD : GET
2019-03-22 15:09:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-22 15:09:20 -参数 : []
2019-03-22 15:09:20 -耗时 : 2
2019-03-22 15:09:20 -返回值 : system/dept/deptTree
2019-03-22 15:09:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-22 15:09:20 -HTTP METHOD : GET
2019-03-22 15:09:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-22 15:09:20 -参数 : []
2019-03-22 15:09:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-22 15:09:20 -==> Parameters: 
2019-03-22 15:09:20 -<==      Total: 3
2019-03-22 15:09:20 -耗时 : 83
2019-03-22 15:09:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-22 15:09:24 -请求地址 : http://localhost:8081/heat/heatUpLoad/exprotHeatExcel
2019-03-22 15:09:24 -HTTP METHOD : GET
2019-03-22 15:09:24 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel
2019-03-22 15:09:24 -参数 : [com.bootdo.heat.vo.HeatVo@1de68005, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1db064ed]
2019-03-22 15:09:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_org = ? and create_time = ? 
2019-03-22 15:09:24 -==> Parameters: 3(String), 2019-03(String)
2019-03-22 15:09:24 -<==      Total: 6
2019-03-22 15:09:25 -耗时 : 1420
2019-03-22 15:09:25 -返回值 : null
2019-03-22 15:37:33 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 412]
2019-03-22 15:39:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-22 15:39:07 -==> Parameters: 1(Long)
2019-03-22 15:39:07 -<==      Total: 90
2019-03-22 15:39:07 -请求地址 : http://localhost:8081/water/waterUpLoad
2019-03-22 15:39:07 -HTTP METHOD : GET
2019-03-22 15:39:07 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad
2019-03-22 15:39:07 -参数 : []
2019-03-22 15:39:07 -耗时 : 1
2019-03-22 15:39:07 -返回值 : water/waterUpLoad/waterUpLoad
2019-03-22 16:07:33 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 845]
2019-03-22 16:08:20 -Validating all active sessions...
2019-03-22 16:08:20 -Finished session validation.  No sessions were stopped.

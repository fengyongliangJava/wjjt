2019-03-20 08:37:28 -Starting BootdoApplication on ZJZL-20180906VX with PID 14152 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 08:37:28 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 08:37:28 -The following profiles are active: dev
2019-03-20 08:37:29 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Wed Mar 20 08:37:29 CST 2019]; root of context hierarchy
2019-03-20 08:37:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 08:37:48 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$78f31768] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 08:37:48 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6b4c460f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 08:37:49 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 08:37:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 08:37:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 08:37:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 08:37:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 08:37:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 08:37:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 08:37:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 08:37:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 08:37:52 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 08:37:52 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 08:37:52 -Starting service [Tomcat]
2019-03-20 08:37:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 08:37:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 08:37:53 -Initializing Spring embedded WebApplicationContext
2019-03-20 08:37:53 -Root WebApplicationContext: initialization completed in 24184 ms
2019-03-20 08:37:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 08:37:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 08:37:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 08:37:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 08:37:54 -Filter xssFilter was not registered (disabled)
2019-03-20 08:37:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 08:37:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 08:37:54 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 08:37:54 -Servlet dispatcherServlet mapped to [/]
2019-03-20 08:37:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Wed Mar 20 08:37:29 CST 2019]; root of context hierarchy
2019-03-20 08:37:59 -Using default implementation for ThreadExecutor
2019-03-20 08:37:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 08:37:59 -Quartz Scheduler v.2.2.1 created.
2019-03-20 08:37:59 -RAMJobStore initialized.
2019-03-20 08:37:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 08:37:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 08:37:59 -Quartz scheduler version: 2.2.1
2019-03-20 08:37:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@51b59d58
2019-03-20 08:38:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 08:38:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 08:38:03 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 08:38:03 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 08:38:03 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 08:38:03 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 08:38:03 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 08:38:03 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 08:38:03 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 08:38:03 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 08:38:03 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 08:38:03 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 08:38:03 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 08:38:03 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 08:38:03 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 08:38:03 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 08:38:03 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 08:38:03 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 08:38:03 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 08:38:03 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 08:38:03 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 08:38:03 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 08:38:03 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 08:38:03 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 08:38:03 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 08:38:03 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 08:38:03 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 08:38:03 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 08:38:03 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 08:38:03 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 08:38:03 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 08:38:03 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 08:38:03 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 08:38:03 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 08:38:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 08:38:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 08:38:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 08:38:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 08:38:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 08:38:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 08:38:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 08:38:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 08:38:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 08:38:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 08:38:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 08:38:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 08:38:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 08:38:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 08:38:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 08:38:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 08:38:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 08:38:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 08:38:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 08:38:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 08:38:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 08:38:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 08:38:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 08:38:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 08:38:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 08:38:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 08:38:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 08:38:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 08:38:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 08:38:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 08:38:03 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 08:38:03 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 08:38:03 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 08:38:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 08:38:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 08:38:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 08:38:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 08:38:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 08:38:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 08:38:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 08:38:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 08:38:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 08:38:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 08:38:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 08:38:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 08:38:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 08:38:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 08:38:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 08:38:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 08:38:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 08:38:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 08:38:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 08:38:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 08:38:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 08:38:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 08:38:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 08:38:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 08:38:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 08:38:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 08:38:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 08:38:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 08:38:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 08:38:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 08:38:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 08:38:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 08:38:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 08:38:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 08:38:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 08:38:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 08:38:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 08:38:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 08:38:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 08:38:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 08:38:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 08:38:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 08:38:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 08:38:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 08:38:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 08:38:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 08:38:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 08:38:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 08:38:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 08:38:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 08:38:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 08:38:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 08:38:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 08:38:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 08:38:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 08:38:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 08:38:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 08:38:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 08:38:04 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 08:38:04 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 08:38:04 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 08:38:04 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 08:38:04 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 08:38:04 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:04 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 08:38:04 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:04 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 08:38:04 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:04 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 08:38:04 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 08:38:04 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 08:38:04 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 08:38:04 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 08:38:04 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 08:38:04 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 08:38:04 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:04 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 08:38:04 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 08:38:04 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 08:38:04 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 08:38:04 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 08:38:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 08:38:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 08:38:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 08:38:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 08:38:04 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 08:38:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 08:38:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 08:38:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 08:38:06 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Wed Mar 20 08:37:29 CST 2019]; root of context hierarchy
2019-03-20 08:38:06 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 08:38:06 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 08:38:06 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 08:38:06 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 08:38:06 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 08:38:10 -Registering beans for JMX exposure on startup
2019-03-20 08:38:10 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 08:38:10 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 08:38:10 -Starting beans in phase 2147483647
2019-03-20 08:38:10 -Context refreshed
2019-03-20 08:38:10 -Found 1 custom documentation plugin(s)
2019-03-20 08:38:10 -Scanning for api listing references
2019-03-20 08:38:11 -Generating unique operation named: removeUsingPOST_1
2019-03-20 08:38:11 -Generating unique operation named: addUsingGET_1
2019-03-20 08:38:11 -Generating unique operation named: editUsingGET_1
2019-03-20 08:38:11 -Generating unique operation named: listUsingGET_1
2019-03-20 08:38:11 -Generating unique operation named: removeUsingPOST_2
2019-03-20 08:38:11 -Generating unique operation named: removeUsingPOST_3
2019-03-20 08:38:11 -Generating unique operation named: saveUsingPOST_1
2019-03-20 08:38:11 -Generating unique operation named: updateUsingGET_1
2019-03-20 08:38:11 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 08:38:11 -Generating unique operation named: updateUsingPOST_1
2019-03-20 08:38:11 -Generating unique operation named: updateUsingPUT_1
2019-03-20 08:38:11 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 08:38:11 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 08:38:11 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 08:38:11 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 08:38:11 -Generating unique operation named: addUsingGET_2
2019-03-20 08:38:11 -Generating unique operation named: editUsingGET_2
2019-03-20 08:38:11 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 08:38:11 -Generating unique operation named: listUsingGET_2
2019-03-20 08:38:11 -Generating unique operation named: removeUsingPOST_4
2019-03-20 08:38:11 -Generating unique operation named: removeUsingPOST_5
2019-03-20 08:38:11 -Generating unique operation named: saveUsingPOST_2
2019-03-20 08:38:11 -Generating unique operation named: updateUsingGET_2
2019-03-20 08:38:11 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 08:38:11 -Generating unique operation named: updateUsingPOST_2
2019-03-20 08:38:11 -Generating unique operation named: updateUsingPUT_2
2019-03-20 08:38:11 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 08:38:11 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 08:38:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 08:38:11 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 08:38:11 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 08:38:11 -Generating unique operation named: addUsingGET_3
2019-03-20 08:38:11 -Generating unique operation named: editUsingGET_3
2019-03-20 08:38:11 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 08:38:11 -Generating unique operation named: listUsingGET_3
2019-03-20 08:38:11 -Generating unique operation named: removeUsingPOST_6
2019-03-20 08:38:12 -Generating unique operation named: removeUsingPOST_7
2019-03-20 08:38:12 -Generating unique operation named: saveUsingPOST_3
2019-03-20 08:38:12 -Generating unique operation named: updateUsingGET_3
2019-03-20 08:38:12 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 08:38:12 -Generating unique operation named: updateUsingPOST_3
2019-03-20 08:38:12 -Generating unique operation named: updateUsingPUT_3
2019-03-20 08:38:12 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 08:38:12 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 08:38:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 08:38:12 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 08:38:12 -Generating unique operation named: addUsingGET_4
2019-03-20 08:38:12 -Generating unique operation named: editUsingGET_4
2019-03-20 08:38:12 -Generating unique operation named: listUsingGET_4
2019-03-20 08:38:12 -Generating unique operation named: removeUsingPOST_8
2019-03-20 08:38:12 -Generating unique operation named: removeUsingPOST_9
2019-03-20 08:38:12 -Generating unique operation named: saveUsingPOST_4
2019-03-20 08:38:12 -Generating unique operation named: updateUsingGET_4
2019-03-20 08:38:12 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 08:38:12 -Generating unique operation named: updateUsingPOST_4
2019-03-20 08:38:12 -Generating unique operation named: updateUsingPUT_4
2019-03-20 08:38:12 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 08:38:12 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 08:38:12 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 08:38:12 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 08:38:12 -Generating unique operation named: ElecUsingGET_1
2019-03-20 08:38:12 -Generating unique operation named: addUsingGET_5
2019-03-20 08:38:12 -Generating unique operation named: editUsingGET_5
2019-03-20 08:38:12 -Generating unique operation named: listUsingGET_5
2019-03-20 08:38:12 -Generating unique operation named: removeUsingPOST_10
2019-03-20 08:38:12 -Generating unique operation named: removeUsingPOST_11
2019-03-20 08:38:12 -Generating unique operation named: saveUsingPOST_5
2019-03-20 08:38:12 -Generating unique operation named: updateUsingGET_5
2019-03-20 08:38:12 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 08:38:12 -Generating unique operation named: updateUsingPOST_5
2019-03-20 08:38:12 -Generating unique operation named: updateUsingPUT_5
2019-03-20 08:38:12 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 08:38:12 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 08:38:12 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 08:38:12 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 08:38:13 -Generating unique operation named: editUsingGET_6
2019-03-20 08:38:13 -Generating unique operation named: listUsingGET_6
2019-03-20 08:38:13 -Generating unique operation named: updateUsingPOST_6
2019-03-20 08:38:13 -Generating unique operation named: addUsingGET_6
2019-03-20 08:38:13 -Generating unique operation named: editUsingGET_7
2019-03-20 08:38:13 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 08:38:13 -Generating unique operation named: listUsingGET_7
2019-03-20 08:38:13 -Generating unique operation named: removeUsingPOST_12
2019-03-20 08:38:13 -Generating unique operation named: removeUsingPOST_13
2019-03-20 08:38:13 -Generating unique operation named: saveUsingPOST_6
2019-03-20 08:38:13 -Generating unique operation named: updateUsingGET_6
2019-03-20 08:38:13 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 08:38:13 -Generating unique operation named: updateUsingPOST_7
2019-03-20 08:38:13 -Generating unique operation named: updateUsingPUT_6
2019-03-20 08:38:13 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 08:38:13 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 08:38:13 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 08:38:13 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 08:38:13 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 08:38:13 -Generating unique operation named: addUsingGET_7
2019-03-20 08:38:13 -Generating unique operation named: editUsingGET_8
2019-03-20 08:38:13 -Generating unique operation named: listUsingGET_8
2019-03-20 08:38:13 -Generating unique operation named: removeUsingPOST_14
2019-03-20 08:38:13 -Generating unique operation named: removeUsingPOST_15
2019-03-20 08:38:13 -Generating unique operation named: saveUsingPOST_7
2019-03-20 08:38:13 -Generating unique operation named: updateUsingGET_7
2019-03-20 08:38:13 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 08:38:13 -Generating unique operation named: updateUsingPOST_8
2019-03-20 08:38:13 -Generating unique operation named: updateUsingPUT_7
2019-03-20 08:38:13 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 08:38:13 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 08:38:13 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 08:38:13 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 08:38:13 -Generating unique operation named: addUsingGET_8
2019-03-20 08:38:13 -Generating unique operation named: editUsingGET_9
2019-03-20 08:38:13 -Generating unique operation named: listUsingGET_9
2019-03-20 08:38:13 -Generating unique operation named: removeUsingPOST_16
2019-03-20 08:38:13 -Generating unique operation named: removeUsingPOST_17
2019-03-20 08:38:13 -Generating unique operation named: saveUsingPOST_8
2019-03-20 08:38:13 -Generating unique operation named: updateUsingGET_8
2019-03-20 08:38:13 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 08:38:13 -Generating unique operation named: updateUsingPOST_9
2019-03-20 08:38:13 -Generating unique operation named: updateUsingPUT_8
2019-03-20 08:38:13 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 08:38:13 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 08:38:13 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 08:38:13 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 08:38:13 -Generating unique operation named: addUsingGET_9
2019-03-20 08:38:13 -Generating unique operation named: editUsingGET_10
2019-03-20 08:38:13 -Generating unique operation named: infoUsingGET_1
2019-03-20 08:38:13 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 08:38:13 -Generating unique operation named: infoUsingPOST_1
2019-03-20 08:38:13 -Generating unique operation named: infoUsingPUT_1
2019-03-20 08:38:13 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 08:38:13 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 08:38:13 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 08:38:13 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 08:38:13 -Generating unique operation named: listUsingGET_10
2019-03-20 08:38:13 -Generating unique operation named: removeUsingPOST_18
2019-03-20 08:38:13 -Generating unique operation named: removeUsingPOST_19
2019-03-20 08:38:13 -Generating unique operation named: saveUsingPOST_9
2019-03-20 08:38:13 -Generating unique operation named: updateUsingPOST_10
2019-03-20 08:38:13 -Generating unique operation named: listUsingGET_11
2019-03-20 08:38:13 -Generating unique operation named: removeUsingPOST_20
2019-03-20 08:38:13 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 08:38:13 -Generating unique operation named: addUsingGET_10
2019-03-20 08:38:13 -Generating unique operation named: editUsingGET_11
2019-03-20 08:38:13 -Generating unique operation named: listUsingGET_12
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_21
2019-03-20 08:38:14 -Generating unique operation named: saveUsingPOST_10
2019-03-20 08:38:14 -Generating unique operation named: treeUsingGET_1
2019-03-20 08:38:14 -Generating unique operation named: treeUsingGET_2
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPOST_11
2019-03-20 08:38:14 -Generating unique operation named: addUsingGET_11
2019-03-20 08:38:14 -Generating unique operation named: editUsingGET_12
2019-03-20 08:38:14 -Generating unique operation named: listUsingGET_13
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_22
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_23
2019-03-20 08:38:14 -Generating unique operation named: saveUsingPOST_11
2019-03-20 08:38:14 -Generating unique operation named: updateUsingGET_9
2019-03-20 08:38:14 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPOST_12
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPUT_9
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 08:38:14 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 08:38:14 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 08:38:14 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 08:38:14 -Generating unique operation named: addUsingGET_12
2019-03-20 08:38:14 -Generating unique operation named: editUsingGET_13
2019-03-20 08:38:14 -Generating unique operation named: listUsingGET_14
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_24
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_25
2019-03-20 08:38:14 -Generating unique operation named: saveUsingPOST_12
2019-03-20 08:38:14 -Generating unique operation named: updateUsingGET_10
2019-03-20 08:38:14 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPOST_13
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPUT_10
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 08:38:14 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 08:38:14 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 08:38:14 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 08:38:14 -Generating unique operation named: addUsingGET_13
2019-03-20 08:38:14 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 08:38:14 -Generating unique operation named: editUsingGET_14
2019-03-20 08:38:14 -Generating unique operation named: listUsingGET_15
2019-03-20 08:38:14 -Generating unique operation named: saveUsingPOST_13
2019-03-20 08:38:14 -Generating unique operation named: saveUsingPOST_14
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPOST_14
2019-03-20 08:38:14 -Generating unique operation named: listUsingGET_16
2019-03-20 08:38:14 -Generating unique operation named: listUsingHEAD_1
2019-03-20 08:38:14 -Generating unique operation named: listUsingPOST_1
2019-03-20 08:38:14 -Generating unique operation named: listUsingPUT_1
2019-03-20 08:38:14 -Generating unique operation named: listUsingPATCH_1
2019-03-20 08:38:14 -Generating unique operation named: listUsingDELETE_1
2019-03-20 08:38:14 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 08:38:14 -Generating unique operation named: listUsingTRACE_1
2019-03-20 08:38:14 -Generating unique operation named: addUsingGET_14
2019-03-20 08:38:14 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 08:38:14 -Generating unique operation named: editUsingGET_15
2019-03-20 08:38:14 -Generating unique operation named: listUsingGET_17
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_26
2019-03-20 08:38:14 -Generating unique operation named: saveUsingPOST_15
2019-03-20 08:38:14 -Generating unique operation named: treeUsingGET_3
2019-03-20 08:38:14 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPOST_15
2019-03-20 08:38:14 -Generating unique operation named: addUsingGET_15
2019-03-20 08:38:14 -Generating unique operation named: editUsingGET_16
2019-03-20 08:38:14 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 08:38:14 -Generating unique operation named: listUsingGET_18
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_27
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_28
2019-03-20 08:38:14 -Generating unique operation named: saveUsingPOST_16
2019-03-20 08:38:14 -Generating unique operation named: updateUsingGET_11
2019-03-20 08:38:14 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPOST_16
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPUT_11
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 08:38:14 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 08:38:14 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 08:38:14 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 08:38:14 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 08:38:14 -Generating unique operation named: addUsingGET_16
2019-03-20 08:38:14 -Generating unique operation named: editUsingGET_17
2019-03-20 08:38:14 -Generating unique operation named: listUsingGET_19
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_29
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_30
2019-03-20 08:38:14 -Generating unique operation named: saveUsingPOST_17
2019-03-20 08:38:14 -Generating unique operation named: updateUsingGET_12
2019-03-20 08:38:14 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPOST_17
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPUT_12
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 08:38:14 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 08:38:14 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 08:38:14 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 08:38:14 -Generating unique operation named: addUsingGET_17
2019-03-20 08:38:14 -Generating unique operation named: editUsingGET_18
2019-03-20 08:38:14 -Generating unique operation named: listUsingGET_20
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_31
2019-03-20 08:38:14 -Generating unique operation named: removeUsingPOST_32
2019-03-20 08:38:14 -Generating unique operation named: saveUsingPOST_18
2019-03-20 08:38:14 -Generating unique operation named: updateUsingGET_13
2019-03-20 08:38:14 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPOST_18
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPUT_13
2019-03-20 08:38:14 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 08:38:14 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 08:38:14 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 08:38:14 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 08:38:15 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 08:38:15 -Starting Quartz Scheduler now
2019-03-20 08:38:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 08:38:15 -Starting...
2019-03-20 08:38:15 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 08:38:15 -Started.
2019-03-20 08:38:15 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 08:38:15 -Using a shared selector for servlet write/read
2019-03-20 08:38:15 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-20 08:38:15 -Started BootdoApplication in 52.4 seconds (JVM running for 55.747)
2019-03-20 08:38:15 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-20 08:38:15 -==> Parameters: 
2019-03-20 08:38:15 -<==      Total: 1
2019-03-20 08:39:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-20 08:39:05 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-20 08:39:05 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-20 08:39:05 -FrameworkServlet 'dispatcherServlet': initialization completed in 89 ms
2019-03-20 08:39:05 -Enabling session validation scheduler...
2019-03-20 08:39:05 -请求地址 : http://localhost:8081/login;JSESSIONID=0a93c8c3-4bee-4a12-86db-a9edcbbb6555
2019-03-20 08:39:05 -HTTP METHOD : GET
2019-03-20 08:39:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 08:39:05 -参数 : [{}]
2019-03-20 08:39:05 -耗时 : 6
2019-03-20 08:39:05 -返回值 : login
2019-03-20 08:39:10 -请求地址 : http://localhost:8081/getVerify
2019-03-20 08:39:10 -HTTP METHOD : GET
2019-03-20 08:39:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 08:39:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@11b42aaa, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c76432]
2019-03-20 08:39:17 -3077
2019-03-20 08:39:18 -耗时 : 8357
2019-03-20 08:39:18 -返回值 : null
2019-03-20 08:39:19 -请求地址 : http://localhost:8081/login
2019-03-20 08:39:19 -HTTP METHOD : GET
2019-03-20 08:39:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 08:39:19 -参数 : [{}]
2019-03-20 08:39:19 -耗时 : 2
2019-03-20 08:39:19 -返回值 : login
2019-03-20 08:39:28 -请求地址 : http://localhost:8081/login
2019-03-20 08:39:28 -HTTP METHOD : POST
2019-03-20 08:39:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 08:39:28 -参数 : [admin, 111111, 3077, org.apache.shiro.web.servlet.ShiroHttpServletRequest@40d25f84]
2019-03-20 08:39:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 08:39:28 -==> Parameters: admin(String)
2019-03-20 08:39:29 -<==      Total: 1
2019-03-20 08:39:29 -耗时 : 875
2019-03-20 08:39:29 -返回值 : {msg=操作成功, code=0}
2019-03-20 08:39:29 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-20 08:39:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 08:39:29 -==> Parameters: 1(Long), admin(String), 登录(String), 875(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 08:39:29.746(Timestamp)
2019-03-20 08:39:30 -<==    Updates: 1
2019-03-20 08:39:30 -请求地址 : http://localhost:8081/index
2019-03-20 08:39:30 -HTTP METHOD : GET
2019-03-20 08:39:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 08:39:30 -参数 : [{}]
2019-03-20 08:39:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 08:39:30 -==> Parameters: 1(Long)
2019-03-20 08:39:30 -<==      Total: 46
2019-03-20 08:39:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 08:39:31 -==> Parameters: 138(Long)
2019-03-20 08:39:31 -<==      Total: 1
2019-03-20 08:39:31 -耗时 : 691
2019-03-20 08:39:31 -返回值 : index_v1
2019-03-20 08:39:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 08:39:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 691(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 08:39:31.174(Timestamp)
2019-03-20 08:39:31 -<==    Updates: 1
2019-03-20 08:39:31 -请求地址 : http://localhost:8081/main
2019-03-20 08:39:31 -HTTP METHOD : GET
2019-03-20 08:39:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 08:39:31 -参数 : []
2019-03-20 08:39:31 -耗时 : 0
2019-03-20 08:39:31 -返回值 : main
2019-03-20 08:39:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 08:39:32 -HTTP METHOD : GET
2019-03-20 08:39:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 08:39:32 -参数 : []
2019-03-20 08:39:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 08:39:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 08:39:33 -请求地址 : http://localhost:8081/main
2019-03-20 08:39:33 -HTTP METHOD : GET
2019-03-20 08:39:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 08:39:33 -参数 : []
2019-03-20 08:39:33 -耗时 : 1
2019-03-20 08:39:33 -返回值 : main
2019-03-20 08:39:33 -<==      Total: 0
2019-03-20 08:39:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 08:39:33 -==> Parameters: 1(Long), 0(String)
2019-03-20 08:39:33 -<==      Total: 1
2019-03-20 08:39:33 -耗时 : 451
2019-03-20 08:39:33 -返回值 : com.bootdo.common.utils.PageUtils@6a9b1147
2019-03-20 08:40:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 08:40:10 -==> Parameters: 1(Long)
2019-03-20 08:40:10 -<==      Total: 90
2019-03-20 08:40:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 08:40:10 -HTTP METHOD : GET
2019-03-20 08:40:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 08:40:10 -参数 : []
2019-03-20 08:40:10 -耗时 : 1
2019-03-20 08:40:10 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 08:40:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:40:13 -HTTP METHOD : GET
2019-03-20 08:40:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:40:13 -参数 : [userType]
2019-03-20 08:40:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:40:13 -==> Parameters: userType(String)
2019-03-20 08:40:13 -<==      Total: 2
2019-03-20 08:40:13 -耗时 : 100
2019-03-20 08:40:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:40:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:13 -HTTP METHOD : GET
2019-03-20 08:40:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 08:40:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:13 -<==      Total: 4
2019-03-20 08:40:13 -==>  Preparing: select count(*) from elec_log 
2019-03-20 08:40:13 -==> Parameters: 
2019-03-20 08:40:13 -<==      Total: 1
2019-03-20 08:40:13 -耗时 : 388
2019-03-20 08:40:13 -返回值 : com.bootdo.common.utils.PageUtils@724c9044
2019-03-20 08:40:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-20 08:40:25 -HTTP METHOD : GET
2019-03-20 08:40:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-20 08:40:25 -参数 : []
2019-03-20 08:40:25 -耗时 : 1
2019-03-20 08:40:25 -返回值 : /moneyLog/heatLog/heatLog
2019-03-20 08:40:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:40:25 -HTTP METHOD : GET
2019-03-20 08:40:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:40:25 -参数 : [userType]
2019-03-20 08:40:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:40:25 -==> Parameters: userType(String)
2019-03-20 08:40:25 -<==      Total: 2
2019-03-20 08:40:25 -耗时 : 8
2019-03-20 08:40:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:40:25 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-20 08:40:25 -HTTP METHOD : GET
2019-03-20 08:40:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-20 08:40:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-20 08:40:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-20 08:40:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:25 -<==      Total: 3
2019-03-20 08:40:25 -==>  Preparing: select count(*) from heat_log 
2019-03-20 08:40:25 -==> Parameters: 
2019-03-20 08:40:25 -<==      Total: 1
2019-03-20 08:40:25 -耗时 : 143
2019-03-20 08:40:25 -返回值 : com.bootdo.common.utils.PageUtils@32867f28
2019-03-20 08:40:26 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-20 08:40:26 -HTTP METHOD : GET
2019-03-20 08:40:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-20 08:40:26 -参数 : []
2019-03-20 08:40:26 -耗时 : 0
2019-03-20 08:40:26 -返回值 : /moneyLog/waterLog/waterLog
2019-03-20 08:40:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:40:26 -HTTP METHOD : GET
2019-03-20 08:40:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:40:26 -参数 : [userType]
2019-03-20 08:40:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:40:26 -==> Parameters: userType(String)
2019-03-20 08:40:26 -<==      Total: 2
2019-03-20 08:40:26 -耗时 : 9
2019-03-20 08:40:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:40:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-20 08:40:27 -HTTP METHOD : GET
2019-03-20 08:40:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-20 08:40:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-20 08:40:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-20 08:40:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:27 -<==      Total: 3
2019-03-20 08:40:27 -==>  Preparing: select count(*) from water_log 
2019-03-20 08:40:27 -==> Parameters: 
2019-03-20 08:40:27 -<==      Total: 1
2019-03-20 08:40:27 -耗时 : 73
2019-03-20 08:40:27 -返回值 : com.bootdo.common.utils.PageUtils@9b1a4d
2019-03-20 08:40:28 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-20 08:40:28 -HTTP METHOD : GET
2019-03-20 08:40:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-20 08:40:28 -参数 : []
2019-03-20 08:40:28 -耗时 : 0
2019-03-20 08:40:28 -返回值 : /moneyLog/heatLog/heatLog
2019-03-20 08:40:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:40:28 -HTTP METHOD : GET
2019-03-20 08:40:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:40:28 -参数 : [userType]
2019-03-20 08:40:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:40:28 -==> Parameters: userType(String)
2019-03-20 08:40:28 -<==      Total: 2
2019-03-20 08:40:28 -耗时 : 6
2019-03-20 08:40:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:40:28 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-20 08:40:28 -HTTP METHOD : GET
2019-03-20 08:40:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-20 08:40:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-20 08:40:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-20 08:40:28 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:28 -<==      Total: 3
2019-03-20 08:40:28 -==>  Preparing: select count(*) from heat_log 
2019-03-20 08:40:28 -==> Parameters: 
2019-03-20 08:40:28 -<==      Total: 1
2019-03-20 08:40:28 -耗时 : 8
2019-03-20 08:40:28 -返回值 : com.bootdo.common.utils.PageUtils@2ec16a6e
2019-03-20 08:40:28 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 08:40:28 -HTTP METHOD : GET
2019-03-20 08:40:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 08:40:28 -参数 : []
2019-03-20 08:40:28 -耗时 : 1
2019-03-20 08:40:28 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 08:40:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:40:29 -HTTP METHOD : GET
2019-03-20 08:40:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:40:29 -参数 : [userType]
2019-03-20 08:40:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:40:29 -==> Parameters: userType(String)
2019-03-20 08:40:29 -<==      Total: 2
2019-03-20 08:40:29 -耗时 : 4
2019-03-20 08:40:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:40:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:29 -HTTP METHOD : GET
2019-03-20 08:40:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 08:40:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:29 -<==      Total: 4
2019-03-20 08:40:29 -==>  Preparing: select count(*) from elec_log 
2019-03-20 08:40:29 -==> Parameters: 
2019-03-20 08:40:29 -<==      Total: 1
2019-03-20 08:40:29 -耗时 : 8
2019-03-20 08:40:29 -返回值 : com.bootdo.common.utils.PageUtils@58f17e53
2019-03-20 08:40:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:36 -HTTP METHOD : GET
2019-03-20 08:40:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-20 08:40:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:36 -<==      Total: 4
2019-03-20 08:40:36 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:40:36 -==> Parameters: 2019-03-19(String)
2019-03-20 08:40:36 -<==      Total: 1
2019-03-20 08:40:36 -耗时 : 26
2019-03-20 08:40:36 -返回值 : com.bootdo.common.utils.PageUtils@7bf72661
2019-03-20 08:40:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:37 -HTTP METHOD : GET
2019-03-20 08:40:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-20 08:40:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:37 -<==      Total: 4
2019-03-20 08:40:37 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:40:37 -==> Parameters: 2019-03-19(String)
2019-03-20 08:40:37 -<==      Total: 1
2019-03-20 08:40:37 -耗时 : 15
2019-03-20 08:40:37 -返回值 : com.bootdo.common.utils.PageUtils@5f91c89e
2019-03-20 08:40:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:43 -HTTP METHOD : GET
2019-03-20 08:40:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-20 08:40:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:43 -<==      Total: 4
2019-03-20 08:40:43 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:40:43 -==> Parameters: 2019-03-19(String)
2019-03-20 08:40:43 -<==      Total: 1
2019-03-20 08:40:43 -耗时 : 8
2019-03-20 08:40:43 -返回值 : com.bootdo.common.utils.PageUtils@6348d11d
2019-03-20 08:40:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:44 -HTTP METHOD : GET
2019-03-20 08:40:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-20 08:40:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:44 -<==      Total: 4
2019-03-20 08:40:44 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:40:44 -==> Parameters: 2019-03-19(String)
2019-03-20 08:40:44 -<==      Total: 1
2019-03-20 08:40:44 -耗时 : 9
2019-03-20 08:40:44 -返回值 : com.bootdo.common.utils.PageUtils@7a8ca49a
2019-03-20 08:40:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:45 -HTTP METHOD : GET
2019-03-20 08:40:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-20 08:40:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:45 -<==      Total: 4
2019-03-20 08:40:45 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:40:45 -==> Parameters: 2019-03-19(String)
2019-03-20 08:40:45 -<==      Total: 1
2019-03-20 08:40:45 -耗时 : 10
2019-03-20 08:40:45 -返回值 : com.bootdo.common.utils.PageUtils@57c783f6
2019-03-20 08:40:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:46 -HTTP METHOD : GET
2019-03-20 08:40:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-20 08:40:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:46 -<==      Total: 4
2019-03-20 08:40:46 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:40:46 -==> Parameters: 2019-03-19(String)
2019-03-20 08:40:46 -<==      Total: 1
2019-03-20 08:40:46 -耗时 : 10
2019-03-20 08:40:46 -返回值 : com.bootdo.common.utils.PageUtils@1b778078
2019-03-20 08:40:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:46 -HTTP METHOD : GET
2019-03-20 08:40:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-20 08:40:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:46 -<==      Total: 4
2019-03-20 08:40:46 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:40:46 -==> Parameters: 2019-03-19(String)
2019-03-20 08:40:46 -<==      Total: 1
2019-03-20 08:40:46 -耗时 : 9
2019-03-20 08:40:46 -返回值 : com.bootdo.common.utils.PageUtils@84d205a
2019-03-20 08:40:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:47 -HTTP METHOD : GET
2019-03-20 08:40:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-20 08:40:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:47 -<==      Total: 4
2019-03-20 08:40:47 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:40:47 -==> Parameters: 2019-03-19(String)
2019-03-20 08:40:47 -<==      Total: 1
2019-03-20 08:40:47 -耗时 : 9
2019-03-20 08:40:47 -返回值 : com.bootdo.common.utils.PageUtils@3f1da54e
2019-03-20 08:40:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:58 -HTTP METHOD : GET
2019-03-20 08:40:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-20 08:40:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:58 -<==      Total: 4
2019-03-20 08:40:58 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:40:58 -==> Parameters: 2019-03-10(String)
2019-03-20 08:40:58 -<==      Total: 1
2019-03-20 08:40:58 -耗时 : 9
2019-03-20 08:40:58 -返回值 : com.bootdo.common.utils.PageUtils@268fad6c
2019-03-20 08:40:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:40:59 -HTTP METHOD : GET
2019-03-20 08:40:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:40:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-20 08:40:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:40:59 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:40:59 -<==      Total: 4
2019-03-20 08:40:59 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:40:59 -==> Parameters: 2019-03-10(String)
2019-03-20 08:40:59 -<==      Total: 1
2019-03-20 08:40:59 -耗时 : 9
2019-03-20 08:40:59 -返回值 : com.bootdo.common.utils.PageUtils@4cdf9c88
2019-03-20 08:41:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:41:00 -HTTP METHOD : GET
2019-03-20 08:41:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:41:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-20 08:41:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:41:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:41:00 -<==      Total: 4
2019-03-20 08:41:00 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:41:00 -==> Parameters: 2019-03-10(String)
2019-03-20 08:41:00 -<==      Total: 1
2019-03-20 08:41:00 -耗时 : 8
2019-03-20 08:41:00 -返回值 : com.bootdo.common.utils.PageUtils@38dfa68c
2019-03-20 08:43:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-20 08:43:01 -HTTP METHOD : GET
2019-03-20 08:43:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-20 08:43:01 -参数 : []
2019-03-20 08:43:01 -耗时 : 0
2019-03-20 08:43:01 -返回值 : /moneyLog/heatLog/heatLog
2019-03-20 08:43:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:43:01 -HTTP METHOD : GET
2019-03-20 08:43:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:43:01 -参数 : [userType]
2019-03-20 08:43:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:43:01 -==> Parameters: userType(String)
2019-03-20 08:43:01 -<==      Total: 2
2019-03-20 08:43:01 -耗时 : 6
2019-03-20 08:43:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:43:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-20 08:43:01 -HTTP METHOD : GET
2019-03-20 08:43:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-20 08:43:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-20 08:43:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-20 08:43:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:43:01 -<==      Total: 3
2019-03-20 08:43:01 -==>  Preparing: select count(*) from heat_log 
2019-03-20 08:43:01 -==> Parameters: 
2019-03-20 08:43:01 -<==      Total: 1
2019-03-20 08:43:01 -耗时 : 7
2019-03-20 08:43:01 -返回值 : com.bootdo.common.utils.PageUtils@1c485dee
2019-03-20 08:43:02 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-20 08:43:02 -HTTP METHOD : GET
2019-03-20 08:43:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-20 08:43:02 -参数 : []
2019-03-20 08:43:02 -耗时 : 1
2019-03-20 08:43:02 -返回值 : /moneyLog/waterLog/waterLog
2019-03-20 08:43:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:43:03 -HTTP METHOD : GET
2019-03-20 08:43:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:43:03 -参数 : [userType]
2019-03-20 08:43:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:43:03 -==> Parameters: userType(String)
2019-03-20 08:43:03 -<==      Total: 2
2019-03-20 08:43:03 -耗时 : 5
2019-03-20 08:43:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:43:03 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-20 08:43:03 -HTTP METHOD : GET
2019-03-20 08:43:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-20 08:43:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-20 08:43:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-20 08:43:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:43:03 -<==      Total: 3
2019-03-20 08:43:03 -==>  Preparing: select count(*) from water_log 
2019-03-20 08:43:03 -==> Parameters: 
2019-03-20 08:43:03 -<==      Total: 1
2019-03-20 08:43:03 -耗时 : 8
2019-03-20 08:43:03 -返回值 : com.bootdo.common.utils.PageUtils@11c54c69
2019-03-20 08:43:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-20 08:43:03 -HTTP METHOD : GET
2019-03-20 08:43:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-20 08:43:03 -参数 : []
2019-03-20 08:43:03 -耗时 : 1
2019-03-20 08:43:03 -返回值 : /moneyLog/heatLog/heatLog
2019-03-20 08:43:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:43:04 -HTTP METHOD : GET
2019-03-20 08:43:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:43:04 -参数 : [userType]
2019-03-20 08:43:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:43:04 -==> Parameters: userType(String)
2019-03-20 08:43:04 -<==      Total: 2
2019-03-20 08:43:04 -耗时 : 7
2019-03-20 08:43:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:43:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-20 08:43:04 -HTTP METHOD : GET
2019-03-20 08:43:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-20 08:43:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-20 08:43:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-20 08:43:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:43:04 -<==      Total: 3
2019-03-20 08:43:04 -==>  Preparing: select count(*) from heat_log 
2019-03-20 08:43:04 -==> Parameters: 
2019-03-20 08:43:04 -<==      Total: 1
2019-03-20 08:43:04 -耗时 : 6
2019-03-20 08:43:04 -返回值 : com.bootdo.common.utils.PageUtils@519972e0
2019-03-20 08:43:04 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 08:43:04 -HTTP METHOD : GET
2019-03-20 08:43:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 08:43:04 -参数 : []
2019-03-20 08:43:04 -耗时 : 0
2019-03-20 08:43:04 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 08:43:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:43:04 -HTTP METHOD : GET
2019-03-20 08:43:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:43:04 -参数 : [userType]
2019-03-20 08:43:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:43:04 -==> Parameters: userType(String)
2019-03-20 08:43:04 -<==      Total: 2
2019-03-20 08:43:04 -耗时 : 5
2019-03-20 08:43:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:43:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:43:05 -HTTP METHOD : GET
2019-03-20 08:43:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:43:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 08:43:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:43:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:43:05 -<==      Total: 4
2019-03-20 08:43:05 -==>  Preparing: select count(*) from elec_log 
2019-03-20 08:43:05 -==> Parameters: 
2019-03-20 08:43:05 -<==      Total: 1
2019-03-20 08:43:05 -耗时 : 6
2019-03-20 08:43:05 -返回值 : com.bootdo.common.utils.PageUtils@6bf7829a
2019-03-20 08:43:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:43:13 -HTTP METHOD : GET
2019-03-20 08:43:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:43:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-14}]
2019-03-20 08:43:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:43:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:43:13 -<==      Total: 4
2019-03-20 08:43:13 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:43:13 -==> Parameters: 2019-03-14(String)
2019-03-20 08:43:13 -<==      Total: 1
2019-03-20 08:43:13 -耗时 : 8
2019-03-20 08:43:13 -返回值 : com.bootdo.common.utils.PageUtils@bfdf74e
2019-03-20 08:43:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:43:14 -HTTP METHOD : GET
2019-03-20 08:43:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:43:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-14}]
2019-03-20 08:43:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:43:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:43:14 -<==      Total: 4
2019-03-20 08:43:14 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:43:14 -==> Parameters: 2019-03-14(String)
2019-03-20 08:43:14 -<==      Total: 1
2019-03-20 08:43:14 -耗时 : 7
2019-03-20 08:43:14 -返回值 : com.bootdo.common.utils.PageUtils@57a08726
2019-03-20 08:43:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:43:14 -HTTP METHOD : GET
2019-03-20 08:43:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:43:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-14}]
2019-03-20 08:43:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:43:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:43:14 -<==      Total: 4
2019-03-20 08:43:14 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:43:14 -==> Parameters: 2019-03-14(String)
2019-03-20 08:43:14 -<==      Total: 1
2019-03-20 08:43:14 -耗时 : 17
2019-03-20 08:43:14 -返回值 : com.bootdo.common.utils.PageUtils@305a5a78
2019-03-20 08:43:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:43:14 -HTTP METHOD : GET
2019-03-20 08:43:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:43:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-14}]
2019-03-20 08:43:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:43:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:43:14 -<==      Total: 4
2019-03-20 08:43:14 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:43:14 -==> Parameters: 2019-03-14(String)
2019-03-20 08:43:14 -<==      Total: 1
2019-03-20 08:43:14 -耗时 : 7
2019-03-20 08:43:14 -返回值 : com.bootdo.common.utils.PageUtils@1bcb7d19
2019-03-20 08:43:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:43:15 -HTTP METHOD : GET
2019-03-20 08:43:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:43:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-14}]
2019-03-20 08:43:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:43:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:43:15 -<==      Total: 4
2019-03-20 08:43:15 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:43:15 -==> Parameters: 2019-03-14(String)
2019-03-20 08:43:15 -<==      Total: 1
2019-03-20 08:43:15 -耗时 : 8
2019-03-20 08:43:15 -返回值 : com.bootdo.common.utils.PageUtils@1358e5e7
2019-03-20 08:43:16 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:43:16 -HTTP METHOD : GET
2019-03-20 08:43:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:43:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-14}]
2019-03-20 08:43:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:43:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:43:16 -<==      Total: 4
2019-03-20 08:43:16 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:43:16 -==> Parameters: 2019-03-14(String)
2019-03-20 08:43:16 -<==      Total: 1
2019-03-20 08:43:16 -耗时 : 8
2019-03-20 08:43:16 -返回值 : com.bootdo.common.utils.PageUtils@6cc4dc94
2019-03-20 08:43:16 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:43:16 -HTTP METHOD : GET
2019-03-20 08:43:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:43:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-14}]
2019-03-20 08:43:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:43:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:43:16 -<==      Total: 4
2019-03-20 08:43:16 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:43:16 -==> Parameters: 2019-03-14(String)
2019-03-20 08:43:16 -<==      Total: 1
2019-03-20 08:43:16 -耗时 : 7
2019-03-20 08:43:16 -返回值 : com.bootdo.common.utils.PageUtils@4bec354
2019-03-20 08:46:25 -请求地址 : http://localhost:8081/index
2019-03-20 08:46:25 -HTTP METHOD : GET
2019-03-20 08:46:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 08:46:25 -参数 : [{}]
2019-03-20 08:46:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 08:46:25 -==> Parameters: 1(Long)
2019-03-20 08:46:25 -<==      Total: 46
2019-03-20 08:46:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 08:46:25 -==> Parameters: 138(Long)
2019-03-20 08:46:25 -<==      Total: 1
2019-03-20 08:46:25 -耗时 : 145
2019-03-20 08:46:25 -返回值 : index_v1
2019-03-20 08:46:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 08:46:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 146(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 08:46:25.22(Timestamp)
2019-03-20 08:46:25 -请求地址 : http://localhost:8081/main
2019-03-20 08:46:25 -HTTP METHOD : GET
2019-03-20 08:46:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 08:46:25 -参数 : []
2019-03-20 08:46:25 -耗时 : 0
2019-03-20 08:46:25 -返回值 : main
2019-03-20 08:46:25 -<==    Updates: 1
2019-03-20 08:46:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 08:46:25 -HTTP METHOD : GET
2019-03-20 08:46:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 08:46:25 -参数 : []
2019-03-20 08:46:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 08:46:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 08:46:25 -<==      Total: 0
2019-03-20 08:46:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 08:46:25 -==> Parameters: 1(Long), 0(String)
2019-03-20 08:46:25 -<==      Total: 1
2019-03-20 08:46:25 -耗时 : 7
2019-03-20 08:46:25 -返回值 : com.bootdo.common.utils.PageUtils@77a1d392
2019-03-20 08:46:25 -请求地址 : http://localhost:8081/main
2019-03-20 08:46:25 -HTTP METHOD : GET
2019-03-20 08:46:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 08:46:25 -参数 : []
2019-03-20 08:46:25 -耗时 : 0
2019-03-20 08:46:25 -返回值 : main
2019-03-20 08:47:05 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 08:48:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 08:48:10 -HTTP METHOD : GET
2019-03-20 08:48:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 08:48:10 -参数 : []
2019-03-20 08:48:10 -耗时 : 1
2019-03-20 08:48:10 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 08:48:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:48:11 -HTTP METHOD : GET
2019-03-20 08:48:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:48:11 -参数 : [userType]
2019-03-20 08:48:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:48:11 -==> Parameters: userType(String)
2019-03-20 08:48:11 -<==      Total: 2
2019-03-20 08:48:11 -耗时 : 6
2019-03-20 08:48:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:48:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:48:11 -HTTP METHOD : GET
2019-03-20 08:48:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:48:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 08:48:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 08:48:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:48:11 -<==      Total: 4
2019-03-20 08:48:11 -==>  Preparing: select count(*) from elec_log 
2019-03-20 08:48:11 -==> Parameters: 
2019-03-20 08:48:11 -<==      Total: 1
2019-03-20 08:48:11 -耗时 : 9
2019-03-20 08:48:11 -返回值 : com.bootdo.common.utils.PageUtils@130bdaee
2019-03-20 08:48:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:48:22 -HTTP METHOD : GET
2019-03-20 08:48:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:48:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-20 08:48:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-20 08:48:22 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-20 08:48:22 -<==      Total: 3
2019-03-20 08:48:22 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:48:22 -==> Parameters: 2019-03-19(String)
2019-03-20 08:48:22 -<==      Total: 1
2019-03-20 08:48:22 -耗时 : 11
2019-03-20 08:48:22 -返回值 : com.bootdo.common.utils.PageUtils@3305fd8b
2019-03-20 08:48:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:48:29 -HTTP METHOD : GET
2019-03-20 08:48:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:48:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-20 08:48:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-20 08:48:29 -==> Parameters: 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-20 08:48:29 -<==      Total: 1
2019-03-20 08:48:29 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:48:29 -==> Parameters: 2019-03-10(String)
2019-03-20 08:48:29 -<==      Total: 1
2019-03-20 08:48:29 -耗时 : 5
2019-03-20 08:48:29 -返回值 : com.bootdo.common.utils.PageUtils@5b2b21d9
2019-03-20 08:48:31 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 08:48:31 -HTTP METHOD : GET
2019-03-20 08:48:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 08:48:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-20 08:48:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-20 08:48:31 -==> Parameters: 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-20 08:48:31 -<==      Total: 1
2019-03-20 08:48:31 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 08:48:31 -==> Parameters: 2019-03-10(String)
2019-03-20 08:48:31 -<==      Total: 1
2019-03-20 08:48:31 -耗时 : 7
2019-03-20 08:48:31 -返回值 : com.bootdo.common.utils.PageUtils@1387aa0c
2019-03-20 08:48:32 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-20 08:48:32 -HTTP METHOD : GET
2019-03-20 08:48:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-20 08:48:32 -参数 : []
2019-03-20 08:48:32 -耗时 : 1
2019-03-20 08:48:32 -返回值 : /moneyLog/heatLog/heatLog
2019-03-20 08:48:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:48:32 -HTTP METHOD : GET
2019-03-20 08:48:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:48:32 -参数 : [userType]
2019-03-20 08:48:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:48:32 -==> Parameters: userType(String)
2019-03-20 08:48:32 -<==      Total: 2
2019-03-20 08:48:32 -耗时 : 5
2019-03-20 08:48:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:48:32 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-20 08:48:32 -HTTP METHOD : GET
2019-03-20 08:48:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-20 08:48:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-20 08:48:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-20 08:48:32 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 08:48:32 -<==      Total: 3
2019-03-20 08:48:32 -==>  Preparing: select count(*) from heat_log 
2019-03-20 08:48:32 -==> Parameters: 
2019-03-20 08:48:32 -<==      Total: 1
2019-03-20 08:48:32 -耗时 : 7
2019-03-20 08:48:32 -返回值 : com.bootdo.common.utils.PageUtils@13e9c2f4
2019-03-20 08:54:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 08:54:17 -==> Parameters: 1(Long)
2019-03-20 08:54:17 -<==      Total: 90
2019-03-20 08:54:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-20 08:54:17 -HTTP METHOD : GET
2019-03-20 08:54:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-20 08:54:17 -参数 : [1, {}]
2019-03-20 08:54:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-20 08:54:17 -==> Parameters: 1(Long)
2019-03-20 08:54:17 -<==      Total: 1
2019-03-20 08:54:17 -耗时 : 13
2019-03-20 08:54:17 -返回值 : moneyLog/heatLog/edit
2019-03-20 08:54:17 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-20 08:54:17 -HTTP METHOD : GET
2019-03-20 08:54:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:54:17 -参数 : [userArea]
2019-03-20 08:54:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:54:17 -==> Parameters: userArea(String)
2019-03-20 08:54:17 -<==      Total: 0
2019-03-20 08:54:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:54:17 -耗时 : 5
2019-03-20 08:54:17 -返回值 : []
2019-03-20 08:54:17 -HTTP METHOD : GET
2019-03-20 08:54:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:54:17 -参数 : [userType]
2019-03-20 08:54:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:54:17 -==> Parameters: userType(String)
2019-03-20 08:54:17 -<==      Total: 2
2019-03-20 08:54:17 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-20 08:54:17 -HTTP METHOD : GET
2019-03-20 08:54:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:54:17 -参数 : [userOrg]
2019-03-20 08:54:17 -耗时 : 11
2019-03-20 08:54:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:54:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:54:17 -==> Parameters: userOrg(String)
2019-03-20 08:54:17 -<==      Total: 0
2019-03-20 08:54:17 -耗时 : 4
2019-03-20 08:54:17 -返回值 : []
2019-03-20 08:57:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-20 08:57:11 -HTTP METHOD : GET
2019-03-20 08:57:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-20 08:57:11 -参数 : [1, {}]
2019-03-20 08:57:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-20 08:57:11 -==> Parameters: 1(Long)
2019-03-20 08:57:11 -<==      Total: 1
2019-03-20 08:57:11 -耗时 : 8
2019-03-20 08:57:11 -返回值 : moneyLog/heatLog/edit
2019-03-20 08:57:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 08:57:11 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-20 08:57:11 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-20 08:57:11 -HTTP METHOD : GET
2019-03-20 08:57:11 -HTTP METHOD : GET
2019-03-20 08:57:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:57:11 -参数 : [userOrg]
2019-03-20 08:57:11 -HTTP METHOD : GET
2019-03-20 08:57:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:57:11 -参数 : [userType]
2019-03-20 08:57:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:57:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 08:57:11 -参数 : [userArea]
2019-03-20 08:57:11 -==> Parameters: userOrg(String)
2019-03-20 08:57:11 -<==      Total: 0
2019-03-20 08:57:11 -耗时 : 59
2019-03-20 08:57:11 -返回值 : []
2019-03-20 08:57:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:57:11 -==> Parameters: userType(String)
2019-03-20 08:57:11 -<==      Total: 2
2019-03-20 08:57:11 -耗时 : 76
2019-03-20 08:57:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 08:57:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 08:57:11 -==> Parameters: userArea(String)
2019-03-20 08:57:11 -<==      Total: 0
2019-03-20 08:57:11 -耗时 : 75
2019-03-20 08:57:11 -返回值 : []
2019-03-20 09:01:08 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 09:01:08 -HTTP METHOD : GET
2019-03-20 09:01:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 09:01:08 -参数 : []
2019-03-20 09:01:08 -耗时 : 0
2019-03-20 09:01:08 -返回值 : elec/elec/elec
2019-03-20 09:01:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:01:08 -HTTP METHOD : GET
2019-03-20 09:01:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:01:08 -参数 : [userType]
2019-03-20 09:01:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:01:08 -==> Parameters: userType(String)
2019-03-20 09:01:08 -<==      Total: 2
2019-03-20 09:01:08 -耗时 : 80
2019-03-20 09:01:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:01:08 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 09:01:08 -HTTP METHOD : GET
2019-03-20 09:01:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 09:01:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@52deef35]
2019-03-20 09:01:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 09:01:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 09:01:08 -<==      Total: 10
2019-03-20 09:01:08 -==>  Preparing: select count(*) from elec 
2019-03-20 09:01:08 -==> Parameters: 
2019-03-20 09:01:08 -<==      Total: 1
2019-03-20 09:01:08 -耗时 : 158
2019-03-20 09:01:08 -返回值 : com.bootdo.common.utils.PageUtils@26416bbb
2019-03-20 09:01:16 -请求地址 : http://localhost:8081/elec/elec/edit/4
2019-03-20 09:01:16 -HTTP METHOD : GET
2019-03-20 09:01:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 09:01:16 -参数 : [4, {}]
2019-03-20 09:01:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 09:01:16 -==> Parameters: 4(Long)
2019-03-20 09:01:16 -<==      Total: 1
2019-03-20 09:01:16 -耗时 : 8
2019-03-20 09:01:16 -返回值 : elec/elec/edit
2019-03-20 09:01:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:01:17 -HTTP METHOD : GET
2019-03-20 09:01:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:01:17 -参数 : [userType]
2019-03-20 09:01:17 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 09:01:17 -HTTP METHOD : GET
2019-03-20 09:01:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:01:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:01:17 -参数 : [userState]
2019-03-20 09:01:17 -==> Parameters: userType(String)
2019-03-20 09:01:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:01:17 -==> Parameters: userState(String)
2019-03-20 09:01:17 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 09:01:17 -HTTP METHOD : GET
2019-03-20 09:01:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:01:17 -参数 : [elecType]
2019-03-20 09:01:17 -<==      Total: 2
2019-03-20 09:01:17 -耗时 : 3
2019-03-20 09:01:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:01:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:01:17 -<==      Total: 2
2019-03-20 09:01:17 -耗时 : 4
2019-03-20 09:01:17 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:01:17 -==> Parameters: elecType(String)
2019-03-20 09:01:17 -<==      Total: 2
2019-03-20 09:01:17 -耗时 : 9
2019-03-20 09:01:17 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:03:48 -请求地址 : http://localhost:8081/index
2019-03-20 09:03:48 -HTTP METHOD : GET
2019-03-20 09:03:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 09:03:48 -参数 : [{}]
2019-03-20 09:03:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 09:03:48 -==> Parameters: 1(Long)
2019-03-20 09:03:48 -<==      Total: 46
2019-03-20 09:03:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 09:03:48 -==> Parameters: 138(Long)
2019-03-20 09:03:48 -<==      Total: 1
2019-03-20 09:03:48 -耗时 : 103
2019-03-20 09:03:48 -返回值 : index_v1
2019-03-20 09:03:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 09:03:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 103(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 09:03:48.192(Timestamp)
2019-03-20 09:03:48 -<==    Updates: 1
2019-03-20 09:03:48 -请求地址 : http://localhost:8081/main
2019-03-20 09:03:48 -HTTP METHOD : GET
2019-03-20 09:03:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:03:48 -参数 : []
2019-03-20 09:03:48 -耗时 : 0
2019-03-20 09:03:48 -返回值 : main
2019-03-20 09:03:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 09:03:48 -HTTP METHOD : GET
2019-03-20 09:03:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 09:03:48 -参数 : []
2019-03-20 09:03:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 09:03:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 09:03:48 -<==      Total: 0
2019-03-20 09:03:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 09:03:48 -==> Parameters: 1(Long), 0(String)
2019-03-20 09:03:48 -<==      Total: 1
2019-03-20 09:03:48 -耗时 : 67
2019-03-20 09:03:48 -返回值 : com.bootdo.common.utils.PageUtils@534c5d33
2019-03-20 09:03:48 -请求地址 : http://localhost:8081/main
2019-03-20 09:03:48 -HTTP METHOD : GET
2019-03-20 09:03:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:03:48 -参数 : []
2019-03-20 09:03:48 -耗时 : 1
2019-03-20 09:03:48 -返回值 : main
2019-03-20 09:03:50 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 09:03:50 -HTTP METHOD : GET
2019-03-20 09:03:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 09:03:50 -参数 : []
2019-03-20 09:03:50 -耗时 : 1
2019-03-20 09:03:50 -返回值 : elec/elec/elec
2019-03-20 09:03:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:03:50 -HTTP METHOD : GET
2019-03-20 09:03:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:03:50 -参数 : [userType]
2019-03-20 09:03:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:03:50 -==> Parameters: userType(String)
2019-03-20 09:03:50 -<==      Total: 2
2019-03-20 09:03:50 -耗时 : 6
2019-03-20 09:03:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:03:50 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 09:03:50 -HTTP METHOD : GET
2019-03-20 09:03:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 09:03:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@292b5dcd]
2019-03-20 09:03:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 09:03:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 09:03:50 -<==      Total: 10
2019-03-20 09:03:50 -==>  Preparing: select count(*) from elec 
2019-03-20 09:03:50 -==> Parameters: 
2019-03-20 09:03:50 -<==      Total: 1
2019-03-20 09:03:50 -耗时 : 19
2019-03-20 09:03:50 -返回值 : com.bootdo.common.utils.PageUtils@44118068
2019-03-20 09:03:56 -请求地址 : http://localhost:8081/elec/elec/edit/2
2019-03-20 09:03:56 -HTTP METHOD : GET
2019-03-20 09:03:56 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 09:03:56 -参数 : [2, {}]
2019-03-20 09:03:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 09:03:56 -==> Parameters: 2(Long)
2019-03-20 09:03:56 -<==      Total: 1
2019-03-20 09:03:56 -耗时 : 5
2019-03-20 09:03:56 -返回值 : elec/elec/edit
2019-03-20 09:03:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:03:56 -HTTP METHOD : GET
2019-03-20 09:03:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:03:56 -参数 : [userType]
2019-03-20 09:03:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:03:56 -==> Parameters: userType(String)
2019-03-20 09:03:56 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 09:03:56 -HTTP METHOD : GET
2019-03-20 09:03:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:03:56 -参数 : [userState]
2019-03-20 09:03:56 -<==      Total: 2
2019-03-20 09:03:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:03:56 -耗时 : 5
2019-03-20 09:03:56 -==> Parameters: userState(String)
2019-03-20 09:03:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:03:56 -<==      Total: 2
2019-03-20 09:03:56 -耗时 : 4
2019-03-20 09:03:56 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:03:56 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 09:03:56 -HTTP METHOD : GET
2019-03-20 09:03:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:03:56 -参数 : [elecType]
2019-03-20 09:03:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:03:56 -==> Parameters: elecType(String)
2019-03-20 09:03:56 -<==      Total: 2
2019-03-20 09:03:56 -耗时 : 4
2019-03-20 09:03:56 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:09:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 427]
2019-03-20 09:12:17 -请求地址 : http://localhost:8081/index
2019-03-20 09:12:17 -HTTP METHOD : GET
2019-03-20 09:12:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 09:12:17 -参数 : [{}]
2019-03-20 09:12:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 09:12:17 -==> Parameters: 1(Long)
2019-03-20 09:12:17 -<==      Total: 46
2019-03-20 09:12:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 09:12:17 -==> Parameters: 138(Long)
2019-03-20 09:12:17 -<==      Total: 1
2019-03-20 09:12:17 -耗时 : 29
2019-03-20 09:12:17 -返回值 : index_v1
2019-03-20 09:12:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 09:12:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 09:12:17.377(Timestamp)
2019-03-20 09:12:17 -请求地址 : http://localhost:8081/main
2019-03-20 09:12:17 -HTTP METHOD : GET
2019-03-20 09:12:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:12:17 -参数 : []
2019-03-20 09:12:17 -耗时 : 0
2019-03-20 09:12:17 -返回值 : main
2019-03-20 09:12:17 -<==    Updates: 1
2019-03-20 09:12:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 09:12:18 -HTTP METHOD : GET
2019-03-20 09:12:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 09:12:18 -参数 : []
2019-03-20 09:12:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 09:12:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 09:12:18 -<==      Total: 0
2019-03-20 09:12:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 09:12:18 -==> Parameters: 1(Long), 0(String)
2019-03-20 09:12:18 -<==      Total: 1
2019-03-20 09:12:18 -耗时 : 12
2019-03-20 09:12:18 -返回值 : com.bootdo.common.utils.PageUtils@16afb4b6
2019-03-20 09:12:18 -请求地址 : http://localhost:8081/main
2019-03-20 09:12:18 -HTTP METHOD : GET
2019-03-20 09:12:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:12:18 -参数 : []
2019-03-20 09:12:18 -耗时 : 2
2019-03-20 09:12:18 -返回值 : main
2019-03-20 09:12:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 09:12:20 -==> Parameters: 1(Long)
2019-03-20 09:12:20 -<==      Total: 90
2019-03-20 09:12:20 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 09:12:20 -HTTP METHOD : GET
2019-03-20 09:12:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 09:12:20 -参数 : []
2019-03-20 09:12:20 -耗时 : 1
2019-03-20 09:12:20 -返回值 : elec/elec/elec
2019-03-20 09:12:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:12:20 -HTTP METHOD : GET
2019-03-20 09:12:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:12:20 -参数 : [userType]
2019-03-20 09:12:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:12:20 -==> Parameters: userType(String)
2019-03-20 09:12:20 -<==      Total: 2
2019-03-20 09:12:20 -耗时 : 4
2019-03-20 09:12:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:12:21 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 09:12:21 -HTTP METHOD : GET
2019-03-20 09:12:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 09:12:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1ff6043c]
2019-03-20 09:12:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 09:12:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 09:12:22 -<==      Total: 10
2019-03-20 09:12:22 -==>  Preparing: select count(*) from elec 
2019-03-20 09:12:22 -==> Parameters: 
2019-03-20 09:12:22 -<==      Total: 1
2019-03-20 09:12:22 -耗时 : 1770
2019-03-20 09:12:22 -返回值 : com.bootdo.common.utils.PageUtils@1be2e419
2019-03-20 09:12:31 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 09:12:31 -HTTP METHOD : GET
2019-03-20 09:12:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 09:12:31 -参数 : [1, {}]
2019-03-20 09:12:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 09:12:31 -==> Parameters: 1(Long)
2019-03-20 09:12:31 -<==      Total: 1
2019-03-20 09:12:31 -耗时 : 7
2019-03-20 09:12:31 -返回值 : elec/elec/edit
2019-03-20 09:12:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:12:31 -HTTP METHOD : GET
2019-03-20 09:12:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:12:31 -参数 : [userType]
2019-03-20 09:12:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:12:31 -==> Parameters: userType(String)
2019-03-20 09:12:31 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 09:12:31 -HTTP METHOD : GET
2019-03-20 09:12:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:12:31 -参数 : [elecType]
2019-03-20 09:12:31 -<==      Total: 2
2019-03-20 09:12:31 -耗时 : 4
2019-03-20 09:12:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:12:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:12:31 -==> Parameters: elecType(String)
2019-03-20 09:12:31 -<==      Total: 2
2019-03-20 09:12:31 -耗时 : 9
2019-03-20 09:12:31 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:12:31 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 09:12:31 -HTTP METHOD : GET
2019-03-20 09:12:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:12:31 -参数 : [userState]
2019-03-20 09:12:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:12:31 -==> Parameters: userState(String)
2019-03-20 09:12:31 -<==      Total: 2
2019-03-20 09:12:31 -耗时 : 5
2019-03-20 09:12:31 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:12:40 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 09:12:40 -HTTP METHOD : GET
2019-03-20 09:12:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 09:12:40 -参数 : [1, {}]
2019-03-20 09:12:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 09:12:40 -==> Parameters: 1(Long)
2019-03-20 09:12:40 -<==      Total: 1
2019-03-20 09:12:40 -耗时 : 6
2019-03-20 09:12:40 -返回值 : elec/elec/edit
2019-03-20 09:12:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:12:40 -HTTP METHOD : GET
2019-03-20 09:12:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:12:40 -参数 : [userType]
2019-03-20 09:12:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:12:40 -==> Parameters: userType(String)
2019-03-20 09:12:40 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 09:12:40 -HTTP METHOD : GET
2019-03-20 09:12:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:12:40 -参数 : [userState]
2019-03-20 09:12:40 -<==      Total: 2
2019-03-20 09:12:40 -耗时 : 4
2019-03-20 09:12:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:12:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:12:40 -==> Parameters: userState(String)
2019-03-20 09:12:40 -<==      Total: 2
2019-03-20 09:12:40 -耗时 : 15
2019-03-20 09:12:40 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:12:40 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 09:12:40 -HTTP METHOD : GET
2019-03-20 09:12:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:12:40 -参数 : [elecType]
2019-03-20 09:12:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:12:40 -==> Parameters: elecType(String)
2019-03-20 09:12:40 -<==      Total: 2
2019-03-20 09:12:40 -耗时 : 4
2019-03-20 09:12:40 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:13:12 -请求地址 : http://localhost:8081/elec/elec/update
2019-03-20 09:13:12 -HTTP METHOD : POST
2019-03-20 09:13:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-03-20 09:13:12 -参数 : [com.bootdo.elec.domain.ElecDO@4d89ed5b]
2019-03-20 09:13:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 09:13:12 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-03-20 09:13:12.441(Timestamp)
2019-03-20 09:13:12 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.update(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.update(ElecServiceImpl.java:47)
	at com.bootdo.elec.controller.ElecController.update(ElecController.java:204)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$61c13d4e.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-03-20 09:13:12 -<==    Updates: 1
2019-03-20 09:13:16 -请求地址 : http://localhost:8081/elec/elec/update
2019-03-20 09:13:16 -HTTP METHOD : POST
2019-03-20 09:13:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-03-20 09:13:16 -参数 : [com.bootdo.elec.domain.ElecDO@73aee524]
2019-03-20 09:13:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 09:13:16 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-03-20 09:13:16.368(Timestamp)
2019-03-20 09:13:16 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.update(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.update(ElecServiceImpl.java:47)
	at com.bootdo.elec.controller.ElecController.update(ElecController.java:204)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$61c13d4e.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-03-20 09:13:16 -<==    Updates: 1
2019-03-20 09:29:28 -请求地址 : http://localhost:8081/index
2019-03-20 09:29:28 -HTTP METHOD : GET
2019-03-20 09:29:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 09:29:28 -参数 : [{}]
2019-03-20 09:29:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 09:29:28 -==> Parameters: 1(Long)
2019-03-20 09:29:28 -<==      Total: 46
2019-03-20 09:29:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 09:29:28 -==> Parameters: 138(Long)
2019-03-20 09:29:28 -<==      Total: 1
2019-03-20 09:29:28 -耗时 : 29
2019-03-20 09:29:28 -返回值 : index_v1
2019-03-20 09:29:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 09:29:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 09:29:28.047(Timestamp)
2019-03-20 09:29:28 -<==    Updates: 1
2019-03-20 09:29:28 -请求地址 : http://localhost:8081/main
2019-03-20 09:29:28 -HTTP METHOD : GET
2019-03-20 09:29:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:29:28 -参数 : []
2019-03-20 09:29:28 -耗时 : 0
2019-03-20 09:29:28 -返回值 : main
2019-03-20 09:29:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 09:29:28 -HTTP METHOD : GET
2019-03-20 09:29:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 09:29:28 -参数 : []
2019-03-20 09:29:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 09:29:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 09:29:28 -<==      Total: 0
2019-03-20 09:29:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 09:29:28 -==> Parameters: 1(Long), 0(String)
2019-03-20 09:29:28 -<==      Total: 1
2019-03-20 09:29:28 -耗时 : 19
2019-03-20 09:29:28 -返回值 : com.bootdo.common.utils.PageUtils@17c77a40
2019-03-20 09:29:28 -请求地址 : http://localhost:8081/main
2019-03-20 09:29:28 -HTTP METHOD : GET
2019-03-20 09:29:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:29:28 -参数 : []
2019-03-20 09:29:28 -耗时 : 0
2019-03-20 09:29:28 -返回值 : main
2019-03-20 09:29:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 09:29:30 -==> Parameters: 1(Long)
2019-03-20 09:29:30 -<==      Total: 90
2019-03-20 09:29:30 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 09:29:30 -HTTP METHOD : GET
2019-03-20 09:29:30 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 09:29:30 -参数 : []
2019-03-20 09:29:30 -耗时 : 1
2019-03-20 09:29:30 -返回值 : elec/elec/elec
2019-03-20 09:29:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:29:31 -HTTP METHOD : GET
2019-03-20 09:29:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:29:31 -参数 : [userType]
2019-03-20 09:29:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:29:31 -==> Parameters: userType(String)
2019-03-20 09:29:31 -<==      Total: 2
2019-03-20 09:29:31 -耗时 : 4
2019-03-20 09:29:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:29:31 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 09:29:31 -HTTP METHOD : GET
2019-03-20 09:29:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 09:29:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@17ed9aaa]
2019-03-20 09:29:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 09:29:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 09:29:31 -<==      Total: 10
2019-03-20 09:29:31 -==>  Preparing: select count(*) from elec 
2019-03-20 09:29:31 -==> Parameters: 
2019-03-20 09:29:31 -<==      Total: 1
2019-03-20 09:29:31 -耗时 : 7
2019-03-20 09:29:31 -返回值 : com.bootdo.common.utils.PageUtils@760a7579
2019-03-20 09:29:48 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 09:29:48 -HTTP METHOD : GET
2019-03-20 09:29:48 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 09:29:48 -参数 : [1, {}]
2019-03-20 09:29:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 09:29:48 -==> Parameters: 1(Long)
2019-03-20 09:29:48 -<==      Total: 1
2019-03-20 09:29:48 -耗时 : 5
2019-03-20 09:29:48 -返回值 : elec/elec/edit
2019-03-20 09:29:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:29:48 -HTTP METHOD : GET
2019-03-20 09:29:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:29:48 -参数 : [userType]
2019-03-20 09:29:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:29:48 -==> Parameters: userType(String)
2019-03-20 09:29:48 -<==      Total: 2
2019-03-20 09:29:48 -耗时 : 7
2019-03-20 09:29:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:29:48 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 09:29:48 -HTTP METHOD : GET
2019-03-20 09:29:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:29:48 -参数 : [userState]
2019-03-20 09:29:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:29:48 -==> Parameters: userState(String)
2019-03-20 09:29:48 -<==      Total: 2
2019-03-20 09:29:48 -耗时 : 14
2019-03-20 09:29:48 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:29:48 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 09:29:48 -HTTP METHOD : GET
2019-03-20 09:29:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:29:48 -参数 : [elecType]
2019-03-20 09:29:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:29:48 -==> Parameters: elecType(String)
2019-03-20 09:29:48 -<==      Total: 2
2019-03-20 09:29:48 -耗时 : 5
2019-03-20 09:29:48 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:29:55 -请求地址 : http://localhost:8081/elec/elec/update
2019-03-20 09:29:55 -HTTP METHOD : POST
2019-03-20 09:29:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-03-20 09:29:55 -参数 : [com.bootdo.elec.domain.ElecDO@2165424a]
2019-03-20 09:29:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 09:29:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-03-20 09:29:55.949(Timestamp)
2019-03-20 09:29:55 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.update(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.update(ElecServiceImpl.java:47)
	at com.bootdo.elec.controller.ElecController.update(ElecController.java:204)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$61c13d4e.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-03-20 09:29:56 -<==    Updates: 1
2019-03-20 09:30:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 09:30:35 -HTTP METHOD : GET
2019-03-20 09:30:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 09:30:35 -参数 : []
2019-03-20 09:30:35 -耗时 : 0
2019-03-20 09:30:35 -返回值 : system/dept/deptTree
2019-03-20 09:30:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 09:30:35 -HTTP METHOD : GET
2019-03-20 09:30:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 09:30:35 -参数 : []
2019-03-20 09:30:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 09:30:35 -==> Parameters: 
2019-03-20 09:30:35 -<==      Total: 3
2019-03-20 09:30:35 -耗时 : 110
2019-03-20 09:30:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 09:33:50 -请求地址 : http://localhost:8081/index
2019-03-20 09:33:50 -HTTP METHOD : GET
2019-03-20 09:33:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 09:33:50 -参数 : [{}]
2019-03-20 09:33:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 09:33:50 -==> Parameters: 1(Long)
2019-03-20 09:33:50 -<==      Total: 46
2019-03-20 09:33:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 09:33:50 -==> Parameters: 138(Long)
2019-03-20 09:33:50 -<==      Total: 1
2019-03-20 09:33:50 -耗时 : 20
2019-03-20 09:33:50 -返回值 : index_v1
2019-03-20 09:33:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 09:33:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 09:33:50.757(Timestamp)
2019-03-20 09:33:50 -请求地址 : http://localhost:8081/main
2019-03-20 09:33:50 -HTTP METHOD : GET
2019-03-20 09:33:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:33:50 -参数 : []
2019-03-20 09:33:50 -耗时 : 1
2019-03-20 09:33:50 -返回值 : main
2019-03-20 09:33:50 -<==    Updates: 1
2019-03-20 09:33:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 09:33:51 -HTTP METHOD : GET
2019-03-20 09:33:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 09:33:51 -参数 : []
2019-03-20 09:33:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 09:33:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 09:33:51 -<==      Total: 0
2019-03-20 09:33:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 09:33:51 -==> Parameters: 1(Long), 0(String)
2019-03-20 09:33:51 -<==      Total: 1
2019-03-20 09:33:51 -耗时 : 9
2019-03-20 09:33:51 -返回值 : com.bootdo.common.utils.PageUtils@252df8be
2019-03-20 09:33:51 -请求地址 : http://localhost:8081/main
2019-03-20 09:33:51 -HTTP METHOD : GET
2019-03-20 09:33:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:33:51 -参数 : []
2019-03-20 09:33:51 -耗时 : 0
2019-03-20 09:33:51 -返回值 : main
2019-03-20 09:33:53 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 09:33:53 -HTTP METHOD : GET
2019-03-20 09:33:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 09:33:53 -参数 : []
2019-03-20 09:33:53 -耗时 : 0
2019-03-20 09:33:53 -返回值 : elec/elec/elec
2019-03-20 09:33:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:33:53 -HTTP METHOD : GET
2019-03-20 09:33:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:33:53 -参数 : [userType]
2019-03-20 09:33:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:33:53 -==> Parameters: userType(String)
2019-03-20 09:33:53 -<==      Total: 2
2019-03-20 09:33:53 -耗时 : 4
2019-03-20 09:33:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:33:53 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 09:33:53 -HTTP METHOD : GET
2019-03-20 09:33:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 09:33:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2d360d6b]
2019-03-20 09:33:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 09:33:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 09:33:53 -<==      Total: 10
2019-03-20 09:33:53 -==>  Preparing: select count(*) from elec 
2019-03-20 09:33:53 -==> Parameters: 
2019-03-20 09:33:53 -<==      Total: 1
2019-03-20 09:33:53 -耗时 : 11
2019-03-20 09:33:53 -返回值 : com.bootdo.common.utils.PageUtils@3009219f
2019-03-20 09:34:14 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 09:34:14 -HTTP METHOD : GET
2019-03-20 09:34:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 09:34:14 -参数 : [1, {}]
2019-03-20 09:34:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 09:34:14 -==> Parameters: 1(Long)
2019-03-20 09:34:14 -<==      Total: 1
2019-03-20 09:34:14 -耗时 : 4
2019-03-20 09:34:14 -返回值 : elec/elec/edit
2019-03-20 09:34:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:34:14 -HTTP METHOD : GET
2019-03-20 09:34:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:34:14 -参数 : [userType]
2019-03-20 09:34:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:34:14 -==> Parameters: userType(String)
2019-03-20 09:34:14 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 09:34:14 -HTTP METHOD : GET
2019-03-20 09:34:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:34:14 -参数 : [userState]
2019-03-20 09:34:14 -<==      Total: 2
2019-03-20 09:34:14 -耗时 : 4
2019-03-20 09:34:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:34:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:34:14 -==> Parameters: userState(String)
2019-03-20 09:34:14 -<==      Total: 2
2019-03-20 09:34:14 -耗时 : 5
2019-03-20 09:34:14 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:34:14 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 09:34:14 -HTTP METHOD : GET
2019-03-20 09:34:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:34:14 -参数 : [elecType]
2019-03-20 09:34:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:34:14 -==> Parameters: elecType(String)
2019-03-20 09:34:14 -<==      Total: 2
2019-03-20 09:34:14 -耗时 : 7
2019-03-20 09:34:14 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:39:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 859]
2019-03-20 09:39:05 -Validating all active sessions...
2019-03-20 09:39:05 -Finished session validation.  No sessions were stopped.
2019-03-20 09:39:41 -请求地址 : http://localhost:8081/index
2019-03-20 09:39:41 -HTTP METHOD : GET
2019-03-20 09:39:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 09:39:41 -参数 : [{}]
2019-03-20 09:39:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 09:39:41 -==> Parameters: 1(Long)
2019-03-20 09:39:41 -<==      Total: 46
2019-03-20 09:39:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 09:39:41 -==> Parameters: 138(Long)
2019-03-20 09:39:41 -<==      Total: 1
2019-03-20 09:39:41 -耗时 : 67
2019-03-20 09:39:41 -返回值 : index_v1
2019-03-20 09:39:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 09:39:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 68(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 09:39:41.619(Timestamp)
2019-03-20 09:39:41 -<==    Updates: 1
2019-03-20 09:39:41 -请求地址 : http://localhost:8081/main
2019-03-20 09:39:41 -HTTP METHOD : GET
2019-03-20 09:39:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:39:41 -参数 : []
2019-03-20 09:39:41 -耗时 : 0
2019-03-20 09:39:41 -返回值 : main
2019-03-20 09:39:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 09:39:41 -HTTP METHOD : GET
2019-03-20 09:39:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 09:39:41 -参数 : []
2019-03-20 09:39:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 09:39:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 09:39:41 -<==      Total: 0
2019-03-20 09:39:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 09:39:41 -==> Parameters: 1(Long), 0(String)
2019-03-20 09:39:41 -<==      Total: 1
2019-03-20 09:39:41 -耗时 : 23
2019-03-20 09:39:41 -返回值 : com.bootdo.common.utils.PageUtils@6f27707e
2019-03-20 09:39:42 -请求地址 : http://localhost:8081/main
2019-03-20 09:39:42 -HTTP METHOD : GET
2019-03-20 09:39:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:39:42 -参数 : []
2019-03-20 09:39:42 -耗时 : 0
2019-03-20 09:39:42 -返回值 : main
2019-03-20 09:39:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 09:39:43 -==> Parameters: 1(Long)
2019-03-20 09:39:44 -<==      Total: 90
2019-03-20 09:39:44 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 09:39:44 -HTTP METHOD : GET
2019-03-20 09:39:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 09:39:44 -参数 : []
2019-03-20 09:39:44 -耗时 : 0
2019-03-20 09:39:44 -返回值 : elec/elec/elec
2019-03-20 09:39:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:39:44 -HTTP METHOD : GET
2019-03-20 09:39:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:39:44 -参数 : [userType]
2019-03-20 09:39:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:39:44 -==> Parameters: userType(String)
2019-03-20 09:39:44 -<==      Total: 2
2019-03-20 09:39:44 -耗时 : 3
2019-03-20 09:39:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:39:44 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 09:39:44 -HTTP METHOD : GET
2019-03-20 09:39:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 09:39:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@4eb773fb]
2019-03-20 09:39:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 09:39:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 09:39:44 -<==      Total: 10
2019-03-20 09:39:44 -==>  Preparing: select count(*) from elec 
2019-03-20 09:39:44 -==> Parameters: 
2019-03-20 09:39:44 -<==      Total: 1
2019-03-20 09:39:44 -耗时 : 10
2019-03-20 09:39:44 -返回值 : com.bootdo.common.utils.PageUtils@3849464a
2019-03-20 09:39:53 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 09:39:53 -HTTP METHOD : GET
2019-03-20 09:39:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 09:39:53 -参数 : [1, {}]
2019-03-20 09:39:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 09:39:53 -==> Parameters: 1(Long)
2019-03-20 09:39:53 -<==      Total: 1
2019-03-20 09:39:53 -耗时 : 4
2019-03-20 09:39:53 -返回值 : elec/elec/edit
2019-03-20 09:39:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:39:53 -HTTP METHOD : GET
2019-03-20 09:39:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:39:53 -参数 : [userType]
2019-03-20 09:39:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:39:53 -==> Parameters: userType(String)
2019-03-20 09:39:53 -<==      Total: 2
2019-03-20 09:39:53 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 09:39:53 -HTTP METHOD : GET
2019-03-20 09:39:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:39:53 -耗时 : 6
2019-03-20 09:39:53 -参数 : [userState]
2019-03-20 09:39:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:39:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:39:53 -==> Parameters: userState(String)
2019-03-20 09:39:53 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 09:39:53 -HTTP METHOD : GET
2019-03-20 09:39:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:39:53 -<==      Total: 2
2019-03-20 09:39:53 -参数 : [elecType]
2019-03-20 09:39:53 -耗时 : 3
2019-03-20 09:39:53 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:39:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:39:53 -==> Parameters: elecType(String)
2019-03-20 09:39:53 -<==      Total: 2
2019-03-20 09:39:53 -耗时 : 7
2019-03-20 09:39:53 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:40:07 -请求地址 : http://localhost:8081/index
2019-03-20 09:40:07 -HTTP METHOD : GET
2019-03-20 09:40:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 09:40:07 -参数 : [{}]
2019-03-20 09:40:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 09:40:07 -==> Parameters: 1(Long)
2019-03-20 09:40:07 -<==      Total: 46
2019-03-20 09:40:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 09:40:07 -==> Parameters: 138(Long)
2019-03-20 09:40:07 -<==      Total: 1
2019-03-20 09:40:07 -耗时 : 17
2019-03-20 09:40:07 -返回值 : index_v1
2019-03-20 09:40:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 09:40:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 09:40:07.109(Timestamp)
2019-03-20 09:40:07 -<==    Updates: 1
2019-03-20 09:40:07 -请求地址 : http://localhost:8081/main
2019-03-20 09:40:07 -HTTP METHOD : GET
2019-03-20 09:40:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:40:07 -参数 : []
2019-03-20 09:40:07 -耗时 : 0
2019-03-20 09:40:07 -返回值 : main
2019-03-20 09:40:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 09:40:07 -HTTP METHOD : GET
2019-03-20 09:40:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 09:40:07 -参数 : []
2019-03-20 09:40:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 09:40:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 09:40:07 -<==      Total: 0
2019-03-20 09:40:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 09:40:07 -==> Parameters: 1(Long), 0(String)
2019-03-20 09:40:07 -<==      Total: 1
2019-03-20 09:40:07 -耗时 : 7
2019-03-20 09:40:07 -返回值 : com.bootdo.common.utils.PageUtils@76145fc5
2019-03-20 09:40:07 -请求地址 : http://localhost:8081/main
2019-03-20 09:40:07 -HTTP METHOD : GET
2019-03-20 09:40:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:40:07 -参数 : []
2019-03-20 09:40:07 -耗时 : 1
2019-03-20 09:40:07 -返回值 : main
2019-03-20 09:40:08 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 09:40:08 -HTTP METHOD : GET
2019-03-20 09:40:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 09:40:08 -参数 : []
2019-03-20 09:40:08 -耗时 : 0
2019-03-20 09:40:08 -返回值 : elec/elec/elec
2019-03-20 09:40:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:40:09 -HTTP METHOD : GET
2019-03-20 09:40:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:40:09 -参数 : [userType]
2019-03-20 09:40:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:40:09 -==> Parameters: userType(String)
2019-03-20 09:40:09 -<==      Total: 2
2019-03-20 09:40:09 -耗时 : 3
2019-03-20 09:40:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:40:09 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 09:40:09 -HTTP METHOD : GET
2019-03-20 09:40:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 09:40:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3034c480]
2019-03-20 09:40:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 09:40:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 09:40:09 -<==      Total: 10
2019-03-20 09:40:09 -==>  Preparing: select count(*) from elec 
2019-03-20 09:40:09 -==> Parameters: 
2019-03-20 09:40:09 -<==      Total: 1
2019-03-20 09:40:09 -耗时 : 7
2019-03-20 09:40:09 -返回值 : com.bootdo.common.utils.PageUtils@62d4802b
2019-03-20 09:40:15 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 09:40:15 -HTTP METHOD : GET
2019-03-20 09:40:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 09:40:15 -参数 : [1, {}]
2019-03-20 09:40:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 09:40:15 -==> Parameters: 1(Long)
2019-03-20 09:40:15 -<==      Total: 1
2019-03-20 09:40:15 -耗时 : 7
2019-03-20 09:40:15 -返回值 : elec/elec/edit
2019-03-20 09:40:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:40:15 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 09:40:15 -HTTP METHOD : GET
2019-03-20 09:40:15 -HTTP METHOD : GET
2019-03-20 09:40:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:40:15 -参数 : [userState]
2019-03-20 09:40:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:40:15 -参数 : [userType]
2019-03-20 09:40:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:40:15 -==> Parameters: userState(String)
2019-03-20 09:40:15 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 09:40:15 -HTTP METHOD : GET
2019-03-20 09:40:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:40:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:40:15 -参数 : [elecType]
2019-03-20 09:40:15 -==> Parameters: userType(String)
2019-03-20 09:40:15 -<==      Total: 2
2019-03-20 09:40:15 -<==      Total: 2
2019-03-20 09:40:15 -耗时 : 5
2019-03-20 09:40:15 -耗时 : 5
2019-03-20 09:40:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:40:15 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:40:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:40:15 -==> Parameters: elecType(String)
2019-03-20 09:40:15 -<==      Total: 2
2019-03-20 09:40:15 -耗时 : 9
2019-03-20 09:40:15 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:45:37 -请求地址 : http://localhost:8081/index
2019-03-20 09:45:37 -HTTP METHOD : GET
2019-03-20 09:45:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 09:45:37 -参数 : [{}]
2019-03-20 09:45:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 09:45:37 -==> Parameters: 1(Long)
2019-03-20 09:45:37 -<==      Total: 46
2019-03-20 09:45:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 09:45:37 -==> Parameters: 138(Long)
2019-03-20 09:45:37 -<==      Total: 1
2019-03-20 09:45:37 -耗时 : 196
2019-03-20 09:45:37 -返回值 : index_v1
2019-03-20 09:45:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 09:45:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 196(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 09:45:37.374(Timestamp)
2019-03-20 09:45:37 -<==    Updates: 1
2019-03-20 09:45:37 -请求地址 : http://localhost:8081/main
2019-03-20 09:45:37 -HTTP METHOD : GET
2019-03-20 09:45:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:45:37 -参数 : []
2019-03-20 09:45:37 -耗时 : 0
2019-03-20 09:45:37 -返回值 : main
2019-03-20 09:45:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 09:45:37 -HTTP METHOD : GET
2019-03-20 09:45:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 09:45:37 -参数 : []
2019-03-20 09:45:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 09:45:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 09:45:37 -<==      Total: 0
2019-03-20 09:45:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 09:45:37 -==> Parameters: 1(Long), 0(String)
2019-03-20 09:45:37 -请求地址 : http://localhost:8081/main
2019-03-20 09:45:37 -<==      Total: 1
2019-03-20 09:45:37 -HTTP METHOD : GET
2019-03-20 09:45:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:45:37 -耗时 : 79
2019-03-20 09:45:37 -返回值 : com.bootdo.common.utils.PageUtils@49a50ac1
2019-03-20 09:45:37 -参数 : []
2019-03-20 09:45:37 -耗时 : 6
2019-03-20 09:45:37 -返回值 : main
2019-03-20 09:45:45 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 09:45:45 -HTTP METHOD : GET
2019-03-20 09:45:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 09:45:45 -参数 : []
2019-03-20 09:45:45 -耗时 : 1
2019-03-20 09:45:45 -返回值 : elec/elec/elec
2019-03-20 09:45:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:45:45 -HTTP METHOD : GET
2019-03-20 09:45:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:45:45 -参数 : [userType]
2019-03-20 09:45:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:45:45 -==> Parameters: userType(String)
2019-03-20 09:45:45 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 09:45:45 -HTTP METHOD : GET
2019-03-20 09:45:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 09:45:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@424f2c21]
2019-03-20 09:45:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 09:45:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 09:45:45 -<==      Total: 10
2019-03-20 09:45:45 -==>  Preparing: select count(*) from elec 
2019-03-20 09:45:45 -==> Parameters: 
2019-03-20 09:45:45 -<==      Total: 1
2019-03-20 09:45:45 -耗时 : 9
2019-03-20 09:45:45 -返回值 : com.bootdo.common.utils.PageUtils@177233c9
2019-03-20 09:45:45 -<==      Total: 2
2019-03-20 09:45:45 -耗时 : 54
2019-03-20 09:45:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:45:53 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 09:45:53 -HTTP METHOD : GET
2019-03-20 09:45:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 09:45:53 -参数 : [1, {}]
2019-03-20 09:45:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 09:45:53 -==> Parameters: 1(Long)
2019-03-20 09:45:53 -<==      Total: 1
2019-03-20 09:45:53 -耗时 : 186
2019-03-20 09:45:53 -返回值 : elec/elec/edit
2019-03-20 09:45:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:45:54 -HTTP METHOD : GET
2019-03-20 09:45:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:45:54 -参数 : [userType]
2019-03-20 09:45:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:45:54 -==> Parameters: userType(String)
2019-03-20 09:45:54 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 09:45:54 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 09:45:54 -HTTP METHOD : GET
2019-03-20 09:45:54 -HTTP METHOD : GET
2019-03-20 09:45:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:45:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:45:54 -参数 : [userState]
2019-03-20 09:45:54 -参数 : [elecType]
2019-03-20 09:45:54 -<==      Total: 2
2019-03-20 09:45:54 -耗时 : 4
2019-03-20 09:45:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:45:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:45:54 -==> Parameters: elecType(String)
2019-03-20 09:45:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:45:54 -==> Parameters: userState(String)
2019-03-20 09:45:54 -<==      Total: 2
2019-03-20 09:45:54 -<==      Total: 2
2019-03-20 09:45:54 -耗时 : 6
2019-03-20 09:45:54 -耗时 : 6
2019-03-20 09:45:54 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:45:54 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:58:50 -请求地址 : http://localhost:8081/index
2019-03-20 09:58:50 -HTTP METHOD : GET
2019-03-20 09:58:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 09:58:50 -参数 : [{}]
2019-03-20 09:58:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 09:58:50 -==> Parameters: 1(Long)
2019-03-20 09:58:50 -<==      Total: 46
2019-03-20 09:58:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 09:58:50 -==> Parameters: 138(Long)
2019-03-20 09:58:50 -<==      Total: 1
2019-03-20 09:58:50 -耗时 : 42
2019-03-20 09:58:50 -返回值 : index_v1
2019-03-20 09:58:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 09:58:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 09:58:50.073(Timestamp)
2019-03-20 09:58:50 -<==    Updates: 1
2019-03-20 09:58:50 -请求地址 : http://localhost:8081/main
2019-03-20 09:58:50 -HTTP METHOD : GET
2019-03-20 09:58:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:58:50 -参数 : []
2019-03-20 09:58:50 -耗时 : 1
2019-03-20 09:58:50 -返回值 : main
2019-03-20 09:58:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 09:58:50 -HTTP METHOD : GET
2019-03-20 09:58:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 09:58:50 -参数 : []
2019-03-20 09:58:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 09:58:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 09:58:50 -<==      Total: 0
2019-03-20 09:58:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 09:58:50 -==> Parameters: 1(Long), 0(String)
2019-03-20 09:58:50 -<==      Total: 1
2019-03-20 09:58:50 -耗时 : 6
2019-03-20 09:58:50 -返回值 : com.bootdo.common.utils.PageUtils@3cf5c2e4
2019-03-20 09:58:50 -请求地址 : http://localhost:8081/main
2019-03-20 09:58:50 -HTTP METHOD : GET
2019-03-20 09:58:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 09:58:50 -参数 : []
2019-03-20 09:58:50 -耗时 : 1
2019-03-20 09:58:50 -返回值 : main
2019-03-20 09:58:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 09:58:52 -==> Parameters: 1(Long)
2019-03-20 09:58:52 -<==      Total: 90
2019-03-20 09:58:52 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 09:58:52 -HTTP METHOD : GET
2019-03-20 09:58:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 09:58:52 -参数 : []
2019-03-20 09:58:52 -耗时 : 1
2019-03-20 09:58:52 -返回值 : elec/elec/elec
2019-03-20 09:58:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:58:52 -HTTP METHOD : GET
2019-03-20 09:58:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:58:52 -参数 : [userType]
2019-03-20 09:58:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:58:52 -==> Parameters: userType(String)
2019-03-20 09:58:52 -<==      Total: 2
2019-03-20 09:58:52 -耗时 : 5
2019-03-20 09:58:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:58:52 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 09:58:52 -HTTP METHOD : GET
2019-03-20 09:58:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 09:58:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@5a334226]
2019-03-20 09:58:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 09:58:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 09:58:52 -<==      Total: 10
2019-03-20 09:58:52 -==>  Preparing: select count(*) from elec 
2019-03-20 09:58:52 -==> Parameters: 
2019-03-20 09:58:52 -<==      Total: 1
2019-03-20 09:58:52 -耗时 : 8
2019-03-20 09:58:52 -返回值 : com.bootdo.common.utils.PageUtils@61590d23
2019-03-20 09:59:18 -请求地址 : http://localhost:8081/elec/elec/edit/4
2019-03-20 09:59:18 -HTTP METHOD : GET
2019-03-20 09:59:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 09:59:18 -参数 : [4, {}]
2019-03-20 09:59:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 09:59:18 -==> Parameters: 4(Long)
2019-03-20 09:59:18 -<==      Total: 1
2019-03-20 09:59:18 -耗时 : 3
2019-03-20 09:59:18 -返回值 : elec/elec/edit
2019-03-20 09:59:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 09:59:18 -HTTP METHOD : GET
2019-03-20 09:59:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:59:18 -参数 : [userType]
2019-03-20 09:59:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:59:18 -==> Parameters: userType(String)
2019-03-20 09:59:18 -<==      Total: 2
2019-03-20 09:59:18 -耗时 : 4
2019-03-20 09:59:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:59:18 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 09:59:18 -HTTP METHOD : GET
2019-03-20 09:59:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:59:18 -参数 : [userState]
2019-03-20 09:59:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:59:18 -==> Parameters: userState(String)
2019-03-20 09:59:18 -<==      Total: 2
2019-03-20 09:59:18 -耗时 : 8
2019-03-20 09:59:18 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 09:59:18 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 09:59:18 -HTTP METHOD : GET
2019-03-20 09:59:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 09:59:18 -参数 : [elecType]
2019-03-20 09:59:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 09:59:18 -==> Parameters: elecType(String)
2019-03-20 09:59:18 -<==      Total: 2
2019-03-20 09:59:18 -耗时 : 5
2019-03-20 09:59:18 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 10:01:54 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 10:01:54 -HTTP METHOD : GET
2019-03-20 10:01:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 10:01:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@746fa712]
2019-03-20 10:01:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-20 10:01:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 10:01:54 -<==      Total: 2
2019-03-20 10:01:54 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-20 10:01:54 -==> Parameters: 
2019-03-20 10:01:54 -<==      Total: 1
2019-03-20 10:01:54 -耗时 : 82
2019-03-20 10:01:54 -返回值 : com.bootdo.common.utils.PageUtils@d5cfcde
2019-03-20 10:01:54 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 10:01:54 -HTTP METHOD : GET
2019-03-20 10:01:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 10:01:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@44a07fd1]
2019-03-20 10:01:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 10:01:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 10:01:54 -<==      Total: 10
2019-03-20 10:01:54 -==>  Preparing: select count(*) from elec 
2019-03-20 10:01:54 -==> Parameters: 
2019-03-20 10:01:54 -<==      Total: 1
2019-03-20 10:01:54 -耗时 : 9
2019-03-20 10:01:54 -返回值 : com.bootdo.common.utils.PageUtils@1869c53d
2019-03-20 10:01:55 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 10:01:55 -HTTP METHOD : GET
2019-03-20 10:01:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 10:01:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@741d668d]
2019-03-20 10:01:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-20 10:01:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 10:01:55 -<==      Total: 2
2019-03-20 10:01:55 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-20 10:01:55 -==> Parameters: 
2019-03-20 10:01:55 -<==      Total: 1
2019-03-20 10:01:55 -耗时 : 7
2019-03-20 10:01:55 -返回值 : com.bootdo.common.utils.PageUtils@5ec9f272
2019-03-20 10:04:40 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 10:04:40 -HTTP METHOD : GET
2019-03-20 10:04:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 10:04:40 -参数 : [1, {}]
2019-03-20 10:04:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 10:04:40 -==> Parameters: 1(Long)
2019-03-20 10:04:40 -<==      Total: 1
2019-03-20 10:04:40 -耗时 : 6
2019-03-20 10:04:40 -返回值 : elec/elec/edit
2019-03-20 10:04:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 10:04:40 -HTTP METHOD : GET
2019-03-20 10:04:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 10:04:40 -参数 : [userType]
2019-03-20 10:04:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 10:04:40 -==> Parameters: userType(String)
2019-03-20 10:04:40 -<==      Total: 2
2019-03-20 10:04:40 -耗时 : 5
2019-03-20 10:04:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 10:04:40 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 10:04:40 -HTTP METHOD : GET
2019-03-20 10:04:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 10:04:40 -参数 : [elecType]
2019-03-20 10:04:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 10:04:40 -==> Parameters: elecType(String)
2019-03-20 10:04:40 -<==      Total: 2
2019-03-20 10:04:40 -耗时 : 4
2019-03-20 10:04:40 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 10:04:40 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 10:04:40 -HTTP METHOD : GET
2019-03-20 10:04:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 10:04:40 -参数 : [userState]
2019-03-20 10:04:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 10:04:40 -==> Parameters: userState(String)
2019-03-20 10:04:40 -<==      Total: 2
2019-03-20 10:04:40 -耗时 : 7
2019-03-20 10:04:40 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 10:09:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(10)-CONNECTED(10)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 120], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 20], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1290]
2019-03-20 10:10:24 -请求地址 : http://localhost:8081/index
2019-03-20 10:10:24 -HTTP METHOD : GET
2019-03-20 10:10:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 10:10:24 -参数 : [{}]
2019-03-20 10:10:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 10:10:24 -==> Parameters: 1(Long)
2019-03-20 10:10:24 -<==      Total: 46
2019-03-20 10:10:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 10:10:24 -==> Parameters: 138(Long)
2019-03-20 10:10:24 -<==      Total: 1
2019-03-20 10:10:24 -耗时 : 33
2019-03-20 10:10:24 -返回值 : index_v1
2019-03-20 10:10:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 10:10:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 10:10:24.465(Timestamp)
2019-03-20 10:10:24 -<==    Updates: 1
2019-03-20 10:10:24 -请求地址 : http://localhost:8081/main
2019-03-20 10:10:24 -HTTP METHOD : GET
2019-03-20 10:10:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 10:10:24 -参数 : []
2019-03-20 10:10:24 -耗时 : 0
2019-03-20 10:10:24 -返回值 : main
2019-03-20 10:10:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 10:10:24 -HTTP METHOD : GET
2019-03-20 10:10:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 10:10:24 -参数 : []
2019-03-20 10:10:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 10:10:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 10:10:24 -<==      Total: 0
2019-03-20 10:10:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 10:10:24 -==> Parameters: 1(Long), 0(String)
2019-03-20 10:10:24 -<==      Total: 1
2019-03-20 10:10:24 -耗时 : 22
2019-03-20 10:10:24 -返回值 : com.bootdo.common.utils.PageUtils@cc94efb
2019-03-20 10:10:25 -请求地址 : http://localhost:8081/main
2019-03-20 10:10:25 -HTTP METHOD : GET
2019-03-20 10:10:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 10:10:25 -参数 : []
2019-03-20 10:10:25 -耗时 : 1
2019-03-20 10:10:25 -返回值 : main
2019-03-20 10:10:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 10:10:27 -==> Parameters: 1(Long)
2019-03-20 10:10:27 -<==      Total: 90
2019-03-20 10:10:27 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 10:10:27 -HTTP METHOD : GET
2019-03-20 10:10:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 10:10:27 -参数 : []
2019-03-20 10:10:27 -耗时 : 1
2019-03-20 10:10:27 -返回值 : elec/elec/elec
2019-03-20 10:10:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 10:10:27 -HTTP METHOD : GET
2019-03-20 10:10:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 10:10:27 -参数 : [userType]
2019-03-20 10:10:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 10:10:27 -==> Parameters: userType(String)
2019-03-20 10:10:27 -<==      Total: 2
2019-03-20 10:10:27 -耗时 : 4
2019-03-20 10:10:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 10:10:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 10:10:27 -HTTP METHOD : GET
2019-03-20 10:10:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 10:10:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@75e010fe]
2019-03-20 10:10:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 10:10:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 10:10:27 -<==      Total: 10
2019-03-20 10:10:27 -==>  Preparing: select count(*) from elec 
2019-03-20 10:10:27 -==> Parameters: 
2019-03-20 10:10:27 -<==      Total: 1
2019-03-20 10:10:27 -耗时 : 9
2019-03-20 10:10:27 -返回值 : com.bootdo.common.utils.PageUtils@57cb57d5
2019-03-20 10:12:57 -Starting BootdoApplication on ZJZL-20180906VX with PID 9956 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 10:12:57 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 10:12:57 -The following profiles are active: dev
2019-03-20 10:12:57 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47db5fa5: startup date [Wed Mar 20 10:12:57 CST 2019]; root of context hierarchy
2019-03-20 10:13:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 10:13:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$77e927dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:13:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6a425684] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:13:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:13:07 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:13:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:13:07 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 10:13:07 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 10:13:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:13:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:13:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:13:08 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:13:09 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 10:13:09 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 10:13:09 -Starting service [Tomcat]
2019-03-20 10:13:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 10:13:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 10:13:10 -Initializing Spring embedded WebApplicationContext
2019-03-20 10:13:10 -Root WebApplicationContext: initialization completed in 12392 ms
2019-03-20 10:13:11 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 10:13:11 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 10:13:11 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 10:13:11 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 10:13:11 -Filter xssFilter was not registered (disabled)
2019-03-20 10:13:11 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 10:13:11 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 10:13:11 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 10:13:11 -Servlet dispatcherServlet mapped to [/]
2019-03-20 10:13:14 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47db5fa5: startup date [Wed Mar 20 10:12:57 CST 2019]; root of context hierarchy
2019-03-20 10:13:15 -Using default implementation for ThreadExecutor
2019-03-20 10:13:15 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 10:13:15 -Quartz Scheduler v.2.2.1 created.
2019-03-20 10:13:15 -RAMJobStore initialized.
2019-03-20 10:13:15 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 10:13:15 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 10:13:15 -Quartz scheduler version: 2.2.1
2019-03-20 10:13:15 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5807ea46
2019-03-20 10:13:17 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 10:13:17 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 10:13:20 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 10:13:20 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 10:13:20 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:13:20 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 10:13:20 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 10:13:20 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 10:13:20 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 10:13:20 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 10:13:20 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 10:13:20 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 10:13:20 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 10:13:20 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 10:13:20 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 10:13:20 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 10:13:20 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 10:13:20 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 10:13:20 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 10:13:20 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 10:13:20 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 10:13:20 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 10:13:20 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 10:13:20 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 10:13:20 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 10:13:20 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 10:13:20 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 10:13:20 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 10:13:20 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 10:13:20 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 10:13:20 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 10:13:20 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 10:13:20 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 10:13:20 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 10:13:20 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 10:13:20 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 10:13:20 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 10:13:20 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 10:13:20 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 10:13:20 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 10:13:20 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:13:20 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 10:13:20 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 10:13:20 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:13:20 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 10:13:20 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 10:13:20 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 10:13:20 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 10:13:20 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 10:13:20 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 10:13:20 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 10:13:20 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 10:13:20 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 10:13:20 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 10:13:20 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 10:13:20 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 10:13:20 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:13:20 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 10:13:20 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:13:20 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 10:13:20 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 10:13:20 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 10:13:20 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 10:13:20 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 10:13:20 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 10:13:20 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 10:13:20 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 10:13:20 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 10:13:20 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 10:13:20 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 10:13:20 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 10:13:20 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 10:13:20 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 10:13:20 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 10:13:20 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 10:13:20 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 10:13:20 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 10:13:20 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 10:13:20 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 10:13:20 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 10:13:20 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 10:13:20 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 10:13:20 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 10:13:20 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 10:13:20 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 10:13:20 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 10:13:20 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 10:13:20 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 10:13:20 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 10:13:20 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 10:13:20 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 10:13:20 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 10:13:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 10:13:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 10:13:20 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 10:13:20 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 10:13:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 10:13:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 10:13:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 10:13:20 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 10:13:20 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 10:13:20 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 10:13:20 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 10:13:20 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 10:13:20 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 10:13:20 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 10:13:20 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 10:13:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 10:13:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 10:13:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 10:13:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 10:13:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 10:13:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 10:13:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 10:13:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 10:13:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 10:13:20 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 10:13:20 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 10:13:20 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 10:13:20 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 10:13:20 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:13:20 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 10:13:20 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:13:20 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 10:13:20 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 10:13:20 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 10:13:20 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 10:13:20 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 10:13:20 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 10:13:20 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:13:20 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 10:13:20 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:13:20 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 10:13:20 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 10:13:20 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 10:13:20 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 10:13:21 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 10:13:21 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 10:13:21 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 10:13:21 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 10:13:22 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47db5fa5: startup date [Wed Mar 20 10:12:57 CST 2019]; root of context hierarchy
2019-03-20 10:13:22 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 10:13:22 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 10:13:22 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 10:13:22 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 10:13:22 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 10:13:25 -Registering beans for JMX exposure on startup
2019-03-20 10:13:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 10:13:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 10:13:25 -Starting beans in phase 2147483647
2019-03-20 10:13:25 -Context refreshed
2019-03-20 10:13:25 -Found 1 custom documentation plugin(s)
2019-03-20 10:13:25 -Scanning for api listing references
2019-03-20 10:13:26 -Generating unique operation named: removeUsingPOST_1
2019-03-20 10:13:26 -Generating unique operation named: addUsingGET_1
2019-03-20 10:13:26 -Generating unique operation named: editUsingGET_1
2019-03-20 10:13:26 -Generating unique operation named: listUsingGET_1
2019-03-20 10:13:26 -Generating unique operation named: removeUsingPOST_2
2019-03-20 10:13:26 -Generating unique operation named: removeUsingPOST_3
2019-03-20 10:13:26 -Generating unique operation named: saveUsingPOST_1
2019-03-20 10:13:26 -Generating unique operation named: updateUsingGET_1
2019-03-20 10:13:26 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPOST_1
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPUT_1
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 10:13:27 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 10:13:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 10:13:27 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 10:13:27 -Generating unique operation named: addUsingGET_2
2019-03-20 10:13:27 -Generating unique operation named: editUsingGET_2
2019-03-20 10:13:27 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 10:13:27 -Generating unique operation named: listUsingGET_2
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_4
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_5
2019-03-20 10:13:27 -Generating unique operation named: saveUsingPOST_2
2019-03-20 10:13:27 -Generating unique operation named: updateUsingGET_2
2019-03-20 10:13:27 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPOST_2
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPUT_2
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 10:13:27 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 10:13:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 10:13:27 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 10:13:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 10:13:27 -Generating unique operation named: addUsingGET_3
2019-03-20 10:13:27 -Generating unique operation named: editUsingGET_3
2019-03-20 10:13:27 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 10:13:27 -Generating unique operation named: listUsingGET_3
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_6
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_7
2019-03-20 10:13:27 -Generating unique operation named: saveUsingPOST_3
2019-03-20 10:13:27 -Generating unique operation named: updateUsingGET_3
2019-03-20 10:13:27 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPOST_3
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPUT_3
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 10:13:27 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 10:13:27 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 10:13:27 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 10:13:27 -Generating unique operation named: addUsingGET_4
2019-03-20 10:13:27 -Generating unique operation named: editUsingGET_4
2019-03-20 10:13:27 -Generating unique operation named: listUsingGET_4
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_8
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_9
2019-03-20 10:13:27 -Generating unique operation named: saveUsingPOST_4
2019-03-20 10:13:27 -Generating unique operation named: updateUsingGET_4
2019-03-20 10:13:27 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPOST_4
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPUT_4
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 10:13:27 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 10:13:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 10:13:27 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 10:13:27 -Generating unique operation named: ElecUsingGET_1
2019-03-20 10:13:27 -Generating unique operation named: addUsingGET_5
2019-03-20 10:13:27 -Generating unique operation named: editUsingGET_5
2019-03-20 10:13:27 -Generating unique operation named: listUsingGET_5
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_10
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_11
2019-03-20 10:13:27 -Generating unique operation named: saveUsingPOST_5
2019-03-20 10:13:27 -Generating unique operation named: updateUsingGET_5
2019-03-20 10:13:27 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPOST_5
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPUT_5
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 10:13:27 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 10:13:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 10:13:27 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 10:13:27 -Generating unique operation named: editUsingGET_6
2019-03-20 10:13:27 -Generating unique operation named: listUsingGET_6
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPOST_6
2019-03-20 10:13:27 -Generating unique operation named: addUsingGET_6
2019-03-20 10:13:27 -Generating unique operation named: editUsingGET_7
2019-03-20 10:13:27 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 10:13:27 -Generating unique operation named: listUsingGET_7
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_12
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_13
2019-03-20 10:13:27 -Generating unique operation named: saveUsingPOST_6
2019-03-20 10:13:27 -Generating unique operation named: updateUsingGET_6
2019-03-20 10:13:27 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPOST_7
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPUT_6
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 10:13:27 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 10:13:27 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 10:13:27 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 10:13:27 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 10:13:27 -Generating unique operation named: addUsingGET_7
2019-03-20 10:13:27 -Generating unique operation named: editUsingGET_8
2019-03-20 10:13:27 -Generating unique operation named: listUsingGET_8
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_14
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_15
2019-03-20 10:13:27 -Generating unique operation named: saveUsingPOST_7
2019-03-20 10:13:27 -Generating unique operation named: updateUsingGET_7
2019-03-20 10:13:27 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPOST_8
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPUT_7
2019-03-20 10:13:27 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 10:13:27 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 10:13:27 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 10:13:27 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 10:13:27 -Generating unique operation named: addUsingGET_8
2019-03-20 10:13:27 -Generating unique operation named: editUsingGET_9
2019-03-20 10:13:27 -Generating unique operation named: listUsingGET_9
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_16
2019-03-20 10:13:27 -Generating unique operation named: removeUsingPOST_17
2019-03-20 10:13:27 -Generating unique operation named: saveUsingPOST_8
2019-03-20 10:13:27 -Generating unique operation named: updateUsingGET_8
2019-03-20 10:13:28 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPOST_9
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPUT_8
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 10:13:28 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 10:13:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 10:13:28 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 10:13:28 -Generating unique operation named: addUsingGET_9
2019-03-20 10:13:28 -Generating unique operation named: editUsingGET_10
2019-03-20 10:13:28 -Generating unique operation named: infoUsingGET_1
2019-03-20 10:13:28 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 10:13:28 -Generating unique operation named: infoUsingPOST_1
2019-03-20 10:13:28 -Generating unique operation named: infoUsingPUT_1
2019-03-20 10:13:28 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 10:13:28 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 10:13:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 10:13:28 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 10:13:28 -Generating unique operation named: listUsingGET_10
2019-03-20 10:13:28 -Generating unique operation named: removeUsingPOST_18
2019-03-20 10:13:28 -Generating unique operation named: removeUsingPOST_19
2019-03-20 10:13:28 -Generating unique operation named: saveUsingPOST_9
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPOST_10
2019-03-20 10:13:28 -Generating unique operation named: listUsingGET_11
2019-03-20 10:13:28 -Generating unique operation named: removeUsingPOST_20
2019-03-20 10:13:28 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 10:13:28 -Generating unique operation named: addUsingGET_10
2019-03-20 10:13:28 -Generating unique operation named: editUsingGET_11
2019-03-20 10:13:28 -Generating unique operation named: listUsingGET_12
2019-03-20 10:13:28 -Generating unique operation named: removeUsingPOST_21
2019-03-20 10:13:28 -Generating unique operation named: saveUsingPOST_10
2019-03-20 10:13:28 -Generating unique operation named: treeUsingGET_1
2019-03-20 10:13:28 -Generating unique operation named: treeUsingGET_2
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPOST_11
2019-03-20 10:13:28 -Generating unique operation named: addUsingGET_11
2019-03-20 10:13:28 -Generating unique operation named: editUsingGET_12
2019-03-20 10:13:28 -Generating unique operation named: listUsingGET_13
2019-03-20 10:13:28 -Generating unique operation named: removeUsingPOST_22
2019-03-20 10:13:28 -Generating unique operation named: removeUsingPOST_23
2019-03-20 10:13:28 -Generating unique operation named: saveUsingPOST_11
2019-03-20 10:13:28 -Generating unique operation named: updateUsingGET_9
2019-03-20 10:13:28 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPOST_12
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPUT_9
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 10:13:28 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 10:13:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 10:13:28 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 10:13:28 -Generating unique operation named: addUsingGET_12
2019-03-20 10:13:28 -Generating unique operation named: editUsingGET_13
2019-03-20 10:13:28 -Generating unique operation named: listUsingGET_14
2019-03-20 10:13:28 -Generating unique operation named: removeUsingPOST_24
2019-03-20 10:13:28 -Generating unique operation named: removeUsingPOST_25
2019-03-20 10:13:28 -Generating unique operation named: saveUsingPOST_12
2019-03-20 10:13:28 -Generating unique operation named: updateUsingGET_10
2019-03-20 10:13:28 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPOST_13
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPUT_10
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 10:13:28 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 10:13:28 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 10:13:28 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 10:13:28 -Generating unique operation named: addUsingGET_13
2019-03-20 10:13:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 10:13:28 -Generating unique operation named: editUsingGET_14
2019-03-20 10:13:28 -Generating unique operation named: listUsingGET_15
2019-03-20 10:13:28 -Generating unique operation named: saveUsingPOST_13
2019-03-20 10:13:28 -Generating unique operation named: saveUsingPOST_14
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPOST_14
2019-03-20 10:13:28 -Generating unique operation named: listUsingGET_16
2019-03-20 10:13:28 -Generating unique operation named: listUsingHEAD_1
2019-03-20 10:13:28 -Generating unique operation named: listUsingPOST_1
2019-03-20 10:13:28 -Generating unique operation named: listUsingPUT_1
2019-03-20 10:13:28 -Generating unique operation named: listUsingPATCH_1
2019-03-20 10:13:28 -Generating unique operation named: listUsingDELETE_1
2019-03-20 10:13:28 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 10:13:28 -Generating unique operation named: listUsingTRACE_1
2019-03-20 10:13:28 -Generating unique operation named: addUsingGET_14
2019-03-20 10:13:28 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 10:13:28 -Generating unique operation named: editUsingGET_15
2019-03-20 10:13:28 -Generating unique operation named: listUsingGET_17
2019-03-20 10:13:28 -Generating unique operation named: removeUsingPOST_26
2019-03-20 10:13:28 -Generating unique operation named: saveUsingPOST_15
2019-03-20 10:13:28 -Generating unique operation named: treeUsingGET_3
2019-03-20 10:13:28 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 10:13:28 -Generating unique operation named: updateUsingPOST_15
2019-03-20 10:13:28 -Generating unique operation named: addUsingGET_15
2019-03-20 10:13:28 -Generating unique operation named: editUsingGET_16
2019-03-20 10:13:29 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 10:13:29 -Generating unique operation named: listUsingGET_18
2019-03-20 10:13:29 -Generating unique operation named: removeUsingPOST_27
2019-03-20 10:13:29 -Generating unique operation named: removeUsingPOST_28
2019-03-20 10:13:29 -Generating unique operation named: saveUsingPOST_16
2019-03-20 10:13:29 -Generating unique operation named: updateUsingGET_11
2019-03-20 10:13:29 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 10:13:29 -Generating unique operation named: updateUsingPOST_16
2019-03-20 10:13:29 -Generating unique operation named: updateUsingPUT_11
2019-03-20 10:13:29 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 10:13:29 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 10:13:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 10:13:29 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 10:13:29 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 10:13:29 -Generating unique operation named: addUsingGET_16
2019-03-20 10:13:29 -Generating unique operation named: editUsingGET_17
2019-03-20 10:13:29 -Generating unique operation named: listUsingGET_19
2019-03-20 10:13:29 -Generating unique operation named: removeUsingPOST_29
2019-03-20 10:13:29 -Generating unique operation named: removeUsingPOST_30
2019-03-20 10:13:29 -Generating unique operation named: saveUsingPOST_17
2019-03-20 10:13:29 -Generating unique operation named: updateUsingGET_12
2019-03-20 10:13:29 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 10:13:29 -Generating unique operation named: updateUsingPOST_17
2019-03-20 10:13:29 -Generating unique operation named: updateUsingPUT_12
2019-03-20 10:13:29 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 10:13:29 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 10:13:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 10:13:29 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 10:13:29 -Generating unique operation named: addUsingGET_17
2019-03-20 10:13:29 -Generating unique operation named: editUsingGET_18
2019-03-20 10:13:29 -Generating unique operation named: listUsingGET_20
2019-03-20 10:13:29 -Generating unique operation named: removeUsingPOST_31
2019-03-20 10:13:29 -Generating unique operation named: removeUsingPOST_32
2019-03-20 10:13:29 -Generating unique operation named: saveUsingPOST_18
2019-03-20 10:13:29 -Generating unique operation named: updateUsingGET_13
2019-03-20 10:13:29 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 10:13:29 -Generating unique operation named: updateUsingPOST_18
2019-03-20 10:13:29 -Generating unique operation named: updateUsingPUT_13
2019-03-20 10:13:29 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 10:13:29 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 10:13:29 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 10:13:29 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 10:13:29 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 10:13:29 -Starting Quartz Scheduler now
2019-03-20 10:13:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 10:13:29 -Starting...
2019-03-20 10:13:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 10:13:29 -Started.
2019-03-20 10:13:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 10:13:29 -Using a shared selector for servlet write/read
2019-03-20 10:13:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-20 10:13:29 -Started BootdoApplication in 33.992 seconds (JVM running for 35.681)
2019-03-20 10:13:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-20 10:13:29 -==> Parameters: 
2019-03-20 10:13:30 -<==      Total: 1
2019-03-20 10:14:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-20 10:14:12 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-20 10:14:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 55 ms
2019-03-20 10:14:12 -Enabling session validation scheduler...
2019-03-20 10:14:12 -请求地址 : http://localhost:8081/
2019-03-20 10:14:12 -HTTP METHOD : GET
2019-03-20 10:14:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-20 10:14:12 -参数 : [{}]
2019-03-20 10:14:12 -耗时 : 3
2019-03-20 10:14:12 -返回值 : redirect:/index
2019-03-20 10:14:12 -请求地址 : http://localhost:8081/login;JSESSIONID=2c2e8298-e321-4f04-ae7a-74f1377f8f61
2019-03-20 10:14:12 -HTTP METHOD : GET
2019-03-20 10:14:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 10:14:12 -参数 : [{}]
2019-03-20 10:14:12 -耗时 : 0
2019-03-20 10:14:12 -返回值 : login
2019-03-20 10:14:14 -请求地址 : http://localhost:8081/getVerify
2019-03-20 10:14:14 -HTTP METHOD : GET
2019-03-20 10:14:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 10:14:14 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5dc3a4d4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4a3ae8fa]
2019-03-20 10:14:21 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-20 10:14:22 -5734
2019-03-20 10:14:22 -耗时 : 8194
2019-03-20 10:14:22 -返回值 : null
2019-03-20 10:14:22 -请求地址 : http://localhost:8081/login
2019-03-20 10:14:22 -HTTP METHOD : GET
2019-03-20 10:14:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 10:14:22 -参数 : [{}]
2019-03-20 10:14:22 -耗时 : 0
2019-03-20 10:14:22 -返回值 : login
2019-03-20 10:14:28 -请求地址 : http://localhost:8081/login
2019-03-20 10:14:28 -HTTP METHOD : POST
2019-03-20 10:14:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 10:14:28 -参数 : [admin, 111111, 5734, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1915fe1]
2019-03-20 10:14:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 10:14:28 -==> Parameters: admin(String)
2019-03-20 10:14:28 -<==      Total: 1
2019-03-20 10:14:28 -耗时 : 208
2019-03-20 10:14:28 -返回值 : {msg=操作成功, code=0}
2019-03-20 10:14:28 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-20 10:14:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 10:14:28 -==> Parameters: 1(Long), admin(String), 登录(String), 208(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 10:14:28.884(Timestamp)
2019-03-20 10:14:28 -请求地址 : http://localhost:8081/index
2019-03-20 10:14:28 -HTTP METHOD : GET
2019-03-20 10:14:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 10:14:28 -参数 : [{}]
2019-03-20 10:14:29 -<==    Updates: 1
2019-03-20 10:14:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 10:14:29 -==> Parameters: 1(Long)
2019-03-20 10:14:29 -<==      Total: 46
2019-03-20 10:14:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 10:14:29 -==> Parameters: 138(Long)
2019-03-20 10:14:29 -<==      Total: 1
2019-03-20 10:14:29 -耗时 : 899
2019-03-20 10:14:29 -返回值 : index_v1
2019-03-20 10:14:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 10:14:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 900(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 10:14:29.968(Timestamp)
2019-03-20 10:14:30 -<==    Updates: 1
2019-03-20 10:14:30 -请求地址 : http://localhost:8081/main
2019-03-20 10:14:30 -HTTP METHOD : GET
2019-03-20 10:14:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 10:14:30 -参数 : []
2019-03-20 10:14:30 -耗时 : 1
2019-03-20 10:14:30 -返回值 : main
2019-03-20 10:14:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 10:14:30 -HTTP METHOD : GET
2019-03-20 10:14:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 10:14:30 -参数 : []
2019-03-20 10:14:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 10:14:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 10:14:30 -请求地址 : http://localhost:8081/main
2019-03-20 10:14:30 -HTTP METHOD : GET
2019-03-20 10:14:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 10:14:30 -参数 : []
2019-03-20 10:14:30 -耗时 : 1
2019-03-20 10:14:30 -返回值 : main
2019-03-20 10:14:32 -<==      Total: 0
2019-03-20 10:14:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 10:14:32 -==> Parameters: 1(Long), 0(String)
2019-03-20 10:14:32 -<==      Total: 1
2019-03-20 10:14:32 -耗时 : 1673
2019-03-20 10:14:32 -返回值 : com.bootdo.common.utils.PageUtils@31e4c4a3
2019-03-20 10:14:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 10:14:34 -==> Parameters: 1(Long)
2019-03-20 10:14:34 -<==      Total: 90
2019-03-20 10:14:34 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 10:14:34 -HTTP METHOD : GET
2019-03-20 10:14:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 10:14:34 -参数 : []
2019-03-20 10:14:34 -耗时 : 1
2019-03-20 10:14:34 -返回值 : elec/elec/elec
2019-03-20 10:14:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 10:14:35 -HTTP METHOD : GET
2019-03-20 10:14:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 10:14:35 -参数 : [userType]
2019-03-20 10:14:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 10:14:35 -==> Parameters: userType(String)
2019-03-20 10:14:35 -<==      Total: 2
2019-03-20 10:14:35 -耗时 : 84
2019-03-20 10:14:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 10:14:35 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 10:14:35 -HTTP METHOD : GET
2019-03-20 10:14:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 10:14:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@599e8a37]
2019-03-20 10:14:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 10:14:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 10:14:35 -<==      Total: 10
2019-03-20 10:14:35 -==>  Preparing: select count(*) from elec 
2019-03-20 10:14:35 -==> Parameters: 
2019-03-20 10:14:35 -<==      Total: 1
2019-03-20 10:14:35 -耗时 : 244
2019-03-20 10:14:35 -返回值 : com.bootdo.common.utils.PageUtils@3624ceb6
2019-03-20 10:14:46 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 10:14:46 -HTTP METHOD : GET
2019-03-20 10:14:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 10:14:46 -参数 : [1, {}]
2019-03-20 10:14:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 10:14:46 -==> Parameters: 1(Long)
2019-03-20 10:14:46 -<==      Total: 1
2019-03-20 10:14:46 -耗时 : 70
2019-03-20 10:14:46 -返回值 : elec/elec/edit
2019-03-20 10:14:46 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 10:14:46 -HTTP METHOD : GET
2019-03-20 10:14:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 10:14:46 -参数 : [userState]
2019-03-20 10:14:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 10:14:46 -==> Parameters: userState(String)
2019-03-20 10:14:46 -<==      Total: 2
2019-03-20 10:14:46 -耗时 : 8
2019-03-20 10:14:46 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 10:14:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 10:14:46 -HTTP METHOD : GET
2019-03-20 10:14:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 10:14:46 -参数 : [userType]
2019-03-20 10:14:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 10:14:46 -==> Parameters: userType(String)
2019-03-20 10:14:46 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 10:14:46 -HTTP METHOD : GET
2019-03-20 10:14:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 10:14:46 -参数 : [elecType]
2019-03-20 10:14:46 -<==      Total: 2
2019-03-20 10:14:47 -耗时 : 7
2019-03-20 10:14:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 10:14:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 10:14:47 -==> Parameters: elecType(String)
2019-03-20 10:14:47 -<==      Total: 2
2019-03-20 10:14:47 -耗时 : 23
2019-03-20 10:14:47 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 10:38:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 10:38:42 -==> Parameters: 1(Long)
2019-03-20 10:38:42 -<==      Total: 90
2019-03-20 10:38:42 -请求地址 : http://localhost:8081/heat/heat
2019-03-20 10:38:42 -HTTP METHOD : GET
2019-03-20 10:38:42 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-20 10:38:42 -参数 : []
2019-03-20 10:38:42 -耗时 : 1
2019-03-20 10:38:42 -返回值 : heat/heat/heat
2019-03-20 10:38:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 10:38:42 -HTTP METHOD : GET
2019-03-20 10:38:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 10:38:42 -参数 : [userType]
2019-03-20 10:38:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 10:38:42 -==> Parameters: userType(String)
2019-03-20 10:38:42 -<==      Total: 2
2019-03-20 10:38:42 -耗时 : 9
2019-03-20 10:38:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 10:38:42 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-20 10:38:42 -HTTP METHOD : GET
2019-03-20 10:38:42 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-20 10:38:42 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-20 10:38:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-20 10:38:42 -==> Parameters: 0(Integer), 3(Integer)
2019-03-20 10:38:43 -<==      Total: 3
2019-03-20 10:38:43 -==>  Preparing: select count(*) from heat 
2019-03-20 10:38:43 -==> Parameters: 
2019-03-20 10:38:43 -<==      Total: 1
2019-03-20 10:38:43 -耗时 : 355
2019-03-20 10:38:43 -返回值 : com.bootdo.common.utils.PageUtils@1bca27a6
2019-03-20 10:38:44 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-20 10:38:44 -HTTP METHOD : GET
2019-03-20 10:38:44 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-20 10:38:44 -参数 : []
2019-03-20 10:38:44 -耗时 : 1
2019-03-20 10:38:44 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-20 10:44:21 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 431]
2019-03-20 10:53:11 -Starting BootdoApplication on ZJZL-20180906VX with PID 216 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 10:53:11 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 10:53:11 -The following profiles are active: dev
2019-03-20 10:53:11 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@422c3c7a: startup date [Wed Mar 20 10:53:11 CST 2019]; root of context hierarchy
2019-03-20 10:53:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 10:53:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dddf022] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:53:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$30371ec9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:53:18 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:53:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:53:19 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:53:19 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 10:53:19 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 10:53:19 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:53:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:53:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:53:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 10:53:20 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 10:53:20 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 10:53:20 -Starting service [Tomcat]
2019-03-20 10:53:20 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 10:53:20 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 10:53:21 -Initializing Spring embedded WebApplicationContext
2019-03-20 10:53:21 -Root WebApplicationContext: initialization completed in 9896 ms
2019-03-20 10:53:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 10:53:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 10:53:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 10:53:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 10:53:22 -Filter xssFilter was not registered (disabled)
2019-03-20 10:53:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 10:53:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 10:53:22 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 10:53:22 -Servlet dispatcherServlet mapped to [/]
2019-03-20 10:53:25 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@422c3c7a: startup date [Wed Mar 20 10:53:11 CST 2019]; root of context hierarchy
2019-03-20 10:53:26 -Using default implementation for ThreadExecutor
2019-03-20 10:53:26 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 10:53:26 -Quartz Scheduler v.2.2.1 created.
2019-03-20 10:53:26 -RAMJobStore initialized.
2019-03-20 10:53:26 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 10:53:26 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 10:53:26 -Quartz scheduler version: 2.2.1
2019-03-20 10:53:26 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@54e18a46
2019-03-20 10:53:26 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 10:53:26 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 10:53:29 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 10:53:29 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 10:53:29 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:53:29 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 10:53:29 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 10:53:29 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 10:53:29 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 10:53:29 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 10:53:29 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 10:53:29 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 10:53:29 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 10:53:29 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:29 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 10:53:29 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 10:53:29 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:29 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 10:53:29 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 10:53:29 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 10:53:29 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 10:53:29 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 10:53:29 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 10:53:29 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 10:53:29 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:29 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 10:53:29 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 10:53:29 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:29 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 10:53:29 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 10:53:29 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:29 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 10:53:29 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 10:53:29 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 10:53:29 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 10:53:29 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 10:53:29 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 10:53:29 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 10:53:29 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 10:53:29 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 10:53:29 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:29 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 10:53:29 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 10:53:29 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:29 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 10:53:29 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 10:53:29 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 10:53:29 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 10:53:29 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:29 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 10:53:29 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 10:53:29 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 10:53:29 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 10:53:29 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 10:53:29 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 10:53:29 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 10:53:29 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 10:53:29 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 10:53:29 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 10:53:30 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 10:53:30 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 10:53:30 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:53:30 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 10:53:30 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:53:30 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 10:53:30 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 10:53:30 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 10:53:30 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 10:53:30 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 10:53:30 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 10:53:30 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 10:53:30 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 10:53:30 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 10:53:30 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 10:53:30 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 10:53:30 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 10:53:30 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 10:53:30 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:53:30 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 10:53:30 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:53:30 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 10:53:30 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 10:53:30 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 10:53:30 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 10:53:30 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 10:53:30 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 10:53:30 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 10:53:30 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 10:53:30 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 10:53:30 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 10:53:30 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 10:53:30 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 10:53:30 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 10:53:30 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 10:53:30 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 10:53:30 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 10:53:30 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 10:53:30 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 10:53:30 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 10:53:30 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 10:53:30 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 10:53:30 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 10:53:30 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 10:53:30 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 10:53:30 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 10:53:30 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 10:53:30 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 10:53:30 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 10:53:30 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 10:53:30 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 10:53:30 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 10:53:30 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 10:53:30 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 10:53:30 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 10:53:30 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 10:53:30 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 10:53:30 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 10:53:30 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 10:53:30 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 10:53:30 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 10:53:30 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 10:53:30 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 10:53:30 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 10:53:30 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 10:53:30 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 10:53:30 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 10:53:30 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 10:53:30 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 10:53:30 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 10:53:30 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 10:53:30 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 10:53:30 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 10:53:30 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 10:53:30 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 10:53:30 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 10:53:30 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 10:53:30 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 10:53:30 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 10:53:30 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 10:53:30 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 10:53:30 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:53:30 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 10:53:30 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 10:53:30 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 10:53:30 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 10:53:30 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 10:53:30 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 10:53:30 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 10:53:30 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 10:53:30 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 10:53:30 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 10:53:30 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 10:53:30 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 10:53:30 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 10:53:30 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 10:53:30 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 10:53:30 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 10:53:30 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 10:53:30 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 10:53:31 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 10:53:31 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@422c3c7a: startup date [Wed Mar 20 10:53:11 CST 2019]; root of context hierarchy
2019-03-20 10:53:31 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 10:53:31 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 10:53:31 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 10:53:31 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 10:53:32 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 10:53:34 -Registering beans for JMX exposure on startup
2019-03-20 10:53:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 10:53:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 10:53:34 -Starting beans in phase 2147483647
2019-03-20 10:53:34 -Context refreshed
2019-03-20 10:53:34 -Found 1 custom documentation plugin(s)
2019-03-20 10:53:34 -Scanning for api listing references
2019-03-20 10:53:35 -Generating unique operation named: removeUsingPOST_1
2019-03-20 10:53:35 -Generating unique operation named: addUsingGET_1
2019-03-20 10:53:35 -Generating unique operation named: editUsingGET_1
2019-03-20 10:53:35 -Generating unique operation named: listUsingGET_1
2019-03-20 10:53:35 -Generating unique operation named: removeUsingPOST_2
2019-03-20 10:53:35 -Generating unique operation named: removeUsingPOST_3
2019-03-20 10:53:35 -Generating unique operation named: saveUsingPOST_1
2019-03-20 10:53:35 -Generating unique operation named: updateUsingGET_1
2019-03-20 10:53:35 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPOST_1
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPUT_1
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 10:53:35 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 10:53:35 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 10:53:35 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 10:53:35 -Generating unique operation named: addUsingGET_2
2019-03-20 10:53:35 -Generating unique operation named: editUsingGET_2
2019-03-20 10:53:35 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 10:53:35 -Generating unique operation named: listUsingGET_2
2019-03-20 10:53:35 -Generating unique operation named: removeUsingPOST_4
2019-03-20 10:53:35 -Generating unique operation named: removeUsingPOST_5
2019-03-20 10:53:35 -Generating unique operation named: saveUsingPOST_2
2019-03-20 10:53:35 -Generating unique operation named: updateUsingGET_2
2019-03-20 10:53:35 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPOST_2
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPUT_2
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 10:53:35 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 10:53:35 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 10:53:35 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 10:53:35 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 10:53:35 -Generating unique operation named: addUsingGET_3
2019-03-20 10:53:35 -Generating unique operation named: editUsingGET_3
2019-03-20 10:53:35 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 10:53:35 -Generating unique operation named: listUsingGET_3
2019-03-20 10:53:35 -Generating unique operation named: removeUsingPOST_6
2019-03-20 10:53:35 -Generating unique operation named: removeUsingPOST_7
2019-03-20 10:53:35 -Generating unique operation named: saveUsingPOST_3
2019-03-20 10:53:35 -Generating unique operation named: updateUsingGET_3
2019-03-20 10:53:35 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPOST_3
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPUT_3
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 10:53:35 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 10:53:35 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 10:53:35 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 10:53:35 -Generating unique operation named: addUsingGET_4
2019-03-20 10:53:35 -Generating unique operation named: editUsingGET_4
2019-03-20 10:53:35 -Generating unique operation named: listUsingGET_4
2019-03-20 10:53:35 -Generating unique operation named: removeUsingPOST_8
2019-03-20 10:53:35 -Generating unique operation named: removeUsingPOST_9
2019-03-20 10:53:35 -Generating unique operation named: saveUsingPOST_4
2019-03-20 10:53:35 -Generating unique operation named: updateUsingGET_4
2019-03-20 10:53:35 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPOST_4
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPUT_4
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 10:53:35 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 10:53:35 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 10:53:35 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 10:53:35 -Generating unique operation named: ElecUsingGET_1
2019-03-20 10:53:35 -Generating unique operation named: addUsingGET_5
2019-03-20 10:53:35 -Generating unique operation named: editUsingGET_5
2019-03-20 10:53:35 -Generating unique operation named: listUsingGET_5
2019-03-20 10:53:35 -Generating unique operation named: removeUsingPOST_10
2019-03-20 10:53:35 -Generating unique operation named: removeUsingPOST_11
2019-03-20 10:53:35 -Generating unique operation named: saveUsingPOST_5
2019-03-20 10:53:35 -Generating unique operation named: updateUsingGET_5
2019-03-20 10:53:35 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPOST_5
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPUT_5
2019-03-20 10:53:35 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 10:53:35 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 10:53:35 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 10:53:35 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 10:53:36 -Generating unique operation named: editUsingGET_6
2019-03-20 10:53:36 -Generating unique operation named: listUsingGET_6
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPOST_6
2019-03-20 10:53:36 -Generating unique operation named: addUsingGET_6
2019-03-20 10:53:36 -Generating unique operation named: editUsingGET_7
2019-03-20 10:53:36 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 10:53:36 -Generating unique operation named: listUsingGET_7
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_12
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_13
2019-03-20 10:53:36 -Generating unique operation named: saveUsingPOST_6
2019-03-20 10:53:36 -Generating unique operation named: updateUsingGET_6
2019-03-20 10:53:36 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPOST_7
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPUT_6
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 10:53:36 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 10:53:36 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 10:53:36 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 10:53:36 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 10:53:36 -Generating unique operation named: addUsingGET_7
2019-03-20 10:53:36 -Generating unique operation named: editUsingGET_8
2019-03-20 10:53:36 -Generating unique operation named: listUsingGET_8
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_14
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_15
2019-03-20 10:53:36 -Generating unique operation named: saveUsingPOST_7
2019-03-20 10:53:36 -Generating unique operation named: updateUsingGET_7
2019-03-20 10:53:36 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPOST_8
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPUT_7
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 10:53:36 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 10:53:36 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 10:53:36 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 10:53:36 -Generating unique operation named: addUsingGET_8
2019-03-20 10:53:36 -Generating unique operation named: editUsingGET_9
2019-03-20 10:53:36 -Generating unique operation named: listUsingGET_9
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_16
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_17
2019-03-20 10:53:36 -Generating unique operation named: saveUsingPOST_8
2019-03-20 10:53:36 -Generating unique operation named: updateUsingGET_8
2019-03-20 10:53:36 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPOST_9
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPUT_8
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 10:53:36 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 10:53:36 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 10:53:36 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 10:53:36 -Generating unique operation named: addUsingGET_9
2019-03-20 10:53:36 -Generating unique operation named: editUsingGET_10
2019-03-20 10:53:36 -Generating unique operation named: infoUsingGET_1
2019-03-20 10:53:36 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 10:53:36 -Generating unique operation named: infoUsingPOST_1
2019-03-20 10:53:36 -Generating unique operation named: infoUsingPUT_1
2019-03-20 10:53:36 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 10:53:36 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 10:53:36 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 10:53:36 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 10:53:36 -Generating unique operation named: listUsingGET_10
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_18
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_19
2019-03-20 10:53:36 -Generating unique operation named: saveUsingPOST_9
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPOST_10
2019-03-20 10:53:36 -Generating unique operation named: listUsingGET_11
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_20
2019-03-20 10:53:36 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 10:53:36 -Generating unique operation named: addUsingGET_10
2019-03-20 10:53:36 -Generating unique operation named: editUsingGET_11
2019-03-20 10:53:36 -Generating unique operation named: listUsingGET_12
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_21
2019-03-20 10:53:36 -Generating unique operation named: saveUsingPOST_10
2019-03-20 10:53:36 -Generating unique operation named: treeUsingGET_1
2019-03-20 10:53:36 -Generating unique operation named: treeUsingGET_2
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPOST_11
2019-03-20 10:53:36 -Generating unique operation named: addUsingGET_11
2019-03-20 10:53:36 -Generating unique operation named: editUsingGET_12
2019-03-20 10:53:36 -Generating unique operation named: listUsingGET_13
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_22
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_23
2019-03-20 10:53:36 -Generating unique operation named: saveUsingPOST_11
2019-03-20 10:53:36 -Generating unique operation named: updateUsingGET_9
2019-03-20 10:53:36 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPOST_12
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPUT_9
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 10:53:36 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 10:53:36 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 10:53:36 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 10:53:36 -Generating unique operation named: addUsingGET_12
2019-03-20 10:53:36 -Generating unique operation named: editUsingGET_13
2019-03-20 10:53:36 -Generating unique operation named: listUsingGET_14
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_24
2019-03-20 10:53:36 -Generating unique operation named: removeUsingPOST_25
2019-03-20 10:53:36 -Generating unique operation named: saveUsingPOST_12
2019-03-20 10:53:36 -Generating unique operation named: updateUsingGET_10
2019-03-20 10:53:36 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPOST_13
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPUT_10
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 10:53:36 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 10:53:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 10:53:36 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 10:53:36 -Generating unique operation named: addUsingGET_13
2019-03-20 10:53:36 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 10:53:36 -Generating unique operation named: editUsingGET_14
2019-03-20 10:53:36 -Generating unique operation named: listUsingGET_15
2019-03-20 10:53:36 -Generating unique operation named: saveUsingPOST_13
2019-03-20 10:53:36 -Generating unique operation named: saveUsingPOST_14
2019-03-20 10:53:36 -Generating unique operation named: updateUsingPOST_14
2019-03-20 10:53:36 -Generating unique operation named: listUsingGET_16
2019-03-20 10:53:36 -Generating unique operation named: listUsingHEAD_1
2019-03-20 10:53:36 -Generating unique operation named: listUsingPOST_1
2019-03-20 10:53:36 -Generating unique operation named: listUsingPUT_1
2019-03-20 10:53:36 -Generating unique operation named: listUsingPATCH_1
2019-03-20 10:53:36 -Generating unique operation named: listUsingDELETE_1
2019-03-20 10:53:37 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 10:53:37 -Generating unique operation named: listUsingTRACE_1
2019-03-20 10:53:37 -Generating unique operation named: addUsingGET_14
2019-03-20 10:53:37 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 10:53:37 -Generating unique operation named: editUsingGET_15
2019-03-20 10:53:37 -Generating unique operation named: listUsingGET_17
2019-03-20 10:53:37 -Generating unique operation named: removeUsingPOST_26
2019-03-20 10:53:37 -Generating unique operation named: saveUsingPOST_15
2019-03-20 10:53:37 -Generating unique operation named: treeUsingGET_3
2019-03-20 10:53:37 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 10:53:37 -Generating unique operation named: updateUsingPOST_15
2019-03-20 10:53:37 -Generating unique operation named: addUsingGET_15
2019-03-20 10:53:37 -Generating unique operation named: editUsingGET_16
2019-03-20 10:53:37 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 10:53:37 -Generating unique operation named: listUsingGET_18
2019-03-20 10:53:37 -Generating unique operation named: removeUsingPOST_27
2019-03-20 10:53:37 -Generating unique operation named: removeUsingPOST_28
2019-03-20 10:53:37 -Generating unique operation named: saveUsingPOST_16
2019-03-20 10:53:37 -Generating unique operation named: updateUsingGET_11
2019-03-20 10:53:37 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 10:53:37 -Generating unique operation named: updateUsingPOST_16
2019-03-20 10:53:37 -Generating unique operation named: updateUsingPUT_11
2019-03-20 10:53:37 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 10:53:37 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 10:53:37 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 10:53:37 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 10:53:37 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 10:53:37 -Generating unique operation named: addUsingGET_16
2019-03-20 10:53:37 -Generating unique operation named: editUsingGET_17
2019-03-20 10:53:37 -Generating unique operation named: listUsingGET_19
2019-03-20 10:53:37 -Generating unique operation named: removeUsingPOST_29
2019-03-20 10:53:37 -Generating unique operation named: removeUsingPOST_30
2019-03-20 10:53:37 -Generating unique operation named: saveUsingPOST_17
2019-03-20 10:53:37 -Generating unique operation named: updateUsingGET_12
2019-03-20 10:53:37 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 10:53:37 -Generating unique operation named: updateUsingPOST_17
2019-03-20 10:53:37 -Generating unique operation named: updateUsingPUT_12
2019-03-20 10:53:37 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 10:53:37 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 10:53:37 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 10:53:37 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 10:53:37 -Generating unique operation named: addUsingGET_17
2019-03-20 10:53:37 -Generating unique operation named: editUsingGET_18
2019-03-20 10:53:37 -Generating unique operation named: listUsingGET_20
2019-03-20 10:53:37 -Generating unique operation named: removeUsingPOST_31
2019-03-20 10:53:37 -Generating unique operation named: removeUsingPOST_32
2019-03-20 10:53:37 -Generating unique operation named: saveUsingPOST_18
2019-03-20 10:53:37 -Generating unique operation named: updateUsingGET_13
2019-03-20 10:53:37 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 10:53:37 -Generating unique operation named: updateUsingPOST_18
2019-03-20 10:53:37 -Generating unique operation named: updateUsingPUT_13
2019-03-20 10:53:37 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 10:53:37 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 10:53:37 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 10:53:37 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 10:53:37 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 10:53:37 -Starting Quartz Scheduler now
2019-03-20 10:53:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 10:53:37 -Starting...
2019-03-20 10:53:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 10:53:37 -Started.
2019-03-20 10:53:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 10:53:37 -Using a shared selector for servlet write/read
2019-03-20 10:53:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-20 10:53:37 -Started BootdoApplication in 28.266 seconds (JVM running for 29.84)
2019-03-20 10:53:37 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-20 10:53:38 -==> Parameters: 
2019-03-20 10:53:38 -<==      Total: 1
2019-03-20 10:54:17 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-20 10:54:17 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-20 10:54:17 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-03-20 10:54:17 -Enabling session validation scheduler...
2019-03-20 10:54:17 -请求地址 : http://localhost:8081/login;JSESSIONID=4007042c-9102-481b-aba3-ad8224a31679
2019-03-20 10:54:17 -HTTP METHOD : GET
2019-03-20 10:54:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 10:54:17 -参数 : [{}]
2019-03-20 10:54:17 -耗时 : 3
2019-03-20 10:54:17 -返回值 : login
2019-03-20 10:54:19 -请求地址 : http://localhost:8081/getVerify
2019-03-20 10:54:19 -HTTP METHOD : GET
2019-03-20 10:54:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 10:54:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4d2679ca, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1d108cc3]
2019-03-20 10:54:22 -8751
2019-03-20 10:54:22 -耗时 : 3015
2019-03-20 10:54:22 -返回值 : null
2019-03-20 10:54:26 -请求地址 : http://localhost:8081/login
2019-03-20 10:54:26 -HTTP METHOD : POST
2019-03-20 10:54:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 10:54:26 -参数 : [admin, 111111, 8751, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f77107c]
2019-03-20 10:54:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 10:54:26 -==> Parameters: admin(String)
2019-03-20 10:54:26 -<==      Total: 1
2019-03-20 10:54:26 -耗时 : 182
2019-03-20 10:54:26 -返回值 : {msg=操作成功, code=0}
2019-03-20 10:54:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-20 10:54:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 10:54:27 -==> Parameters: 1(Long), admin(String), 登录(String), 182(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 10:54:27.024(Timestamp)
2019-03-20 10:54:27 -请求地址 : http://localhost:8081/index
2019-03-20 10:54:27 -HTTP METHOD : GET
2019-03-20 10:54:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 10:54:27 -参数 : [{}]
2019-03-20 10:54:27 -<==    Updates: 1
2019-03-20 10:54:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 10:54:27 -==> Parameters: 1(Long)
2019-03-20 10:54:27 -<==      Total: 46
2019-03-20 10:54:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 10:54:27 -==> Parameters: 138(Long)
2019-03-20 10:54:27 -<==      Total: 1
2019-03-20 10:54:27 -耗时 : 538
2019-03-20 10:54:27 -返回值 : index_v1
2019-03-20 10:54:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 10:54:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 538(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 10:54:27.7(Timestamp)
2019-03-20 10:54:27 -<==    Updates: 1
2019-03-20 10:54:27 -请求地址 : http://localhost:8081/main
2019-03-20 10:54:27 -HTTP METHOD : GET
2019-03-20 10:54:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 10:54:27 -参数 : []
2019-03-20 10:54:27 -耗时 : 0
2019-03-20 10:54:27 -返回值 : main
2019-03-20 10:54:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 10:54:28 -HTTP METHOD : GET
2019-03-20 10:54:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 10:54:28 -参数 : []
2019-03-20 10:54:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 10:54:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 10:54:28 -请求地址 : http://localhost:8081/main
2019-03-20 10:54:28 -HTTP METHOD : GET
2019-03-20 10:54:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 10:54:28 -参数 : []
2019-03-20 10:54:28 -耗时 : 1
2019-03-20 10:54:28 -返回值 : main
2019-03-20 10:54:28 -<==      Total: 0
2019-03-20 10:54:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 10:54:28 -==> Parameters: 1(Long), 0(String)
2019-03-20 10:54:28 -<==      Total: 1
2019-03-20 10:54:28 -耗时 : 225
2019-03-20 10:54:28 -返回值 : com.bootdo.common.utils.PageUtils@3c472213
2019-03-20 10:54:30 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-03-20 10:54:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 10:54:38 -==> Parameters: 1(Long)
2019-03-20 10:54:38 -<==      Total: 90
2019-03-20 10:54:38 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-20 10:54:38 -HTTP METHOD : GET
2019-03-20 10:54:38 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-20 10:54:38 -参数 : []
2019-03-20 10:54:38 -耗时 : 1
2019-03-20 10:54:38 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-20 11:14:58 -Starting BootdoApplication on ZJZL-20180906VX with PID 6440 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 11:14:58 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 11:14:58 -The following profiles are active: dev
2019-03-20 11:14:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@26a4842b: startup date [Wed Mar 20 11:14:58 CST 2019]; root of context hierarchy
2019-03-20 11:15:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 11:15:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$84903af7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 11:15:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$76e9699e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 11:15:08 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 11:15:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 11:15:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 11:15:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 11:15:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 11:15:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 11:15:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 11:15:09 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 11:15:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 11:15:11 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 11:15:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 11:15:11 -Starting service [Tomcat]
2019-03-20 11:15:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 11:15:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 11:15:11 -Initializing Spring embedded WebApplicationContext
2019-03-20 11:15:11 -Root WebApplicationContext: initialization completed in 13289 ms
2019-03-20 11:15:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 11:15:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 11:15:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 11:15:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 11:15:12 -Filter xssFilter was not registered (disabled)
2019-03-20 11:15:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 11:15:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 11:15:12 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 11:15:12 -Servlet dispatcherServlet mapped to [/]
2019-03-20 11:15:15 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@26a4842b: startup date [Wed Mar 20 11:14:58 CST 2019]; root of context hierarchy
2019-03-20 11:15:16 -Using default implementation for ThreadExecutor
2019-03-20 11:15:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 11:15:16 -Quartz Scheduler v.2.2.1 created.
2019-03-20 11:15:16 -RAMJobStore initialized.
2019-03-20 11:15:16 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 11:15:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 11:15:16 -Quartz scheduler version: 2.2.1
2019-03-20 11:15:16 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@33ccead
2019-03-20 11:15:17 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 11:15:17 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 11:15:20 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 11:15:20 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 11:15:20 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 11:15:20 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 11:15:20 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 11:15:20 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 11:15:20 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 11:15:20 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 11:15:20 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 11:15:20 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 11:15:20 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 11:15:20 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 11:15:20 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 11:15:20 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 11:15:20 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 11:15:20 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 11:15:20 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 11:15:20 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 11:15:20 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 11:15:20 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 11:15:20 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 11:15:20 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 11:15:20 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 11:15:20 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 11:15:20 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 11:15:20 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 11:15:20 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 11:15:20 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 11:15:20 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 11:15:20 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 11:15:20 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 11:15:20 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 11:15:20 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 11:15:20 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 11:15:20 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 11:15:20 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 11:15:20 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 11:15:20 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 11:15:20 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 11:15:20 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 11:15:20 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 11:15:20 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 11:15:20 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 11:15:20 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 11:15:20 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 11:15:20 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 11:15:20 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 11:15:20 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 11:15:20 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 11:15:20 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 11:15:20 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 11:15:20 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 11:15:20 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 11:15:20 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 11:15:20 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 11:15:20 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 11:15:20 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 11:15:20 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 11:15:20 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 11:15:20 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 11:15:20 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 11:15:20 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 11:15:20 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 11:15:20 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 11:15:20 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 11:15:20 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 11:15:20 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 11:15:20 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 11:15:20 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 11:15:20 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 11:15:20 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 11:15:20 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 11:15:20 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 11:15:20 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 11:15:20 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 11:15:20 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 11:15:20 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 11:15:20 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 11:15:20 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 11:15:20 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 11:15:20 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 11:15:20 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 11:15:20 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 11:15:20 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 11:15:20 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 11:15:20 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 11:15:20 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 11:15:20 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 11:15:20 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 11:15:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 11:15:20 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 11:15:20 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 11:15:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 11:15:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 11:15:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 11:15:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 11:15:20 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 11:15:20 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 11:15:20 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 11:15:20 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 11:15:20 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 11:15:20 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 11:15:20 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 11:15:20 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 11:15:20 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 11:15:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 11:15:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 11:15:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 11:15:20 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 11:15:20 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 11:15:20 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 11:15:20 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 11:15:20 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 11:15:20 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 11:15:20 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 11:15:20 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 11:15:20 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 11:15:20 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 11:15:20 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 11:15:20 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 11:15:20 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 11:15:20 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 11:15:20 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 11:15:20 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 11:15:20 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 11:15:20 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 11:15:20 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 11:15:20 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 11:15:20 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 11:15:20 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 11:15:20 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 11:15:20 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 11:15:20 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 11:15:21 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 11:15:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 11:15:22 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 11:15:22 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 11:15:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@26a4842b: startup date [Wed Mar 20 11:14:58 CST 2019]; root of context hierarchy
2019-03-20 11:15:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 11:15:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 11:15:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 11:15:24 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 11:15:24 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 11:15:27 -Registering beans for JMX exposure on startup
2019-03-20 11:15:28 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 11:15:28 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 11:15:28 -Starting beans in phase 2147483647
2019-03-20 11:15:28 -Context refreshed
2019-03-20 11:15:28 -Found 1 custom documentation plugin(s)
2019-03-20 11:15:28 -Scanning for api listing references
2019-03-20 11:15:28 -Generating unique operation named: removeUsingPOST_1
2019-03-20 11:15:29 -Generating unique operation named: addUsingGET_1
2019-03-20 11:15:29 -Generating unique operation named: editUsingGET_1
2019-03-20 11:15:29 -Generating unique operation named: listUsingGET_1
2019-03-20 11:15:29 -Generating unique operation named: removeUsingPOST_2
2019-03-20 11:15:29 -Generating unique operation named: removeUsingPOST_3
2019-03-20 11:15:29 -Generating unique operation named: saveUsingPOST_1
2019-03-20 11:15:29 -Generating unique operation named: updateUsingGET_1
2019-03-20 11:15:29 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPOST_1
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPUT_1
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 11:15:29 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 11:15:29 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 11:15:29 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 11:15:29 -Generating unique operation named: addUsingGET_2
2019-03-20 11:15:29 -Generating unique operation named: editUsingGET_2
2019-03-20 11:15:29 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 11:15:29 -Generating unique operation named: listUsingGET_2
2019-03-20 11:15:29 -Generating unique operation named: removeUsingPOST_4
2019-03-20 11:15:29 -Generating unique operation named: removeUsingPOST_5
2019-03-20 11:15:29 -Generating unique operation named: saveUsingPOST_2
2019-03-20 11:15:29 -Generating unique operation named: updateUsingGET_2
2019-03-20 11:15:29 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPOST_2
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPUT_2
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 11:15:29 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 11:15:29 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 11:15:29 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 11:15:29 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 11:15:29 -Generating unique operation named: addUsingGET_3
2019-03-20 11:15:29 -Generating unique operation named: editUsingGET_3
2019-03-20 11:15:29 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 11:15:29 -Generating unique operation named: listUsingGET_3
2019-03-20 11:15:29 -Generating unique operation named: removeUsingPOST_6
2019-03-20 11:15:29 -Generating unique operation named: removeUsingPOST_7
2019-03-20 11:15:29 -Generating unique operation named: saveUsingPOST_3
2019-03-20 11:15:29 -Generating unique operation named: updateUsingGET_3
2019-03-20 11:15:29 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPOST_3
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPUT_3
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 11:15:29 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 11:15:29 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 11:15:29 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 11:15:29 -Generating unique operation named: addUsingGET_4
2019-03-20 11:15:29 -Generating unique operation named: editUsingGET_4
2019-03-20 11:15:29 -Generating unique operation named: listUsingGET_4
2019-03-20 11:15:29 -Generating unique operation named: removeUsingPOST_8
2019-03-20 11:15:29 -Generating unique operation named: removeUsingPOST_9
2019-03-20 11:15:29 -Generating unique operation named: saveUsingPOST_4
2019-03-20 11:15:29 -Generating unique operation named: updateUsingGET_4
2019-03-20 11:15:29 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPOST_4
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPUT_4
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 11:15:29 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 11:15:29 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 11:15:29 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 11:15:29 -Generating unique operation named: ElecUsingGET_1
2019-03-20 11:15:29 -Generating unique operation named: addUsingGET_5
2019-03-20 11:15:29 -Generating unique operation named: editUsingGET_5
2019-03-20 11:15:29 -Generating unique operation named: listUsingGET_5
2019-03-20 11:15:29 -Generating unique operation named: removeUsingPOST_10
2019-03-20 11:15:29 -Generating unique operation named: removeUsingPOST_11
2019-03-20 11:15:29 -Generating unique operation named: saveUsingPOST_5
2019-03-20 11:15:29 -Generating unique operation named: updateUsingGET_5
2019-03-20 11:15:29 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPOST_5
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPUT_5
2019-03-20 11:15:29 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 11:15:29 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 11:15:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 11:15:29 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 11:15:30 -Generating unique operation named: editUsingGET_6
2019-03-20 11:15:30 -Generating unique operation named: listUsingGET_6
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPOST_6
2019-03-20 11:15:30 -Generating unique operation named: addUsingGET_6
2019-03-20 11:15:30 -Generating unique operation named: editUsingGET_7
2019-03-20 11:15:30 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 11:15:30 -Generating unique operation named: listUsingGET_7
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_12
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_13
2019-03-20 11:15:30 -Generating unique operation named: saveUsingPOST_6
2019-03-20 11:15:30 -Generating unique operation named: updateUsingGET_6
2019-03-20 11:15:30 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPOST_7
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPUT_6
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 11:15:30 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 11:15:30 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 11:15:30 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 11:15:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 11:15:30 -Generating unique operation named: addUsingGET_7
2019-03-20 11:15:30 -Generating unique operation named: editUsingGET_8
2019-03-20 11:15:30 -Generating unique operation named: listUsingGET_8
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_14
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_15
2019-03-20 11:15:30 -Generating unique operation named: saveUsingPOST_7
2019-03-20 11:15:30 -Generating unique operation named: updateUsingGET_7
2019-03-20 11:15:30 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPOST_8
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPUT_7
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 11:15:30 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 11:15:30 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 11:15:30 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 11:15:30 -Generating unique operation named: addUsingGET_8
2019-03-20 11:15:30 -Generating unique operation named: editUsingGET_9
2019-03-20 11:15:30 -Generating unique operation named: listUsingGET_9
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_16
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_17
2019-03-20 11:15:30 -Generating unique operation named: saveUsingPOST_8
2019-03-20 11:15:30 -Generating unique operation named: updateUsingGET_8
2019-03-20 11:15:30 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPOST_9
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPUT_8
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 11:15:30 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 11:15:30 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 11:15:30 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 11:15:30 -Generating unique operation named: addUsingGET_9
2019-03-20 11:15:30 -Generating unique operation named: editUsingGET_10
2019-03-20 11:15:30 -Generating unique operation named: infoUsingGET_1
2019-03-20 11:15:30 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 11:15:30 -Generating unique operation named: infoUsingPOST_1
2019-03-20 11:15:30 -Generating unique operation named: infoUsingPUT_1
2019-03-20 11:15:30 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 11:15:30 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 11:15:30 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 11:15:30 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 11:15:30 -Generating unique operation named: listUsingGET_10
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_18
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_19
2019-03-20 11:15:30 -Generating unique operation named: saveUsingPOST_9
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPOST_10
2019-03-20 11:15:30 -Generating unique operation named: listUsingGET_11
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_20
2019-03-20 11:15:30 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 11:15:30 -Generating unique operation named: addUsingGET_10
2019-03-20 11:15:30 -Generating unique operation named: editUsingGET_11
2019-03-20 11:15:30 -Generating unique operation named: listUsingGET_12
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_21
2019-03-20 11:15:30 -Generating unique operation named: saveUsingPOST_10
2019-03-20 11:15:30 -Generating unique operation named: treeUsingGET_1
2019-03-20 11:15:30 -Generating unique operation named: treeUsingGET_2
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPOST_11
2019-03-20 11:15:30 -Generating unique operation named: addUsingGET_11
2019-03-20 11:15:30 -Generating unique operation named: editUsingGET_12
2019-03-20 11:15:30 -Generating unique operation named: listUsingGET_13
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_22
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_23
2019-03-20 11:15:30 -Generating unique operation named: saveUsingPOST_11
2019-03-20 11:15:30 -Generating unique operation named: updateUsingGET_9
2019-03-20 11:15:30 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPOST_12
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPUT_9
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 11:15:30 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 11:15:30 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 11:15:30 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 11:15:30 -Generating unique operation named: addUsingGET_12
2019-03-20 11:15:30 -Generating unique operation named: editUsingGET_13
2019-03-20 11:15:30 -Generating unique operation named: listUsingGET_14
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_24
2019-03-20 11:15:30 -Generating unique operation named: removeUsingPOST_25
2019-03-20 11:15:30 -Generating unique operation named: saveUsingPOST_12
2019-03-20 11:15:30 -Generating unique operation named: updateUsingGET_10
2019-03-20 11:15:30 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPOST_13
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPUT_10
2019-03-20 11:15:30 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 11:15:30 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 11:15:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 11:15:30 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 11:15:30 -Generating unique operation named: addUsingGET_13
2019-03-20 11:15:30 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 11:15:30 -Generating unique operation named: editUsingGET_14
2019-03-20 11:15:30 -Generating unique operation named: listUsingGET_15
2019-03-20 11:15:31 -Generating unique operation named: saveUsingPOST_13
2019-03-20 11:15:31 -Generating unique operation named: saveUsingPOST_14
2019-03-20 11:15:31 -Generating unique operation named: updateUsingPOST_14
2019-03-20 11:15:31 -Generating unique operation named: listUsingGET_16
2019-03-20 11:15:31 -Generating unique operation named: listUsingHEAD_1
2019-03-20 11:15:31 -Generating unique operation named: listUsingPOST_1
2019-03-20 11:15:31 -Generating unique operation named: listUsingPUT_1
2019-03-20 11:15:31 -Generating unique operation named: listUsingPATCH_1
2019-03-20 11:15:31 -Generating unique operation named: listUsingDELETE_1
2019-03-20 11:15:31 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 11:15:31 -Generating unique operation named: listUsingTRACE_1
2019-03-20 11:15:31 -Generating unique operation named: addUsingGET_14
2019-03-20 11:15:31 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 11:15:31 -Generating unique operation named: editUsingGET_15
2019-03-20 11:15:31 -Generating unique operation named: listUsingGET_17
2019-03-20 11:15:31 -Generating unique operation named: removeUsingPOST_26
2019-03-20 11:15:31 -Generating unique operation named: saveUsingPOST_15
2019-03-20 11:15:31 -Generating unique operation named: treeUsingGET_3
2019-03-20 11:15:31 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 11:15:31 -Generating unique operation named: updateUsingPOST_15
2019-03-20 11:15:31 -Generating unique operation named: addUsingGET_15
2019-03-20 11:15:31 -Generating unique operation named: editUsingGET_16
2019-03-20 11:15:31 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 11:15:31 -Generating unique operation named: listUsingGET_18
2019-03-20 11:15:31 -Generating unique operation named: removeUsingPOST_27
2019-03-20 11:15:31 -Generating unique operation named: removeUsingPOST_28
2019-03-20 11:15:31 -Generating unique operation named: saveUsingPOST_16
2019-03-20 11:15:31 -Generating unique operation named: updateUsingGET_11
2019-03-20 11:15:31 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 11:15:31 -Generating unique operation named: updateUsingPOST_16
2019-03-20 11:15:31 -Generating unique operation named: updateUsingPUT_11
2019-03-20 11:15:31 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 11:15:31 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 11:15:31 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 11:15:31 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 11:15:31 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 11:15:31 -Generating unique operation named: addUsingGET_16
2019-03-20 11:15:31 -Generating unique operation named: editUsingGET_17
2019-03-20 11:15:31 -Generating unique operation named: listUsingGET_19
2019-03-20 11:15:31 -Generating unique operation named: removeUsingPOST_29
2019-03-20 11:15:31 -Generating unique operation named: removeUsingPOST_30
2019-03-20 11:15:31 -Generating unique operation named: saveUsingPOST_17
2019-03-20 11:15:31 -Generating unique operation named: updateUsingGET_12
2019-03-20 11:15:31 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 11:15:31 -Generating unique operation named: updateUsingPOST_17
2019-03-20 11:15:31 -Generating unique operation named: updateUsingPUT_12
2019-03-20 11:15:31 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 11:15:31 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 11:15:31 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 11:15:31 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 11:15:31 -Generating unique operation named: addUsingGET_17
2019-03-20 11:15:31 -Generating unique operation named: editUsingGET_18
2019-03-20 11:15:31 -Generating unique operation named: listUsingGET_20
2019-03-20 11:15:31 -Generating unique operation named: removeUsingPOST_31
2019-03-20 11:15:31 -Generating unique operation named: removeUsingPOST_32
2019-03-20 11:15:31 -Generating unique operation named: saveUsingPOST_18
2019-03-20 11:15:31 -Generating unique operation named: updateUsingGET_13
2019-03-20 11:15:31 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 11:15:31 -Generating unique operation named: updateUsingPOST_18
2019-03-20 11:15:31 -Generating unique operation named: updateUsingPUT_13
2019-03-20 11:15:31 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 11:15:31 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 11:15:31 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 11:15:31 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 11:15:31 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 11:15:31 -Starting Quartz Scheduler now
2019-03-20 11:15:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 11:15:31 -Starting...
2019-03-20 11:15:31 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 11:15:31 -Started.
2019-03-20 11:15:31 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 11:15:31 -Using a shared selector for servlet write/read
2019-03-20 11:15:31 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-20 11:15:31 -Started BootdoApplication in 36.071 seconds (JVM running for 37.934)
2019-03-20 11:15:31 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-20 11:15:32 -==> Parameters: 
2019-03-20 11:15:32 -<==      Total: 1
2019-03-20 11:15:57 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-20 11:15:57 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-20 11:15:57 -FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2019-03-20 11:15:57 -Enabling session validation scheduler...
2019-03-20 11:15:58 -请求地址 : http://localhost:8081/
2019-03-20 11:15:58 -HTTP METHOD : GET
2019-03-20 11:15:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-20 11:15:58 -参数 : [{}]
2019-03-20 11:15:58 -耗时 : 2
2019-03-20 11:15:58 -返回值 : redirect:/index
2019-03-20 11:15:58 -请求地址 : http://localhost:8081/login;JSESSIONID=ced5536f-6ede-49f9-87f8-6346a4b90768
2019-03-20 11:15:58 -HTTP METHOD : GET
2019-03-20 11:15:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 11:15:58 -参数 : [{}]
2019-03-20 11:15:58 -耗时 : 1
2019-03-20 11:15:58 -返回值 : login
2019-03-20 11:16:00 -请求地址 : http://localhost:8081/getVerify
2019-03-20 11:16:00 -HTTP METHOD : GET
2019-03-20 11:16:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 11:16:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@31cba343, org.apache.shiro.web.servlet.ShiroHttpServletResponse@76c37fed]
2019-03-20 11:16:00 -7938
2019-03-20 11:16:00 -耗时 : 418
2019-03-20 11:16:00 -返回值 : null
2019-03-20 11:16:00 -请求地址 : http://localhost:8081/login
2019-03-20 11:16:00 -HTTP METHOD : GET
2019-03-20 11:16:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 11:16:00 -参数 : [{}]
2019-03-20 11:16:00 -耗时 : 1
2019-03-20 11:16:00 -返回值 : login
2019-03-20 11:16:05 -请求地址 : http://localhost:8081/login
2019-03-20 11:16:05 -HTTP METHOD : POST
2019-03-20 11:16:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 11:16:05 -参数 : [admin, 111111, 7938, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a4b1962]
2019-03-20 11:16:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 11:16:05 -==> Parameters: admin(String)
2019-03-20 11:16:05 -<==      Total: 1
2019-03-20 11:16:05 -耗时 : 289
2019-03-20 11:16:05 -返回值 : {msg=操作成功, code=0}
2019-03-20 11:16:06 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-20 11:16:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 11:16:06 -==> Parameters: 1(Long), admin(String), 登录(String), 291(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 11:16:06.013(Timestamp)
2019-03-20 11:16:06 -请求地址 : http://localhost:8081/index
2019-03-20 11:16:06 -HTTP METHOD : GET
2019-03-20 11:16:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 11:16:06 -参数 : [{}]
2019-03-20 11:16:06 -<==    Updates: 1
2019-03-20 11:16:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 11:16:06 -==> Parameters: 1(Long)
2019-03-20 11:16:06 -<==      Total: 46
2019-03-20 11:16:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 11:16:07 -==> Parameters: 138(Long)
2019-03-20 11:16:07 -<==      Total: 1
2019-03-20 11:16:07 -耗时 : 940
2019-03-20 11:16:07 -返回值 : index_v1
2019-03-20 11:16:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 11:16:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 940(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 11:16:07.072(Timestamp)
2019-03-20 11:16:07 -<==    Updates: 1
2019-03-20 11:16:07 -请求地址 : http://localhost:8081/main
2019-03-20 11:16:07 -HTTP METHOD : GET
2019-03-20 11:16:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 11:16:07 -参数 : []
2019-03-20 11:16:07 -耗时 : 1
2019-03-20 11:16:07 -返回值 : main
2019-03-20 11:16:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 11:16:08 -HTTP METHOD : GET
2019-03-20 11:16:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 11:16:08 -参数 : []
2019-03-20 11:16:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 11:16:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 11:16:08 -请求地址 : http://localhost:8081/main
2019-03-20 11:16:08 -HTTP METHOD : GET
2019-03-20 11:16:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 11:16:08 -参数 : []
2019-03-20 11:16:08 -耗时 : 1
2019-03-20 11:16:08 -返回值 : main
2019-03-20 11:16:08 -<==      Total: 0
2019-03-20 11:16:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 11:16:08 -==> Parameters: 1(Long), 0(String)
2019-03-20 11:16:08 -<==      Total: 1
2019-03-20 11:16:08 -耗时 : 526
2019-03-20 11:16:08 -返回值 : com.bootdo.common.utils.PageUtils@635a6e65
2019-03-20 11:16:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 11:16:17 -==> Parameters: 1(Long)
2019-03-20 11:16:17 -<==      Total: 90
2019-03-20 11:16:17 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-20 11:16:17 -HTTP METHOD : GET
2019-03-20 11:16:17 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-20 11:16:17 -参数 : []
2019-03-20 11:16:17 -耗时 : 0
2019-03-20 11:16:17 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-20 11:16:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-03-20 11:18:57 -请求地址 : http://localhost:8081/index
2019-03-20 11:18:57 -HTTP METHOD : GET
2019-03-20 11:18:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 11:18:57 -参数 : [{}]
2019-03-20 11:18:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 11:18:57 -==> Parameters: 1(Long)
2019-03-20 11:18:57 -<==      Total: 46
2019-03-20 11:18:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 11:18:57 -==> Parameters: 138(Long)
2019-03-20 11:18:57 -<==      Total: 1
2019-03-20 11:18:57 -耗时 : 40
2019-03-20 11:18:57 -返回值 : index_v1
2019-03-20 11:18:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 11:18:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 11:18:57.863(Timestamp)
2019-03-20 11:18:57 -<==    Updates: 1
2019-03-20 11:18:57 -请求地址 : http://localhost:8081/main
2019-03-20 11:18:57 -HTTP METHOD : GET
2019-03-20 11:18:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 11:18:57 -参数 : []
2019-03-20 11:18:57 -耗时 : 1
2019-03-20 11:18:57 -返回值 : main
2019-03-20 11:18:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 11:18:58 -HTTP METHOD : GET
2019-03-20 11:18:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 11:18:58 -参数 : []
2019-03-20 11:18:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 11:18:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 11:18:58 -请求地址 : http://localhost:8081/main
2019-03-20 11:18:58 -HTTP METHOD : GET
2019-03-20 11:18:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 11:18:58 -参数 : []
2019-03-20 11:18:58 -耗时 : 0
2019-03-20 11:18:58 -返回值 : main
2019-03-20 11:18:58 -<==      Total: 0
2019-03-20 11:18:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 11:18:58 -==> Parameters: 1(Long), 0(String)
2019-03-20 11:18:58 -<==      Total: 1
2019-03-20 11:18:58 -耗时 : 7
2019-03-20 11:18:58 -返回值 : com.bootdo.common.utils.PageUtils@36d26053
2019-03-20 11:19:01 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-20 11:19:01 -HTTP METHOD : GET
2019-03-20 11:19:01 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-20 11:19:01 -参数 : []
2019-03-20 11:19:01 -耗时 : 0
2019-03-20 11:19:01 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-20 11:19:51 -请求地址 : http://localhost:8081/index
2019-03-20 11:19:51 -HTTP METHOD : GET
2019-03-20 11:19:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 11:19:51 -参数 : [{}]
2019-03-20 11:19:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 11:19:51 -==> Parameters: 1(Long)
2019-03-20 11:19:51 -<==      Total: 46
2019-03-20 11:19:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 11:19:51 -==> Parameters: 138(Long)
2019-03-20 11:19:51 -<==      Total: 1
2019-03-20 11:19:51 -耗时 : 40
2019-03-20 11:19:51 -返回值 : index_v1
2019-03-20 11:19:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 11:19:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 41(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 11:19:51.901(Timestamp)
2019-03-20 11:19:52 -<==    Updates: 1
2019-03-20 11:19:52 -请求地址 : http://localhost:8081/main
2019-03-20 11:19:52 -HTTP METHOD : GET
2019-03-20 11:19:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 11:19:52 -参数 : []
2019-03-20 11:19:52 -耗时 : 1
2019-03-20 11:19:52 -返回值 : main
2019-03-20 11:19:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 11:19:52 -HTTP METHOD : GET
2019-03-20 11:19:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 11:19:52 -参数 : []
2019-03-20 11:19:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 11:19:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 11:19:52 -<==      Total: 0
2019-03-20 11:19:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 11:19:52 -==> Parameters: 1(Long), 0(String)
2019-03-20 11:19:52 -<==      Total: 1
2019-03-20 11:19:52 -耗时 : 8
2019-03-20 11:19:52 -返回值 : com.bootdo.common.utils.PageUtils@1b28ee7a
2019-03-20 11:19:52 -请求地址 : http://localhost:8081/main
2019-03-20 11:19:52 -HTTP METHOD : GET
2019-03-20 11:19:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 11:19:52 -参数 : []
2019-03-20 11:19:52 -耗时 : 1
2019-03-20 11:19:52 -返回值 : main
2019-03-20 11:19:55 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-20 11:19:55 -HTTP METHOD : GET
2019-03-20 11:19:55 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-20 11:19:55 -参数 : []
2019-03-20 11:19:55 -耗时 : 1
2019-03-20 11:19:55 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-20 11:22:14 -请求地址 : http://localhost:8081/index
2019-03-20 11:22:14 -HTTP METHOD : GET
2019-03-20 11:22:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 11:22:14 -参数 : [{}]
2019-03-20 11:22:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 11:22:14 -==> Parameters: 1(Long)
2019-03-20 11:22:14 -<==      Total: 46
2019-03-20 11:22:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 11:22:14 -==> Parameters: 138(Long)
2019-03-20 11:22:14 -<==      Total: 1
2019-03-20 11:22:14 -耗时 : 32
2019-03-20 11:22:14 -返回值 : index_v1
2019-03-20 11:22:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 11:22:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 11:22:14.74(Timestamp)
2019-03-20 11:22:14 -请求地址 : http://localhost:8081/main
2019-03-20 11:22:14 -HTTP METHOD : GET
2019-03-20 11:22:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 11:22:14 -参数 : []
2019-03-20 11:22:14 -耗时 : 1
2019-03-20 11:22:14 -返回值 : main
2019-03-20 11:22:14 -<==    Updates: 1
2019-03-20 11:22:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 11:22:15 -HTTP METHOD : GET
2019-03-20 11:22:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 11:22:15 -参数 : []
2019-03-20 11:22:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 11:22:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 11:22:15 -<==      Total: 0
2019-03-20 11:22:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 11:22:15 -==> Parameters: 1(Long), 0(String)
2019-03-20 11:22:15 -<==      Total: 1
2019-03-20 11:22:15 -耗时 : 5
2019-03-20 11:22:15 -返回值 : com.bootdo.common.utils.PageUtils@7323ae26
2019-03-20 11:22:15 -请求地址 : http://localhost:8081/main
2019-03-20 11:22:15 -HTTP METHOD : GET
2019-03-20 11:22:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 11:22:15 -参数 : []
2019-03-20 11:22:15 -耗时 : 1
2019-03-20 11:22:15 -返回值 : main
2019-03-20 11:22:19 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-20 11:22:19 -HTTP METHOD : GET
2019-03-20 11:22:19 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-20 11:22:19 -参数 : []
2019-03-20 11:22:19 -耗时 : 1
2019-03-20 11:22:19 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-20 11:22:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 11:22:25 -HTTP METHOD : GET
2019-03-20 11:22:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 11:22:25 -参数 : []
2019-03-20 11:22:25 -耗时 : 1
2019-03-20 11:22:25 -返回值 : system/dept/deptTree
2019-03-20 11:22:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 11:22:25 -HTTP METHOD : GET
2019-03-20 11:22:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 11:22:25 -参数 : []
2019-03-20 11:22:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 11:22:25 -==> Parameters: 
2019-03-20 11:22:25 -<==      Total: 3
2019-03-20 11:22:25 -耗时 : 82
2019-03-20 11:22:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 11:22:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 11:22:30 -HTTP METHOD : GET
2019-03-20 11:22:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 11:22:30 -参数 : []
2019-03-20 11:22:30 -耗时 : 0
2019-03-20 11:22:30 -返回值 : system/dept/deptTree
2019-03-20 11:22:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 11:22:30 -HTTP METHOD : GET
2019-03-20 11:22:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 11:22:30 -参数 : []
2019-03-20 11:22:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 11:22:30 -==> Parameters: 
2019-03-20 11:22:30 -<==      Total: 3
2019-03-20 11:22:30 -耗时 : 6
2019-03-20 11:22:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 11:22:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 11:22:33 -HTTP METHOD : GET
2019-03-20 11:22:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 11:22:33 -参数 : []
2019-03-20 11:22:33 -耗时 : 1
2019-03-20 11:22:33 -返回值 : system/dept/deptTree
2019-03-20 11:22:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 11:22:33 -HTTP METHOD : GET
2019-03-20 11:22:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 11:22:33 -参数 : []
2019-03-20 11:22:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 11:22:33 -==> Parameters: 
2019-03-20 11:22:33 -<==      Total: 3
2019-03-20 11:22:33 -耗时 : 3
2019-03-20 11:22:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 11:22:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 11:22:57 -HTTP METHOD : GET
2019-03-20 11:22:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 11:22:57 -参数 : []
2019-03-20 11:22:57 -耗时 : 0
2019-03-20 11:22:57 -返回值 : system/dept/deptTree
2019-03-20 11:22:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 11:22:57 -HTTP METHOD : GET
2019-03-20 11:22:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 11:22:57 -参数 : []
2019-03-20 11:22:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 11:22:57 -==> Parameters: 
2019-03-20 11:22:57 -<==      Total: 3
2019-03-20 11:22:57 -耗时 : 5
2019-03-20 11:22:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 11:23:35 -请求地址 : http://localhost:8081/file/downImport/heatUser
2019-03-20 11:23:35 -HTTP METHOD : GET
2019-03-20 11:23:35 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-20 11:23:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@103b5fe, heatUser]
2019-03-20 11:23:35 -耗时 : 147
2019-03-20 11:23:35 -返回值 : null
2019-03-20 11:28:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 11:28:49 -HTTP METHOD : GET
2019-03-20 11:28:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 11:28:49 -参数 : []
2019-03-20 11:28:49 -耗时 : 0
2019-03-20 11:28:49 -返回值 : system/dept/deptTree
2019-03-20 11:28:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 11:28:49 -HTTP METHOD : GET
2019-03-20 11:28:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 11:28:49 -参数 : []
2019-03-20 11:28:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 11:28:49 -==> Parameters: 
2019-03-20 11:28:49 -<==      Total: 3
2019-03-20 11:28:49 -耗时 : 5
2019-03-20 11:28:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 11:29:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 11:29:42 -==> Parameters: 1(Long)
2019-03-20 11:29:42 -<==      Total: 90
2019-03-20 11:29:42 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 11:29:42 -HTTP METHOD : GET
2019-03-20 11:29:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 11:29:42 -参数 : []
2019-03-20 11:29:42 -耗时 : 1
2019-03-20 11:29:42 -返回值 : elec/elec/elec
2019-03-20 11:29:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 11:29:42 -HTTP METHOD : GET
2019-03-20 11:29:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 11:29:42 -参数 : [userType]
2019-03-20 11:29:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 11:29:42 -==> Parameters: userType(String)
2019-03-20 11:29:43 -<==      Total: 2
2019-03-20 11:29:43 -耗时 : 106
2019-03-20 11:29:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 11:29:43 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 11:29:43 -HTTP METHOD : GET
2019-03-20 11:29:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 11:29:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@41ff92a7]
2019-03-20 11:29:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 11:29:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 11:29:43 -<==      Total: 10
2019-03-20 11:29:43 -==>  Preparing: select count(*) from elec 
2019-03-20 11:29:43 -==> Parameters: 
2019-03-20 11:29:43 -<==      Total: 1
2019-03-20 11:29:43 -耗时 : 108
2019-03-20 11:29:43 -返回值 : com.bootdo.common.utils.PageUtils@6997881f
2019-03-20 11:30:06 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 11:30:06 -HTTP METHOD : GET
2019-03-20 11:30:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 11:30:06 -参数 : [1, {}]
2019-03-20 11:30:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 11:30:06 -==> Parameters: 1(Long)
2019-03-20 11:30:06 -<==      Total: 1
2019-03-20 11:30:06 -耗时 : 7
2019-03-20 11:30:06 -返回值 : elec/elec/edit
2019-03-20 11:30:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 11:30:07 -HTTP METHOD : GET
2019-03-20 11:30:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 11:30:07 -参数 : [userType]
2019-03-20 11:30:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 11:30:07 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 11:30:07 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 11:30:07 -==> Parameters: userType(String)
2019-03-20 11:30:07 -HTTP METHOD : GET
2019-03-20 11:30:07 -HTTP METHOD : GET
2019-03-20 11:30:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 11:30:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 11:30:07 -参数 : [elecType]
2019-03-20 11:30:07 -参数 : [userState]
2019-03-20 11:30:07 -<==      Total: 2
2019-03-20 11:30:07 -耗时 : 5
2019-03-20 11:30:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 11:30:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 11:30:07 -==> Parameters: userState(String)
2019-03-20 11:30:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 11:30:07 -==> Parameters: elecType(String)
2019-03-20 11:30:07 -<==      Total: 2
2019-03-20 11:30:07 -耗时 : 13
2019-03-20 11:30:07 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 11:30:07 -<==      Total: 2
2019-03-20 11:30:07 -耗时 : 100
2019-03-20 11:30:07 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 11:30:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 11:30:10 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-20 11:30:10.253(Timestamp)
2019-03-20 11:30:10 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 11:30:10 -<==    Updates: 1
2019-03-20 11:30:42 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 11:30:42 -HTTP METHOD : GET
2019-03-20 11:30:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 11:30:42 -参数 : []
2019-03-20 11:30:42 -耗时 : 1
2019-03-20 11:30:42 -返回值 : elec/elec/add
2019-03-20 11:30:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 11:30:43 -HTTP METHOD : GET
2019-03-20 11:30:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 11:30:43 -参数 : [userType]
2019-03-20 11:30:43 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 11:30:43 -HTTP METHOD : GET
2019-03-20 11:30:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 11:30:43 -参数 : [userState]
2019-03-20 11:30:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 11:30:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 11:30:43 -==> Parameters: userState(String)
2019-03-20 11:30:43 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 11:30:43 -HTTP METHOD : GET
2019-03-20 11:30:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 11:30:43 -==> Parameters: userType(String)
2019-03-20 11:30:43 -参数 : [elecType]
2019-03-20 11:30:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 11:30:43 -==> Parameters: elecType(String)
2019-03-20 11:30:43 -<==      Total: 2
2019-03-20 11:30:43 -耗时 : 4
2019-03-20 11:30:43 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 11:30:43 -<==      Total: 2
2019-03-20 11:30:43 -耗时 : 4
2019-03-20 11:30:43 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 11:30:43 -<==      Total: 2
2019-03-20 11:30:43 -耗时 : 67
2019-03-20 11:30:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 11:30:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 11:30:47 -HTTP METHOD : GET
2019-03-20 11:30:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 11:30:47 -参数 : []
2019-03-20 11:30:47 -耗时 : 1
2019-03-20 11:30:47 -返回值 : system/dept/deptTree
2019-03-20 11:30:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 11:30:48 -HTTP METHOD : GET
2019-03-20 11:30:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 11:30:48 -参数 : []
2019-03-20 11:30:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 11:30:48 -==> Parameters: 
2019-03-20 11:30:48 -<==      Total: 3
2019-03-20 11:30:48 -耗时 : 65
2019-03-20 11:30:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 11:31:23 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 11:31:23 -HTTP METHOD : GET
2019-03-20 11:31:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 11:31:23 -参数 : []
2019-03-20 11:31:23 -耗时 : 1
2019-03-20 11:31:23 -返回值 : elec/elec/add
2019-03-20 11:31:24 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 11:31:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 11:31:24 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 11:31:24 -HTTP METHOD : GET
2019-03-20 11:31:24 -HTTP METHOD : GET
2019-03-20 11:31:24 -HTTP METHOD : GET
2019-03-20 11:31:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 11:31:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 11:31:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 11:31:24 -参数 : [userType]
2019-03-20 11:31:24 -参数 : [userState]
2019-03-20 11:31:24 -参数 : [elecType]
2019-03-20 11:31:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 11:31:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 11:31:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 11:31:24 -==> Parameters: userState(String)
2019-03-20 11:31:24 -==> Parameters: userType(String)
2019-03-20 11:31:24 -==> Parameters: elecType(String)
2019-03-20 11:31:24 -<==      Total: 2
2019-03-20 11:31:24 -<==      Total: 2
2019-03-20 11:31:24 -<==      Total: 2
2019-03-20 11:31:24 -耗时 : 7
2019-03-20 11:31:24 -耗时 : 7
2019-03-20 11:31:24 -耗时 : 6
2019-03-20 11:31:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 11:31:24 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 11:31:24 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 11:31:24 -请求地址 : http://localhost:8081/elec/elec/save
2019-03-20 11:31:24 -HTTP METHOD : POST
2019-03-20 11:31:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.save
2019-03-20 11:31:24 -参数 : [com.bootdo.elec.domain.ElecDO@46c1883e]
2019-03-20 11:31:24 -==>  Preparing: insert into elec ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 11:31:24 -==> Parameters: (String), (String), (String), (String), (String), (String), (String), (String), null, (String), (String), null, null, null, null, null, null, 2019-03-20 11:31:24.945(Timestamp), 1(Long), (String)
2019-03-20 11:31:25 -{conn-10001, pstmt-20017} execute error. insert into elec
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`user_tell`, 
			`user_state`, 
			`wages_id`, 
			`elec_type`, 
			`elec_price`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.save(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.save(ElecServiceImpl.java:42)
	at com.bootdo.elec.controller.ElecController.save(ElecController.java:190)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$543cdeaa.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 11:31:25 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-20 11:31:25 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-20 11:31:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 11:31:25 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.save(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.save(ElecServiceImpl.java:42)
	at com.bootdo.elec.controller.ElecController.save(ElecController.java:190)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$543cdeaa.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-20 11:31:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null(String), null, 2019-03-20 11:31:25.231(Timestamp)
2019-03-20 11:31:25 -<==    Updates: 1
2019-03-20 11:46:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 434]
2019-03-20 12:15:57 -Validating all active sessions...
2019-03-20 12:15:58 -Finished session validation.  [1] sessions were stopped.
2019-03-20 12:16:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 867]
2019-03-20 12:46:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1280]
2019-03-20 13:31:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 1, completed tasks = 1583]
2019-03-20 13:33:36 -请求地址 : http://localhost:8081/login;JSESSIONID=54b11837-92cd-4dbc-aa9d-101c5ea151ad
2019-03-20 13:33:36 -HTTP METHOD : GET
2019-03-20 13:33:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 13:33:36 -参数 : [{}]
2019-03-20 13:33:36 -耗时 : 1
2019-03-20 13:33:36 -返回值 : login
2019-03-20 13:33:36 -请求地址 : http://localhost:8081/login;JSESSIONID=54b11837-92cd-4dbc-aa9d-101c5ea151ad
2019-03-20 13:33:36 -HTTP METHOD : GET
2019-03-20 13:33:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 13:33:36 -参数 : [{}]
2019-03-20 13:33:36 -耗时 : 1
2019-03-20 13:33:36 -返回值 : login
2019-03-20 13:33:37 -请求地址 : http://localhost:8081/getVerify
2019-03-20 13:33:37 -HTTP METHOD : GET
2019-03-20 13:33:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 13:33:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3975f5bb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@66c39554]
2019-03-20 13:33:37 -1327
2019-03-20 13:33:37 -耗时 : 29
2019-03-20 13:33:37 -返回值 : null
2019-03-20 13:33:37 -请求地址 : http://localhost:8081/getVerify
2019-03-20 13:33:37 -HTTP METHOD : GET
2019-03-20 13:33:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 13:33:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@410e0143, org.apache.shiro.web.servlet.ShiroHttpServletResponse@10fc365f]
2019-03-20 13:33:37 -8216
2019-03-20 13:33:37 -耗时 : 13
2019-03-20 13:33:37 -返回值 : null
2019-03-20 13:46:22 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 2057]
2019-03-20 13:47:24 -请求地址 : http://localhost:8081/login
2019-03-20 13:47:24 -HTTP METHOD : POST
2019-03-20 13:47:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 13:47:24 -参数 : [admin, 111111, 8216, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4389fe89]
2019-03-20 13:47:24 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 13:47:24 -==> Parameters: admin(String)
2019-03-20 13:47:24 -<==      Total: 1
2019-03-20 13:47:24 -耗时 : 247
2019-03-20 13:47:24 -返回值 : {msg=操作成功, code=0}
2019-03-20 13:47:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 13:47:25 -==> Parameters: 1(Long), admin(String), 登录(String), 248(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 13:47:24.98(Timestamp)
2019-03-20 13:47:25 -请求地址 : http://localhost:8081/index
2019-03-20 13:47:25 -HTTP METHOD : GET
2019-03-20 13:47:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 13:47:25 -参数 : [{}]
2019-03-20 13:47:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 13:47:25 -==> Parameters: 1(Long)
2019-03-20 13:47:25 -<==    Updates: 1
2019-03-20 13:47:25 -<==      Total: 46
2019-03-20 13:47:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 13:47:25 -==> Parameters: 138(Long)
2019-03-20 13:47:25 -<==      Total: 1
2019-03-20 13:47:25 -耗时 : 842
2019-03-20 13:47:25 -返回值 : index_v1
2019-03-20 13:47:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 13:47:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 842(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 13:47:25.876(Timestamp)
2019-03-20 13:47:26 -<==    Updates: 1
2019-03-20 13:47:26 -请求地址 : http://localhost:8081/main
2019-03-20 13:47:26 -HTTP METHOD : GET
2019-03-20 13:47:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 13:47:26 -参数 : []
2019-03-20 13:47:26 -耗时 : 2
2019-03-20 13:47:26 -返回值 : main
2019-03-20 13:47:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 13:47:26 -HTTP METHOD : GET
2019-03-20 13:47:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 13:47:26 -参数 : []
2019-03-20 13:47:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 13:47:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 13:47:26 -请求地址 : http://localhost:8081/main
2019-03-20 13:47:26 -HTTP METHOD : GET
2019-03-20 13:47:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 13:47:26 -参数 : []
2019-03-20 13:47:26 -耗时 : 0
2019-03-20 13:47:26 -返回值 : main
2019-03-20 13:47:26 -<==      Total: 0
2019-03-20 13:47:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 13:47:26 -==> Parameters: 1(Long), 0(String)
2019-03-20 13:47:26 -<==      Total: 1
2019-03-20 13:47:26 -耗时 : 54
2019-03-20 13:47:26 -返回值 : com.bootdo.common.utils.PageUtils@69f992c0
2019-03-20 13:49:18 -Validating all active sessions...
2019-03-20 13:49:18 -Finished session validation.  No sessions were stopped.
2019-03-20 14:12:38 -Starting BootdoApplication on ZJZL-20180906VX with PID 9256 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 14:12:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 14:12:38 -The following profiles are active: dev
2019-03-20 14:12:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b956878: startup date [Wed Mar 20 14:12:39 CST 2019]; root of context hierarchy
2019-03-20 14:12:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 14:12:48 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$20248f1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 14:12:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$127dbdc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 14:12:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 14:12:51 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 14:12:51 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 14:12:51 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 14:12:51 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 14:12:51 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 14:12:51 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 14:12:51 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 14:12:51 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 14:12:52 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 14:12:52 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 14:12:52 -Starting service [Tomcat]
2019-03-20 14:12:52 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 14:12:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 14:12:53 -Initializing Spring embedded WebApplicationContext
2019-03-20 14:12:53 -Root WebApplicationContext: initialization completed in 14172 ms
2019-03-20 14:12:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 14:12:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 14:12:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 14:12:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 14:12:54 -Filter xssFilter was not registered (disabled)
2019-03-20 14:12:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 14:12:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 14:12:54 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 14:12:54 -Servlet dispatcherServlet mapped to [/]
2019-03-20 14:12:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b956878: startup date [Wed Mar 20 14:12:39 CST 2019]; root of context hierarchy
2019-03-20 14:12:58 -Using default implementation for ThreadExecutor
2019-03-20 14:12:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 14:12:58 -Quartz Scheduler v.2.2.1 created.
2019-03-20 14:12:58 -RAMJobStore initialized.
2019-03-20 14:12:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 14:12:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 14:12:58 -Quartz scheduler version: 2.2.1
2019-03-20 14:12:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3ca3eba2
2019-03-20 14:12:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 14:12:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 14:13:02 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 14:13:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 14:13:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 14:13:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 14:13:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 14:13:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 14:13:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 14:13:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 14:13:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 14:13:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 14:13:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 14:13:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 14:13:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 14:13:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 14:13:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 14:13:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 14:13:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 14:13:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 14:13:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 14:13:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 14:13:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 14:13:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 14:13:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 14:13:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 14:13:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 14:13:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 14:13:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 14:13:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 14:13:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 14:13:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 14:13:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 14:13:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 14:13:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 14:13:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 14:13:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 14:13:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 14:13:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 14:13:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 14:13:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 14:13:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 14:13:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 14:13:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 14:13:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 14:13:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 14:13:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 14:13:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 14:13:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 14:13:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 14:13:03 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 14:13:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 14:13:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 14:13:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 14:13:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 14:13:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 14:13:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 14:13:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 14:13:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 14:13:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 14:13:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 14:13:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 14:13:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 14:13:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 14:13:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 14:13:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 14:13:03 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 14:13:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 14:13:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 14:13:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 14:13:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 14:13:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 14:13:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 14:13:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 14:13:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 14:13:03 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 14:13:03 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 14:13:03 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 14:13:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 14:13:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 14:13:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 14:13:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 14:13:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 14:13:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 14:13:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 14:13:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 14:13:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 14:13:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 14:13:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 14:13:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 14:13:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 14:13:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 14:13:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 14:13:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 14:13:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 14:13:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 14:13:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 14:13:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 14:13:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 14:13:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 14:13:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 14:13:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 14:13:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 14:13:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 14:13:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 14:13:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 14:13:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 14:13:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 14:13:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 14:13:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 14:13:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 14:13:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 14:13:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 14:13:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 14:13:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 14:13:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 14:13:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 14:13:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 14:13:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 14:13:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 14:13:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 14:13:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 14:13:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 14:13:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 14:13:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 14:13:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 14:13:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 14:13:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 14:13:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 14:13:03 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 14:13:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 14:13:03 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 14:13:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 14:13:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 14:13:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 14:13:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 14:13:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 14:13:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 14:13:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 14:13:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 14:13:03 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 14:13:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 14:13:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 14:13:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 14:13:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 14:13:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 14:13:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 14:13:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 14:13:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 14:13:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 14:13:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b956878: startup date [Wed Mar 20 14:12:39 CST 2019]; root of context hierarchy
2019-03-20 14:13:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 14:13:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 14:13:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 14:13:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 14:13:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 14:13:09 -Registering beans for JMX exposure on startup
2019-03-20 14:13:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 14:13:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 14:13:09 -Starting beans in phase 2147483647
2019-03-20 14:13:09 -Context refreshed
2019-03-20 14:13:09 -Found 1 custom documentation plugin(s)
2019-03-20 14:13:09 -Scanning for api listing references
2019-03-20 14:13:10 -Generating unique operation named: removeUsingPOST_1
2019-03-20 14:13:10 -Generating unique operation named: addUsingGET_1
2019-03-20 14:13:10 -Generating unique operation named: editUsingGET_1
2019-03-20 14:13:10 -Generating unique operation named: listUsingGET_1
2019-03-20 14:13:10 -Generating unique operation named: removeUsingPOST_2
2019-03-20 14:13:10 -Generating unique operation named: removeUsingPOST_3
2019-03-20 14:13:10 -Generating unique operation named: saveUsingPOST_1
2019-03-20 14:13:10 -Generating unique operation named: updateUsingGET_1
2019-03-20 14:13:10 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPOST_1
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPUT_1
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 14:13:10 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 14:13:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 14:13:10 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 14:13:10 -Generating unique operation named: addUsingGET_2
2019-03-20 14:13:10 -Generating unique operation named: editUsingGET_2
2019-03-20 14:13:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 14:13:10 -Generating unique operation named: listUsingGET_2
2019-03-20 14:13:10 -Generating unique operation named: removeUsingPOST_4
2019-03-20 14:13:10 -Generating unique operation named: removeUsingPOST_5
2019-03-20 14:13:10 -Generating unique operation named: saveUsingPOST_2
2019-03-20 14:13:10 -Generating unique operation named: updateUsingGET_2
2019-03-20 14:13:10 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPOST_2
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPUT_2
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 14:13:10 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 14:13:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 14:13:10 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 14:13:10 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 14:13:10 -Generating unique operation named: addUsingGET_3
2019-03-20 14:13:10 -Generating unique operation named: editUsingGET_3
2019-03-20 14:13:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 14:13:10 -Generating unique operation named: listUsingGET_3
2019-03-20 14:13:10 -Generating unique operation named: removeUsingPOST_6
2019-03-20 14:13:10 -Generating unique operation named: removeUsingPOST_7
2019-03-20 14:13:10 -Generating unique operation named: saveUsingPOST_3
2019-03-20 14:13:10 -Generating unique operation named: updateUsingGET_3
2019-03-20 14:13:10 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPOST_3
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPUT_3
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 14:13:10 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 14:13:10 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 14:13:10 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 14:13:10 -Generating unique operation named: addUsingGET_4
2019-03-20 14:13:10 -Generating unique operation named: editUsingGET_4
2019-03-20 14:13:10 -Generating unique operation named: listUsingGET_4
2019-03-20 14:13:10 -Generating unique operation named: removeUsingPOST_8
2019-03-20 14:13:10 -Generating unique operation named: removeUsingPOST_9
2019-03-20 14:13:10 -Generating unique operation named: saveUsingPOST_4
2019-03-20 14:13:10 -Generating unique operation named: updateUsingGET_4
2019-03-20 14:13:10 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPOST_4
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPUT_4
2019-03-20 14:13:10 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 14:13:10 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 14:13:10 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 14:13:10 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 14:13:11 -Generating unique operation named: ElecUsingGET_1
2019-03-20 14:13:11 -Generating unique operation named: addUsingGET_5
2019-03-20 14:13:11 -Generating unique operation named: editUsingGET_5
2019-03-20 14:13:11 -Generating unique operation named: listUsingGET_5
2019-03-20 14:13:11 -Generating unique operation named: removeUsingPOST_10
2019-03-20 14:13:11 -Generating unique operation named: removeUsingPOST_11
2019-03-20 14:13:11 -Generating unique operation named: saveUsingPOST_5
2019-03-20 14:13:11 -Generating unique operation named: updateUsingGET_5
2019-03-20 14:13:11 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPOST_5
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPUT_5
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 14:13:11 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 14:13:11 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 14:13:11 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 14:13:11 -Generating unique operation named: editUsingGET_6
2019-03-20 14:13:11 -Generating unique operation named: listUsingGET_6
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPOST_6
2019-03-20 14:13:11 -Generating unique operation named: addUsingGET_6
2019-03-20 14:13:11 -Generating unique operation named: editUsingGET_7
2019-03-20 14:13:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 14:13:11 -Generating unique operation named: listUsingGET_7
2019-03-20 14:13:11 -Generating unique operation named: removeUsingPOST_12
2019-03-20 14:13:11 -Generating unique operation named: removeUsingPOST_13
2019-03-20 14:13:11 -Generating unique operation named: saveUsingPOST_6
2019-03-20 14:13:11 -Generating unique operation named: updateUsingGET_6
2019-03-20 14:13:11 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPOST_7
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPUT_6
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 14:13:11 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 14:13:11 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 14:13:11 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 14:13:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 14:13:11 -Generating unique operation named: addUsingGET_7
2019-03-20 14:13:11 -Generating unique operation named: editUsingGET_8
2019-03-20 14:13:11 -Generating unique operation named: listUsingGET_8
2019-03-20 14:13:11 -Generating unique operation named: removeUsingPOST_14
2019-03-20 14:13:11 -Generating unique operation named: removeUsingPOST_15
2019-03-20 14:13:11 -Generating unique operation named: saveUsingPOST_7
2019-03-20 14:13:11 -Generating unique operation named: updateUsingGET_7
2019-03-20 14:13:11 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPOST_8
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPUT_7
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 14:13:11 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 14:13:11 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 14:13:11 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 14:13:11 -Generating unique operation named: addUsingGET_8
2019-03-20 14:13:11 -Generating unique operation named: editUsingGET_9
2019-03-20 14:13:11 -Generating unique operation named: listUsingGET_9
2019-03-20 14:13:11 -Generating unique operation named: removeUsingPOST_16
2019-03-20 14:13:11 -Generating unique operation named: removeUsingPOST_17
2019-03-20 14:13:11 -Generating unique operation named: saveUsingPOST_8
2019-03-20 14:13:11 -Generating unique operation named: updateUsingGET_8
2019-03-20 14:13:11 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPOST_9
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPUT_8
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 14:13:11 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 14:13:11 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 14:13:11 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 14:13:11 -Generating unique operation named: addUsingGET_9
2019-03-20 14:13:11 -Generating unique operation named: editUsingGET_10
2019-03-20 14:13:11 -Generating unique operation named: infoUsingGET_1
2019-03-20 14:13:11 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 14:13:11 -Generating unique operation named: infoUsingPOST_1
2019-03-20 14:13:11 -Generating unique operation named: infoUsingPUT_1
2019-03-20 14:13:11 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 14:13:11 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 14:13:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 14:13:11 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 14:13:11 -Generating unique operation named: listUsingGET_10
2019-03-20 14:13:11 -Generating unique operation named: removeUsingPOST_18
2019-03-20 14:13:11 -Generating unique operation named: removeUsingPOST_19
2019-03-20 14:13:11 -Generating unique operation named: saveUsingPOST_9
2019-03-20 14:13:11 -Generating unique operation named: updateUsingPOST_10
2019-03-20 14:13:11 -Generating unique operation named: listUsingGET_11
2019-03-20 14:13:11 -Generating unique operation named: removeUsingPOST_20
2019-03-20 14:13:11 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 14:13:11 -Generating unique operation named: addUsingGET_10
2019-03-20 14:13:11 -Generating unique operation named: editUsingGET_11
2019-03-20 14:13:11 -Generating unique operation named: listUsingGET_12
2019-03-20 14:13:12 -Generating unique operation named: removeUsingPOST_21
2019-03-20 14:13:12 -Generating unique operation named: saveUsingPOST_10
2019-03-20 14:13:12 -Generating unique operation named: treeUsingGET_1
2019-03-20 14:13:12 -Generating unique operation named: treeUsingGET_2
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPOST_11
2019-03-20 14:13:12 -Generating unique operation named: addUsingGET_11
2019-03-20 14:13:12 -Generating unique operation named: editUsingGET_12
2019-03-20 14:13:12 -Generating unique operation named: listUsingGET_13
2019-03-20 14:13:12 -Generating unique operation named: removeUsingPOST_22
2019-03-20 14:13:12 -Generating unique operation named: removeUsingPOST_23
2019-03-20 14:13:12 -Generating unique operation named: saveUsingPOST_11
2019-03-20 14:13:12 -Generating unique operation named: updateUsingGET_9
2019-03-20 14:13:12 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPOST_12
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPUT_9
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 14:13:12 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 14:13:12 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 14:13:12 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 14:13:12 -Generating unique operation named: addUsingGET_12
2019-03-20 14:13:12 -Generating unique operation named: editUsingGET_13
2019-03-20 14:13:12 -Generating unique operation named: listUsingGET_14
2019-03-20 14:13:12 -Generating unique operation named: removeUsingPOST_24
2019-03-20 14:13:12 -Generating unique operation named: removeUsingPOST_25
2019-03-20 14:13:12 -Generating unique operation named: saveUsingPOST_12
2019-03-20 14:13:12 -Generating unique operation named: updateUsingGET_10
2019-03-20 14:13:12 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPOST_13
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPUT_10
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 14:13:12 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 14:13:12 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 14:13:12 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 14:13:12 -Generating unique operation named: addUsingGET_13
2019-03-20 14:13:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 14:13:12 -Generating unique operation named: editUsingGET_14
2019-03-20 14:13:12 -Generating unique operation named: listUsingGET_15
2019-03-20 14:13:12 -Generating unique operation named: saveUsingPOST_13
2019-03-20 14:13:12 -Generating unique operation named: saveUsingPOST_14
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPOST_14
2019-03-20 14:13:12 -Generating unique operation named: listUsingGET_16
2019-03-20 14:13:12 -Generating unique operation named: listUsingHEAD_1
2019-03-20 14:13:12 -Generating unique operation named: listUsingPOST_1
2019-03-20 14:13:12 -Generating unique operation named: listUsingPUT_1
2019-03-20 14:13:12 -Generating unique operation named: listUsingPATCH_1
2019-03-20 14:13:12 -Generating unique operation named: listUsingDELETE_1
2019-03-20 14:13:12 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 14:13:12 -Generating unique operation named: listUsingTRACE_1
2019-03-20 14:13:12 -Generating unique operation named: addUsingGET_14
2019-03-20 14:13:12 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 14:13:12 -Generating unique operation named: editUsingGET_15
2019-03-20 14:13:12 -Generating unique operation named: listUsingGET_17
2019-03-20 14:13:12 -Generating unique operation named: removeUsingPOST_26
2019-03-20 14:13:12 -Generating unique operation named: saveUsingPOST_15
2019-03-20 14:13:12 -Generating unique operation named: treeUsingGET_3
2019-03-20 14:13:12 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPOST_15
2019-03-20 14:13:12 -Generating unique operation named: addUsingGET_15
2019-03-20 14:13:12 -Generating unique operation named: editUsingGET_16
2019-03-20 14:13:12 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 14:13:12 -Generating unique operation named: listUsingGET_18
2019-03-20 14:13:12 -Generating unique operation named: removeUsingPOST_27
2019-03-20 14:13:12 -Generating unique operation named: removeUsingPOST_28
2019-03-20 14:13:12 -Generating unique operation named: saveUsingPOST_16
2019-03-20 14:13:12 -Generating unique operation named: updateUsingGET_11
2019-03-20 14:13:12 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPOST_16
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPUT_11
2019-03-20 14:13:12 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 14:13:12 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 14:13:12 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 14:13:12 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 14:13:12 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 14:13:12 -Generating unique operation named: addUsingGET_16
2019-03-20 14:13:12 -Generating unique operation named: editUsingGET_17
2019-03-20 14:13:13 -Generating unique operation named: listUsingGET_19
2019-03-20 14:13:13 -Generating unique operation named: removeUsingPOST_29
2019-03-20 14:13:13 -Generating unique operation named: removeUsingPOST_30
2019-03-20 14:13:13 -Generating unique operation named: saveUsingPOST_17
2019-03-20 14:13:13 -Generating unique operation named: updateUsingGET_12
2019-03-20 14:13:13 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 14:13:13 -Generating unique operation named: updateUsingPOST_17
2019-03-20 14:13:13 -Generating unique operation named: updateUsingPUT_12
2019-03-20 14:13:13 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 14:13:13 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 14:13:13 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 14:13:13 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 14:13:13 -Generating unique operation named: addUsingGET_17
2019-03-20 14:13:13 -Generating unique operation named: editUsingGET_18
2019-03-20 14:13:13 -Generating unique operation named: listUsingGET_20
2019-03-20 14:13:13 -Generating unique operation named: removeUsingPOST_31
2019-03-20 14:13:13 -Generating unique operation named: removeUsingPOST_32
2019-03-20 14:13:13 -Generating unique operation named: saveUsingPOST_18
2019-03-20 14:13:13 -Generating unique operation named: updateUsingGET_13
2019-03-20 14:13:13 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 14:13:13 -Generating unique operation named: updateUsingPOST_18
2019-03-20 14:13:13 -Generating unique operation named: updateUsingPUT_13
2019-03-20 14:13:13 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 14:13:13 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 14:13:13 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 14:13:13 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 14:13:13 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 14:13:13 -Starting Quartz Scheduler now
2019-03-20 14:13:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 14:13:13 -Starting...
2019-03-20 14:13:13 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 14:13:13 -Started.
2019-03-20 14:13:13 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 14:13:13 -Using a shared selector for servlet write/read
2019-03-20 14:13:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-20 14:13:13 -Started BootdoApplication in 37.099 seconds (JVM running for 39.289)
2019-03-20 14:13:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-20 14:13:13 -==> Parameters: 
2019-03-20 14:13:14 -<==      Total: 1
2019-03-20 14:14:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-20 14:23:53 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-20 14:23:53 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-20 14:23:53 -FrameworkServlet 'dispatcherServlet': initialization completed in 95 ms
2019-03-20 14:23:54 -Enabling session validation scheduler...
2019-03-20 14:23:54 -请求地址 : http://localhost:8081/login;JSESSIONID=b9ba92d6-c420-4040-8b70-676e400d55e0
2019-03-20 14:23:54 -HTTP METHOD : GET
2019-03-20 14:23:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 14:23:54 -参数 : [{}]
2019-03-20 14:23:54 -耗时 : 5
2019-03-20 14:23:54 -返回值 : login
2019-03-20 14:23:56 -请求地址 : http://localhost:8081/getVerify
2019-03-20 14:23:56 -HTTP METHOD : GET
2019-03-20 14:23:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 14:23:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@58abd583, org.apache.shiro.web.servlet.ShiroHttpServletResponse@52d8fe94]
2019-03-20 14:23:59 -8488
2019-03-20 14:24:00 -耗时 : 3959
2019-03-20 14:24:00 -返回值 : null
2019-03-20 14:24:06 -请求地址 : http://localhost:8081/login
2019-03-20 14:24:06 -HTTP METHOD : POST
2019-03-20 14:24:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 14:24:06 -参数 : [admin, 111111, 8488, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b2b54fa]
2019-03-20 14:24:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 14:24:06 -==> Parameters: admin(String)
2019-03-20 14:24:06 -<==      Total: 1
2019-03-20 14:24:06 -耗时 : 177
2019-03-20 14:24:06 -返回值 : {msg=操作成功, code=0}
2019-03-20 14:24:06 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-20 14:24:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:24:06 -==> Parameters: 1(Long), admin(String), 登录(String), 177(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 14:24:06.889(Timestamp)
2019-03-20 14:24:07 -<==    Updates: 1
2019-03-20 14:24:07 -请求地址 : http://localhost:8081/index
2019-03-20 14:24:07 -HTTP METHOD : GET
2019-03-20 14:24:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:24:07 -参数 : [{}]
2019-03-20 14:24:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:24:07 -==> Parameters: 1(Long)
2019-03-20 14:24:07 -<==      Total: 46
2019-03-20 14:24:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:24:07 -==> Parameters: 138(Long)
2019-03-20 14:24:07 -<==      Total: 1
2019-03-20 14:24:07 -耗时 : 380
2019-03-20 14:24:07 -返回值 : index_v1
2019-03-20 14:24:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:24:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 381(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:24:07.685(Timestamp)
2019-03-20 14:24:07 -<==    Updates: 1
2019-03-20 14:24:07 -请求地址 : http://localhost:8081/main
2019-03-20 14:24:07 -HTTP METHOD : GET
2019-03-20 14:24:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:24:07 -参数 : []
2019-03-20 14:24:07 -耗时 : 1
2019-03-20 14:24:07 -返回值 : main
2019-03-20 14:24:08 -请求地址 : http://localhost:8081/main
2019-03-20 14:24:08 -HTTP METHOD : GET
2019-03-20 14:24:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:24:08 -参数 : []
2019-03-20 14:24:08 -耗时 : 1
2019-03-20 14:24:08 -返回值 : main
2019-03-20 14:24:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:24:08 -HTTP METHOD : GET
2019-03-20 14:24:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:24:08 -参数 : []
2019-03-20 14:24:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:24:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:24:08 -<==      Total: 0
2019-03-20 14:24:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:24:08 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:24:08 -<==      Total: 1
2019-03-20 14:24:08 -耗时 : 47
2019-03-20 14:24:08 -返回值 : com.bootdo.common.utils.PageUtils@32ea2d21
2019-03-20 14:25:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 14:25:03 -==> Parameters: 1(Long)
2019-03-20 14:25:03 -<==      Total: 90
2019-03-20 14:25:03 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:25:03 -HTTP METHOD : GET
2019-03-20 14:25:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:25:03 -参数 : []
2019-03-20 14:25:03 -耗时 : 1
2019-03-20 14:25:03 -返回值 : elec/elec/elec
2019-03-20 14:25:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:25:04 -HTTP METHOD : GET
2019-03-20 14:25:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:25:04 -参数 : [userType]
2019-03-20 14:25:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:25:04 -==> Parameters: userType(String)
2019-03-20 14:25:04 -<==      Total: 2
2019-03-20 14:25:04 -耗时 : 35
2019-03-20 14:25:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:25:04 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:25:04 -HTTP METHOD : GET
2019-03-20 14:25:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:25:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3b287240]
2019-03-20 14:25:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:25:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:25:04 -<==      Total: 10
2019-03-20 14:25:04 -==>  Preparing: select count(*) from elec 
2019-03-20 14:25:04 -==> Parameters: 
2019-03-20 14:25:04 -<==      Total: 1
2019-03-20 14:25:04 -耗时 : 98
2019-03-20 14:25:04 -返回值 : com.bootdo.common.utils.PageUtils@43417afc
2019-03-20 14:25:22 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 14:25:22 -HTTP METHOD : GET
2019-03-20 14:25:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 14:25:22 -参数 : [1, {}]
2019-03-20 14:25:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 14:25:22 -==> Parameters: 1(Long)
2019-03-20 14:25:22 -<==      Total: 1
2019-03-20 14:25:22 -耗时 : 11
2019-03-20 14:25:22 -返回值 : elec/elec/edit
2019-03-20 14:25:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:25:22 -HTTP METHOD : GET
2019-03-20 14:25:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:25:22 -参数 : [userType]
2019-03-20 14:25:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:25:22 -==> Parameters: userType(String)
2019-03-20 14:25:22 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:25:22 -HTTP METHOD : GET
2019-03-20 14:25:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:25:22 -参数 : [userState]
2019-03-20 14:25:22 -<==      Total: 2
2019-03-20 14:25:22 -耗时 : 5
2019-03-20 14:25:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:25:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:25:22 -==> Parameters: userState(String)
2019-03-20 14:25:22 -<==      Total: 2
2019-03-20 14:25:22 -耗时 : 9
2019-03-20 14:25:22 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:25:22 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:25:22 -HTTP METHOD : GET
2019-03-20 14:25:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:25:22 -参数 : [elecType]
2019-03-20 14:25:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:25:22 -==> Parameters: elecType(String)
2019-03-20 14:25:22 -<==      Total: 2
2019-03-20 14:25:22 -耗时 : 34
2019-03-20 14:25:22 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:25:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:25:28 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-20 14:25:28.451(Timestamp)
2019-03-20 14:25:28 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 14:25:28 -<==    Updates: 1
2019-03-20 14:26:19 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:26:19 -HTTP METHOD : GET
2019-03-20 14:26:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:26:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@1ce18433]
2019-03-20 14:26:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-20 14:26:19 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:26:19 -<==      Total: 2
2019-03-20 14:26:19 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-20 14:26:19 -==> Parameters: 
2019-03-20 14:26:19 -<==      Total: 1
2019-03-20 14:26:19 -耗时 : 92
2019-03-20 14:26:19 -返回值 : com.bootdo.common.utils.PageUtils@7dc6ab4e
2019-03-20 14:26:20 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:26:20 -HTTP METHOD : GET
2019-03-20 14:26:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:26:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@47fe6756]
2019-03-20 14:26:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:26:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:26:20 -<==      Total: 10
2019-03-20 14:26:20 -==>  Preparing: select count(*) from elec 
2019-03-20 14:26:20 -==> Parameters: 
2019-03-20 14:26:20 -<==      Total: 1
2019-03-20 14:26:20 -耗时 : 28
2019-03-20 14:26:20 -返回值 : com.bootdo.common.utils.PageUtils@1cd363f7
2019-03-20 14:26:21 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:26:21 -HTTP METHOD : GET
2019-03-20 14:26:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:26:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@1cc6b418]
2019-03-20 14:26:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-20 14:26:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:26:21 -<==      Total: 2
2019-03-20 14:26:21 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-20 14:26:21 -==> Parameters: 
2019-03-20 14:26:21 -<==      Total: 1
2019-03-20 14:26:21 -耗时 : 11
2019-03-20 14:26:21 -返回值 : com.bootdo.common.utils.PageUtils@4d470727
2019-03-20 14:26:22 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:26:22 -HTTP METHOD : GET
2019-03-20 14:26:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:26:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3c2d6cda]
2019-03-20 14:26:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:26:22 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:26:22 -<==      Total: 10
2019-03-20 14:26:22 -==>  Preparing: select count(*) from elec 
2019-03-20 14:26:22 -==> Parameters: 
2019-03-20 14:26:22 -<==      Total: 1
2019-03-20 14:26:22 -耗时 : 12
2019-03-20 14:26:22 -返回值 : com.bootdo.common.utils.PageUtils@7dfae141
2019-03-20 14:26:23 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:26:23 -HTTP METHOD : GET
2019-03-20 14:26:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:26:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@dcf25aa]
2019-03-20 14:26:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-20 14:26:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:26:23 -<==      Total: 2
2019-03-20 14:26:23 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-20 14:26:23 -==> Parameters: 
2019-03-20 14:26:23 -<==      Total: 1
2019-03-20 14:26:23 -耗时 : 10
2019-03-20 14:26:23 -返回值 : com.bootdo.common.utils.PageUtils@2a614f4c
2019-03-20 14:26:23 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:26:23 -HTTP METHOD : GET
2019-03-20 14:26:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:26:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@6e6277c6]
2019-03-20 14:26:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:26:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:26:23 -<==      Total: 10
2019-03-20 14:26:23 -==>  Preparing: select count(*) from elec 
2019-03-20 14:26:23 -==> Parameters: 
2019-03-20 14:26:23 -<==      Total: 1
2019-03-20 14:26:23 -耗时 : 14
2019-03-20 14:26:23 -返回值 : com.bootdo.common.utils.PageUtils@212d29a
2019-03-20 14:26:34 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:26:34 -HTTP METHOD : GET
2019-03-20 14:26:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:26:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@13b913d9]
2019-03-20 14:26:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-20 14:26:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:26:34 -<==      Total: 2
2019-03-20 14:26:34 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-20 14:26:34 -==> Parameters: 
2019-03-20 14:26:34 -<==      Total: 1
2019-03-20 14:26:34 -耗时 : 11
2019-03-20 14:26:34 -返回值 : com.bootdo.common.utils.PageUtils@306f0d8
2019-03-20 14:26:34 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:26:34 -HTTP METHOD : GET
2019-03-20 14:26:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:26:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@35cd8b34]
2019-03-20 14:26:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:26:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:26:34 -<==      Total: 10
2019-03-20 14:26:34 -==>  Preparing: select count(*) from elec 
2019-03-20 14:26:34 -==> Parameters: 
2019-03-20 14:26:34 -<==      Total: 1
2019-03-20 14:26:34 -耗时 : 15
2019-03-20 14:26:34 -返回值 : com.bootdo.common.utils.PageUtils@51eb9fcb
2019-03-20 14:26:35 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:26:35 -HTTP METHOD : GET
2019-03-20 14:26:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:26:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@1258b830]
2019-03-20 14:26:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-20 14:26:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:26:35 -<==      Total: 2
2019-03-20 14:26:35 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-20 14:26:35 -==> Parameters: 
2019-03-20 14:26:35 -<==      Total: 1
2019-03-20 14:26:35 -耗时 : 13
2019-03-20 14:26:35 -返回值 : com.bootdo.common.utils.PageUtils@122748f4
2019-03-20 14:26:39 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:26:39 -HTTP METHOD : GET
2019-03-20 14:26:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:26:39 -参数 : []
2019-03-20 14:26:39 -耗时 : 0
2019-03-20 14:26:39 -返回值 : elec/elec/add
2019-03-20 14:26:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:26:40 -HTTP METHOD : GET
2019-03-20 14:26:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:26:40 -参数 : [userType]
2019-03-20 14:26:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:26:40 -==> Parameters: userType(String)
2019-03-20 14:26:40 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:26:40 -HTTP METHOD : GET
2019-03-20 14:26:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:26:40 -参数 : [elecType]
2019-03-20 14:26:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:26:40 -==> Parameters: elecType(String)
2019-03-20 14:26:40 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:26:40 -HTTP METHOD : GET
2019-03-20 14:26:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:26:40 -参数 : [userState]
2019-03-20 14:26:40 -<==      Total: 2
2019-03-20 14:26:40 -耗时 : 9
2019-03-20 14:26:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:26:40 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:26:40 -==> Parameters: userState(String)
2019-03-20 14:26:40 -<==      Total: 2
2019-03-20 14:26:40 -耗时 : 6
2019-03-20 14:26:40 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:26:40 -<==      Total: 2
2019-03-20 14:26:40 -耗时 : 21
2019-03-20 14:26:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:26:54 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:26:54 -HTTP METHOD : GET
2019-03-20 14:26:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:26:54 -参数 : []
2019-03-20 14:26:54 -耗时 : 0
2019-03-20 14:26:54 -返回值 : elec/elec/add
2019-03-20 14:26:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:26:55 -HTTP METHOD : GET
2019-03-20 14:26:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:26:55 -参数 : [userType]
2019-03-20 14:26:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:26:55 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:26:55 -HTTP METHOD : GET
2019-03-20 14:26:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:26:55 -参数 : [elecType]
2019-03-20 14:26:55 -==> Parameters: userType(String)
2019-03-20 14:26:55 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:26:55 -HTTP METHOD : GET
2019-03-20 14:26:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:26:55 -参数 : [userState]
2019-03-20 14:26:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:26:55 -==> Parameters: userState(String)
2019-03-20 14:26:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:26:55 -==> Parameters: elecType(String)
2019-03-20 14:26:55 -<==      Total: 2
2019-03-20 14:26:55 -耗时 : 13
2019-03-20 14:26:55 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:26:55 -<==      Total: 2
2019-03-20 14:26:55 -耗时 : 26
2019-03-20 14:26:55 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:26:55 -<==      Total: 2
2019-03-20 14:26:55 -耗时 : 113
2019-03-20 14:26:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:27:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 14:27:04 -HTTP METHOD : GET
2019-03-20 14:27:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 14:27:04 -参数 : []
2019-03-20 14:27:04 -耗时 : 1
2019-03-20 14:27:04 -返回值 : system/dept/deptTree
2019-03-20 14:27:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 14:27:05 -HTTP METHOD : GET
2019-03-20 14:27:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 14:27:05 -参数 : []
2019-03-20 14:27:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 14:27:05 -==> Parameters: 
2019-03-20 14:27:05 -<==      Total: 3
2019-03-20 14:27:05 -耗时 : 48
2019-03-20 14:27:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 14:35:46 -请求地址 : http://localhost:8081/index
2019-03-20 14:35:46 -HTTP METHOD : GET
2019-03-20 14:35:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:35:46 -参数 : [{}]
2019-03-20 14:35:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:35:46 -==> Parameters: 1(Long)
2019-03-20 14:35:46 -<==      Total: 46
2019-03-20 14:35:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:35:46 -==> Parameters: 138(Long)
2019-03-20 14:35:46 -<==      Total: 1
2019-03-20 14:35:46 -耗时 : 241
2019-03-20 14:35:46 -返回值 : index_v1
2019-03-20 14:35:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:35:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 241(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:35:46.96(Timestamp)
2019-03-20 14:35:47 -<==    Updates: 1
2019-03-20 14:35:47 -请求地址 : http://localhost:8081/main
2019-03-20 14:35:47 -HTTP METHOD : GET
2019-03-20 14:35:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:35:47 -参数 : []
2019-03-20 14:35:47 -耗时 : 1
2019-03-20 14:35:47 -返回值 : main
2019-03-20 14:35:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:35:47 -HTTP METHOD : GET
2019-03-20 14:35:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:35:47 -参数 : []
2019-03-20 14:35:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:35:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:35:47 -<==      Total: 0
2019-03-20 14:35:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:35:47 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:35:47 -<==      Total: 1
2019-03-20 14:35:47 -耗时 : 52
2019-03-20 14:35:47 -返回值 : com.bootdo.common.utils.PageUtils@11aacdb8
2019-03-20 14:35:47 -请求地址 : http://localhost:8081/main
2019-03-20 14:35:47 -HTTP METHOD : GET
2019-03-20 14:35:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:35:47 -参数 : []
2019-03-20 14:35:47 -耗时 : 0
2019-03-20 14:35:47 -返回值 : main
2019-03-20 14:35:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 14:35:49 -==> Parameters: 1(Long)
2019-03-20 14:35:49 -<==      Total: 90
2019-03-20 14:35:49 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:35:49 -HTTP METHOD : GET
2019-03-20 14:35:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:35:49 -参数 : []
2019-03-20 14:35:49 -耗时 : 1
2019-03-20 14:35:49 -返回值 : elec/elec/elec
2019-03-20 14:35:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:35:49 -HTTP METHOD : GET
2019-03-20 14:35:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:35:49 -参数 : [userType]
2019-03-20 14:35:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:35:49 -==> Parameters: userType(String)
2019-03-20 14:35:49 -<==      Total: 2
2019-03-20 14:35:49 -耗时 : 4
2019-03-20 14:35:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:35:49 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:35:49 -HTTP METHOD : GET
2019-03-20 14:35:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:35:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2d8edcb]
2019-03-20 14:35:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:35:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:35:49 -<==      Total: 10
2019-03-20 14:35:49 -==>  Preparing: select count(*) from elec 
2019-03-20 14:35:49 -==> Parameters: 
2019-03-20 14:35:49 -<==      Total: 1
2019-03-20 14:35:49 -耗时 : 65
2019-03-20 14:35:49 -返回值 : com.bootdo.common.utils.PageUtils@450653d5
2019-03-20 14:35:54 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:35:54 -HTTP METHOD : GET
2019-03-20 14:35:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:35:54 -参数 : []
2019-03-20 14:35:54 -耗时 : 0
2019-03-20 14:35:54 -返回值 : elec/elec/add
2019-03-20 14:35:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:35:54 -HTTP METHOD : GET
2019-03-20 14:35:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:35:54 -参数 : [userType]
2019-03-20 14:35:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:35:54 -==> Parameters: userType(String)
2019-03-20 14:35:54 -<==      Total: 2
2019-03-20 14:35:54 -耗时 : 4
2019-03-20 14:35:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:35:54 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:35:54 -HTTP METHOD : GET
2019-03-20 14:35:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:35:54 -参数 : [elecType]
2019-03-20 14:35:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:35:54 -==> Parameters: elecType(String)
2019-03-20 14:35:54 -<==      Total: 2
2019-03-20 14:35:54 -耗时 : 16
2019-03-20 14:35:54 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:35:54 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:35:54 -HTTP METHOD : GET
2019-03-20 14:35:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:35:54 -参数 : [userState]
2019-03-20 14:35:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:35:54 -==> Parameters: userState(String)
2019-03-20 14:35:54 -<==      Total: 2
2019-03-20 14:35:54 -耗时 : 4
2019-03-20 14:35:54 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:36:16 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 14:37:01 -请求地址 : http://localhost:8081/index
2019-03-20 14:37:01 -HTTP METHOD : GET
2019-03-20 14:37:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:37:01 -参数 : [{}]
2019-03-20 14:37:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:37:01 -==> Parameters: 1(Long)
2019-03-20 14:37:01 -<==      Total: 46
2019-03-20 14:37:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:37:01 -==> Parameters: 138(Long)
2019-03-20 14:37:01 -<==      Total: 1
2019-03-20 14:37:01 -耗时 : 28
2019-03-20 14:37:01 -返回值 : index_v1
2019-03-20 14:37:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:37:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:37:01.576(Timestamp)
2019-03-20 14:37:01 -<==    Updates: 1
2019-03-20 14:37:01 -请求地址 : http://localhost:8081/main
2019-03-20 14:37:01 -HTTP METHOD : GET
2019-03-20 14:37:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:37:01 -参数 : []
2019-03-20 14:37:01 -耗时 : 0
2019-03-20 14:37:01 -返回值 : main
2019-03-20 14:37:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:37:02 -HTTP METHOD : GET
2019-03-20 14:37:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:37:02 -参数 : []
2019-03-20 14:37:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:37:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:37:02 -<==      Total: 0
2019-03-20 14:37:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:37:02 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:37:02 -<==      Total: 1
2019-03-20 14:37:02 -耗时 : 6
2019-03-20 14:37:02 -返回值 : com.bootdo.common.utils.PageUtils@2204d06c
2019-03-20 14:37:02 -请求地址 : http://localhost:8081/main
2019-03-20 14:37:02 -HTTP METHOD : GET
2019-03-20 14:37:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:37:02 -参数 : []
2019-03-20 14:37:02 -耗时 : 0
2019-03-20 14:37:02 -返回值 : main
2019-03-20 14:37:03 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:37:03 -HTTP METHOD : GET
2019-03-20 14:37:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:37:03 -参数 : []
2019-03-20 14:37:03 -耗时 : 1
2019-03-20 14:37:03 -返回值 : elec/elec/elec
2019-03-20 14:37:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:37:04 -HTTP METHOD : GET
2019-03-20 14:37:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:37:04 -参数 : [userType]
2019-03-20 14:37:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:37:04 -==> Parameters: userType(String)
2019-03-20 14:37:04 -<==      Total: 2
2019-03-20 14:37:04 -耗时 : 4
2019-03-20 14:37:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:37:04 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:37:04 -HTTP METHOD : GET
2019-03-20 14:37:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:37:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@6f8d5542]
2019-03-20 14:37:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:37:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:37:04 -<==      Total: 10
2019-03-20 14:37:04 -==>  Preparing: select count(*) from elec 
2019-03-20 14:37:04 -==> Parameters: 
2019-03-20 14:37:04 -<==      Total: 1
2019-03-20 14:37:04 -耗时 : 14
2019-03-20 14:37:04 -返回值 : com.bootdo.common.utils.PageUtils@422bc94
2019-03-20 14:37:08 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:37:08 -HTTP METHOD : GET
2019-03-20 14:37:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:37:08 -参数 : []
2019-03-20 14:37:08 -耗时 : 0
2019-03-20 14:37:08 -返回值 : elec/elec/add
2019-03-20 14:37:08 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:37:08 -HTTP METHOD : GET
2019-03-20 14:37:08 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:37:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:37:08 -HTTP METHOD : GET
2019-03-20 14:37:08 -参数 : [userState]
2019-03-20 14:37:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:37:08 -参数 : [elecType]
2019-03-20 14:37:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:37:08 -==> Parameters: userState(String)
2019-03-20 14:37:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:37:08 -==> Parameters: elecType(String)
2019-03-20 14:37:08 -<==      Total: 2
2019-03-20 14:37:08 -耗时 : 4
2019-03-20 14:37:08 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:37:08 -<==      Total: 2
2019-03-20 14:37:08 -耗时 : 9
2019-03-20 14:37:08 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:37:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:37:08 -HTTP METHOD : GET
2019-03-20 14:37:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:37:08 -参数 : [userType]
2019-03-20 14:37:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:37:08 -==> Parameters: userType(String)
2019-03-20 14:37:08 -<==      Total: 2
2019-03-20 14:37:08 -耗时 : 5
2019-03-20 14:37:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:38:53 -请求地址 : http://localhost:8081/index
2019-03-20 14:38:53 -HTTP METHOD : GET
2019-03-20 14:38:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:38:53 -参数 : [{}]
2019-03-20 14:38:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:38:53 -==> Parameters: 1(Long)
2019-03-20 14:38:53 -<==      Total: 46
2019-03-20 14:38:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:38:53 -==> Parameters: 138(Long)
2019-03-20 14:38:53 -<==      Total: 1
2019-03-20 14:38:53 -耗时 : 22
2019-03-20 14:38:53 -返回值 : index_v1
2019-03-20 14:38:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:38:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:38:53.513(Timestamp)
2019-03-20 14:38:53 -<==    Updates: 1
2019-03-20 14:38:53 -请求地址 : http://localhost:8081/main
2019-03-20 14:38:53 -HTTP METHOD : GET
2019-03-20 14:38:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:38:53 -参数 : []
2019-03-20 14:38:53 -耗时 : 0
2019-03-20 14:38:53 -返回值 : main
2019-03-20 14:38:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:38:54 -HTTP METHOD : GET
2019-03-20 14:38:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:38:54 -参数 : []
2019-03-20 14:38:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:38:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:38:54 -<==      Total: 0
2019-03-20 14:38:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:38:54 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:38:54 -<==      Total: 1
2019-03-20 14:38:54 -耗时 : 7
2019-03-20 14:38:54 -返回值 : com.bootdo.common.utils.PageUtils@50c2cc9d
2019-03-20 14:38:54 -请求地址 : http://localhost:8081/main
2019-03-20 14:38:54 -HTTP METHOD : GET
2019-03-20 14:38:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:38:54 -参数 : []
2019-03-20 14:38:54 -耗时 : 1
2019-03-20 14:38:54 -返回值 : main
2019-03-20 14:38:55 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 14:38:55 -HTTP METHOD : GET
2019-03-20 14:38:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 14:38:55 -参数 : []
2019-03-20 14:38:55 -耗时 : 0
2019-03-20 14:38:55 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 14:38:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:38:57 -HTTP METHOD : GET
2019-03-20 14:38:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:38:57 -参数 : [userType]
2019-03-20 14:38:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:38:57 -==> Parameters: userType(String)
2019-03-20 14:38:57 -<==      Total: 2
2019-03-20 14:38:57 -耗时 : 4
2019-03-20 14:38:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:38:57 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 14:38:57 -HTTP METHOD : GET
2019-03-20 14:38:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 14:38:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 14:38:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 14:38:57 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:38:57 -<==      Total: 4
2019-03-20 14:38:57 -==>  Preparing: select count(*) from elec_log 
2019-03-20 14:38:57 -==> Parameters: 
2019-03-20 14:38:57 -<==      Total: 1
2019-03-20 14:38:57 -耗时 : 381
2019-03-20 14:38:57 -返回值 : com.bootdo.common.utils.PageUtils@373d3f49
2019-03-20 14:39:00 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:39:00 -HTTP METHOD : GET
2019-03-20 14:39:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:39:00 -参数 : []
2019-03-20 14:39:00 -耗时 : 1
2019-03-20 14:39:00 -返回值 : elec/elec/elec
2019-03-20 14:39:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:39:00 -HTTP METHOD : GET
2019-03-20 14:39:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:39:00 -参数 : [userType]
2019-03-20 14:39:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:39:00 -==> Parameters: userType(String)
2019-03-20 14:39:00 -<==      Total: 2
2019-03-20 14:39:00 -耗时 : 4
2019-03-20 14:39:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:39:00 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:39:00 -HTTP METHOD : GET
2019-03-20 14:39:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:39:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3e25cc21]
2019-03-20 14:39:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:39:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:39:00 -<==      Total: 10
2019-03-20 14:39:00 -==>  Preparing: select count(*) from elec 
2019-03-20 14:39:00 -==> Parameters: 
2019-03-20 14:39:00 -<==      Total: 1
2019-03-20 14:39:00 -耗时 : 9
2019-03-20 14:39:00 -返回值 : com.bootdo.common.utils.PageUtils@9c96ecd
2019-03-20 14:39:05 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:39:05 -HTTP METHOD : GET
2019-03-20 14:39:05 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:39:05 -参数 : []
2019-03-20 14:39:05 -耗时 : 1
2019-03-20 14:39:05 -返回值 : elec/elec/add
2019-03-20 14:39:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:39:05 -HTTP METHOD : GET
2019-03-20 14:39:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:39:05 -参数 : [userType]
2019-03-20 14:39:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:39:05 -==> Parameters: userType(String)
2019-03-20 14:39:05 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:39:05 -HTTP METHOD : GET
2019-03-20 14:39:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:39:05 -参数 : [userState]
2019-03-20 14:39:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:39:05 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:39:05 -HTTP METHOD : GET
2019-03-20 14:39:05 -==> Parameters: userState(String)
2019-03-20 14:39:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:39:05 -参数 : [elecType]
2019-03-20 14:39:05 -<==      Total: 2
2019-03-20 14:39:05 -耗时 : 12
2019-03-20 14:39:05 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:39:05 -<==      Total: 2
2019-03-20 14:39:05 -耗时 : 18
2019-03-20 14:39:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:39:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:39:05 -==> Parameters: elecType(String)
2019-03-20 14:39:05 -<==      Total: 2
2019-03-20 14:39:05 -耗时 : 18
2019-03-20 14:39:05 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:42:05 -请求地址 : http://localhost:8081/index
2019-03-20 14:42:05 -HTTP METHOD : GET
2019-03-20 14:42:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:42:05 -参数 : [{}]
2019-03-20 14:42:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:42:06 -==> Parameters: 1(Long)
2019-03-20 14:42:06 -<==      Total: 46
2019-03-20 14:42:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:42:06 -==> Parameters: 138(Long)
2019-03-20 14:42:06 -<==      Total: 1
2019-03-20 14:42:06 -耗时 : 99
2019-03-20 14:42:06 -返回值 : index_v1
2019-03-20 14:42:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:42:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 99(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:42:06.096(Timestamp)
2019-03-20 14:42:06 -<==    Updates: 1
2019-03-20 14:42:06 -请求地址 : http://localhost:8081/main
2019-03-20 14:42:06 -HTTP METHOD : GET
2019-03-20 14:42:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:42:06 -参数 : []
2019-03-20 14:42:06 -耗时 : 1
2019-03-20 14:42:06 -返回值 : main
2019-03-20 14:42:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:42:06 -HTTP METHOD : GET
2019-03-20 14:42:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:42:06 -参数 : []
2019-03-20 14:42:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:42:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:42:06 -请求地址 : http://localhost:8081/main
2019-03-20 14:42:06 -HTTP METHOD : GET
2019-03-20 14:42:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:42:06 -参数 : []
2019-03-20 14:42:06 -耗时 : 0
2019-03-20 14:42:06 -返回值 : main
2019-03-20 14:42:06 -<==      Total: 0
2019-03-20 14:42:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:42:06 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:42:06 -<==      Total: 1
2019-03-20 14:42:06 -耗时 : 78
2019-03-20 14:42:06 -返回值 : com.bootdo.common.utils.PageUtils@282ec09d
2019-03-20 14:42:08 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:42:08 -HTTP METHOD : GET
2019-03-20 14:42:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:42:08 -参数 : []
2019-03-20 14:42:08 -耗时 : 1
2019-03-20 14:42:08 -返回值 : elec/elec/elec
2019-03-20 14:42:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:42:08 -HTTP METHOD : GET
2019-03-20 14:42:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:42:08 -参数 : [userType]
2019-03-20 14:42:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:42:08 -==> Parameters: userType(String)
2019-03-20 14:42:08 -<==      Total: 2
2019-03-20 14:42:08 -耗时 : 3
2019-03-20 14:42:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:42:08 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:42:08 -HTTP METHOD : GET
2019-03-20 14:42:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:42:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@33ec2d80]
2019-03-20 14:42:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:42:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:42:08 -<==      Total: 10
2019-03-20 14:42:08 -==>  Preparing: select count(*) from elec 
2019-03-20 14:42:08 -==> Parameters: 
2019-03-20 14:42:08 -<==      Total: 1
2019-03-20 14:42:08 -耗时 : 14
2019-03-20 14:42:08 -返回值 : com.bootdo.common.utils.PageUtils@2717d236
2019-03-20 14:42:16 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:42:16 -HTTP METHOD : GET
2019-03-20 14:42:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:42:16 -参数 : []
2019-03-20 14:42:16 -耗时 : 0
2019-03-20 14:42:16 -返回值 : elec/elec/add
2019-03-20 14:42:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:42:16 -HTTP METHOD : GET
2019-03-20 14:42:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:42:16 -参数 : [userType]
2019-03-20 14:42:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:42:16 -==> Parameters: userType(String)
2019-03-20 14:42:16 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:42:16 -HTTP METHOD : GET
2019-03-20 14:42:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:42:16 -参数 : [userState]
2019-03-20 14:42:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:42:16 -==> Parameters: userState(String)
2019-03-20 14:42:16 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:42:16 -HTTP METHOD : GET
2019-03-20 14:42:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:42:16 -参数 : [elecType]
2019-03-20 14:42:16 -<==      Total: 2
2019-03-20 14:42:16 -耗时 : 4
2019-03-20 14:42:16 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:42:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:42:16 -==> Parameters: elecType(String)
2019-03-20 14:42:16 -<==      Total: 2
2019-03-20 14:42:16 -耗时 : 16
2019-03-20 14:42:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:42:16 -<==      Total: 2
2019-03-20 14:42:16 -耗时 : 11
2019-03-20 14:42:16 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:42:45 -请求地址 : http://localhost:8081/index
2019-03-20 14:42:45 -HTTP METHOD : GET
2019-03-20 14:42:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:42:45 -参数 : [{}]
2019-03-20 14:42:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:42:45 -==> Parameters: 1(Long)
2019-03-20 14:42:45 -<==      Total: 46
2019-03-20 14:42:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:42:45 -==> Parameters: 138(Long)
2019-03-20 14:42:45 -<==      Total: 1
2019-03-20 14:42:45 -耗时 : 19
2019-03-20 14:42:45 -返回值 : index_v1
2019-03-20 14:42:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:42:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:42:45.099(Timestamp)
2019-03-20 14:42:45 -<==    Updates: 1
2019-03-20 14:42:45 -请求地址 : http://localhost:8081/main
2019-03-20 14:42:45 -HTTP METHOD : GET
2019-03-20 14:42:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:42:45 -参数 : []
2019-03-20 14:42:45 -耗时 : 1
2019-03-20 14:42:45 -返回值 : main
2019-03-20 14:42:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:42:45 -HTTP METHOD : GET
2019-03-20 14:42:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:42:45 -参数 : []
2019-03-20 14:42:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:42:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:42:45 -<==      Total: 0
2019-03-20 14:42:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:42:45 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:42:45 -<==      Total: 1
2019-03-20 14:42:45 -耗时 : 6
2019-03-20 14:42:45 -返回值 : com.bootdo.common.utils.PageUtils@3493c2d8
2019-03-20 14:42:45 -请求地址 : http://localhost:8081/main
2019-03-20 14:42:45 -HTTP METHOD : GET
2019-03-20 14:42:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:42:45 -参数 : []
2019-03-20 14:42:45 -耗时 : 1
2019-03-20 14:42:45 -返回值 : main
2019-03-20 14:42:46 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:42:46 -HTTP METHOD : GET
2019-03-20 14:42:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:42:46 -参数 : []
2019-03-20 14:42:46 -耗时 : 1
2019-03-20 14:42:46 -返回值 : elec/elec/elec
2019-03-20 14:42:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:42:47 -HTTP METHOD : GET
2019-03-20 14:42:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:42:47 -参数 : [userType]
2019-03-20 14:42:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:42:47 -==> Parameters: userType(String)
2019-03-20 14:42:47 -<==      Total: 2
2019-03-20 14:42:47 -耗时 : 8
2019-03-20 14:42:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:42:47 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:42:47 -HTTP METHOD : GET
2019-03-20 14:42:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:42:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@6763ff67]
2019-03-20 14:42:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:42:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:42:47 -<==      Total: 10
2019-03-20 14:42:47 -==>  Preparing: select count(*) from elec 
2019-03-20 14:42:47 -==> Parameters: 
2019-03-20 14:42:47 -<==      Total: 1
2019-03-20 14:42:47 -耗时 : 9
2019-03-20 14:42:47 -返回值 : com.bootdo.common.utils.PageUtils@6a794c1a
2019-03-20 14:42:51 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:42:51 -HTTP METHOD : GET
2019-03-20 14:42:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:42:51 -参数 : []
2019-03-20 14:42:51 -耗时 : 1
2019-03-20 14:42:51 -返回值 : elec/elec/add
2019-03-20 14:42:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:42:51 -HTTP METHOD : GET
2019-03-20 14:42:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:42:51 -参数 : [userType]
2019-03-20 14:42:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:42:51 -==> Parameters: userType(String)
2019-03-20 14:42:51 -<==      Total: 2
2019-03-20 14:42:51 -耗时 : 4
2019-03-20 14:42:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:42:51 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:42:51 -HTTP METHOD : GET
2019-03-20 14:42:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:42:51 -参数 : [elecType]
2019-03-20 14:42:51 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:42:51 -HTTP METHOD : GET
2019-03-20 14:42:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:42:51 -参数 : [userState]
2019-03-20 14:42:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:42:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:42:51 -==> Parameters: elecType(String)
2019-03-20 14:42:51 -==> Parameters: userState(String)
2019-03-20 14:42:51 -<==      Total: 2
2019-03-20 14:42:51 -耗时 : 5
2019-03-20 14:42:51 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:42:51 -<==      Total: 2
2019-03-20 14:42:51 -耗时 : 8
2019-03-20 14:42:51 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:44:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 287]
2019-03-20 14:46:06 -请求地址 : http://localhost:8081/index
2019-03-20 14:46:06 -HTTP METHOD : GET
2019-03-20 14:46:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:46:06 -参数 : [{}]
2019-03-20 14:46:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:46:06 -==> Parameters: 1(Long)
2019-03-20 14:46:06 -<==      Total: 46
2019-03-20 14:46:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:46:06 -==> Parameters: 138(Long)
2019-03-20 14:46:06 -<==      Total: 1
2019-03-20 14:46:06 -耗时 : 21
2019-03-20 14:46:06 -返回值 : index_v1
2019-03-20 14:46:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:46:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:46:06.958(Timestamp)
2019-03-20 14:46:07 -请求地址 : http://localhost:8081/main
2019-03-20 14:46:07 -HTTP METHOD : GET
2019-03-20 14:46:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:46:07 -参数 : []
2019-03-20 14:46:07 -耗时 : 1
2019-03-20 14:46:07 -返回值 : main
2019-03-20 14:46:07 -<==    Updates: 1
2019-03-20 14:46:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:46:07 -HTTP METHOD : GET
2019-03-20 14:46:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:46:07 -参数 : []
2019-03-20 14:46:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:46:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:46:07 -<==      Total: 0
2019-03-20 14:46:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:46:07 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:46:07 -<==      Total: 1
2019-03-20 14:46:07 -耗时 : 8
2019-03-20 14:46:07 -返回值 : com.bootdo.common.utils.PageUtils@1afca73e
2019-03-20 14:46:07 -请求地址 : http://localhost:8081/main
2019-03-20 14:46:07 -HTTP METHOD : GET
2019-03-20 14:46:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:46:07 -参数 : []
2019-03-20 14:46:07 -耗时 : 1
2019-03-20 14:46:07 -返回值 : main
2019-03-20 14:46:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 14:46:10 -==> Parameters: 1(Long)
2019-03-20 14:46:10 -<==      Total: 90
2019-03-20 14:46:10 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:46:10 -HTTP METHOD : GET
2019-03-20 14:46:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:46:10 -参数 : []
2019-03-20 14:46:10 -耗时 : 0
2019-03-20 14:46:10 -返回值 : elec/elec/elec
2019-03-20 14:46:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:46:11 -HTTP METHOD : GET
2019-03-20 14:46:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:46:11 -参数 : [userType]
2019-03-20 14:46:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:46:11 -==> Parameters: userType(String)
2019-03-20 14:46:11 -<==      Total: 2
2019-03-20 14:46:11 -耗时 : 5
2019-03-20 14:46:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:46:11 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:46:11 -HTTP METHOD : GET
2019-03-20 14:46:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:46:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1d6eaac]
2019-03-20 14:46:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:46:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:46:11 -<==      Total: 10
2019-03-20 14:46:11 -==>  Preparing: select count(*) from elec 
2019-03-20 14:46:11 -==> Parameters: 
2019-03-20 14:46:11 -<==      Total: 1
2019-03-20 14:46:11 -耗时 : 14
2019-03-20 14:46:11 -返回值 : com.bootdo.common.utils.PageUtils@684a1094
2019-03-20 14:46:15 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:46:15 -HTTP METHOD : GET
2019-03-20 14:46:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:46:15 -参数 : []
2019-03-20 14:46:15 -耗时 : 1
2019-03-20 14:46:15 -返回值 : elec/elec/add
2019-03-20 14:46:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:46:15 -HTTP METHOD : GET
2019-03-20 14:46:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:46:15 -参数 : [userType]
2019-03-20 14:46:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:46:15 -==> Parameters: userType(String)
2019-03-20 14:46:15 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:46:15 -HTTP METHOD : GET
2019-03-20 14:46:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:46:15 -参数 : [userState]
2019-03-20 14:46:15 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:46:15 -HTTP METHOD : GET
2019-03-20 14:46:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:46:15 -参数 : [elecType]
2019-03-20 14:46:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:46:15 -<==      Total: 2
2019-03-20 14:46:15 -==> Parameters: userState(String)
2019-03-20 14:46:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:46:15 -耗时 : 4
2019-03-20 14:46:15 -==> Parameters: elecType(String)
2019-03-20 14:46:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:46:15 -<==      Total: 2
2019-03-20 14:46:15 -耗时 : 4
2019-03-20 14:46:15 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:46:15 -<==      Total: 2
2019-03-20 14:46:15 -耗时 : 7
2019-03-20 14:46:15 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:47:09 -请求地址 : http://localhost:8081/index
2019-03-20 14:47:09 -HTTP METHOD : GET
2019-03-20 14:47:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:47:09 -参数 : [{}]
2019-03-20 14:47:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:47:09 -==> Parameters: 1(Long)
2019-03-20 14:47:09 -<==      Total: 46
2019-03-20 14:47:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:47:09 -==> Parameters: 138(Long)
2019-03-20 14:47:09 -<==      Total: 1
2019-03-20 14:47:09 -耗时 : 18
2019-03-20 14:47:09 -返回值 : index_v1
2019-03-20 14:47:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:47:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:47:09.169(Timestamp)
2019-03-20 14:47:09 -<==    Updates: 1
2019-03-20 14:47:09 -请求地址 : http://localhost:8081/main
2019-03-20 14:47:09 -HTTP METHOD : GET
2019-03-20 14:47:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:47:09 -参数 : []
2019-03-20 14:47:09 -耗时 : 0
2019-03-20 14:47:09 -返回值 : main
2019-03-20 14:47:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:47:09 -HTTP METHOD : GET
2019-03-20 14:47:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:47:09 -参数 : []
2019-03-20 14:47:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:47:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:47:09 -<==      Total: 0
2019-03-20 14:47:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:47:09 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:47:09 -<==      Total: 1
2019-03-20 14:47:09 -耗时 : 7
2019-03-20 14:47:09 -返回值 : com.bootdo.common.utils.PageUtils@22017522
2019-03-20 14:47:09 -请求地址 : http://localhost:8081/main
2019-03-20 14:47:09 -HTTP METHOD : GET
2019-03-20 14:47:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:47:09 -参数 : []
2019-03-20 14:47:09 -耗时 : 0
2019-03-20 14:47:09 -返回值 : main
2019-03-20 14:47:11 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:47:11 -HTTP METHOD : GET
2019-03-20 14:47:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:47:11 -参数 : []
2019-03-20 14:47:11 -耗时 : 1
2019-03-20 14:47:11 -返回值 : elec/elec/elec
2019-03-20 14:47:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:47:11 -HTTP METHOD : GET
2019-03-20 14:47:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:47:11 -参数 : [userType]
2019-03-20 14:47:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:47:11 -==> Parameters: userType(String)
2019-03-20 14:47:11 -<==      Total: 2
2019-03-20 14:47:11 -耗时 : 3
2019-03-20 14:47:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:47:11 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:47:11 -HTTP METHOD : GET
2019-03-20 14:47:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:47:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@136bef62]
2019-03-20 14:47:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:47:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:47:11 -<==      Total: 10
2019-03-20 14:47:11 -==>  Preparing: select count(*) from elec 
2019-03-20 14:47:11 -==> Parameters: 
2019-03-20 14:47:11 -<==      Total: 1
2019-03-20 14:47:11 -耗时 : 8
2019-03-20 14:47:11 -返回值 : com.bootdo.common.utils.PageUtils@2ae626b8
2019-03-20 14:47:15 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:47:15 -HTTP METHOD : GET
2019-03-20 14:47:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:47:15 -参数 : []
2019-03-20 14:47:15 -耗时 : 0
2019-03-20 14:47:15 -返回值 : elec/elec/add
2019-03-20 14:47:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:47:15 -HTTP METHOD : GET
2019-03-20 14:47:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:47:15 -参数 : [userType]
2019-03-20 14:47:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:47:15 -==> Parameters: userType(String)
2019-03-20 14:47:15 -<==      Total: 2
2019-03-20 14:47:15 -耗时 : 3
2019-03-20 14:47:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:47:15 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:47:15 -HTTP METHOD : GET
2019-03-20 14:47:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:47:15 -参数 : [userState]
2019-03-20 14:47:15 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:47:15 -HTTP METHOD : GET
2019-03-20 14:47:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:47:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:47:15 -参数 : [elecType]
2019-03-20 14:47:15 -==> Parameters: userState(String)
2019-03-20 14:47:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:47:15 -==> Parameters: elecType(String)
2019-03-20 14:47:15 -<==      Total: 2
2019-03-20 14:47:15 -<==      Total: 2
2019-03-20 14:47:15 -耗时 : 6
2019-03-20 14:47:15 -耗时 : 9
2019-03-20 14:47:15 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:47:15 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:48:10 -请求地址 : http://localhost:8081/index
2019-03-20 14:48:10 -HTTP METHOD : GET
2019-03-20 14:48:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:48:10 -参数 : [{}]
2019-03-20 14:48:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:48:10 -==> Parameters: 1(Long)
2019-03-20 14:48:10 -<==      Total: 46
2019-03-20 14:48:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:48:10 -==> Parameters: 138(Long)
2019-03-20 14:48:10 -<==      Total: 1
2019-03-20 14:48:10 -耗时 : 18
2019-03-20 14:48:10 -返回值 : index_v1
2019-03-20 14:48:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:48:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:48:10.635(Timestamp)
2019-03-20 14:48:10 -请求地址 : http://localhost:8081/main
2019-03-20 14:48:10 -HTTP METHOD : GET
2019-03-20 14:48:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:48:10 -参数 : []
2019-03-20 14:48:10 -耗时 : 0
2019-03-20 14:48:10 -返回值 : main
2019-03-20 14:48:10 -<==    Updates: 1
2019-03-20 14:48:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:48:11 -HTTP METHOD : GET
2019-03-20 14:48:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:48:11 -参数 : []
2019-03-20 14:48:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:48:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:48:11 -<==      Total: 0
2019-03-20 14:48:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:48:11 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:48:11 -<==      Total: 1
2019-03-20 14:48:11 -耗时 : 7
2019-03-20 14:48:11 -返回值 : com.bootdo.common.utils.PageUtils@497e0b54
2019-03-20 14:48:11 -请求地址 : http://localhost:8081/main
2019-03-20 14:48:11 -HTTP METHOD : GET
2019-03-20 14:48:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:48:11 -参数 : []
2019-03-20 14:48:11 -耗时 : 1
2019-03-20 14:48:11 -返回值 : main
2019-03-20 14:48:14 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:48:14 -HTTP METHOD : GET
2019-03-20 14:48:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:48:14 -参数 : []
2019-03-20 14:48:14 -耗时 : 0
2019-03-20 14:48:14 -返回值 : elec/elec/elec
2019-03-20 14:48:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:48:15 -HTTP METHOD : GET
2019-03-20 14:48:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:48:15 -参数 : [userType]
2019-03-20 14:48:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:48:15 -==> Parameters: userType(String)
2019-03-20 14:48:15 -<==      Total: 2
2019-03-20 14:48:15 -耗时 : 5
2019-03-20 14:48:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:48:15 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:48:15 -HTTP METHOD : GET
2019-03-20 14:48:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:48:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@43774426]
2019-03-20 14:48:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:48:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:48:15 -<==      Total: 10
2019-03-20 14:48:15 -==>  Preparing: select count(*) from elec 
2019-03-20 14:48:15 -==> Parameters: 
2019-03-20 14:48:15 -<==      Total: 1
2019-03-20 14:48:15 -耗时 : 8
2019-03-20 14:48:15 -返回值 : com.bootdo.common.utils.PageUtils@3059021a
2019-03-20 14:48:23 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:48:23 -HTTP METHOD : GET
2019-03-20 14:48:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:48:23 -参数 : []
2019-03-20 14:48:23 -耗时 : 0
2019-03-20 14:48:23 -返回值 : elec/elec/add
2019-03-20 14:48:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:48:24 -HTTP METHOD : GET
2019-03-20 14:48:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:48:24 -参数 : [userType]
2019-03-20 14:48:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:48:24 -==> Parameters: userType(String)
2019-03-20 14:48:24 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:48:24 -<==      Total: 2
2019-03-20 14:48:24 -HTTP METHOD : GET
2019-03-20 14:48:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:48:24 -参数 : [userState]
2019-03-20 14:48:24 -耗时 : 5
2019-03-20 14:48:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:48:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:48:24 -==> Parameters: userState(String)
2019-03-20 14:48:24 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:48:24 -HTTP METHOD : GET
2019-03-20 14:48:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:48:24 -参数 : [elecType]
2019-03-20 14:48:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:48:24 -==> Parameters: elecType(String)
2019-03-20 14:48:24 -<==      Total: 2
2019-03-20 14:48:24 -<==      Total: 2
2019-03-20 14:48:24 -耗时 : 10
2019-03-20 14:48:24 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:48:24 -耗时 : 7
2019-03-20 14:48:24 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:49:15 -请求地址 : http://localhost:8081/index
2019-03-20 14:49:15 -HTTP METHOD : GET
2019-03-20 14:49:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:49:15 -参数 : [{}]
2019-03-20 14:49:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:49:15 -==> Parameters: 1(Long)
2019-03-20 14:49:15 -<==      Total: 46
2019-03-20 14:49:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:49:15 -==> Parameters: 138(Long)
2019-03-20 14:49:15 -<==      Total: 1
2019-03-20 14:49:15 -耗时 : 17
2019-03-20 14:49:15 -返回值 : index_v1
2019-03-20 14:49:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:49:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:49:15.363(Timestamp)
2019-03-20 14:49:15 -请求地址 : http://localhost:8081/main
2019-03-20 14:49:15 -HTTP METHOD : GET
2019-03-20 14:49:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:49:15 -参数 : []
2019-03-20 14:49:15 -耗时 : 0
2019-03-20 14:49:15 -返回值 : main
2019-03-20 14:49:15 -<==    Updates: 1
2019-03-20 14:49:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:49:15 -HTTP METHOD : GET
2019-03-20 14:49:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:49:15 -参数 : []
2019-03-20 14:49:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:49:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:49:15 -<==      Total: 0
2019-03-20 14:49:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:49:15 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:49:15 -<==      Total: 1
2019-03-20 14:49:15 -耗时 : 8
2019-03-20 14:49:15 -返回值 : com.bootdo.common.utils.PageUtils@11272beb
2019-03-20 14:49:15 -请求地址 : http://localhost:8081/main
2019-03-20 14:49:15 -HTTP METHOD : GET
2019-03-20 14:49:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:49:15 -参数 : []
2019-03-20 14:49:15 -耗时 : 1
2019-03-20 14:49:15 -返回值 : main
2019-03-20 14:49:17 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:49:17 -HTTP METHOD : GET
2019-03-20 14:49:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:49:17 -参数 : []
2019-03-20 14:49:17 -耗时 : 1
2019-03-20 14:49:17 -返回值 : elec/elec/elec
2019-03-20 14:49:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:49:17 -HTTP METHOD : GET
2019-03-20 14:49:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:49:17 -参数 : [userType]
2019-03-20 14:49:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:49:17 -==> Parameters: userType(String)
2019-03-20 14:49:17 -<==      Total: 2
2019-03-20 14:49:17 -耗时 : 5
2019-03-20 14:49:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:49:17 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:49:17 -HTTP METHOD : GET
2019-03-20 14:49:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:49:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@29dba021]
2019-03-20 14:49:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:49:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:49:18 -<==      Total: 10
2019-03-20 14:49:18 -==>  Preparing: select count(*) from elec 
2019-03-20 14:49:18 -==> Parameters: 
2019-03-20 14:49:18 -<==      Total: 1
2019-03-20 14:49:18 -耗时 : 9
2019-03-20 14:49:18 -返回值 : com.bootdo.common.utils.PageUtils@5b57dee
2019-03-20 14:49:23 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:49:23 -HTTP METHOD : GET
2019-03-20 14:49:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:49:23 -参数 : []
2019-03-20 14:49:23 -耗时 : 1
2019-03-20 14:49:23 -返回值 : elec/elec/add
2019-03-20 14:49:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:49:24 -HTTP METHOD : GET
2019-03-20 14:49:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:49:24 -参数 : [userType]
2019-03-20 14:49:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:49:24 -==> Parameters: userType(String)
2019-03-20 14:49:24 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:49:24 -HTTP METHOD : GET
2019-03-20 14:49:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:49:24 -参数 : [userState]
2019-03-20 14:49:24 -<==      Total: 2
2019-03-20 14:49:24 -耗时 : 4
2019-03-20 14:49:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:49:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:49:24 -==> Parameters: userState(String)
2019-03-20 14:49:24 -<==      Total: 2
2019-03-20 14:49:24 -耗时 : 4
2019-03-20 14:49:24 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:49:24 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:49:24 -HTTP METHOD : GET
2019-03-20 14:49:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:49:24 -参数 : [elecType]
2019-03-20 14:49:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:49:24 -==> Parameters: elecType(String)
2019-03-20 14:49:24 -<==      Total: 2
2019-03-20 14:49:24 -耗时 : 3
2019-03-20 14:49:24 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:50:37 -请求地址 : http://localhost:8081/index
2019-03-20 14:50:37 -HTTP METHOD : GET
2019-03-20 14:50:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:50:37 -参数 : [{}]
2019-03-20 14:50:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:50:37 -==> Parameters: 1(Long)
2019-03-20 14:50:37 -<==      Total: 46
2019-03-20 14:50:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:50:37 -==> Parameters: 138(Long)
2019-03-20 14:50:37 -<==      Total: 1
2019-03-20 14:50:37 -耗时 : 17
2019-03-20 14:50:37 -返回值 : index_v1
2019-03-20 14:50:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:50:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:50:37.826(Timestamp)
2019-03-20 14:50:37 -请求地址 : http://localhost:8081/main
2019-03-20 14:50:37 -HTTP METHOD : GET
2019-03-20 14:50:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:50:37 -参数 : []
2019-03-20 14:50:37 -耗时 : 0
2019-03-20 14:50:37 -返回值 : main
2019-03-20 14:50:37 -<==    Updates: 1
2019-03-20 14:50:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:50:38 -HTTP METHOD : GET
2019-03-20 14:50:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:50:38 -参数 : []
2019-03-20 14:50:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:50:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:50:38 -<==      Total: 0
2019-03-20 14:50:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:50:38 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:50:38 -<==      Total: 1
2019-03-20 14:50:38 -耗时 : 8
2019-03-20 14:50:38 -返回值 : com.bootdo.common.utils.PageUtils@dabfeaf
2019-03-20 14:50:38 -请求地址 : http://localhost:8081/main
2019-03-20 14:50:38 -HTTP METHOD : GET
2019-03-20 14:50:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:50:38 -参数 : []
2019-03-20 14:50:38 -耗时 : 0
2019-03-20 14:50:38 -返回值 : main
2019-03-20 14:50:40 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:50:40 -HTTP METHOD : GET
2019-03-20 14:50:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:50:40 -参数 : []
2019-03-20 14:50:40 -耗时 : 1
2019-03-20 14:50:40 -返回值 : elec/elec/elec
2019-03-20 14:50:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:50:40 -HTTP METHOD : GET
2019-03-20 14:50:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:50:40 -参数 : [userType]
2019-03-20 14:50:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:50:40 -==> Parameters: userType(String)
2019-03-20 14:50:40 -<==      Total: 2
2019-03-20 14:50:40 -耗时 : 3
2019-03-20 14:50:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:50:40 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:50:40 -HTTP METHOD : GET
2019-03-20 14:50:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:50:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@7cce7958]
2019-03-20 14:50:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:50:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:50:40 -<==      Total: 10
2019-03-20 14:50:40 -==>  Preparing: select count(*) from elec 
2019-03-20 14:50:40 -==> Parameters: 
2019-03-20 14:50:40 -<==      Total: 1
2019-03-20 14:50:40 -耗时 : 30
2019-03-20 14:50:40 -返回值 : com.bootdo.common.utils.PageUtils@817c2df
2019-03-20 14:50:46 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:50:46 -HTTP METHOD : GET
2019-03-20 14:50:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:50:46 -参数 : []
2019-03-20 14:50:46 -耗时 : 1
2019-03-20 14:50:46 -返回值 : elec/elec/add
2019-03-20 14:50:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:50:46 -HTTP METHOD : GET
2019-03-20 14:50:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:50:46 -参数 : [userType]
2019-03-20 14:50:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:50:46 -==> Parameters: userType(String)
2019-03-20 14:50:46 -<==      Total: 2
2019-03-20 14:50:46 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:50:46 -HTTP METHOD : GET
2019-03-20 14:50:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:50:46 -参数 : [userState]
2019-03-20 14:50:46 -耗时 : 4
2019-03-20 14:50:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:50:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:50:46 -==> Parameters: userState(String)
2019-03-20 14:50:46 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:50:46 -HTTP METHOD : GET
2019-03-20 14:50:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:50:46 -参数 : [elecType]
2019-03-20 14:50:46 -<==      Total: 2
2019-03-20 14:50:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:50:46 -==> Parameters: elecType(String)
2019-03-20 14:50:46 -耗时 : 4
2019-03-20 14:50:46 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:50:46 -<==      Total: 2
2019-03-20 14:50:46 -耗时 : 8
2019-03-20 14:50:46 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:51:39 -请求地址 : http://localhost:8081/index
2019-03-20 14:51:39 -HTTP METHOD : GET
2019-03-20 14:51:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:51:39 -参数 : [{}]
2019-03-20 14:51:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:51:39 -==> Parameters: 1(Long)
2019-03-20 14:51:39 -<==      Total: 46
2019-03-20 14:51:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:51:39 -==> Parameters: 138(Long)
2019-03-20 14:51:39 -<==      Total: 1
2019-03-20 14:51:39 -耗时 : 20
2019-03-20 14:51:39 -返回值 : index_v1
2019-03-20 14:51:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:51:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:51:39.696(Timestamp)
2019-03-20 14:51:39 -<==    Updates: 1
2019-03-20 14:51:39 -请求地址 : http://localhost:8081/main
2019-03-20 14:51:39 -HTTP METHOD : GET
2019-03-20 14:51:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:51:39 -参数 : []
2019-03-20 14:51:39 -耗时 : 0
2019-03-20 14:51:39 -返回值 : main
2019-03-20 14:51:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:51:40 -HTTP METHOD : GET
2019-03-20 14:51:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:51:40 -参数 : []
2019-03-20 14:51:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:51:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:51:40 -<==      Total: 0
2019-03-20 14:51:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:51:40 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:51:40 -<==      Total: 1
2019-03-20 14:51:40 -耗时 : 6
2019-03-20 14:51:40 -返回值 : com.bootdo.common.utils.PageUtils@7c388e61
2019-03-20 14:51:40 -请求地址 : http://localhost:8081/main
2019-03-20 14:51:40 -HTTP METHOD : GET
2019-03-20 14:51:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:51:40 -参数 : []
2019-03-20 14:51:40 -耗时 : 0
2019-03-20 14:51:40 -返回值 : main
2019-03-20 14:51:41 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:51:41 -HTTP METHOD : GET
2019-03-20 14:51:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:51:41 -参数 : []
2019-03-20 14:51:41 -耗时 : 1
2019-03-20 14:51:41 -返回值 : elec/elec/elec
2019-03-20 14:51:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:51:41 -HTTP METHOD : GET
2019-03-20 14:51:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:51:41 -参数 : [userType]
2019-03-20 14:51:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:51:41 -==> Parameters: userType(String)
2019-03-20 14:51:41 -<==      Total: 2
2019-03-20 14:51:41 -耗时 : 4
2019-03-20 14:51:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:51:41 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:51:41 -HTTP METHOD : GET
2019-03-20 14:51:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:51:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@184886ac]
2019-03-20 14:51:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:51:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:51:41 -<==      Total: 10
2019-03-20 14:51:41 -==>  Preparing: select count(*) from elec 
2019-03-20 14:51:41 -==> Parameters: 
2019-03-20 14:51:41 -<==      Total: 1
2019-03-20 14:51:41 -耗时 : 9
2019-03-20 14:51:41 -返回值 : com.bootdo.common.utils.PageUtils@1061c802
2019-03-20 14:51:47 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:51:47 -HTTP METHOD : GET
2019-03-20 14:51:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:51:47 -参数 : []
2019-03-20 14:51:47 -耗时 : 0
2019-03-20 14:51:47 -返回值 : elec/elec/add
2019-03-20 14:51:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:51:47 -HTTP METHOD : GET
2019-03-20 14:51:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:51:47 -参数 : [userType]
2019-03-20 14:51:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:51:47 -==> Parameters: userType(String)
2019-03-20 14:51:47 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:51:47 -HTTP METHOD : GET
2019-03-20 14:51:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:51:47 -参数 : [userState]
2019-03-20 14:51:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:51:47 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:51:47 -==> Parameters: userState(String)
2019-03-20 14:51:47 -HTTP METHOD : GET
2019-03-20 14:51:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:51:47 -参数 : [elecType]
2019-03-20 14:51:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:51:47 -==> Parameters: elecType(String)
2019-03-20 14:51:47 -<==      Total: 2
2019-03-20 14:51:47 -耗时 : 3
2019-03-20 14:51:47 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:51:47 -<==      Total: 2
2019-03-20 14:51:47 -耗时 : 5
2019-03-20 14:51:47 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:51:47 -<==      Total: 2
2019-03-20 14:51:47 -耗时 : 16
2019-03-20 14:51:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:53:31 -请求地址 : http://localhost:8081/index
2019-03-20 14:53:31 -HTTP METHOD : GET
2019-03-20 14:53:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:53:31 -参数 : [{}]
2019-03-20 14:53:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:53:31 -==> Parameters: 1(Long)
2019-03-20 14:53:31 -<==      Total: 46
2019-03-20 14:53:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:53:31 -==> Parameters: 138(Long)
2019-03-20 14:53:31 -<==      Total: 1
2019-03-20 14:53:31 -耗时 : 35
2019-03-20 14:53:31 -返回值 : index_v1
2019-03-20 14:53:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:53:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:53:31.517(Timestamp)
2019-03-20 14:53:31 -请求地址 : http://localhost:8081/main
2019-03-20 14:53:31 -HTTP METHOD : GET
2019-03-20 14:53:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:53:31 -参数 : []
2019-03-20 14:53:31 -耗时 : 1
2019-03-20 14:53:31 -返回值 : main
2019-03-20 14:53:31 -<==    Updates: 1
2019-03-20 14:53:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:53:31 -HTTP METHOD : GET
2019-03-20 14:53:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:53:31 -参数 : []
2019-03-20 14:53:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:53:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:53:31 -<==      Total: 0
2019-03-20 14:53:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:53:31 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:53:31 -<==      Total: 1
2019-03-20 14:53:31 -耗时 : 5
2019-03-20 14:53:31 -返回值 : com.bootdo.common.utils.PageUtils@178bd9b6
2019-03-20 14:53:32 -请求地址 : http://localhost:8081/main
2019-03-20 14:53:32 -HTTP METHOD : GET
2019-03-20 14:53:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:53:32 -参数 : []
2019-03-20 14:53:32 -耗时 : 0
2019-03-20 14:53:32 -返回值 : main
2019-03-20 14:53:33 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:53:33 -HTTP METHOD : GET
2019-03-20 14:53:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:53:33 -参数 : []
2019-03-20 14:53:33 -耗时 : 0
2019-03-20 14:53:33 -返回值 : elec/elec/elec
2019-03-20 14:53:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:53:33 -HTTP METHOD : GET
2019-03-20 14:53:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:53:33 -参数 : [userType]
2019-03-20 14:53:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:53:33 -==> Parameters: userType(String)
2019-03-20 14:53:33 -<==      Total: 2
2019-03-20 14:53:33 -耗时 : 3
2019-03-20 14:53:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:53:33 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:53:33 -HTTP METHOD : GET
2019-03-20 14:53:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:53:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1fc27abc]
2019-03-20 14:53:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:53:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:53:33 -<==      Total: 10
2019-03-20 14:53:33 -==>  Preparing: select count(*) from elec 
2019-03-20 14:53:33 -==> Parameters: 
2019-03-20 14:53:33 -<==      Total: 1
2019-03-20 14:53:33 -耗时 : 9
2019-03-20 14:53:33 -返回值 : com.bootdo.common.utils.PageUtils@7e292913
2019-03-20 14:53:38 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:53:38 -HTTP METHOD : GET
2019-03-20 14:53:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:53:38 -参数 : []
2019-03-20 14:53:38 -耗时 : 1
2019-03-20 14:53:38 -返回值 : elec/elec/add
2019-03-20 14:53:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:53:39 -HTTP METHOD : GET
2019-03-20 14:53:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:53:39 -参数 : [userType]
2019-03-20 14:53:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:53:39 -==> Parameters: userType(String)
2019-03-20 14:53:39 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:53:39 -HTTP METHOD : GET
2019-03-20 14:53:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:53:39 -参数 : [userState]
2019-03-20 14:53:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:53:39 -==> Parameters: userState(String)
2019-03-20 14:53:39 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:53:39 -HTTP METHOD : GET
2019-03-20 14:53:39 -<==      Total: 2
2019-03-20 14:53:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:53:39 -参数 : [elecType]
2019-03-20 14:53:39 -耗时 : 4
2019-03-20 14:53:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:53:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:53:39 -<==      Total: 2
2019-03-20 14:53:39 -==> Parameters: elecType(String)
2019-03-20 14:53:39 -耗时 : 6
2019-03-20 14:53:39 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:53:39 -<==      Total: 2
2019-03-20 14:53:39 -耗时 : 6
2019-03-20 14:53:39 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:54:22 -请求地址 : http://localhost:8081/index
2019-03-20 14:54:22 -HTTP METHOD : GET
2019-03-20 14:54:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:54:22 -参数 : [{}]
2019-03-20 14:54:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:54:22 -==> Parameters: 1(Long)
2019-03-20 14:54:22 -<==      Total: 46
2019-03-20 14:54:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:54:22 -==> Parameters: 138(Long)
2019-03-20 14:54:22 -<==      Total: 1
2019-03-20 14:54:22 -耗时 : 35
2019-03-20 14:54:22 -返回值 : index_v1
2019-03-20 14:54:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:54:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:54:22.326(Timestamp)
2019-03-20 14:54:22 -<==    Updates: 1
2019-03-20 14:54:22 -请求地址 : http://localhost:8081/main
2019-03-20 14:54:22 -HTTP METHOD : GET
2019-03-20 14:54:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:54:22 -参数 : []
2019-03-20 14:54:22 -耗时 : 1
2019-03-20 14:54:22 -返回值 : main
2019-03-20 14:54:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:54:22 -HTTP METHOD : GET
2019-03-20 14:54:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:54:22 -参数 : []
2019-03-20 14:54:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:54:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:54:22 -<==      Total: 0
2019-03-20 14:54:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:54:22 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:54:22 -<==      Total: 1
2019-03-20 14:54:22 -耗时 : 6
2019-03-20 14:54:22 -返回值 : com.bootdo.common.utils.PageUtils@b2ceb2d
2019-03-20 14:54:22 -请求地址 : http://localhost:8081/main
2019-03-20 14:54:22 -HTTP METHOD : GET
2019-03-20 14:54:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:54:22 -参数 : []
2019-03-20 14:54:22 -耗时 : 1
2019-03-20 14:54:22 -返回值 : main
2019-03-20 14:54:24 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:54:24 -HTTP METHOD : GET
2019-03-20 14:54:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:54:24 -参数 : []
2019-03-20 14:54:24 -耗时 : 1
2019-03-20 14:54:24 -返回值 : elec/elec/elec
2019-03-20 14:54:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:54:24 -HTTP METHOD : GET
2019-03-20 14:54:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:54:24 -参数 : [userType]
2019-03-20 14:54:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:54:24 -==> Parameters: userType(String)
2019-03-20 14:54:24 -<==      Total: 2
2019-03-20 14:54:24 -耗时 : 4
2019-03-20 14:54:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:54:24 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:54:24 -HTTP METHOD : GET
2019-03-20 14:54:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:54:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@667519cf]
2019-03-20 14:54:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:54:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:54:24 -<==      Total: 10
2019-03-20 14:54:24 -==>  Preparing: select count(*) from elec 
2019-03-20 14:54:24 -==> Parameters: 
2019-03-20 14:54:24 -<==      Total: 1
2019-03-20 14:54:24 -耗时 : 7
2019-03-20 14:54:24 -返回值 : com.bootdo.common.utils.PageUtils@7fb38080
2019-03-20 14:54:29 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:54:29 -HTTP METHOD : GET
2019-03-20 14:54:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:54:29 -参数 : []
2019-03-20 14:54:29 -耗时 : 0
2019-03-20 14:54:29 -返回值 : elec/elec/add
2019-03-20 14:54:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:54:30 -HTTP METHOD : GET
2019-03-20 14:54:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:54:30 -参数 : [userType]
2019-03-20 14:54:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:54:30 -==> Parameters: userType(String)
2019-03-20 14:54:30 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:54:30 -HTTP METHOD : GET
2019-03-20 14:54:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:54:30 -参数 : [userState]
2019-03-20 14:54:30 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:54:30 -HTTP METHOD : GET
2019-03-20 14:54:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:54:30 -参数 : [elecType]
2019-03-20 14:54:30 -<==      Total: 2
2019-03-20 14:54:30 -耗时 : 3
2019-03-20 14:54:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:54:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:54:30 -==> Parameters: userState(String)
2019-03-20 14:54:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:54:30 -==> Parameters: elecType(String)
2019-03-20 14:54:30 -<==      Total: 2
2019-03-20 14:54:30 -耗时 : 5
2019-03-20 14:54:30 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:54:30 -<==      Total: 2
2019-03-20 14:54:30 -耗时 : 8
2019-03-20 14:54:30 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:54:47 -请求地址 : http://localhost:8081/index
2019-03-20 14:54:47 -HTTP METHOD : GET
2019-03-20 14:54:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:54:47 -参数 : [{}]
2019-03-20 14:54:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:54:47 -==> Parameters: 1(Long)
2019-03-20 14:54:47 -<==      Total: 46
2019-03-20 14:54:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:54:47 -==> Parameters: 138(Long)
2019-03-20 14:54:47 -<==      Total: 1
2019-03-20 14:54:47 -耗时 : 20
2019-03-20 14:54:47 -返回值 : index_v1
2019-03-20 14:54:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:54:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:54:47.825(Timestamp)
2019-03-20 14:54:47 -<==    Updates: 1
2019-03-20 14:54:47 -请求地址 : http://localhost:8081/main
2019-03-20 14:54:47 -HTTP METHOD : GET
2019-03-20 14:54:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:54:47 -参数 : []
2019-03-20 14:54:47 -耗时 : 0
2019-03-20 14:54:47 -返回值 : main
2019-03-20 14:54:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:54:48 -HTTP METHOD : GET
2019-03-20 14:54:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:54:48 -参数 : []
2019-03-20 14:54:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:54:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:54:48 -<==      Total: 0
2019-03-20 14:54:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:54:48 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:54:48 -<==      Total: 1
2019-03-20 14:54:48 -耗时 : 7
2019-03-20 14:54:48 -返回值 : com.bootdo.common.utils.PageUtils@74506b2a
2019-03-20 14:54:48 -请求地址 : http://localhost:8081/main
2019-03-20 14:54:48 -HTTP METHOD : GET
2019-03-20 14:54:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:54:48 -参数 : []
2019-03-20 14:54:48 -耗时 : 1
2019-03-20 14:54:48 -返回值 : main
2019-03-20 14:54:49 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:54:49 -HTTP METHOD : GET
2019-03-20 14:54:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:54:49 -参数 : []
2019-03-20 14:54:49 -耗时 : 0
2019-03-20 14:54:49 -返回值 : elec/elec/elec
2019-03-20 14:54:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:54:50 -HTTP METHOD : GET
2019-03-20 14:54:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:54:50 -参数 : [userType]
2019-03-20 14:54:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:54:50 -==> Parameters: userType(String)
2019-03-20 14:54:50 -<==      Total: 2
2019-03-20 14:54:50 -耗时 : 3
2019-03-20 14:54:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:54:50 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:54:50 -HTTP METHOD : GET
2019-03-20 14:54:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:54:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@78aec4d8]
2019-03-20 14:54:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:54:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:54:50 -<==      Total: 10
2019-03-20 14:54:50 -==>  Preparing: select count(*) from elec 
2019-03-20 14:54:50 -==> Parameters: 
2019-03-20 14:54:50 -<==      Total: 1
2019-03-20 14:54:50 -耗时 : 8
2019-03-20 14:54:50 -返回值 : com.bootdo.common.utils.PageUtils@4fba498a
2019-03-20 14:54:52 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:54:52 -HTTP METHOD : GET
2019-03-20 14:54:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:54:52 -参数 : []
2019-03-20 14:54:52 -耗时 : 0
2019-03-20 14:54:52 -返回值 : elec/elec/add
2019-03-20 14:54:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:54:53 -HTTP METHOD : GET
2019-03-20 14:54:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:54:53 -参数 : [userType]
2019-03-20 14:54:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:54:53 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:54:53 -HTTP METHOD : GET
2019-03-20 14:54:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:54:53 -==> Parameters: userType(String)
2019-03-20 14:54:53 -参数 : [userState]
2019-03-20 14:54:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:54:53 -==> Parameters: userState(String)
2019-03-20 14:54:53 -<==      Total: 2
2019-03-20 14:54:53 -<==      Total: 2
2019-03-20 14:54:53 -耗时 : 4
2019-03-20 14:54:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:54:53 -耗时 : 3
2019-03-20 14:54:53 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:54:53 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:54:53 -HTTP METHOD : GET
2019-03-20 14:54:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:54:53 -参数 : [elecType]
2019-03-20 14:54:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:54:53 -==> Parameters: elecType(String)
2019-03-20 14:54:53 -<==      Total: 2
2019-03-20 14:54:53 -耗时 : 5
2019-03-20 14:54:53 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:55:19 -请求地址 : http://localhost:8081/index
2019-03-20 14:55:19 -HTTP METHOD : GET
2019-03-20 14:55:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:55:19 -参数 : [{}]
2019-03-20 14:55:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:55:19 -==> Parameters: 1(Long)
2019-03-20 14:55:19 -<==      Total: 46
2019-03-20 14:55:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:55:19 -==> Parameters: 138(Long)
2019-03-20 14:55:19 -<==      Total: 1
2019-03-20 14:55:19 -耗时 : 27
2019-03-20 14:55:19 -返回值 : index_v1
2019-03-20 14:55:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:55:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:55:19.21(Timestamp)
2019-03-20 14:55:19 -请求地址 : http://localhost:8081/main
2019-03-20 14:55:19 -HTTP METHOD : GET
2019-03-20 14:55:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:55:19 -参数 : []
2019-03-20 14:55:19 -耗时 : 56
2019-03-20 14:55:19 -返回值 : main
2019-03-20 14:55:19 -<==    Updates: 1
2019-03-20 14:55:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:55:19 -HTTP METHOD : GET
2019-03-20 14:55:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:55:19 -参数 : []
2019-03-20 14:55:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:55:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:55:19 -<==      Total: 0
2019-03-20 14:55:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:55:19 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:55:19 -<==      Total: 1
2019-03-20 14:55:19 -耗时 : 24
2019-03-20 14:55:19 -返回值 : com.bootdo.common.utils.PageUtils@1af56e2
2019-03-20 14:55:19 -请求地址 : http://localhost:8081/main
2019-03-20 14:55:19 -HTTP METHOD : GET
2019-03-20 14:55:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:55:19 -参数 : []
2019-03-20 14:55:19 -耗时 : 1
2019-03-20 14:55:19 -返回值 : main
2019-03-20 14:55:25 -请求地址 : http://localhost:8081/index
2019-03-20 14:55:25 -HTTP METHOD : GET
2019-03-20 14:55:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:55:25 -参数 : [{}]
2019-03-20 14:55:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:55:25 -==> Parameters: 1(Long)
2019-03-20 14:55:25 -<==      Total: 46
2019-03-20 14:55:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:55:25 -==> Parameters: 138(Long)
2019-03-20 14:55:25 -<==      Total: 1
2019-03-20 14:55:25 -耗时 : 26
2019-03-20 14:55:25 -返回值 : index_v1
2019-03-20 14:55:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:55:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:55:25.079(Timestamp)
2019-03-20 14:55:25 -请求地址 : http://localhost:8081/main
2019-03-20 14:55:25 -HTTP METHOD : GET
2019-03-20 14:55:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:55:25 -参数 : []
2019-03-20 14:55:25 -耗时 : 1
2019-03-20 14:55:25 -返回值 : main
2019-03-20 14:55:25 -<==    Updates: 1
2019-03-20 14:55:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:55:25 -HTTP METHOD : GET
2019-03-20 14:55:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:55:25 -参数 : []
2019-03-20 14:55:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:55:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:55:25 -<==      Total: 0
2019-03-20 14:55:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:55:25 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:55:25 -<==      Total: 1
2019-03-20 14:55:25 -耗时 : 9
2019-03-20 14:55:25 -返回值 : com.bootdo.common.utils.PageUtils@36c83079
2019-03-20 14:55:25 -请求地址 : http://localhost:8081/main
2019-03-20 14:55:25 -HTTP METHOD : GET
2019-03-20 14:55:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:55:25 -参数 : []
2019-03-20 14:55:25 -耗时 : 2
2019-03-20 14:55:25 -返回值 : main
2019-03-20 14:55:26 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:55:26 -HTTP METHOD : GET
2019-03-20 14:55:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:55:26 -参数 : []
2019-03-20 14:55:26 -耗时 : 0
2019-03-20 14:55:26 -返回值 : elec/elec/elec
2019-03-20 14:55:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:55:27 -HTTP METHOD : GET
2019-03-20 14:55:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:55:27 -参数 : [userType]
2019-03-20 14:55:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:55:27 -==> Parameters: userType(String)
2019-03-20 14:55:27 -<==      Total: 2
2019-03-20 14:55:27 -耗时 : 3
2019-03-20 14:55:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:55:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:55:27 -HTTP METHOD : GET
2019-03-20 14:55:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:55:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@e5098db]
2019-03-20 14:55:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:55:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:55:27 -<==      Total: 10
2019-03-20 14:55:27 -==>  Preparing: select count(*) from elec 
2019-03-20 14:55:27 -==> Parameters: 
2019-03-20 14:55:27 -<==      Total: 1
2019-03-20 14:55:27 -耗时 : 6
2019-03-20 14:55:27 -返回值 : com.bootdo.common.utils.PageUtils@9db9b27
2019-03-20 14:55:32 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:55:32 -HTTP METHOD : GET
2019-03-20 14:55:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:55:32 -参数 : []
2019-03-20 14:55:32 -耗时 : 0
2019-03-20 14:55:32 -返回值 : elec/elec/add
2019-03-20 14:55:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:55:32 -HTTP METHOD : GET
2019-03-20 14:55:32 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:55:32 -HTTP METHOD : GET
2019-03-20 14:55:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:55:32 -参数 : [userState]
2019-03-20 14:55:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:55:32 -==> Parameters: userState(String)
2019-03-20 14:55:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:55:32 -参数 : [userType]
2019-03-20 14:55:32 -<==      Total: 2
2019-03-20 14:55:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:55:32 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:55:32 -耗时 : 4
2019-03-20 14:55:32 -==> Parameters: userType(String)
2019-03-20 14:55:32 -HTTP METHOD : GET
2019-03-20 14:55:32 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:55:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:55:32 -参数 : [elecType]
2019-03-20 14:55:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:55:32 -<==      Total: 2
2019-03-20 14:55:32 -耗时 : 7
2019-03-20 14:55:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:55:32 -==> Parameters: elecType(String)
2019-03-20 14:55:32 -<==      Total: 2
2019-03-20 14:55:32 -耗时 : 7
2019-03-20 14:55:32 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:55:47 -请求地址 : http://localhost:8081/elec/elec/save
2019-03-20 14:55:47 -HTTP METHOD : POST
2019-03-20 14:55:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.save
2019-03-20 14:55:47 -参数 : [com.bootdo.elec.domain.ElecDO@441e29a0]
2019-03-20 14:55:47 -==>  Preparing: insert into elec ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:55:47 -==> Parameters: (String), (String), (String), (String), (String), (String), (String), (String), null, (String), (String), null, null, null, null, (String), 1(Long), 2019-03-20 14:55:47.422(Timestamp), 1(Long), (String)
2019-03-20 14:55:47 -{conn-10003, pstmt-20035} execute error. insert into elec
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`user_tell`, 
			`user_state`, 
			`wages_id`, 
			`elec_type`, 
			`elec_price`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor231.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.save(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.save(ElecServiceImpl.java:42)
	at com.bootdo.elec.controller.ElecController.save(ElecController.java:194)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$81f03a7e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 14:55:47 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-20 14:55:47 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-20 14:55:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:55:47 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.save(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.save(ElecServiceImpl.java:42)
	at com.bootdo.elec.controller.ElecController.save(ElecController.java:194)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$81f03a7e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor231.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-20 14:55:47 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null(String), null, 2019-03-20 14:55:47.851(Timestamp)
2019-03-20 14:55:47 -<==    Updates: 1
2019-03-20 14:56:07 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 14:56:07 -HTTP METHOD : GET
2019-03-20 14:56:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 14:56:07 -参数 : []
2019-03-20 14:56:07 -耗时 : 1
2019-03-20 14:56:07 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 14:56:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:56:07 -HTTP METHOD : GET
2019-03-20 14:56:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:56:07 -参数 : [userType]
2019-03-20 14:56:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:56:07 -==> Parameters: userType(String)
2019-03-20 14:56:07 -<==      Total: 2
2019-03-20 14:56:07 -耗时 : 3
2019-03-20 14:56:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:56:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 14:56:07 -HTTP METHOD : GET
2019-03-20 14:56:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 14:56:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 14:56:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 14:56:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:56:07 -<==      Total: 4
2019-03-20 14:56:07 -==>  Preparing: select count(*) from elec_log 
2019-03-20 14:56:07 -==> Parameters: 
2019-03-20 14:56:07 -<==      Total: 1
2019-03-20 14:56:07 -耗时 : 137
2019-03-20 14:56:07 -返回值 : com.bootdo.common.utils.PageUtils@110b6726
2019-03-20 14:56:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-20 14:56:08 -HTTP METHOD : GET
2019-03-20 14:56:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-20 14:56:08 -参数 : []
2019-03-20 14:56:08 -耗时 : 1
2019-03-20 14:56:08 -返回值 : moneyLog/elecLog/add
2019-03-20 14:59:23 -请求地址 : http://localhost:8081/index
2019-03-20 14:59:23 -HTTP METHOD : GET
2019-03-20 14:59:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 14:59:23 -参数 : [{}]
2019-03-20 14:59:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 14:59:23 -==> Parameters: 1(Long)
2019-03-20 14:59:23 -<==      Total: 46
2019-03-20 14:59:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 14:59:23 -==> Parameters: 138(Long)
2019-03-20 14:59:23 -<==      Total: 1
2019-03-20 14:59:23 -耗时 : 20
2019-03-20 14:59:23 -返回值 : index_v1
2019-03-20 14:59:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:59:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 14:59:23.254(Timestamp)
2019-03-20 14:59:23 -<==    Updates: 1
2019-03-20 14:59:23 -请求地址 : http://localhost:8081/main
2019-03-20 14:59:23 -HTTP METHOD : GET
2019-03-20 14:59:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:59:23 -参数 : []
2019-03-20 14:59:23 -耗时 : 0
2019-03-20 14:59:23 -返回值 : main
2019-03-20 14:59:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 14:59:23 -HTTP METHOD : GET
2019-03-20 14:59:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 14:59:23 -参数 : []
2019-03-20 14:59:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 14:59:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 14:59:23 -<==      Total: 0
2019-03-20 14:59:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 14:59:23 -==> Parameters: 1(Long), 0(String)
2019-03-20 14:59:23 -<==      Total: 1
2019-03-20 14:59:23 -耗时 : 6
2019-03-20 14:59:23 -返回值 : com.bootdo.common.utils.PageUtils@65cf1fd6
2019-03-20 14:59:23 -请求地址 : http://localhost:8081/main
2019-03-20 14:59:23 -HTTP METHOD : GET
2019-03-20 14:59:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 14:59:23 -参数 : []
2019-03-20 14:59:23 -耗时 : 1
2019-03-20 14:59:23 -返回值 : main
2019-03-20 14:59:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 14:59:28 -==> Parameters: 1(Long)
2019-03-20 14:59:28 -<==      Total: 90
2019-03-20 14:59:28 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 14:59:28 -HTTP METHOD : GET
2019-03-20 14:59:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 14:59:28 -参数 : []
2019-03-20 14:59:28 -耗时 : 0
2019-03-20 14:59:28 -返回值 : elec/elec/elec
2019-03-20 14:59:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:59:28 -HTTP METHOD : GET
2019-03-20 14:59:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:59:28 -参数 : [userType]
2019-03-20 14:59:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:59:28 -==> Parameters: userType(String)
2019-03-20 14:59:28 -<==      Total: 2
2019-03-20 14:59:28 -耗时 : 4
2019-03-20 14:59:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:59:28 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 14:59:28 -HTTP METHOD : GET
2019-03-20 14:59:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 14:59:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@7bd3e600]
2019-03-20 14:59:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 14:59:28 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 14:59:28 -<==      Total: 10
2019-03-20 14:59:28 -==>  Preparing: select count(*) from elec 
2019-03-20 14:59:28 -==> Parameters: 
2019-03-20 14:59:28 -<==      Total: 1
2019-03-20 14:59:28 -耗时 : 6
2019-03-20 14:59:28 -返回值 : com.bootdo.common.utils.PageUtils@7a6411e1
2019-03-20 14:59:31 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 14:59:31 -HTTP METHOD : GET
2019-03-20 14:59:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 14:59:31 -参数 : []
2019-03-20 14:59:31 -耗时 : 1
2019-03-20 14:59:31 -返回值 : elec/elec/add
2019-03-20 14:59:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 14:59:32 -HTTP METHOD : GET
2019-03-20 14:59:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:59:32 -参数 : [userType]
2019-03-20 14:59:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:59:32 -==> Parameters: userType(String)
2019-03-20 14:59:32 -<==      Total: 2
2019-03-20 14:59:32 -耗时 : 4
2019-03-20 14:59:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:59:32 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 14:59:32 -HTTP METHOD : GET
2019-03-20 14:59:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:59:32 -参数 : [elecType]
2019-03-20 14:59:32 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 14:59:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:59:32 -HTTP METHOD : GET
2019-03-20 14:59:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 14:59:32 -参数 : [userState]
2019-03-20 14:59:32 -==> Parameters: elecType(String)
2019-03-20 14:59:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 14:59:32 -<==      Total: 2
2019-03-20 14:59:32 -耗时 : 4
2019-03-20 14:59:32 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:59:32 -==> Parameters: userState(String)
2019-03-20 14:59:32 -<==      Total: 2
2019-03-20 14:59:32 -耗时 : 9
2019-03-20 14:59:32 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 14:59:33 -请求地址 : http://localhost:8081/elec/elec/save
2019-03-20 14:59:33 -HTTP METHOD : POST
2019-03-20 14:59:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.save
2019-03-20 14:59:33 -参数 : [com.bootdo.elec.domain.ElecDO@6182d463]
2019-03-20 14:59:33 -==>  Preparing: insert into elec ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:59:33 -==> Parameters: (String), (String), (String), (String), (String), (String), (String), (String), null, (String), (String), null, null, null, null, (String), 1(Long), 2019-03-20 14:59:33.588(Timestamp), 1(Long), (String)
2019-03-20 14:59:33 -{conn-10002, pstmt-20038} execute error. insert into elec
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`user_tell`, 
			`user_state`, 
			`wages_id`, 
			`elec_type`, 
			`elec_price`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor231.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.save(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.save(ElecServiceImpl.java:42)
	at com.bootdo.elec.controller.ElecController.save(ElecController.java:194)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$81f03a7e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 14:59:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:59:33 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.save(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.save(ElecServiceImpl.java:42)
	at com.bootdo.elec.controller.ElecController.save(ElecController.java:194)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$81f03a7e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor231.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-20 14:59:33 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null(String), null, 2019-03-20 14:59:33.596(Timestamp)
2019-03-20 14:59:33 -<==    Updates: 1
2019-03-20 14:59:37 -请求地址 : http://localhost:8081/elec/elec/save
2019-03-20 14:59:37 -HTTP METHOD : POST
2019-03-20 14:59:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.save
2019-03-20 14:59:37 -参数 : [com.bootdo.elec.domain.ElecDO@1ee30b4b]
2019-03-20 14:59:37 -==>  Preparing: insert into elec ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:59:37 -==> Parameters: (String), (String), (String), (String), (String), (String), (String), (String), null, (String), (String), null, null, null, null, (String), 1(Long), 2019-03-20 14:59:37.531(Timestamp), 1(Long), (String)
2019-03-20 14:59:37 -{conn-10002, pstmt-20039} execute error. insert into elec
		(
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`user_tell`, 
			`user_state`, 
			`wages_id`, 
			`elec_type`, 
			`elec_price`, 
			`start`, 
			`end`, 
			`hu`, 
			`elec_amount`, 
			`elec_cost`, 
			`elec_sum`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor231.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.save(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.save(ElecServiceImpl.java:42)
	at com.bootdo.elec.controller.ElecController.save(ElecController.java:194)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$81f03a7e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 14:59:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 14:59:37 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy119.save(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.save(ElecServiceImpl.java:42)
	at com.bootdo.elec.controller.ElecController.save(ElecController.java:194)
	at com.bootdo.elec.controller.ElecController$$FastClassBySpringCGLIB$$b8b2b2ee.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor136.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecController$$EnhancerBySpringCGLIB$$81f03a7e.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor231.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-20 14:59:37 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null(String), null, 2019-03-20 14:59:37.539(Timestamp)
2019-03-20 14:59:37 -<==    Updates: 1
2019-03-20 15:01:00 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 15:01:00 -HTTP METHOD : GET
2019-03-20 15:01:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 15:01:00 -参数 : []
2019-03-20 15:01:00 -耗时 : 0
2019-03-20 15:01:00 -返回值 : elec/elec/add
2019-03-20 15:01:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 15:01:00 -HTTP METHOD : GET
2019-03-20 15:01:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 15:01:00 -参数 : [userType]
2019-03-20 15:01:00 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 15:01:00 -HTTP METHOD : GET
2019-03-20 15:01:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 15:01:00 -参数 : [userState]
2019-03-20 15:01:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 15:01:00 -==> Parameters: userState(String)
2019-03-20 15:01:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 15:01:00 -<==      Total: 2
2019-03-20 15:01:00 -==> Parameters: userType(String)
2019-03-20 15:01:00 -耗时 : 9
2019-03-20 15:01:00 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 15:01:00 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 15:01:00 -HTTP METHOD : GET
2019-03-20 15:01:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 15:01:00 -参数 : [elecType]
2019-03-20 15:01:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 15:01:00 -==> Parameters: elecType(String)
2019-03-20 15:01:00 -<==      Total: 2
2019-03-20 15:01:00 -<==      Total: 2
2019-03-20 15:01:00 -耗时 : 5
2019-03-20 15:01:00 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 15:01:00 -耗时 : 16
2019-03-20 15:01:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 15:14:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 19 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(18)-CONNECTED(18)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 216], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 715]
2019-03-20 15:23:54 -Validating all active sessions...
2019-03-20 15:23:54 -Finished session validation.  No sessions were stopped.
2019-03-20 15:35:35 -Starting BootdoApplication on ZJZL-20180906VX with PID 18344 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 15:35:35 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 15:35:35 -The following profiles are active: dev
2019-03-20 15:35:35 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Wed Mar 20 15:35:35 CST 2019]; root of context hierarchy
2019-03-20 15:35:39 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 15:35:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d9b9cf1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 15:35:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cc12fdc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 15:35:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 15:35:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 15:35:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 15:35:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 15:35:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 15:35:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 15:35:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 15:35:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 15:35:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 15:35:45 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 15:35:45 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 15:35:45 -Starting service [Tomcat]
2019-03-20 15:35:45 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 15:35:45 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 15:35:46 -Initializing Spring embedded WebApplicationContext
2019-03-20 15:35:46 -Root WebApplicationContext: initialization completed in 10718 ms
2019-03-20 15:35:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 15:35:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 15:35:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 15:35:46 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 15:35:46 -Filter xssFilter was not registered (disabled)
2019-03-20 15:35:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 15:35:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 15:35:46 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 15:35:46 -Servlet dispatcherServlet mapped to [/]
2019-03-20 15:35:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Wed Mar 20 15:35:35 CST 2019]; root of context hierarchy
2019-03-20 15:35:51 -Using default implementation for ThreadExecutor
2019-03-20 15:35:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 15:35:51 -Quartz Scheduler v.2.2.1 created.
2019-03-20 15:35:51 -RAMJobStore initialized.
2019-03-20 15:35:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 15:35:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 15:35:51 -Quartz scheduler version: 2.2.1
2019-03-20 15:35:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1ab85862
2019-03-20 15:35:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 15:35:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 15:35:55 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 15:35:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 15:35:55 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 15:35:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 15:35:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 15:35:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 15:35:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 15:35:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 15:35:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 15:35:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 15:35:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 15:35:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 15:35:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 15:35:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 15:35:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 15:35:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 15:35:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 15:35:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 15:35:55 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 15:35:55 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 15:35:55 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 15:35:55 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 15:35:55 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 15:35:55 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 15:35:55 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 15:35:55 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 15:35:55 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 15:35:55 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 15:35:55 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 15:35:55 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 15:35:55 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 15:35:55 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 15:35:55 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 15:35:55 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 15:35:55 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 15:35:55 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 15:35:55 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 15:35:55 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 15:35:55 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 15:35:55 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 15:35:55 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 15:35:55 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 15:35:55 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 15:35:55 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 15:35:55 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 15:35:55 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 15:35:55 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 15:35:55 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 15:35:55 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 15:35:55 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 15:35:55 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 15:35:55 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 15:35:55 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 15:35:55 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 15:35:55 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 15:35:55 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 15:35:55 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 15:35:55 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 15:35:55 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 15:35:55 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 15:35:55 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 15:35:55 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 15:35:55 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 15:35:55 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 15:35:55 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 15:35:55 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 15:35:55 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 15:35:55 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 15:35:55 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 15:35:55 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 15:35:55 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 15:35:55 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 15:35:55 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 15:35:55 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 15:35:55 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 15:35:55 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 15:35:55 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 15:35:55 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 15:35:55 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 15:35:55 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 15:35:55 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 15:35:55 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 15:35:55 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 15:35:55 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 15:35:55 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 15:35:55 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 15:35:55 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 15:35:55 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 15:35:55 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 15:35:55 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 15:35:55 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 15:35:55 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 15:35:55 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 15:35:55 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 15:35:55 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 15:35:55 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 15:35:55 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 15:35:55 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 15:35:55 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 15:35:55 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 15:35:55 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 15:35:55 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 15:35:55 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 15:35:55 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 15:35:55 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 15:35:55 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 15:35:55 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 15:35:55 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 15:35:55 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 15:35:55 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 15:35:55 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 15:35:55 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 15:35:55 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 15:35:55 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 15:35:55 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 15:35:55 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 15:35:55 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 15:35:55 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 15:35:55 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 15:35:55 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 15:35:55 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 15:35:55 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 15:35:55 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 15:35:55 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 15:35:55 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 15:35:55 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 15:35:55 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 15:35:55 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 15:35:55 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 15:35:55 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 15:35:55 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 15:35:55 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 15:35:56 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 15:35:56 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 15:35:56 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 15:35:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 15:35:57 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Wed Mar 20 15:35:35 CST 2019]; root of context hierarchy
2019-03-20 15:35:57 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 15:35:57 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 15:35:57 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 15:35:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 15:35:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 15:36:00 -Registering beans for JMX exposure on startup
2019-03-20 15:36:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 15:36:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 15:36:00 -Starting beans in phase 2147483647
2019-03-20 15:36:00 -Context refreshed
2019-03-20 15:36:00 -Found 1 custom documentation plugin(s)
2019-03-20 15:36:00 -Scanning for api listing references
2019-03-20 15:36:01 -Generating unique operation named: removeUsingPOST_1
2019-03-20 15:36:01 -Generating unique operation named: addUsingGET_1
2019-03-20 15:36:01 -Generating unique operation named: editUsingGET_1
2019-03-20 15:36:01 -Generating unique operation named: listUsingGET_1
2019-03-20 15:36:01 -Generating unique operation named: removeUsingPOST_2
2019-03-20 15:36:01 -Generating unique operation named: removeUsingPOST_3
2019-03-20 15:36:01 -Generating unique operation named: saveUsingPOST_1
2019-03-20 15:36:01 -Generating unique operation named: updateUsingGET_1
2019-03-20 15:36:01 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 15:36:01 -Generating unique operation named: updateUsingPOST_1
2019-03-20 15:36:01 -Generating unique operation named: updateUsingPUT_1
2019-03-20 15:36:01 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 15:36:01 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 15:36:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 15:36:01 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 15:36:01 -Generating unique operation named: addUsingGET_2
2019-03-20 15:36:01 -Generating unique operation named: editUsingGET_2
2019-03-20 15:36:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 15:36:01 -Generating unique operation named: listUsingGET_2
2019-03-20 15:36:01 -Generating unique operation named: removeUsingPOST_4
2019-03-20 15:36:01 -Generating unique operation named: removeUsingPOST_5
2019-03-20 15:36:01 -Generating unique operation named: saveUsingPOST_2
2019-03-20 15:36:01 -Generating unique operation named: updateUsingGET_2
2019-03-20 15:36:01 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 15:36:01 -Generating unique operation named: updateUsingPOST_2
2019-03-20 15:36:01 -Generating unique operation named: updateUsingPUT_2
2019-03-20 15:36:01 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 15:36:01 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 15:36:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 15:36:01 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 15:36:01 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 15:36:01 -Generating unique operation named: addUsingGET_3
2019-03-20 15:36:01 -Generating unique operation named: editUsingGET_3
2019-03-20 15:36:01 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 15:36:02 -Generating unique operation named: listUsingGET_3
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_6
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_7
2019-03-20 15:36:02 -Generating unique operation named: saveUsingPOST_3
2019-03-20 15:36:02 -Generating unique operation named: updateUsingGET_3
2019-03-20 15:36:02 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPOST_3
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPUT_3
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 15:36:02 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 15:36:02 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 15:36:02 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 15:36:02 -Generating unique operation named: addUsingGET_4
2019-03-20 15:36:02 -Generating unique operation named: editUsingGET_4
2019-03-20 15:36:02 -Generating unique operation named: listUsingGET_4
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_8
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_9
2019-03-20 15:36:02 -Generating unique operation named: saveUsingPOST_4
2019-03-20 15:36:02 -Generating unique operation named: updateUsingGET_4
2019-03-20 15:36:02 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPOST_4
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPUT_4
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 15:36:02 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 15:36:02 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 15:36:02 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 15:36:02 -Generating unique operation named: ElecUsingGET_1
2019-03-20 15:36:02 -Generating unique operation named: addUsingGET_5
2019-03-20 15:36:02 -Generating unique operation named: editUsingGET_5
2019-03-20 15:36:02 -Generating unique operation named: listUsingGET_5
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_10
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_11
2019-03-20 15:36:02 -Generating unique operation named: saveUsingPOST_5
2019-03-20 15:36:02 -Generating unique operation named: updateUsingGET_5
2019-03-20 15:36:02 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPOST_5
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPUT_5
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 15:36:02 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 15:36:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 15:36:02 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 15:36:02 -Generating unique operation named: editUsingGET_6
2019-03-20 15:36:02 -Generating unique operation named: listUsingGET_6
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPOST_6
2019-03-20 15:36:02 -Generating unique operation named: addUsingGET_6
2019-03-20 15:36:02 -Generating unique operation named: editUsingGET_7
2019-03-20 15:36:02 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 15:36:02 -Generating unique operation named: listUsingGET_7
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_12
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_13
2019-03-20 15:36:02 -Generating unique operation named: saveUsingPOST_6
2019-03-20 15:36:02 -Generating unique operation named: updateUsingGET_6
2019-03-20 15:36:02 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPOST_7
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPUT_6
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 15:36:02 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 15:36:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 15:36:02 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 15:36:02 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 15:36:02 -Generating unique operation named: addUsingGET_7
2019-03-20 15:36:02 -Generating unique operation named: editUsingGET_8
2019-03-20 15:36:02 -Generating unique operation named: listUsingGET_8
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_14
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_15
2019-03-20 15:36:02 -Generating unique operation named: saveUsingPOST_7
2019-03-20 15:36:02 -Generating unique operation named: updateUsingGET_7
2019-03-20 15:36:02 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPOST_8
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPUT_7
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 15:36:02 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 15:36:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 15:36:02 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 15:36:02 -Generating unique operation named: addUsingGET_8
2019-03-20 15:36:02 -Generating unique operation named: editUsingGET_9
2019-03-20 15:36:02 -Generating unique operation named: listUsingGET_9
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_16
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_17
2019-03-20 15:36:02 -Generating unique operation named: saveUsingPOST_8
2019-03-20 15:36:02 -Generating unique operation named: updateUsingGET_8
2019-03-20 15:36:02 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPOST_9
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPUT_8
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 15:36:02 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 15:36:02 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 15:36:02 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 15:36:02 -Generating unique operation named: addUsingGET_9
2019-03-20 15:36:02 -Generating unique operation named: editUsingGET_10
2019-03-20 15:36:02 -Generating unique operation named: infoUsingGET_1
2019-03-20 15:36:02 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 15:36:02 -Generating unique operation named: infoUsingPOST_1
2019-03-20 15:36:02 -Generating unique operation named: infoUsingPUT_1
2019-03-20 15:36:02 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 15:36:02 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 15:36:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 15:36:02 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 15:36:02 -Generating unique operation named: listUsingGET_10
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_18
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_19
2019-03-20 15:36:02 -Generating unique operation named: saveUsingPOST_9
2019-03-20 15:36:02 -Generating unique operation named: updateUsingPOST_10
2019-03-20 15:36:02 -Generating unique operation named: listUsingGET_11
2019-03-20 15:36:02 -Generating unique operation named: removeUsingPOST_20
2019-03-20 15:36:02 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 15:36:03 -Generating unique operation named: addUsingGET_10
2019-03-20 15:36:03 -Generating unique operation named: editUsingGET_11
2019-03-20 15:36:03 -Generating unique operation named: listUsingGET_12
2019-03-20 15:36:03 -Generating unique operation named: removeUsingPOST_21
2019-03-20 15:36:03 -Generating unique operation named: saveUsingPOST_10
2019-03-20 15:36:03 -Generating unique operation named: treeUsingGET_1
2019-03-20 15:36:03 -Generating unique operation named: treeUsingGET_2
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPOST_11
2019-03-20 15:36:03 -Generating unique operation named: addUsingGET_11
2019-03-20 15:36:03 -Generating unique operation named: editUsingGET_12
2019-03-20 15:36:03 -Generating unique operation named: listUsingGET_13
2019-03-20 15:36:03 -Generating unique operation named: removeUsingPOST_22
2019-03-20 15:36:03 -Generating unique operation named: removeUsingPOST_23
2019-03-20 15:36:03 -Generating unique operation named: saveUsingPOST_11
2019-03-20 15:36:03 -Generating unique operation named: updateUsingGET_9
2019-03-20 15:36:03 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPOST_12
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPUT_9
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 15:36:03 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 15:36:03 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 15:36:03 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 15:36:03 -Generating unique operation named: addUsingGET_12
2019-03-20 15:36:03 -Generating unique operation named: editUsingGET_13
2019-03-20 15:36:03 -Generating unique operation named: listUsingGET_14
2019-03-20 15:36:03 -Generating unique operation named: removeUsingPOST_24
2019-03-20 15:36:03 -Generating unique operation named: removeUsingPOST_25
2019-03-20 15:36:03 -Generating unique operation named: saveUsingPOST_12
2019-03-20 15:36:03 -Generating unique operation named: updateUsingGET_10
2019-03-20 15:36:03 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPOST_13
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPUT_10
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 15:36:03 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 15:36:03 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 15:36:03 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 15:36:03 -Generating unique operation named: addUsingGET_13
2019-03-20 15:36:03 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 15:36:03 -Generating unique operation named: editUsingGET_14
2019-03-20 15:36:03 -Generating unique operation named: listUsingGET_15
2019-03-20 15:36:03 -Generating unique operation named: saveUsingPOST_13
2019-03-20 15:36:03 -Generating unique operation named: saveUsingPOST_14
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPOST_14
2019-03-20 15:36:03 -Generating unique operation named: listUsingGET_16
2019-03-20 15:36:03 -Generating unique operation named: listUsingHEAD_1
2019-03-20 15:36:03 -Generating unique operation named: listUsingPOST_1
2019-03-20 15:36:03 -Generating unique operation named: listUsingPUT_1
2019-03-20 15:36:03 -Generating unique operation named: listUsingPATCH_1
2019-03-20 15:36:03 -Generating unique operation named: listUsingDELETE_1
2019-03-20 15:36:03 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 15:36:03 -Generating unique operation named: listUsingTRACE_1
2019-03-20 15:36:03 -Generating unique operation named: addUsingGET_14
2019-03-20 15:36:03 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 15:36:03 -Generating unique operation named: editUsingGET_15
2019-03-20 15:36:03 -Generating unique operation named: listUsingGET_17
2019-03-20 15:36:03 -Generating unique operation named: removeUsingPOST_26
2019-03-20 15:36:03 -Generating unique operation named: saveUsingPOST_15
2019-03-20 15:36:03 -Generating unique operation named: treeUsingGET_3
2019-03-20 15:36:03 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPOST_15
2019-03-20 15:36:03 -Generating unique operation named: addUsingGET_15
2019-03-20 15:36:03 -Generating unique operation named: editUsingGET_16
2019-03-20 15:36:03 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 15:36:03 -Generating unique operation named: listUsingGET_18
2019-03-20 15:36:03 -Generating unique operation named: removeUsingPOST_27
2019-03-20 15:36:03 -Generating unique operation named: removeUsingPOST_28
2019-03-20 15:36:03 -Generating unique operation named: saveUsingPOST_16
2019-03-20 15:36:03 -Generating unique operation named: updateUsingGET_11
2019-03-20 15:36:03 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPOST_16
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPUT_11
2019-03-20 15:36:03 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 15:36:03 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 15:36:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 15:36:03 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 15:36:03 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 15:36:03 -Generating unique operation named: addUsingGET_16
2019-03-20 15:36:03 -Generating unique operation named: editUsingGET_17
2019-03-20 15:36:03 -Generating unique operation named: listUsingGET_19
2019-03-20 15:36:03 -Generating unique operation named: removeUsingPOST_29
2019-03-20 15:36:03 -Generating unique operation named: removeUsingPOST_30
2019-03-20 15:36:04 -Generating unique operation named: saveUsingPOST_17
2019-03-20 15:36:04 -Generating unique operation named: updateUsingGET_12
2019-03-20 15:36:04 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 15:36:04 -Generating unique operation named: updateUsingPOST_17
2019-03-20 15:36:04 -Generating unique operation named: updateUsingPUT_12
2019-03-20 15:36:04 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 15:36:04 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 15:36:04 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 15:36:04 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 15:36:04 -Generating unique operation named: addUsingGET_17
2019-03-20 15:36:04 -Generating unique operation named: editUsingGET_18
2019-03-20 15:36:04 -Generating unique operation named: listUsingGET_20
2019-03-20 15:36:04 -Generating unique operation named: removeUsingPOST_31
2019-03-20 15:36:04 -Generating unique operation named: removeUsingPOST_32
2019-03-20 15:36:04 -Generating unique operation named: saveUsingPOST_18
2019-03-20 15:36:04 -Generating unique operation named: updateUsingGET_13
2019-03-20 15:36:04 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 15:36:04 -Generating unique operation named: updateUsingPOST_18
2019-03-20 15:36:04 -Generating unique operation named: updateUsingPUT_13
2019-03-20 15:36:04 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 15:36:04 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 15:36:04 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 15:36:04 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 15:36:04 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 15:36:04 -Starting Quartz Scheduler now
2019-03-20 15:36:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 15:36:04 -Starting...
2019-03-20 15:36:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 15:36:04 -Started.
2019-03-20 15:36:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 15:36:05 -Using a shared selector for servlet write/read
2019-03-20 15:36:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-20 15:36:05 -Started BootdoApplication in 32.872 seconds (JVM running for 35.142)
2019-03-20 15:36:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-20 15:36:10 -==> Parameters: 
2019-03-20 15:36:10 -<==      Total: 1
2019-03-20 15:36:47 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-20 15:36:47 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-20 15:36:48 -FrameworkServlet 'dispatcherServlet': initialization completed in 94 ms
2019-03-20 15:36:48 -Enabling session validation scheduler...
2019-03-20 15:36:48 -请求地址 : http://localhost:8081/
2019-03-20 15:36:48 -HTTP METHOD : GET
2019-03-20 15:36:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-20 15:36:48 -参数 : [{}]
2019-03-20 15:36:48 -耗时 : 4
2019-03-20 15:36:48 -返回值 : redirect:/index
2019-03-20 15:36:48 -请求地址 : http://localhost:8081/login;JSESSIONID=8274afae-0e71-40b4-92fe-1146f1d330e1
2019-03-20 15:36:48 -HTTP METHOD : GET
2019-03-20 15:36:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 15:36:48 -参数 : [{}]
2019-03-20 15:36:48 -耗时 : 1
2019-03-20 15:36:48 -返回值 : login
2019-03-20 15:36:49 -请求地址 : http://localhost:8081/getVerify
2019-03-20 15:36:49 -HTTP METHOD : GET
2019-03-20 15:36:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 15:36:49 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@69687627, org.apache.shiro.web.servlet.ShiroHttpServletResponse@67af857a]
2019-03-20 15:36:53 -7779
2019-03-20 15:36:53 -耗时 : 3246
2019-03-20 15:36:53 -返回值 : null
2019-03-20 15:36:56 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-20 15:37:43 -请求地址 : http://localhost:8081/getVerify
2019-03-20 15:37:43 -HTTP METHOD : GET
2019-03-20 15:37:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 15:37:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5478a70b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@117a23e0]
2019-03-20 15:37:43 -7420
2019-03-20 15:37:43 -耗时 : 14
2019-03-20 15:37:43 -返回值 : null
2019-03-20 15:37:43 -请求地址 : http://localhost:8081/getVerify
2019-03-20 15:37:43 -HTTP METHOD : GET
2019-03-20 15:37:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 15:37:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@73d11d78, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7d16ed72]
2019-03-20 15:37:43 -5003
2019-03-20 15:37:43 -耗时 : 11
2019-03-20 15:37:43 -返回值 : null
2019-03-20 15:37:44 -请求地址 : http://localhost:8081/getVerify
2019-03-20 15:37:44 -HTTP METHOD : GET
2019-03-20 15:37:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 15:37:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d643d4c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@73a3cc90]
2019-03-20 15:37:44 -1471
2019-03-20 15:37:44 -耗时 : 11
2019-03-20 15:37:44 -返回值 : null
2019-03-20 15:40:22 -请求地址 : http://localhost:8081/login
2019-03-20 15:40:22 -HTTP METHOD : POST
2019-03-20 15:40:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 15:40:22 -参数 : [admin, 111111, , org.apache.shiro.web.servlet.ShiroHttpServletRequest@3a7fbe88]
2019-03-20 15:40:23 -耗时 : 280
2019-03-20 15:40:23 -返回值 : {msg=请输入验证码, code=500}
2019-03-20 15:40:24 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-20 15:40:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 15:40:24 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 281(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 15:40:23.947(Timestamp)
2019-03-20 15:40:25 -<==    Updates: 1
2019-03-20 15:40:33 -请求地址 : http://localhost:8081/login
2019-03-20 15:40:33 -HTTP METHOD : POST
2019-03-20 15:40:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 15:40:33 -参数 : [admin, 111111, 1471, org.apache.shiro.web.servlet.ShiroHttpServletRequest@21cf917f]
2019-03-20 15:40:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 15:40:34 -==> Parameters: admin(String)
2019-03-20 15:40:34 -<==      Total: 1
2019-03-20 15:40:34 -耗时 : 942
2019-03-20 15:40:34 -返回值 : {msg=操作成功, code=0}
2019-03-20 15:40:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 15:40:34 -==> Parameters: 1(Long), admin(String), 登录(String), 943(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 15:40:34.568(Timestamp)
2019-03-20 15:40:34 -请求地址 : http://localhost:8081/index
2019-03-20 15:40:34 -HTTP METHOD : GET
2019-03-20 15:40:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 15:40:34 -参数 : [{}]
2019-03-20 15:40:34 -<==    Updates: 1
2019-03-20 15:40:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 15:40:35 -==> Parameters: 1(Long)
2019-03-20 15:40:35 -<==      Total: 46
2019-03-20 15:40:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 15:40:35 -==> Parameters: 138(Long)
2019-03-20 15:40:35 -<==      Total: 1
2019-03-20 15:40:35 -耗时 : 1163
2019-03-20 15:40:35 -返回值 : index_v1
2019-03-20 15:40:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 15:40:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1164(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 15:40:36.388(Timestamp)
2019-03-20 15:40:36 -<==    Updates: 1
2019-03-20 15:40:37 -请求地址 : http://localhost:8081/main
2019-03-20 15:40:37 -HTTP METHOD : GET
2019-03-20 15:40:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 15:40:37 -参数 : []
2019-03-20 15:40:37 -耗时 : 12
2019-03-20 15:40:37 -返回值 : main
2019-03-20 15:40:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 15:40:40 -HTTP METHOD : GET
2019-03-20 15:40:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 15:40:40 -参数 : []
2019-03-20 15:40:40 -请求地址 : http://localhost:8081/main
2019-03-20 15:40:40 -HTTP METHOD : GET
2019-03-20 15:40:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 15:40:40 -参数 : []
2019-03-20 15:40:40 -耗时 : 1
2019-03-20 15:40:40 -返回值 : main
2019-03-20 15:40:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 15:40:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 15:40:40 -<==      Total: 0
2019-03-20 15:40:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 15:40:40 -==> Parameters: 1(Long), 0(String)
2019-03-20 15:40:40 -<==      Total: 1
2019-03-20 15:40:40 -耗时 : 111
2019-03-20 15:40:40 -返回值 : com.bootdo.common.utils.PageUtils@102bee1c
2019-03-20 15:41:56 -请求地址 : http://localhost:8081/sys/user/personal
2019-03-20 15:41:56 -HTTP METHOD : GET
2019-03-20 15:41:56 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2019-03-20 15:41:56 -参数 : [{}]
2019-03-20 15:41:56 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2019-03-20 15:41:56 -==> Parameters: 1(Long)
2019-03-20 15:41:56 -<==      Total: 1
2019-03-20 15:41:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-20 15:41:56 -==> Parameters: 1(Long)
2019-03-20 15:41:56 -<==      Total: 1
2019-03-20 15:41:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2019-03-20 15:41:56 -==> Parameters: 1(Long)
2019-03-20 15:41:56 -<==      Total: 1
2019-03-20 15:41:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 15:41:56 -==> Parameters: hobby(String)
2019-03-20 15:41:56 -<==      Total: 2
2019-03-20 15:41:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 15:41:56 -==> Parameters: sex(String)
2019-03-20 15:41:56 -<==      Total: 2
2019-03-20 15:41:56 -耗时 : 427
2019-03-20 15:41:56 -返回值 : system/user/personal
2019-03-20 15:43:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 15:43:01 -==> Parameters: 1(Long)
2019-03-20 15:43:01 -<==      Total: 90
2019-03-20 15:43:01 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 15:43:01 -==> Parameters: 1(Long)
2019-03-20 15:43:01 -<==      Total: 90
2019-03-20 15:43:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 15:43:02 -HTTP METHOD : GET
2019-03-20 15:43:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 15:43:02 -参数 : []
2019-03-20 15:43:02 -耗时 : 2
2019-03-20 15:43:02 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 15:43:02 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-20 15:43:02 -HTTP METHOD : GET
2019-03-20 15:43:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-20 15:43:02 -参数 : []
2019-03-20 15:43:02 -耗时 : 3
2019-03-20 15:43:02 -返回值 : /moneyList/moneyList
2019-03-20 15:43:03 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-20 15:43:03 -HTTP METHOD : GET
2019-03-20 15:43:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-20 15:43:03 -参数 : []
2019-03-20 15:43:03 -耗时 : 36
2019-03-20 15:43:03 -返回值 : elec/elecPrice/elecPrice
2019-03-20 15:43:03 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-20 15:43:03 -HTTP METHOD : GET
2019-03-20 15:43:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-20 15:43:03 -参数 : []
2019-03-20 15:43:03 -耗时 : 0
2019-03-20 15:43:03 -返回值 : elec/elecInto/elecInto
2019-03-20 15:43:04 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 15:43:04 -HTTP METHOD : GET
2019-03-20 15:43:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 15:43:04 -参数 : []
2019-03-20 15:43:04 -耗时 : 0
2019-03-20 15:43:04 -返回值 : elec/elec/elec
2019-03-20 15:43:04 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-20 15:43:04 -HTTP METHOD : GET
2019-03-20 15:43:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-20 15:43:04 -参数 : []
2019-03-20 15:43:04 -耗时 : 1
2019-03-20 15:43:04 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-20 15:43:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 15:43:07 -HTTP METHOD : GET
2019-03-20 15:43:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 15:43:07 -参数 : [userType]
2019-03-20 15:43:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 15:43:07 -HTTP METHOD : GET
2019-03-20 15:43:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 15:43:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 15:43:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 15:43:07 -==> Parameters: userType(String)
2019-03-20 15:43:07 -<==      Total: 2
2019-03-20 15:43:07 -耗时 : 441
2019-03-20 15:43:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 15:43:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 15:43:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 15:43:08 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-20 15:43:08 -HTTP METHOD : GET
2019-03-20 15:43:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-20 15:43:08 -参数 : [{limit=10, offset=0}]
2019-03-20 15:43:08 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 15:43:08 -HTTP METHOD : GET
2019-03-20 15:43:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 15:43:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@659f8b2]
2019-03-20 15:43:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 15:43:08 -HTTP METHOD : GET
2019-03-20 15:43:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 15:43:08 -参数 : [userType]
2019-03-20 15:43:09 -<==      Total: 4
2019-03-20 15:43:09 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-20 15:43:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 15:43:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 15:43:09 -==> Parameters: userType(String)
2019-03-20 15:43:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 15:43:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 15:43:09 -<==      Total: 2
2019-03-20 15:43:09 -耗时 : 791
2019-03-20 15:43:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 15:43:09 -==>  Preparing: select count(*) from elec_log 
2019-03-20 15:43:09 -==> Parameters: 
2019-03-20 15:43:09 -<==      Total: 2
2019-03-20 15:43:09 -==>  Preparing: select count(*) from elec_price 
2019-03-20 15:43:09 -==> Parameters: 
2019-03-20 15:43:09 -<==      Total: 1
2019-03-20 15:43:09 -耗时 : 1604
2019-03-20 15:43:09 -返回值 : com.bootdo.common.utils.PageUtils@a9640af
2019-03-20 15:43:09 -<==      Total: 1
2019-03-20 15:43:09 -耗时 : 2256
2019-03-20 15:43:09 -返回值 : com.bootdo.common.utils.PageUtils@21418f34
2019-03-20 15:43:09 -<==      Total: 10
2019-03-20 15:43:09 -==>  Preparing: select count(*) from elec 
2019-03-20 15:43:09 -==> Parameters: 
2019-03-20 15:43:09 -<==      Total: 1
2019-03-20 15:43:09 -耗时 : 1624
2019-03-20 15:43:09 -返回值 : com.bootdo.common.utils.PageUtils@42790b13
2019-03-20 15:43:24 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-20 15:43:24 -HTTP METHOD : GET
2019-03-20 15:43:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-20 15:43:24 -参数 : []
2019-03-20 15:43:24 -耗时 : 0
2019-03-20 15:43:24 -返回值 : /moneyList/moneyList
2019-03-20 15:43:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 15:43:53 -HTTP METHOD : GET
2019-03-20 15:43:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 15:43:53 -参数 : []
2019-03-20 15:43:53 -耗时 : 1
2019-03-20 15:43:53 -返回值 : system/dept/deptTree
2019-03-20 15:43:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 15:43:53 -HTTP METHOD : GET
2019-03-20 15:43:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 15:43:53 -参数 : []
2019-03-20 15:43:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 15:43:53 -==> Parameters: 
2019-03-20 15:43:53 -<==      Total: 3
2019-03-20 15:43:53 -耗时 : 93
2019-03-20 15:43:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 15:45:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 15:45:50 -HTTP METHOD : GET
2019-03-20 15:45:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 15:45:50 -参数 : []
2019-03-20 15:45:50 -耗时 : 0
2019-03-20 15:45:50 -返回值 : system/dept/deptTree
2019-03-20 15:45:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 15:45:50 -HTTP METHOD : GET
2019-03-20 15:45:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 15:45:50 -参数 : []
2019-03-20 15:45:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 15:45:50 -==> Parameters: 
2019-03-20 15:45:50 -<==      Total: 3
2019-03-20 15:45:50 -耗时 : 8
2019-03-20 15:45:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 15:45:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 15:45:52 -HTTP METHOD : GET
2019-03-20 15:45:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 15:45:52 -参数 : []
2019-03-20 15:45:52 -耗时 : 0
2019-03-20 15:45:52 -返回值 : system/dept/deptTree
2019-03-20 15:45:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 15:45:52 -HTTP METHOD : GET
2019-03-20 15:45:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 15:45:52 -参数 : []
2019-03-20 15:45:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 15:45:52 -==> Parameters: 
2019-03-20 15:45:52 -<==      Total: 3
2019-03-20 15:45:52 -耗时 : 5
2019-03-20 15:45:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 15:50:28 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 15:50:28 -HTTP METHOD : GET
2019-03-20 15:50:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 15:50:28 -参数 : []
2019-03-20 15:50:28 -耗时 : 1
2019-03-20 15:50:28 -返回值 : elec/elec/elec
2019-03-20 15:50:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 15:50:29 -HTTP METHOD : GET
2019-03-20 15:50:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 15:50:29 -参数 : [userType]
2019-03-20 15:50:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 15:50:29 -==> Parameters: userType(String)
2019-03-20 15:50:29 -<==      Total: 2
2019-03-20 15:50:29 -耗时 : 23
2019-03-20 15:50:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 15:50:29 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 15:50:29 -HTTP METHOD : GET
2019-03-20 15:50:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 15:50:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@15baf47f]
2019-03-20 15:50:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 15:50:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 15:50:29 -<==      Total: 10
2019-03-20 15:50:29 -==>  Preparing: select count(*) from elec 
2019-03-20 15:50:29 -==> Parameters: 
2019-03-20 15:50:29 -<==      Total: 1
2019-03-20 15:50:29 -耗时 : 25
2019-03-20 15:50:29 -返回值 : com.bootdo.common.utils.PageUtils@7eac88d8
2019-03-20 15:50:39 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 15:50:39 -HTTP METHOD : GET
2019-03-20 15:50:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 15:50:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@6bdd1fe6]
2019-03-20 15:50:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-20 15:50:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 15:50:40 -<==      Total: 2
2019-03-20 15:50:40 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-20 15:50:40 -==> Parameters: 
2019-03-20 15:50:40 -<==      Total: 1
2019-03-20 15:50:40 -耗时 : 100
2019-03-20 15:50:40 -返回值 : com.bootdo.common.utils.PageUtils@c75f628
2019-03-20 15:50:52 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 15:50:52 -HTTP METHOD : GET
2019-03-20 15:50:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 15:50:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@6c42edd]
2019-03-20 15:50:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 15:50:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 15:50:52 -<==      Total: 10
2019-03-20 15:50:52 -==>  Preparing: select count(*) from elec 
2019-03-20 15:50:52 -==> Parameters: 
2019-03-20 15:50:52 -<==      Total: 1
2019-03-20 15:50:52 -耗时 : 54
2019-03-20 15:50:52 -返回值 : com.bootdo.common.utils.PageUtils@401964e4
2019-03-20 15:50:56 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 15:50:56 -HTTP METHOD : GET
2019-03-20 15:50:56 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 15:50:56 -参数 : [{limit=10, offset=10, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@71bd4e2b]
2019-03-20 15:50:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 15:50:56 -==> Parameters: 10(Integer), 10(Integer)
2019-03-20 15:50:56 -<==      Total: 2
2019-03-20 15:50:56 -==>  Preparing: select count(*) from elec 
2019-03-20 15:50:56 -==> Parameters: 
2019-03-20 15:50:56 -<==      Total: 1
2019-03-20 15:50:56 -耗时 : 78
2019-03-20 15:50:56 -返回值 : com.bootdo.common.utils.PageUtils@7e7e15bd
2019-03-20 15:50:58 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 15:50:58 -HTTP METHOD : GET
2019-03-20 15:50:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 15:50:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@88f8430]
2019-03-20 15:50:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 15:50:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 15:50:58 -<==      Total: 10
2019-03-20 15:50:58 -==>  Preparing: select count(*) from elec 
2019-03-20 15:50:58 -==> Parameters: 
2019-03-20 15:50:58 -<==      Total: 1
2019-03-20 15:50:58 -耗时 : 39
2019-03-20 15:50:58 -返回值 : com.bootdo.common.utils.PageUtils@3f0e8c85
2019-03-20 15:56:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 15:56:19 -==> Parameters: 1(Long)
2019-03-20 15:56:19 -<==      Total: 90
2019-03-20 15:56:19 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 15:56:19 -HTTP METHOD : GET
2019-03-20 15:56:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 15:56:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@6642959c]
2019-03-20 15:56:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-20 15:56:19 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 15:56:19 -<==      Total: 2
2019-03-20 15:56:19 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-20 15:56:19 -==> Parameters: 
2019-03-20 15:56:19 -<==      Total: 1
2019-03-20 15:56:19 -耗时 : 15
2019-03-20 15:56:19 -返回值 : com.bootdo.common.utils.PageUtils@1c9d1ef8
2019-03-20 15:57:24 -请求地址 : http://localhost:8081/print/print
2019-03-20 15:57:24 -HTTP METHOD : GET
2019-03-20 15:57:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-20 15:57:24 -参数 : []
2019-03-20 15:57:24 -耗时 : 2
2019-03-20 15:57:24 -返回值 : print/print/print
2019-03-20 15:57:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 15:57:25 -HTTP METHOD : GET
2019-03-20 15:57:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 15:57:25 -参数 : [userType]
2019-03-20 15:57:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 15:57:25 -==> Parameters: userType(String)
2019-03-20 15:57:25 -<==      Total: 2
2019-03-20 15:57:25 -耗时 : 6
2019-03-20 15:57:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 15:57:25 -请求地址 : http://localhost:8081/print/print/list
2019-03-20 15:57:25 -HTTP METHOD : GET
2019-03-20 15:57:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-20 15:57:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-20 15:57:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-20 15:57:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 15:57:25 -<==      Total: 3
2019-03-20 15:57:25 -==>  Preparing: select count(*) from print 
2019-03-20 15:57:25 -==> Parameters: 
2019-03-20 15:57:25 -<==      Total: 1
2019-03-20 15:57:25 -耗时 : 206
2019-03-20 15:57:25 -返回值 : com.bootdo.common.utils.PageUtils@3196067
2019-03-20 15:58:25 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-20 15:58:25 -HTTP METHOD : GET
2019-03-20 15:58:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-20 15:58:25 -参数 : [1, {}]
2019-03-20 15:58:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-20 15:58:25 -==> Parameters: 1(Long)
2019-03-20 15:58:25 -<==      Total: 1
2019-03-20 15:58:25 -耗时 : 19
2019-03-20 15:58:25 -返回值 : print/print/printEdit
2019-03-20 15:59:27 -请求地址 : http://localhost:8081/index
2019-03-20 15:59:27 -HTTP METHOD : GET
2019-03-20 15:59:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 15:59:27 -参数 : [{}]
2019-03-20 15:59:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 15:59:27 -==> Parameters: 1(Long)
2019-03-20 15:59:27 -<==      Total: 46
2019-03-20 15:59:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 15:59:27 -==> Parameters: 138(Long)
2019-03-20 15:59:27 -<==      Total: 1
2019-03-20 15:59:27 -耗时 : 55
2019-03-20 15:59:27 -返回值 : index_v1
2019-03-20 15:59:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 15:59:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 55(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 15:59:27.746(Timestamp)
2019-03-20 15:59:27 -请求地址 : http://localhost:8081/main
2019-03-20 15:59:27 -HTTP METHOD : GET
2019-03-20 15:59:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 15:59:27 -参数 : []
2019-03-20 15:59:27 -耗时 : 1
2019-03-20 15:59:27 -返回值 : main
2019-03-20 15:59:27 -<==    Updates: 1
2019-03-20 15:59:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 15:59:27 -HTTP METHOD : GET
2019-03-20 15:59:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 15:59:27 -参数 : []
2019-03-20 15:59:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 15:59:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 15:59:27 -<==      Total: 0
2019-03-20 15:59:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 15:59:27 -==> Parameters: 1(Long), 0(String)
2019-03-20 15:59:28 -<==      Total: 1
2019-03-20 15:59:28 -耗时 : 10
2019-03-20 15:59:28 -返回值 : com.bootdo.common.utils.PageUtils@1fc12a7f
2019-03-20 15:59:28 -请求地址 : http://localhost:8081/main
2019-03-20 15:59:28 -HTTP METHOD : GET
2019-03-20 15:59:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 15:59:28 -参数 : []
2019-03-20 15:59:28 -耗时 : 2
2019-03-20 15:59:28 -返回值 : main
2019-03-20 15:59:29 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-20 15:59:29 -HTTP METHOD : GET
2019-03-20 15:59:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-20 15:59:29 -参数 : []
2019-03-20 15:59:29 -耗时 : 1
2019-03-20 15:59:29 -返回值 : /moneyList/moneyList
2019-03-20 16:00:18 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 16:01:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 16:01:17 -HTTP METHOD : GET
2019-03-20 16:01:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 16:01:17 -参数 : []
2019-03-20 16:01:17 -耗时 : 1
2019-03-20 16:01:17 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 16:01:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:01:18 -HTTP METHOD : GET
2019-03-20 16:01:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:01:18 -参数 : [userType]
2019-03-20 16:01:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:01:18 -==> Parameters: userType(String)
2019-03-20 16:01:18 -<==      Total: 2
2019-03-20 16:01:18 -耗时 : 5
2019-03-20 16:01:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:01:18 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 16:01:18 -HTTP METHOD : GET
2019-03-20 16:01:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 16:01:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 16:01:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 16:01:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 16:01:18 -<==      Total: 4
2019-03-20 16:01:18 -==>  Preparing: select count(*) from elec_log 
2019-03-20 16:01:18 -==> Parameters: 
2019-03-20 16:01:18 -<==      Total: 1
2019-03-20 16:01:18 -耗时 : 28
2019-03-20 16:01:18 -返回值 : com.bootdo.common.utils.PageUtils@74507d04
2019-03-20 16:01:39 -请求地址 : http://localhost:8081/charts/countDD
2019-03-20 16:01:39 -HTTP METHOD : GET
2019-03-20 16:01:39 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-20 16:01:39 -参数 : []
2019-03-20 16:01:39 -耗时 : 1
2019-03-20 16:01:39 -返回值 : charts/countDD
2019-03-20 16:01:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:01:39 -HTTP METHOD : GET
2019-03-20 16:01:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:01:39 -参数 : [userType]
2019-03-20 16:01:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:01:39 -==> Parameters: userType(String)
2019-03-20 16:01:39 -<==      Total: 2
2019-03-20 16:01:39 -耗时 : 23
2019-03-20 16:01:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:03:34 -请求地址 : http://localhost:8081/charts/countMM
2019-03-20 16:03:34 -HTTP METHOD : GET
2019-03-20 16:03:34 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-20 16:03:34 -参数 : []
2019-03-20 16:03:34 -耗时 : 1
2019-03-20 16:03:34 -返回值 : charts/countMM
2019-03-20 16:04:08 -请求地址 : http://localhost:8081/charts/countYY
2019-03-20 16:04:08 -HTTP METHOD : GET
2019-03-20 16:04:08 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-20 16:04:08 -参数 : []
2019-03-20 16:04:08 -耗时 : 1
2019-03-20 16:04:08 -返回值 : charts/countYY
2019-03-20 16:04:28 -请求地址 : http://localhost:8081/charts/countRun
2019-03-20 16:04:28 -HTTP METHOD : GET
2019-03-20 16:04:28 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-20 16:04:28 -参数 : []
2019-03-20 16:04:28 -耗时 : 1
2019-03-20 16:04:28 -返回值 : charts/countRun
2019-03-20 16:04:48 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-20 16:04:48 -HTTP METHOD : GET
2019-03-20 16:04:48 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-20 16:04:48 -参数 : []
2019-03-20 16:04:48 -耗时 : 1
2019-03-20 16:04:48 -返回值 : charts/countOwe
2019-03-20 16:04:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:04:49 -HTTP METHOD : GET
2019-03-20 16:04:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:04:49 -参数 : [userType]
2019-03-20 16:04:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:04:49 -==> Parameters: userType(String)
2019-03-20 16:04:49 -<==      Total: 2
2019-03-20 16:04:49 -耗时 : 26
2019-03-20 16:04:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:05:55 -请求地址 : http://localhost:8081/print/print
2019-03-20 16:05:55 -HTTP METHOD : GET
2019-03-20 16:05:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-20 16:05:55 -参数 : []
2019-03-20 16:05:55 -耗时 : 3
2019-03-20 16:05:55 -返回值 : print/print/print
2019-03-20 16:05:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:05:55 -HTTP METHOD : GET
2019-03-20 16:05:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:05:55 -参数 : [userType]
2019-03-20 16:05:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:05:55 -==> Parameters: userType(String)
2019-03-20 16:05:55 -<==      Total: 2
2019-03-20 16:05:55 -耗时 : 7
2019-03-20 16:05:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:05:55 -请求地址 : http://localhost:8081/print/print/list
2019-03-20 16:05:55 -HTTP METHOD : GET
2019-03-20 16:05:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-20 16:05:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-20 16:05:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-20 16:05:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 16:05:55 -<==      Total: 3
2019-03-20 16:05:55 -==>  Preparing: select count(*) from print 
2019-03-20 16:05:55 -==> Parameters: 
2019-03-20 16:05:55 -<==      Total: 1
2019-03-20 16:05:55 -耗时 : 11
2019-03-20 16:05:55 -返回值 : com.bootdo.common.utils.PageUtils@571e6b5
2019-03-20 16:05:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 16:05:57 -HTTP METHOD : GET
2019-03-20 16:05:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 16:05:57 -参数 : []
2019-03-20 16:05:57 -耗时 : 0
2019-03-20 16:05:57 -返回值 : system/dept/deptTree
2019-03-20 16:05:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 16:05:57 -HTTP METHOD : GET
2019-03-20 16:05:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 16:05:57 -参数 : []
2019-03-20 16:05:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 16:05:57 -==> Parameters: 
2019-03-20 16:05:57 -<==      Total: 3
2019-03-20 16:05:57 -耗时 : 4
2019-03-20 16:05:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 16:06:08 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-20 16:06:08 -HTTP METHOD : GET
2019-03-20 16:06:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-20 16:06:08 -参数 : [1, {}]
2019-03-20 16:06:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-20 16:06:08 -==> Parameters: 1(Long)
2019-03-20 16:06:08 -<==      Total: 1
2019-03-20 16:06:08 -耗时 : 7
2019-03-20 16:06:08 -返回值 : print/print/edit
2019-03-20 16:06:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:06:08 -HTTP METHOD : GET
2019-03-20 16:06:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:06:08 -参数 : [userType]
2019-03-20 16:06:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:06:08 -==> Parameters: userType(String)
2019-03-20 16:06:08 -<==      Total: 2
2019-03-20 16:06:08 -耗时 : 9
2019-03-20 16:06:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:06:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 381]
2019-03-20 16:07:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 16:07:21 -==> Parameters: 1(Long)
2019-03-20 16:07:21 -<==      Total: 90
2019-03-20 16:07:21 -请求地址 : http://localhost:8081/water/waterUpLoad
2019-03-20 16:07:21 -HTTP METHOD : GET
2019-03-20 16:07:21 -CLASS_METHOD : com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad
2019-03-20 16:07:21 -参数 : []
2019-03-20 16:07:21 -耗时 : 1
2019-03-20 16:07:21 -返回值 : water/waterUpLoad/waterUpLoad
2019-03-20 16:07:49 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 16:07:49 -HTTP METHOD : GET
2019-03-20 16:07:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 16:07:49 -参数 : []
2019-03-20 16:07:49 -耗时 : 1
2019-03-20 16:07:49 -返回值 : elec/elec/elec
2019-03-20 16:07:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:07:49 -HTTP METHOD : GET
2019-03-20 16:07:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:07:49 -参数 : [userType]
2019-03-20 16:07:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:07:49 -==> Parameters: userType(String)
2019-03-20 16:07:49 -<==      Total: 2
2019-03-20 16:07:49 -耗时 : 15
2019-03-20 16:07:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:07:49 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 16:07:49 -HTTP METHOD : GET
2019-03-20 16:07:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 16:07:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@5b048fb]
2019-03-20 16:07:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 16:07:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 16:07:49 -<==      Total: 10
2019-03-20 16:07:49 -==>  Preparing: select count(*) from elec 
2019-03-20 16:07:49 -==> Parameters: 
2019-03-20 16:07:49 -<==      Total: 1
2019-03-20 16:07:49 -耗时 : 12
2019-03-20 16:07:49 -返回值 : com.bootdo.common.utils.PageUtils@40ecb09f
2019-03-20 16:08:34 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 16:08:34 -HTTP METHOD : GET
2019-03-20 16:08:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 16:08:34 -参数 : []
2019-03-20 16:08:34 -耗时 : 0
2019-03-20 16:08:34 -返回值 : elec/elec/add
2019-03-20 16:08:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:08:34 -HTTP METHOD : GET
2019-03-20 16:08:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:08:34 -参数 : [userType]
2019-03-20 16:08:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:08:34 -==> Parameters: userType(String)
2019-03-20 16:08:34 -<==      Total: 2
2019-03-20 16:08:34 -耗时 : 9
2019-03-20 16:08:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:08:34 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 16:08:34 -HTTP METHOD : GET
2019-03-20 16:08:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:08:34 -参数 : [elecType]
2019-03-20 16:08:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:08:34 -==> Parameters: elecType(String)
2019-03-20 16:08:34 -<==      Total: 2
2019-03-20 16:08:34 -耗时 : 5
2019-03-20 16:08:34 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:08:34 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 16:08:34 -HTTP METHOD : GET
2019-03-20 16:08:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:08:34 -参数 : [userState]
2019-03-20 16:08:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:08:34 -==> Parameters: userState(String)
2019-03-20 16:08:34 -<==      Total: 2
2019-03-20 16:08:34 -耗时 : 4
2019-03-20 16:08:34 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:08:44 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 16:08:44 -HTTP METHOD : GET
2019-03-20 16:08:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 16:08:44 -参数 : [1, {}]
2019-03-20 16:08:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 16:08:44 -==> Parameters: 1(Long)
2019-03-20 16:08:44 -<==      Total: 1
2019-03-20 16:08:44 -耗时 : 11
2019-03-20 16:08:44 -返回值 : elec/elec/edit
2019-03-20 16:08:44 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 16:08:44 -HTTP METHOD : GET
2019-03-20 16:08:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:08:44 -参数 : [elecType]
2019-03-20 16:08:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:08:44 -==> Parameters: elecType(String)
2019-03-20 16:08:44 -<==      Total: 2
2019-03-20 16:08:44 -耗时 : 4
2019-03-20 16:08:44 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:08:44 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 16:08:44 -HTTP METHOD : GET
2019-03-20 16:08:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:08:44 -参数 : [userState]
2019-03-20 16:08:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:08:44 -==> Parameters: userState(String)
2019-03-20 16:08:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:08:44 -HTTP METHOD : GET
2019-03-20 16:08:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:08:44 -参数 : [userType]
2019-03-20 16:08:44 -<==      Total: 2
2019-03-20 16:08:44 -耗时 : 5
2019-03-20 16:08:44 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:08:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:08:44 -==> Parameters: userType(String)
2019-03-20 16:08:44 -<==      Total: 2
2019-03-20 16:08:44 -耗时 : 8
2019-03-20 16:08:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:13:22 -请求地址 : http://localhost:8081/index
2019-03-20 16:13:22 -HTTP METHOD : GET
2019-03-20 16:13:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 16:13:22 -参数 : [{}]
2019-03-20 16:13:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 16:13:22 -==> Parameters: 1(Long)
2019-03-20 16:13:22 -<==      Total: 46
2019-03-20 16:13:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 16:13:22 -==> Parameters: 138(Long)
2019-03-20 16:13:22 -<==      Total: 1
2019-03-20 16:13:22 -耗时 : 115
2019-03-20 16:13:22 -返回值 : index_v1
2019-03-20 16:13:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 16:13:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 115(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 16:13:22.638(Timestamp)
2019-03-20 16:13:22 -<==    Updates: 1
2019-03-20 16:13:22 -请求地址 : http://localhost:8081/main
2019-03-20 16:13:22 -HTTP METHOD : GET
2019-03-20 16:13:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 16:13:22 -参数 : []
2019-03-20 16:13:22 -耗时 : 0
2019-03-20 16:13:22 -返回值 : main
2019-03-20 16:13:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 16:13:23 -HTTP METHOD : GET
2019-03-20 16:13:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 16:13:23 -参数 : []
2019-03-20 16:13:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 16:13:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 16:13:23 -<==      Total: 0
2019-03-20 16:13:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 16:13:23 -==> Parameters: 1(Long), 0(String)
2019-03-20 16:13:23 -<==      Total: 1
2019-03-20 16:13:23 -耗时 : 31
2019-03-20 16:13:23 -返回值 : com.bootdo.common.utils.PageUtils@46ef5f4c
2019-03-20 16:13:23 -请求地址 : http://localhost:8081/main
2019-03-20 16:13:23 -HTTP METHOD : GET
2019-03-20 16:13:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 16:13:23 -参数 : []
2019-03-20 16:13:23 -耗时 : 0
2019-03-20 16:13:23 -返回值 : main
2019-03-20 16:13:25 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-20 16:13:25 -HTTP METHOD : GET
2019-03-20 16:13:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-20 16:13:25 -参数 : []
2019-03-20 16:13:25 -耗时 : 1
2019-03-20 16:13:25 -返回值 : /moneyList/moneyList
2019-03-20 16:14:29 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 16:14:29 -HTTP METHOD : GET
2019-03-20 16:14:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 16:14:29 -参数 : []
2019-03-20 16:14:29 -耗时 : 0
2019-03-20 16:14:29 -返回值 : elec/elec/elec
2019-03-20 16:14:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:14:29 -HTTP METHOD : GET
2019-03-20 16:14:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:14:29 -参数 : [userType]
2019-03-20 16:14:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:14:29 -==> Parameters: userType(String)
2019-03-20 16:14:29 -<==      Total: 2
2019-03-20 16:14:29 -耗时 : 4
2019-03-20 16:14:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:14:29 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 16:14:29 -HTTP METHOD : GET
2019-03-20 16:14:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 16:14:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@a2193c3]
2019-03-20 16:14:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 16:14:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 16:14:29 -<==      Total: 10
2019-03-20 16:14:29 -==>  Preparing: select count(*) from elec 
2019-03-20 16:14:29 -==> Parameters: 
2019-03-20 16:14:29 -<==      Total: 1
2019-03-20 16:14:29 -耗时 : 55
2019-03-20 16:14:29 -返回值 : com.bootdo.common.utils.PageUtils@3d2130d6
2019-03-20 16:15:06 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 16:15:06 -HTTP METHOD : GET
2019-03-20 16:15:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 16:15:06 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, createTime=, queryType=1, type=B}, com.bootdo.elec.domain.ElecDO@6c7c8d40]
2019-03-20 16:15:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? order by id asc limit ?, ? 
2019-03-20 16:15:06 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-03-20 16:15:06 -<==      Total: 3
2019-03-20 16:15:06 -==>  Preparing: select count(*) from elec WHERE user_type = ? 
2019-03-20 16:15:06 -==> Parameters: B(String)
2019-03-20 16:15:06 -<==      Total: 1
2019-03-20 16:15:06 -耗时 : 36
2019-03-20 16:15:06 -返回值 : com.bootdo.common.utils.PageUtils@6e11b5b8
2019-03-20 16:15:10 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 16:15:10 -HTTP METHOD : GET
2019-03-20 16:15:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 16:15:10 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=, queryType=1, type=A}, com.bootdo.elec.domain.ElecDO@68eb4101]
2019-03-20 16:15:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? order by id asc limit ?, ? 
2019-03-20 16:15:10 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-20 16:15:10 -<==      Total: 9
2019-03-20 16:15:10 -==>  Preparing: select count(*) from elec WHERE user_type = ? 
2019-03-20 16:15:10 -==> Parameters: A(String)
2019-03-20 16:15:10 -<==      Total: 1
2019-03-20 16:15:10 -耗时 : 36
2019-03-20 16:15:10 -返回值 : com.bootdo.common.utils.PageUtils@31537e3c
2019-03-20 16:15:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 16:15:12 -HTTP METHOD : GET
2019-03-20 16:15:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 16:15:12 -参数 : []
2019-03-20 16:15:12 -耗时 : 0
2019-03-20 16:15:12 -返回值 : system/dept/deptTree
2019-03-20 16:15:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 16:15:12 -HTTP METHOD : GET
2019-03-20 16:15:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 16:15:12 -参数 : []
2019-03-20 16:15:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 16:15:12 -==> Parameters: 
2019-03-20 16:15:12 -<==      Total: 3
2019-03-20 16:15:12 -耗时 : 6
2019-03-20 16:15:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 16:16:01 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 16:16:01 -HTTP METHOD : GET
2019-03-20 16:16:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 16:16:01 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=1-0002, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@61e2a48d]
2019-03-20 16:16:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_id = ? and user_type = ? order by id asc limit ?, ? 
2019-03-20 16:16:01 -==> Parameters: 1-0002(String), A(String), 0(Integer), 10(Integer)
2019-03-20 16:16:01 -<==      Total: 1
2019-03-20 16:16:01 -==>  Preparing: select count(*) from elec WHERE user_id = ? and user_type = ? 
2019-03-20 16:16:01 -==> Parameters: 1-0002(String), A(String)
2019-03-20 16:16:01 -<==      Total: 1
2019-03-20 16:16:01 -耗时 : 13
2019-03-20 16:16:01 -返回值 : com.bootdo.common.utils.PageUtils@4e3b50fe
2019-03-20 16:17:00 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 16:17:00 -HTTP METHOD : GET
2019-03-20 16:17:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 16:17:00 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@1547d70b]
2019-03-20 16:17:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? order by id asc limit ?, ? 
2019-03-20 16:17:00 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-20 16:17:00 -<==      Total: 9
2019-03-20 16:17:00 -==>  Preparing: select count(*) from elec WHERE user_type = ? 
2019-03-20 16:17:00 -==> Parameters: A(String)
2019-03-20 16:17:00 -<==      Total: 1
2019-03-20 16:17:00 -耗时 : 8
2019-03-20 16:17:00 -返回值 : com.bootdo.common.utils.PageUtils@1e9a2169
2019-03-20 16:17:18 -请求地址 : http://localhost:8081/elec/elec/edit/2
2019-03-20 16:17:18 -HTTP METHOD : GET
2019-03-20 16:17:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 16:17:18 -参数 : [2, {}]
2019-03-20 16:17:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 16:17:18 -==> Parameters: 2(Long)
2019-03-20 16:17:18 -<==      Total: 1
2019-03-20 16:17:18 -耗时 : 6
2019-03-20 16:17:18 -返回值 : elec/elec/edit
2019-03-20 16:17:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:17:19 -HTTP METHOD : GET
2019-03-20 16:17:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:17:19 -参数 : [userType]
2019-03-20 16:17:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:17:19 -==> Parameters: userType(String)
2019-03-20 16:17:19 -<==      Total: 2
2019-03-20 16:17:19 -耗时 : 4
2019-03-20 16:17:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:17:19 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 16:17:19 -HTTP METHOD : GET
2019-03-20 16:17:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:17:19 -参数 : [elecType]
2019-03-20 16:17:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:17:19 -==> Parameters: elecType(String)
2019-03-20 16:17:19 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 16:17:19 -HTTP METHOD : GET
2019-03-20 16:17:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:17:19 -参数 : [userState]
2019-03-20 16:17:19 -<==      Total: 2
2019-03-20 16:17:19 -耗时 : 3
2019-03-20 16:17:19 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:17:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:17:19 -==> Parameters: userState(String)
2019-03-20 16:17:19 -<==      Total: 2
2019-03-20 16:17:19 -耗时 : 4
2019-03-20 16:17:19 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:17:26 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 16:17:26 -==> Parameters: 1(Long)
2019-03-20 16:17:26 -<==      Total: 90
2019-03-20 16:17:26 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 16:17:26 -HTTP METHOD : GET
2019-03-20 16:17:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 16:17:26 -参数 : []
2019-03-20 16:17:26 -耗时 : 1
2019-03-20 16:17:26 -返回值 : elec/elec/add
2019-03-20 16:17:27 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 16:17:27 -HTTP METHOD : GET
2019-03-20 16:17:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:17:27 -参数 : [userState]
2019-03-20 16:17:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:17:27 -==> Parameters: userState(String)
2019-03-20 16:17:27 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 16:17:27 -HTTP METHOD : GET
2019-03-20 16:17:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:17:27 -参数 : [elecType]
2019-03-20 16:17:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:17:27 -==> Parameters: elecType(String)
2019-03-20 16:17:27 -<==      Total: 2
2019-03-20 16:17:27 -耗时 : 4
2019-03-20 16:17:27 -<==      Total: 2
2019-03-20 16:17:27 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:17:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:17:27 -HTTP METHOD : GET
2019-03-20 16:17:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:17:27 -参数 : [userType]
2019-03-20 16:17:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:17:27 -==> Parameters: userType(String)
2019-03-20 16:17:27 -<==      Total: 2
2019-03-20 16:17:27 -耗时 : 9
2019-03-20 16:17:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:17:27 -耗时 : 22
2019-03-20 16:17:27 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:17:54 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-20 16:17:54 -HTTP METHOD : GET
2019-03-20 16:17:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-20 16:17:54 -参数 : []
2019-03-20 16:17:54 -耗时 : 1
2019-03-20 16:17:54 -返回值 : elec/elecInto/elecInto
2019-03-20 16:17:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 16:17:55 -HTTP METHOD : GET
2019-03-20 16:17:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 16:17:55 -参数 : []
2019-03-20 16:17:55 -耗时 : 2
2019-03-20 16:17:55 -返回值 : system/dept/deptTree
2019-03-20 16:17:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 16:17:55 -HTTP METHOD : GET
2019-03-20 16:17:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 16:17:55 -参数 : []
2019-03-20 16:17:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 16:17:55 -==> Parameters: 
2019-03-20 16:17:55 -<==      Total: 3
2019-03-20 16:17:55 -耗时 : 3
2019-03-20 16:17:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 16:18:13 -请求地址 : http://localhost:8081/sys/role
2019-03-20 16:18:13 -HTTP METHOD : GET
2019-03-20 16:18:13 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-03-20 16:18:13 -参数 : []
2019-03-20 16:18:13 -耗时 : 1
2019-03-20 16:18:13 -返回值 : system/role/role
2019-03-20 16:18:13 -请求地址 : http://localhost:8081/sys/role/list
2019-03-20 16:18:13 -HTTP METHOD : GET
2019-03-20 16:18:13 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-20 16:18:13 -参数 : []
2019-03-20 16:18:13 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-20 16:18:13 -==> Parameters: 
2019-03-20 16:18:14 -<==      Total: 10
2019-03-20 16:18:14 -耗时 : 150
2019-03-20 16:18:14 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-20 16:19:16 -请求地址 : http://localhost:8081/sys/role/edit/10
2019-03-20 16:19:16 -HTTP METHOD : GET
2019-03-20 16:19:16 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-03-20 16:19:16 -参数 : [10, {}]
2019-03-20 16:19:16 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-03-20 16:19:16 -==> Parameters: 10(Long)
2019-03-20 16:19:16 -<==      Total: 1
2019-03-20 16:19:16 -耗时 : 9
2019-03-20 16:19:16 -返回值 : system/role/edit
2019-03-20 16:19:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 16:19:16 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 9(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-03-20 16:19:16.428(Timestamp)
2019-03-20 16:19:16 -<==    Updates: 1
2019-03-20 16:19:16 -请求地址 : http://localhost:8081/sys/menu/tree/10
2019-03-20 16:19:16 -HTTP METHOD : GET
2019-03-20 16:19:16 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-03-20 16:19:16 -参数 : [10]
2019-03-20 16:19:16 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-03-20 16:19:16 -==> Parameters: 
2019-03-20 16:19:16 -<==      Total: 106
2019-03-20 16:19:16 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-03-20 16:19:16 -==> Parameters: 10(Long)
2019-03-20 16:19:16 -<==      Total: 3
2019-03-20 16:19:16 -耗时 : 39
2019-03-20 16:19:16 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":false},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":false},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":false},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":false},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":false},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":false},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":false},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":false},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":false},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":false},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":false},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":false},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":false},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":false},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":false},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":false},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":false},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":false},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":false},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":false},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":false},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":false},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-03-20 16:19:35 -请求地址 : http://localhost:8081/sys/role/edit/6
2019-03-20 16:19:35 -HTTP METHOD : GET
2019-03-20 16:19:35 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-03-20 16:19:35 -参数 : [6, {}]
2019-03-20 16:19:35 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-03-20 16:19:35 -==> Parameters: 6(Long)
2019-03-20 16:19:35 -<==      Total: 1
2019-03-20 16:19:35 -耗时 : 3
2019-03-20 16:19:35 -返回值 : system/role/edit
2019-03-20 16:19:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 16:19:35 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 4(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-03-20 16:19:35.79(Timestamp)
2019-03-20 16:19:35 -<==    Updates: 1
2019-03-20 16:19:36 -请求地址 : http://localhost:8081/sys/menu/tree/6
2019-03-20 16:19:36 -HTTP METHOD : GET
2019-03-20 16:19:36 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-03-20 16:19:36 -参数 : [6]
2019-03-20 16:19:36 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-03-20 16:19:36 -==> Parameters: 
2019-03-20 16:19:36 -<==      Total: 106
2019-03-20 16:19:36 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-03-20 16:19:36 -==> Parameters: 6(Long)
2019-03-20 16:19:36 -<==      Total: 15
2019-03-20 16:19:36 -耗时 : 54
2019-03-20 16:19:36 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":false},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":true},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":false},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":false},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":false},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":false},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":true},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":true},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":true},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":true},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":false},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":false},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":false},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":false},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":false},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":false},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":false},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":false},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":false},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":false},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-03-20 16:19:39 -请求地址 : http://localhost:8081/system/sysDept
2019-03-20 16:19:39 -HTTP METHOD : GET
2019-03-20 16:19:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.dept
2019-03-20 16:19:39 -参数 : []
2019-03-20 16:19:39 -耗时 : 0
2019-03-20 16:19:39 -返回值 : system/dept/dept
2019-03-20 16:19:40 -请求地址 : http://localhost:8081/system/sysDept/list
2019-03-20 16:19:40 -HTTP METHOD : GET
2019-03-20 16:19:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-03-20 16:19:40 -参数 : []
2019-03-20 16:19:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 16:19:40 -==> Parameters: 
2019-03-20 16:19:40 -<==      Total: 3
2019-03-20 16:19:40 -耗时 : 3
2019-03-20 16:19:40 -返回值 : [DeptDO{deptId=3, parentId=1, name='牙星', orderNum=2, delFlag=1}, DeptDO{deptId=2, parentId=1, name='五九', orderNum=1, delFlag=1}, DeptDO{deptId=1, parentId=0, name='总公司', orderNum=0, delFlag=1}]
2019-03-20 16:19:43 -请求地址 : http://localhost:8081/sys/user/
2019-03-20 16:19:43 -HTTP METHOD : GET
2019-03-20 16:19:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.user
2019-03-20 16:19:43 -参数 : [{}]
2019-03-20 16:19:43 -耗时 : 1
2019-03-20 16:19:43 -返回值 : system/user/user
2019-03-20 16:19:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 16:19:44 -HTTP METHOD : GET
2019-03-20 16:19:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 16:19:44 -参数 : []
2019-03-20 16:19:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 16:19:44 -==> Parameters: 
2019-03-20 16:19:44 -<==      Total: 3
2019-03-20 16:19:44 -耗时 : 3
2019-03-20 16:19:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 16:19:44 -请求地址 : http://localhost:8081/sys/user/list
2019-03-20 16:19:44 -HTTP METHOD : GET
2019-03-20 16:19:44 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-03-20 16:19:44 -参数 : [{limit=10, offset=0, name=, deptId=}]
2019-03-20 16:19:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user order by user_id desc limit ?, ? 
2019-03-20 16:19:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 16:19:44 -<==      Total: 10
2019-03-20 16:19:44 -==>  Preparing: select count(*) from sys_user 
2019-03-20 16:19:44 -==> Parameters: 
2019-03-20 16:19:44 -<==      Total: 1
2019-03-20 16:19:44 -耗时 : 18
2019-03-20 16:19:44 -返回值 : com.bootdo.common.utils.PageUtils@13097f3e
2019-03-20 16:20:28 -请求地址 : http://localhost:8081/common/job
2019-03-20 16:20:28 -HTTP METHOD : GET
2019-03-20 16:20:28 -CLASS_METHOD : com.bootdo.common.controller.JobController.taskScheduleJob
2019-03-20 16:20:28 -参数 : []
2019-03-20 16:20:28 -耗时 : 2
2019-03-20 16:20:28 -返回值 : common/job/job
2019-03-20 16:21:00 -请求地址 : http://localhost:8081/common/time
2019-03-20 16:21:00 -HTTP METHOD : GET
2019-03-20 16:21:00 -CLASS_METHOD : com.bootdo.common.controller.TimeController.Time
2019-03-20 16:21:00 -参数 : []
2019-03-20 16:21:00 -耗时 : 1
2019-03-20 16:21:00 -返回值 : common/job/time
2019-03-20 16:21:06 -请求地址 : http://localhost:8081/common/long
2019-03-20 16:21:06 -HTTP METHOD : GET
2019-03-20 16:21:06 -CLASS_METHOD : com.bootdo.common.controller.LongController.Long
2019-03-20 16:21:06 -参数 : []
2019-03-20 16:21:06 -耗时 : 0
2019-03-20 16:21:06 -返回值 : common/job/Long
2019-03-20 16:23:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 16:23:06 -HTTP METHOD : GET
2019-03-20 16:23:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 16:23:06 -参数 : []
2019-03-20 16:23:06 -耗时 : 1
2019-03-20 16:23:06 -返回值 : system/dept/deptTree
2019-03-20 16:23:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 16:23:07 -HTTP METHOD : GET
2019-03-20 16:23:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 16:23:07 -参数 : []
2019-03-20 16:23:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 16:23:07 -==> Parameters: 
2019-03-20 16:23:07 -<==      Total: 3
2019-03-20 16:23:07 -耗时 : 4
2019-03-20 16:23:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 16:24:17 -请求地址 : http://localhost:8081/sys/online
2019-03-20 16:24:17 -HTTP METHOD : GET
2019-03-20 16:24:17 -CLASS_METHOD : com.bootdo.system.controller.SessionController.online
2019-03-20 16:24:17 -参数 : []
2019-03-20 16:24:17 -耗时 : 53
2019-03-20 16:24:17 -返回值 : system/online/online
2019-03-20 16:24:17 -请求地址 : http://localhost:8081/sys/online/list
2019-03-20 16:24:17 -HTTP METHOD : GET
2019-03-20 16:24:17 -CLASS_METHOD : com.bootdo.system.controller.SessionController.list
2019-03-20 16:24:17 -参数 : []
2019-03-20 16:24:17 -耗时 : 1
2019-03-20 16:24:17 -返回值 : [com.bootdo.system.domain.UserOnline@628caa2f]
2019-03-20 16:24:29 -请求地址 : http://localhost:8081/common/log
2019-03-20 16:24:29 -HTTP METHOD : GET
2019-03-20 16:24:29 -CLASS_METHOD : com.bootdo.common.controller.LogController.log
2019-03-20 16:24:29 -参数 : []
2019-03-20 16:24:29 -耗时 : 8
2019-03-20 16:24:29 -返回值 : common/log/log
2019-03-20 16:24:29 -请求地址 : http://localhost:8081/common/log/list
2019-03-20 16:24:29 -HTTP METHOD : GET
2019-03-20 16:24:29 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-20 16:24:29 -参数 : [{limit=10, offset=0, sort=gmt_create, order=desc, operation=, username=}]
2019-03-20 16:24:29 -==>  Preparing: select count(*) from sys_log 
2019-03-20 16:24:29 -==> Parameters: 
2019-03-20 16:24:30 -<==      Total: 1
2019-03-20 16:24:30 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log order by gmt_create desc limit ?, ? 
2019-03-20 16:24:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 16:24:30 -<==      Total: 10
2019-03-20 16:24:30 -耗时 : 1283
2019-03-20 16:24:30 -返回值 : PageDO{offset=0, limit=10, total=493, params={}, param='', rows=[LogDO{id=2407, userId=1, username='admin', operation='编辑角色', time=4, method='com.bootdo.system.controller.RoleController.edit()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 20 16:19:36 CST 2019}, LogDO{id=2406, userId=1, username='admin', operation='编辑角色', time=9, method='com.bootdo.system.controller.RoleController.edit()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 20 16:19:16 CST 2019}, LogDO{id=2405, userId=1, username='admin', operation='请求访问主页', time=115, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 20 16:13:23 CST 2019}, LogDO{id=2404, userId=1, username='admin', operation='请求访问主页', time=55, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 20 15:59:28 CST 2019}, LogDO{id=2403, userId=1, username='admin', operation='请求访问主页', time=1164, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 20 15:40:36 CST 2019}, LogDO{id=2402, userId=1, username='admin', operation='登录', time=943, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 20 15:40:35 CST 2019}, LogDO{id=2401, userId=-1, username='获取用户信息为空', operation='登录', time=281, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 20 15:40:24 CST 2019}, LogDO{id=2400, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/elec/elec/save', params='org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null', ip='null', gmtCreate=Wed Mar 20 14:59:38 CST 2019}, LogDO{id=2399, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/elec/elec/save', params='org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
### The error may involve com.bootdo.elec.dao.ElecDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into elec   (    `user_id`,     `user_name`,     `user_type`,     `user_org`,     `user_tell`,     `user_state`,     `wages_id`,     `elec_type`,     `elec_price`,     `start`,     `end`,     `hu`,     `elec_amount`,     `elec_cost`,     `elec_sum`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null
; ]; Column 'elec_price' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'elec_price' cannot be null', ip='null', gmtCreate=Wed Mar 20 14:59:34 CST 2019}, LogDO{id=2398, userId=1, username='admin', operation='请求访问主页', time=21, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 20 14:59:23 CST 2019}]}
2019-03-20 16:25:03 -请求地址 : http://localhost:8081/oa/notify/selfNotify
2019-03-20 16:25:03 -HTTP METHOD : GET
2019-03-20 16:25:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2019-03-20 16:25:03 -参数 : []
2019-03-20 16:25:03 -耗时 : 1
2019-03-20 16:25:03 -返回值 : oa/notify/selfNotify
2019-03-20 16:25:04 -请求地址 : http://localhost:8081/oa/notify/selfList
2019-03-20 16:25:04 -HTTP METHOD : GET
2019-03-20 16:25:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2019-03-20 16:25:04 -参数 : [{limit=10, offset=0}]
2019-03-20 16:25:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 16:25:04 -==> Parameters: 1(Long), 0(Integer), 10(Integer)
2019-03-20 16:25:04 -<==      Total: 5
2019-03-20 16:25:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-20 16:25:04 -==> Parameters: 1(Long)
2019-03-20 16:25:04 -<==      Total: 1
2019-03-20 16:25:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-20 16:25:04 -==> Parameters: 1(Long)
2019-03-20 16:25:04 -<==      Total: 1
2019-03-20 16:25:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-20 16:25:04 -==> Parameters: 1(Long)
2019-03-20 16:25:04 -<==      Total: 1
2019-03-20 16:25:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-20 16:25:04 -==> Parameters: 1(Long)
2019-03-20 16:25:04 -<==      Total: 1
2019-03-20 16:25:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-20 16:25:04 -==> Parameters: 1(Long)
2019-03-20 16:25:04 -<==      Total: 1
2019-03-20 16:25:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 16:25:04 -==> Parameters: 1(Long), null
2019-03-20 16:25:04 -<==      Total: 1
2019-03-20 16:25:04 -耗时 : 184
2019-03-20 16:25:04 -返回值 : com.bootdo.common.utils.PageUtils@2f613f9c
2019-03-20 16:26:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 16:26:10 -HTTP METHOD : GET
2019-03-20 16:26:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 16:26:10 -参数 : []
2019-03-20 16:26:10 -耗时 : 0
2019-03-20 16:26:10 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 16:26:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:26:10 -HTTP METHOD : GET
2019-03-20 16:26:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:26:10 -参数 : [userType]
2019-03-20 16:26:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:26:10 -==> Parameters: userType(String)
2019-03-20 16:26:10 -<==      Total: 2
2019-03-20 16:26:10 -耗时 : 5
2019-03-20 16:26:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:26:10 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 16:26:10 -HTTP METHOD : GET
2019-03-20 16:26:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 16:26:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 16:26:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 16:26:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 16:26:10 -<==      Total: 4
2019-03-20 16:26:10 -==>  Preparing: select count(*) from elec_log 
2019-03-20 16:26:10 -==> Parameters: 
2019-03-20 16:26:10 -<==      Total: 1
2019-03-20 16:26:10 -耗时 : 8
2019-03-20 16:26:10 -返回值 : com.bootdo.common.utils.PageUtils@7b614e89
2019-03-20 16:26:25 -请求地址 : http://localhost:8081/charts/countDD
2019-03-20 16:26:25 -HTTP METHOD : GET
2019-03-20 16:26:25 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-20 16:26:25 -参数 : []
2019-03-20 16:26:25 -耗时 : 1
2019-03-20 16:26:25 -返回值 : charts/countDD
2019-03-20 16:26:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:26:25 -HTTP METHOD : GET
2019-03-20 16:26:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:26:25 -参数 : [userType]
2019-03-20 16:26:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:26:25 -==> Parameters: userType(String)
2019-03-20 16:26:25 -<==      Total: 2
2019-03-20 16:26:25 -耗时 : 6
2019-03-20 16:26:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:26:27 -请求地址 : http://localhost:8081/charts/countMM
2019-03-20 16:26:27 -HTTP METHOD : GET
2019-03-20 16:26:27 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-20 16:26:27 -参数 : []
2019-03-20 16:26:27 -耗时 : 1
2019-03-20 16:26:27 -返回值 : charts/countMM
2019-03-20 16:27:26 -请求地址 : http://localhost:8081/charts/countYY
2019-03-20 16:27:26 -HTTP METHOD : GET
2019-03-20 16:27:26 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-20 16:27:26 -参数 : []
2019-03-20 16:27:26 -耗时 : 0
2019-03-20 16:27:26 -返回值 : charts/countYY
2019-03-20 16:27:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 16:27:41 -==> Parameters: 1(Long)
2019-03-20 16:27:41 -<==      Total: 90
2019-03-20 16:27:41 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-20 16:27:41 -HTTP METHOD : GET
2019-03-20 16:27:41 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-20 16:27:41 -参数 : []
2019-03-20 16:27:41 -耗时 : 1
2019-03-20 16:27:41 -返回值 : charts/countOwe
2019-03-20 16:27:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:27:41 -HTTP METHOD : GET
2019-03-20 16:27:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:27:41 -参数 : [userType]
2019-03-20 16:27:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:27:41 -==> Parameters: userType(String)
2019-03-20 16:27:41 -<==      Total: 2
2019-03-20 16:27:41 -耗时 : 3
2019-03-20 16:27:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:29:45 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 16:29:45 -HTTP METHOD : GET
2019-03-20 16:29:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 16:29:45 -参数 : []
2019-03-20 16:29:45 -耗时 : 1
2019-03-20 16:29:45 -返回值 : elec/elec/elec
2019-03-20 16:29:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 16:29:45 -HTTP METHOD : GET
2019-03-20 16:29:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 16:29:45 -参数 : [userType]
2019-03-20 16:29:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 16:29:45 -==> Parameters: userType(String)
2019-03-20 16:29:45 -<==      Total: 2
2019-03-20 16:29:45 -耗时 : 6
2019-03-20 16:29:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 16:29:45 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 16:29:45 -HTTP METHOD : GET
2019-03-20 16:29:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 16:29:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@7ebcd638]
2019-03-20 16:29:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 16:29:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 16:29:45 -<==      Total: 10
2019-03-20 16:29:45 -==>  Preparing: select count(*) from elec 
2019-03-20 16:29:45 -==> Parameters: 
2019-03-20 16:29:45 -<==      Total: 1
2019-03-20 16:29:45 -耗时 : 11
2019-03-20 16:29:45 -返回值 : com.bootdo.common.utils.PageUtils@3dcd2890
2019-03-20 16:30:15 -请求地址 : http://localhost:8081/sys/menu/
2019-03-20 16:30:15 -HTTP METHOD : GET
2019-03-20 16:30:15 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-20 16:30:15 -参数 : [{}]
2019-03-20 16:30:15 -耗时 : 1
2019-03-20 16:30:15 -返回值 : system/menu/menu
2019-03-20 16:30:16 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-20 16:30:16 -HTTP METHOD : GET
2019-03-20 16:30:16 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-20 16:30:16 -参数 : [{sort=order_num}]
2019-03-20 16:30:16 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-20 16:30:16 -==> Parameters: 
2019-03-20 16:30:16 -<==      Total: 106
2019-03-20 16:30:16 -耗时 : 38
2019-03-20 16:30:16 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-20 16:30:19 -请求地址 : http://localhost:8081/sys/role
2019-03-20 16:30:19 -HTTP METHOD : GET
2019-03-20 16:30:19 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-03-20 16:30:19 -参数 : []
2019-03-20 16:30:19 -耗时 : 0
2019-03-20 16:30:19 -返回值 : system/role/role
2019-03-20 16:30:19 -请求地址 : http://localhost:8081/sys/role/list
2019-03-20 16:30:19 -HTTP METHOD : GET
2019-03-20 16:30:19 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-20 16:30:19 -参数 : []
2019-03-20 16:30:19 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-20 16:30:19 -==> Parameters: 
2019-03-20 16:30:19 -<==      Total: 10
2019-03-20 16:30:19 -耗时 : 7
2019-03-20 16:30:19 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-20 16:34:09 -请求地址 : http://localhost:8081/system/sysDept
2019-03-20 16:34:09 -HTTP METHOD : GET
2019-03-20 16:34:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.dept
2019-03-20 16:34:09 -参数 : []
2019-03-20 16:34:09 -耗时 : 0
2019-03-20 16:34:09 -返回值 : system/dept/dept
2019-03-20 16:34:09 -请求地址 : http://localhost:8081/system/sysDept/list
2019-03-20 16:34:09 -HTTP METHOD : GET
2019-03-20 16:34:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-03-20 16:34:09 -参数 : []
2019-03-20 16:34:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 16:34:09 -==> Parameters: 
2019-03-20 16:34:09 -<==      Total: 3
2019-03-20 16:34:09 -耗时 : 6
2019-03-20 16:34:09 -返回值 : [DeptDO{deptId=3, parentId=1, name='牙星', orderNum=2, delFlag=1}, DeptDO{deptId=2, parentId=1, name='五九', orderNum=1, delFlag=1}, DeptDO{deptId=1, parentId=0, name='总公司', orderNum=0, delFlag=1}]
2019-03-20 16:34:13 -请求地址 : http://localhost:8081/sys/role/edit/9
2019-03-20 16:34:13 -HTTP METHOD : GET
2019-03-20 16:34:13 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-03-20 16:34:13 -参数 : [9, {}]
2019-03-20 16:34:13 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-03-20 16:34:13 -==> Parameters: 9(Long)
2019-03-20 16:34:13 -<==      Total: 1
2019-03-20 16:34:13 -耗时 : 3
2019-03-20 16:34:13 -返回值 : system/role/edit
2019-03-20 16:34:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 16:34:13 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 3(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-03-20 16:34:13.842(Timestamp)
2019-03-20 16:34:13 -<==    Updates: 1
2019-03-20 16:34:14 -请求地址 : http://localhost:8081/sys/menu/tree/9
2019-03-20 16:34:14 -HTTP METHOD : GET
2019-03-20 16:34:14 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-03-20 16:34:14 -参数 : [9]
2019-03-20 16:34:14 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-03-20 16:34:14 -==> Parameters: 
2019-03-20 16:34:14 -<==      Total: 106
2019-03-20 16:34:14 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-03-20 16:34:14 -==> Parameters: 9(Long)
2019-03-20 16:34:14 -<==      Total: 3
2019-03-20 16:34:14 -耗时 : 84
2019-03-20 16:34:14 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":false},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":false},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":false},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":false},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":false},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":false},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":false},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":false},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":false},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":false},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":false},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":false},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":false},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":false},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":false},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":false},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":false},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":false},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":false},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":false},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":false},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":false},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":false},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-03-20 16:35:07 -请求地址 : http://localhost:8081/sys/role/update
2019-03-20 16:35:07 -HTTP METHOD : POST
2019-03-20 16:35:07 -CLASS_METHOD : com.bootdo.system.controller.RoleController.update
2019-03-20 16:35:07 -参数 : [RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=[153, 152, 151, 150, 149, 159, 158, 157, 156, 107, 102, 141, 140, 139, 138, 145, 144, 143, 142, 120, 119, 118, 117, 136, 135, 134, 133, 148, 147, 146, 137, 116, 115, 114, 113, 123, 155, 112, 111, 110, 109, 98, 30, 29, 28, 92, 57, 27, 89, 88, 87, 86, 90, 85, 160, 154, 72, 76, 75, 74, 62, 56, 55, 15, 26, 25, 24, 14, 13, 12, 61, 22, 21, 20, 73, 7, 6, 2, 83, 81, 80, 79, 78, 71, 108, 106, 105, 104, 97, 91, 84, 77, 3, 1, -1, 103]}]
2019-03-20 16:35:07 -==>  Preparing: update sys_role SET `role_name` = ?, `remark` = ? where role_id = ? 
2019-03-20 16:35:07 -==> Parameters: 录入人员(五九)(String), 五九电表上传权限(String), 9(Long)
2019-03-20 16:35:07 -<==    Updates: 1
2019-03-20 16:35:07 -==>  Preparing: DELETE FROM sys_role_menu WHERE role_id=? 
2019-03-20 16:35:07 -==> Parameters: 9(Long)
2019-03-20 16:35:07 -<==    Updates: 3
2019-03-20 16:35:07 -==>  Preparing: INSERT INTO sys_role_menu(role_id, menu_id) values
2019-03-20 16:35:07 -==> Parameters: 9(Long), 153(Long), 9(Long), 152(Long), 9(Long), 151(Long), 9(Long), 150(Long), 9(Long), 149(Long), 9(Long), 159(Long), 9(Long), 158(Long), 9(Long), 157(Long), 9(Long), 156(Long), 9(Long), 107(Long), 9(Long), 102(Long), 9(Long), 141(Long), 9(Long), 140(Long), 9(Long), 139(Long), 9(Long), 138(Long), 9(Long), 145(Long), 9(Long), 144(Long), 9(Long), 143(Long), 9(Long), 142(Long), 9(Long), 120(Long), 9(Long), 119(Long), 9(Long), 118(Long), 9(Long), 117(Long), 9(Long), 136(Long), 9(Long), 135(Long), 9(Long), 134(Long), 9(Long), 133(Long), 9(Long), 148(Long), 9(Long), 147(Long), 9(Long), 146(Long), 9(Long), 137(Long), 9(Long), 116(Long), 9(Long), 115(Long), 9(Long), 114(Long), 9(Long), 113(Long), 9(Long), 123(Long), 9(Long), 155(Long), 9(Long), 112(Long), 9(Long), 111(Long), 9(Long), 110(Long), 9(Long), 109(Long), 9(Long), 98(Long), 9(Long), 30(Long), 9(Long), 29(Long), 9(Long), 28(Long), 9(Long), 92(Long), 9(Long), 57(Long), 9(Long), 27(Long), 9(Long), 89(Long), 9(Long), 88(Long), 9(Long), 87(Long), 9(Long), 86(Long), 9(Long), 90(Long), 9(Long), 85(Long), 9(Long), 160(Long), 9(Long), 154(Long), 9(Long), 72(Long), 9(Long), 76(Long), 9(Long), 75(Long), 9(Long), 74(Long), 9(Long), 62(Long), 9(Long), 56(Long), 9(Long), 55(Long), 9(Long), 15(Long), 9(Long), 26(Long), 9(Long), 25(Long), 9(Long), 24(Long), 9(Long), 14(Long), 9(Long), 13(Long), 9(Long), 12(Long), 9(Long), 61(Long), 9(Long), 22(Long), 9(Long), 21(Long), 9(Long), 20(Long), 9(Long), 73(Long), 9(Long), 7(Long), 9(Long), 6(Long), 9(Long), 2(Long), 9(Long), 83(Long), 9(Long), 81(Long), 9(Long), 80(Long), 9(Long), 79(Long), 9(Long), 78(Long), 9(Long), 71(Long), 9(Long), 108(Long), 9(Long), 106(Long), 9(Long), 105(Long), 9(Long), 104(Long), 9(Long), 97(Long), 9(Long), 91(Long), 9(Long), 84(Long), 9(Long), 77(Long), 9(Long), 3(Long), 9(Long), 1(Long), 9(Long), -1(Long), 9(Long), 103(Long)
2019-03-20 16:35:07 -<==    Updates: 96
2019-03-20 16:35:07 -耗时 : 395
2019-03-20 16:35:07 -返回值 : {msg=操作成功, code=0}
2019-03-20 16:35:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 16:35:07 -==> Parameters: 1(Long), admin(String), 更新角色(String), 395(Integer), com.bootdo.system.controller.RoleController.update()(String), null, 127.0.0.1(String), 2019-03-20 16:35:07.983(Timestamp)
2019-03-20 16:35:08 -请求地址 : http://localhost:8081/sys/role/list
2019-03-20 16:35:08 -HTTP METHOD : GET
2019-03-20 16:35:08 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-20 16:35:08 -参数 : []
2019-03-20 16:35:08 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-20 16:35:08 -==> Parameters: 
2019-03-20 16:35:08 -<==      Total: 10
2019-03-20 16:35:08 -耗时 : 38
2019-03-20 16:35:08 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-20 16:35:08 -<==    Updates: 1
2019-03-20 16:35:14 -请求地址 : http://localhost:8081/sys/role/edit/7
2019-03-20 16:35:14 -HTTP METHOD : GET
2019-03-20 16:35:14 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-03-20 16:35:14 -参数 : [7, {}]
2019-03-20 16:35:14 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-03-20 16:35:14 -==> Parameters: 7(Long)
2019-03-20 16:35:14 -<==      Total: 1
2019-03-20 16:35:14 -耗时 : 5
2019-03-20 16:35:14 -返回值 : system/role/edit
2019-03-20 16:35:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 16:35:14 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 5(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-03-20 16:35:14.412(Timestamp)
2019-03-20 16:35:14 -<==    Updates: 1
2019-03-20 16:35:14 -请求地址 : http://localhost:8081/sys/menu/tree/7
2019-03-20 16:35:14 -HTTP METHOD : GET
2019-03-20 16:35:14 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-03-20 16:35:14 -参数 : [7]
2019-03-20 16:35:14 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-03-20 16:35:14 -==> Parameters: 
2019-03-20 16:35:14 -<==      Total: 106
2019-03-20 16:35:14 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-03-20 16:35:14 -==> Parameters: 7(Long)
2019-03-20 16:35:14 -<==      Total: 10
2019-03-20 16:35:14 -耗时 : 21
2019-03-20 16:35:14 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":false},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":false},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":false},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":false},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":false},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":false},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":false},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":false},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":false},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":false},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":false},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":false},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":false},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":false},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":false},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":false},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":false},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":false},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":false},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":false},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":false},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":false},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":false},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-03-20 16:36:48 -Validating all active sessions...
2019-03-20 16:36:48 -Finished session validation.  No sessions were stopped.
2019-03-20 16:36:56 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 814]
2019-03-20 18:20:50 -Starting BootdoApplication on ZJZL-20180906VX with PID 13448 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 18:20:50 -Starting BootdoApplication on ZJZL-20180906VX with PID 17344 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 18:20:50 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 18:20:50 -The following profiles are active: dev
2019-03-20 18:20:50 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 18:20:50 -The following profiles are active: dev
2019-03-20 18:20:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1de5f0ef: startup date [Wed Mar 20 18:20:50 CST 2019]; root of context hierarchy
2019-03-20 18:20:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@277f7dd3: startup date [Wed Mar 20 18:20:50 CST 2019]; root of context hierarchy
2019-03-20 18:21:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 18:21:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 18:21:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$685a2fe0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:18 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f27fb906] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:18 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5ab35e87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:18 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e4d8e7ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:20 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:20 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 18:21:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 18:21:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 18:21:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 18:21:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:23 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:24 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:25 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:25 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:25 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:21:30 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 18:21:30 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 18:21:30 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 18:21:30 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 18:21:31 -Starting service [Tomcat]
2019-03-20 18:21:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 18:21:31 -Starting service [Tomcat]
2019-03-20 18:21:31 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 18:21:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 18:21:31 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 18:21:32 -Initializing Spring embedded WebApplicationContext
2019-03-20 18:21:32 -Root WebApplicationContext: initialization completed in 41066 ms
2019-03-20 18:21:32 -Initializing Spring embedded WebApplicationContext
2019-03-20 18:21:32 -Root WebApplicationContext: initialization completed in 41099 ms
2019-03-20 18:21:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 18:21:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 18:21:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 18:21:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 18:21:38 -Filter xssFilter was not registered (disabled)
2019-03-20 18:21:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 18:21:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 18:21:38 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 18:21:38 -Servlet dispatcherServlet mapped to [/]
2019-03-20 18:21:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 18:21:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 18:21:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 18:21:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 18:21:38 -Filter xssFilter was not registered (disabled)
2019-03-20 18:21:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 18:21:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 18:21:38 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 18:21:38 -Servlet dispatcherServlet mapped to [/]
2019-03-20 18:21:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@277f7dd3: startup date [Wed Mar 20 18:20:50 CST 2019]; root of context hierarchy
2019-03-20 18:21:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1de5f0ef: startup date [Wed Mar 20 18:20:50 CST 2019]; root of context hierarchy
2019-03-20 18:21:49 -Using default implementation for ThreadExecutor
2019-03-20 18:21:49 -Using default implementation for ThreadExecutor
2019-03-20 18:21:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 18:21:49 -Quartz Scheduler v.2.2.1 created.
2019-03-20 18:21:49 -RAMJobStore initialized.
2019-03-20 18:21:49 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 18:21:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 18:21:49 -Quartz scheduler version: 2.2.1
2019-03-20 18:21:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 18:21:49 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2d8087da
2019-03-20 18:21:49 -Quartz Scheduler v.2.2.1 created.
2019-03-20 18:21:49 -RAMJobStore initialized.
2019-03-20 18:21:49 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 18:21:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 18:21:49 -Quartz scheduler version: 2.2.1
2019-03-20 18:21:49 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4727e5fc
2019-03-20 18:21:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 18:21:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 18:21:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 18:21:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 18:22:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 18:22:02 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 18:22:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 18:22:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 18:22:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 18:22:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 18:22:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 18:22:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 18:22:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 18:22:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 18:22:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 18:22:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 18:22:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 18:22:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 18:22:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 18:22:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 18:22:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 18:22:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 18:22:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 18:22:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 18:22:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 18:22:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 18:22:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 18:22:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 18:22:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 18:22:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 18:22:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 18:22:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 18:22:02 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 18:22:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 18:22:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 18:22:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 18:22:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 18:22:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 18:22:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 18:22:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 18:22:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 18:22:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 18:22:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 18:22:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 18:22:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 18:22:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 18:22:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 18:22:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 18:22:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 18:22:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 18:22:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 18:22:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 18:22:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 18:22:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 18:22:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 18:22:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 18:22:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 18:22:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 18:22:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 18:22:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 18:22:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 18:22:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 18:22:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 18:22:03 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 18:22:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 18:22:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 18:22:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 18:22:03 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 18:22:03 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:03 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 18:22:03 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 18:22:03 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:03 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 18:22:03 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 18:22:03 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 18:22:03 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 18:22:03 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 18:22:03 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 18:22:03 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 18:22:03 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 18:22:03 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 18:22:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 18:22:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 18:22:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 18:22:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 18:22:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 18:22:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 18:22:03 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 18:22:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 18:22:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 18:22:03 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 18:22:03 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 18:22:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 18:22:03 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 18:22:03 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 18:22:03 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 18:22:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 18:22:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 18:22:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 18:22:03 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 18:22:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 18:22:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 18:22:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 18:22:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 18:22:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 18:22:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 18:22:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 18:22:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 18:22:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 18:22:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 18:22:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 18:22:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 18:22:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 18:22:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 18:22:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 18:22:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 18:22:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 18:22:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 18:22:03 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 18:22:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 18:22:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 18:22:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 18:22:03 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 18:22:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 18:22:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 18:22:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:03 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 18:22:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 18:22:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 18:22:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 18:22:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 18:22:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 18:22:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 18:22:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 18:22:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 18:22:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 18:22:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 18:22:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 18:22:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 18:22:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 18:22:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 18:22:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 18:22:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 18:22:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 18:22:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 18:22:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:03 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 18:22:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 18:22:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 18:22:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 18:22:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 18:22:03 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 18:22:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 18:22:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 18:22:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 18:22:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 18:22:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 18:22:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 18:22:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 18:22:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 18:22:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 18:22:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 18:22:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 18:22:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 18:22:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 18:22:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 18:22:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 18:22:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 18:22:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 18:22:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 18:22:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 18:22:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 18:22:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 18:22:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:22:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 18:22:04 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 18:22:04 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 18:22:04 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 18:22:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 18:22:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 18:22:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 18:22:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 18:22:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 18:22:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 18:22:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 18:22:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 18:22:04 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 18:22:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 18:22:04 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 18:22:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 18:22:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 18:22:04 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 18:22:04 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:22:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 18:22:04 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 18:22:04 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 18:22:04 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 18:22:04 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 18:22:04 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 18:22:04 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:04 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 18:22:04 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 18:22:04 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 18:22:04 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 18:22:04 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 18:22:04 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:04 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 18:22:04 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:04 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:04 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 18:22:04 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:04 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:22:04 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 18:22:04 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 18:22:04 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 18:22:04 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 18:22:04 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 18:22:04 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:04 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 18:22:04 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:22:04 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 18:22:04 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 18:22:04 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:22:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:22:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 18:22:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 18:22:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 18:22:05 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 18:22:05 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 18:22:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 18:22:05 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 18:22:06 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 18:22:06 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 18:22:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:22:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:22:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@277f7dd3: startup date [Wed Mar 20 18:20:50 CST 2019]; root of context hierarchy
2019-03-20 18:22:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1de5f0ef: startup date [Wed Mar 20 18:20:50 CST 2019]; root of context hierarchy
2019-03-20 18:22:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:22:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:22:08 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:22:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:22:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:22:08 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:22:08 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 18:22:08 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 18:22:09 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 18:22:09 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 18:22:16 -Registering beans for JMX exposure on startup
2019-03-20 18:22:16 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 18:22:16 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 18:22:16 -Registering beans for JMX exposure on startup
2019-03-20 18:22:16 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 18:22:16 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 18:22:16 -Starting beans in phase 2147483647
2019-03-20 18:22:16 -Starting beans in phase 2147483647
2019-03-20 18:22:16 -Context refreshed
2019-03-20 18:22:16 -Context refreshed
2019-03-20 18:22:16 -Found 1 custom documentation plugin(s)
2019-03-20 18:22:16 -Found 1 custom documentation plugin(s)
2019-03-20 18:22:16 -Scanning for api listing references
2019-03-20 18:22:16 -Scanning for api listing references
2019-03-20 18:22:17 -Generating unique operation named: removeUsingPOST_1
2019-03-20 18:22:17 -Generating unique operation named: removeUsingPOST_1
2019-03-20 18:22:19 -Generating unique operation named: addUsingGET_1
2019-03-20 18:22:19 -Generating unique operation named: addUsingGET_1
2019-03-20 18:22:19 -Generating unique operation named: editUsingGET_1
2019-03-20 18:22:19 -Generating unique operation named: editUsingGET_1
2019-03-20 18:22:19 -Generating unique operation named: listUsingGET_1
2019-03-20 18:22:19 -Generating unique operation named: listUsingGET_1
2019-03-20 18:22:19 -Generating unique operation named: removeUsingPOST_2
2019-03-20 18:22:19 -Generating unique operation named: removeUsingPOST_3
2019-03-20 18:22:19 -Generating unique operation named: saveUsingPOST_1
2019-03-20 18:22:19 -Generating unique operation named: removeUsingPOST_2
2019-03-20 18:22:19 -Generating unique operation named: updateUsingGET_1
2019-03-20 18:22:19 -Generating unique operation named: removeUsingPOST_3
2019-03-20 18:22:19 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingPOST_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingPUT_1
2019-03-20 18:22:19 -Generating unique operation named: saveUsingPOST_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingGET_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingPOST_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingPUT_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 18:22:19 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 18:22:19 -Generating unique operation named: addUsingGET_2
2019-03-20 18:22:19 -Generating unique operation named: editUsingGET_2
2019-03-20 18:22:19 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 18:22:20 -Generating unique operation named: addUsingGET_2
2019-03-20 18:22:20 -Generating unique operation named: editUsingGET_2
2019-03-20 18:22:20 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 18:22:20 -Generating unique operation named: listUsingGET_2
2019-03-20 18:22:20 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 18:22:20 -Generating unique operation named: removeUsingPOST_4
2019-03-20 18:22:20 -Generating unique operation named: listUsingGET_2
2019-03-20 18:22:20 -Generating unique operation named: removeUsingPOST_4
2019-03-20 18:22:20 -Generating unique operation named: removeUsingPOST_5
2019-03-20 18:22:20 -Generating unique operation named: removeUsingPOST_5
2019-03-20 18:22:20 -Generating unique operation named: saveUsingPOST_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingGET_2
2019-03-20 18:22:20 -Generating unique operation named: saveUsingPOST_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingGET_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingPOST_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingPUT_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingPOST_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingPUT_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 18:22:20 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 18:22:21 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 18:22:21 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 18:22:21 -Generating unique operation named: addUsingGET_3
2019-03-20 18:22:21 -Generating unique operation named: addUsingGET_3
2019-03-20 18:22:21 -Generating unique operation named: editUsingGET_3
2019-03-20 18:22:21 -Generating unique operation named: editUsingGET_3
2019-03-20 18:22:21 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 18:22:21 -Generating unique operation named: listUsingGET_3
2019-03-20 18:22:21 -Generating unique operation named: removeUsingPOST_6
2019-03-20 18:22:21 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 18:22:21 -Generating unique operation named: removeUsingPOST_7
2019-03-20 18:22:21 -Generating unique operation named: saveUsingPOST_3
2019-03-20 18:22:21 -Generating unique operation named: listUsingGET_3
2019-03-20 18:22:21 -Generating unique operation named: updateUsingGET_3
2019-03-20 18:22:21 -Generating unique operation named: removeUsingPOST_6
2019-03-20 18:22:21 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPOST_3
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPUT_3
2019-03-20 18:22:21 -Generating unique operation named: removeUsingPOST_7
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 18:22:21 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 18:22:21 -Generating unique operation named: saveUsingPOST_3
2019-03-20 18:22:21 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 18:22:21 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 18:22:21 -Generating unique operation named: addUsingGET_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingGET_3
2019-03-20 18:22:21 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPOST_3
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPUT_3
2019-03-20 18:22:21 -Generating unique operation named: editUsingGET_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 18:22:21 -Generating unique operation named: listUsingGET_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 18:22:21 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 18:22:21 -Generating unique operation named: removeUsingPOST_8
2019-03-20 18:22:21 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 18:22:21 -Generating unique operation named: removeUsingPOST_9
2019-03-20 18:22:21 -Generating unique operation named: addUsingGET_4
2019-03-20 18:22:21 -Generating unique operation named: editUsingGET_4
2019-03-20 18:22:21 -Generating unique operation named: listUsingGET_4
2019-03-20 18:22:21 -Generating unique operation named: saveUsingPOST_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingGET_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPOST_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPUT_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 18:22:21 -Generating unique operation named: removeUsingPOST_8
2019-03-20 18:22:21 -Generating unique operation named: removeUsingPOST_9
2019-03-20 18:22:21 -Generating unique operation named: saveUsingPOST_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingGET_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPOST_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 18:22:21 -Generating unique operation named: ElecUsingGET_1
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPUT_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 18:22:21 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 18:22:21 -Generating unique operation named: ElecUsingGET_1
2019-03-20 18:22:21 -Generating unique operation named: addUsingGET_5
2019-03-20 18:22:21 -Generating unique operation named: editUsingGET_5
2019-03-20 18:22:21 -Generating unique operation named: addUsingGET_5
2019-03-20 18:22:21 -Generating unique operation named: editUsingGET_5
2019-03-20 18:22:21 -Generating unique operation named: listUsingGET_5
2019-03-20 18:22:21 -Generating unique operation named: removeUsingPOST_10
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_11
2019-03-20 18:22:22 -Generating unique operation named: listUsingGET_5
2019-03-20 18:22:22 -Generating unique operation named: saveUsingPOST_5
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_10
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_11
2019-03-20 18:22:22 -Generating unique operation named: updateUsingGET_5
2019-03-20 18:22:22 -Generating unique operation named: saveUsingPOST_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingGET_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPOST_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPUT_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPOST_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPUT_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 18:22:22 -Generating unique operation named: editUsingGET_6
2019-03-20 18:22:22 -Generating unique operation named: listUsingGET_6
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPOST_6
2019-03-20 18:22:22 -Generating unique operation named: editUsingGET_6
2019-03-20 18:22:22 -Generating unique operation named: addUsingGET_6
2019-03-20 18:22:22 -Generating unique operation named: listUsingGET_6
2019-03-20 18:22:22 -Generating unique operation named: editUsingGET_7
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPOST_6
2019-03-20 18:22:22 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 18:22:22 -Generating unique operation named: listUsingGET_7
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_12
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_13
2019-03-20 18:22:22 -Generating unique operation named: addUsingGET_6
2019-03-20 18:22:22 -Generating unique operation named: editUsingGET_7
2019-03-20 18:22:22 -Generating unique operation named: saveUsingPOST_6
2019-03-20 18:22:22 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 18:22:22 -Generating unique operation named: updateUsingGET_6
2019-03-20 18:22:22 -Generating unique operation named: listUsingGET_7
2019-03-20 18:22:22 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_12
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPOST_7
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_13
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPUT_6
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 18:22:22 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 18:22:22 -Generating unique operation named: saveUsingPOST_6
2019-03-20 18:22:22 -Generating unique operation named: updateUsingGET_6
2019-03-20 18:22:22 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPOST_7
2019-03-20 18:22:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPUT_6
2019-03-20 18:22:22 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 18:22:22 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 18:22:22 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 18:22:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 18:22:22 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 18:22:22 -Generating unique operation named: addUsingGET_7
2019-03-20 18:22:22 -Generating unique operation named: editUsingGET_8
2019-03-20 18:22:22 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 18:22:22 -Generating unique operation named: listUsingGET_8
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_14
2019-03-20 18:22:22 -Generating unique operation named: addUsingGET_7
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_15
2019-03-20 18:22:22 -Generating unique operation named: saveUsingPOST_7
2019-03-20 18:22:22 -Generating unique operation named: editUsingGET_8
2019-03-20 18:22:22 -Generating unique operation named: updateUsingGET_7
2019-03-20 18:22:22 -Generating unique operation named: listUsingGET_8
2019-03-20 18:22:22 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPOST_8
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_14
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPUT_7
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_15
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 18:22:22 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 18:22:22 -Generating unique operation named: saveUsingPOST_7
2019-03-20 18:22:22 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 18:22:22 -Generating unique operation named: updateUsingGET_7
2019-03-20 18:22:22 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 18:22:22 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPOST_8
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPUT_7
2019-03-20 18:22:22 -Generating unique operation named: addUsingGET_8
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 18:22:22 -Generating unique operation named: editUsingGET_9
2019-03-20 18:22:22 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 18:22:22 -Generating unique operation named: listUsingGET_9
2019-03-20 18:22:22 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 18:22:22 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_16
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_17
2019-03-20 18:22:22 -Generating unique operation named: addUsingGET_8
2019-03-20 18:22:22 -Generating unique operation named: editUsingGET_9
2019-03-20 18:22:22 -Generating unique operation named: saveUsingPOST_8
2019-03-20 18:22:22 -Generating unique operation named: listUsingGET_9
2019-03-20 18:22:22 -Generating unique operation named: updateUsingGET_8
2019-03-20 18:22:22 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_16
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPOST_9
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPUT_8
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_17
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 18:22:22 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 18:22:22 -Generating unique operation named: saveUsingPOST_8
2019-03-20 18:22:22 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 18:22:22 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 18:22:22 -Generating unique operation named: addUsingGET_9
2019-03-20 18:22:22 -Generating unique operation named: editUsingGET_10
2019-03-20 18:22:22 -Generating unique operation named: updateUsingGET_8
2019-03-20 18:22:22 -Generating unique operation named: infoUsingGET_1
2019-03-20 18:22:22 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 18:22:22 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPOST_9
2019-03-20 18:22:22 -Generating unique operation named: infoUsingPOST_1
2019-03-20 18:22:22 -Generating unique operation named: infoUsingPUT_1
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPUT_8
2019-03-20 18:22:22 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 18:22:22 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 18:22:22 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 18:22:22 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 18:22:22 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 18:22:22 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 18:22:22 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 18:22:22 -Generating unique operation named: listUsingGET_10
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_18
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_19
2019-03-20 18:22:22 -Generating unique operation named: saveUsingPOST_9
2019-03-20 18:22:22 -Generating unique operation named: addUsingGET_9
2019-03-20 18:22:22 -Generating unique operation named: updateUsingPOST_10
2019-03-20 18:22:22 -Generating unique operation named: editUsingGET_10
2019-03-20 18:22:22 -Generating unique operation named: infoUsingGET_1
2019-03-20 18:22:22 -Generating unique operation named: listUsingGET_11
2019-03-20 18:22:22 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 18:22:22 -Generating unique operation named: infoUsingPOST_1
2019-03-20 18:22:22 -Generating unique operation named: removeUsingPOST_20
2019-03-20 18:22:22 -Generating unique operation named: infoUsingPUT_1
2019-03-20 18:22:22 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 18:22:23 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 18:22:23 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 18:22:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 18:22:23 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_10
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_18
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_19
2019-03-20 18:22:23 -Generating unique operation named: saveUsingPOST_9
2019-03-20 18:22:23 -Generating unique operation named: addUsingGET_10
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPOST_10
2019-03-20 18:22:23 -Generating unique operation named: editUsingGET_11
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_12
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_11
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_20
2019-03-20 18:22:23 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_21
2019-03-20 18:22:23 -Generating unique operation named: saveUsingPOST_10
2019-03-20 18:22:23 -Generating unique operation named: treeUsingGET_1
2019-03-20 18:22:23 -Generating unique operation named: treeUsingGET_2
2019-03-20 18:22:23 -Generating unique operation named: addUsingGET_10
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPOST_11
2019-03-20 18:22:23 -Generating unique operation named: editUsingGET_11
2019-03-20 18:22:23 -Generating unique operation named: addUsingGET_11
2019-03-20 18:22:23 -Generating unique operation named: editUsingGET_12
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_12
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_13
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_22
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_23
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_21
2019-03-20 18:22:23 -Generating unique operation named: saveUsingPOST_11
2019-03-20 18:22:23 -Generating unique operation named: saveUsingPOST_10
2019-03-20 18:22:23 -Generating unique operation named: updateUsingGET_9
2019-03-20 18:22:23 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPOST_12
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPUT_9
2019-03-20 18:22:23 -Generating unique operation named: treeUsingGET_1
2019-03-20 18:22:23 -Generating unique operation named: treeUsingGET_2
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 18:22:23 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 18:22:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 18:22:23 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 18:22:23 -Generating unique operation named: addUsingGET_12
2019-03-20 18:22:23 -Generating unique operation named: editUsingGET_13
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPOST_11
2019-03-20 18:22:23 -Generating unique operation named: addUsingGET_11
2019-03-20 18:22:23 -Generating unique operation named: editUsingGET_12
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_14
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_13
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_24
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_25
2019-03-20 18:22:23 -Generating unique operation named: saveUsingPOST_12
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_22
2019-03-20 18:22:23 -Generating unique operation named: updateUsingGET_10
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_23
2019-03-20 18:22:23 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPOST_13
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPUT_10
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 18:22:23 -Generating unique operation named: saveUsingPOST_11
2019-03-20 18:22:23 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 18:22:23 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 18:22:23 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 18:22:23 -Generating unique operation named: addUsingGET_13
2019-03-20 18:22:23 -Generating unique operation named: updateUsingGET_9
2019-03-20 18:22:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 18:22:23 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 18:22:23 -Generating unique operation named: editUsingGET_14
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_15
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPOST_12
2019-03-20 18:22:23 -Generating unique operation named: saveUsingPOST_13
2019-03-20 18:22:23 -Generating unique operation named: saveUsingPOST_14
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPOST_14
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPUT_9
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 18:22:23 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 18:22:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 18:22:23 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 18:22:23 -Generating unique operation named: addUsingGET_12
2019-03-20 18:22:23 -Generating unique operation named: editUsingGET_13
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_14
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_24
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_16
2019-03-20 18:22:23 -Generating unique operation named: removeUsingPOST_25
2019-03-20 18:22:23 -Generating unique operation named: listUsingHEAD_1
2019-03-20 18:22:23 -Generating unique operation named: listUsingPOST_1
2019-03-20 18:22:23 -Generating unique operation named: listUsingPUT_1
2019-03-20 18:22:23 -Generating unique operation named: listUsingPATCH_1
2019-03-20 18:22:23 -Generating unique operation named: saveUsingPOST_12
2019-03-20 18:22:23 -Generating unique operation named: listUsingDELETE_1
2019-03-20 18:22:23 -Generating unique operation named: updateUsingGET_10
2019-03-20 18:22:23 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 18:22:23 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 18:22:23 -Generating unique operation named: listUsingTRACE_1
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPOST_13
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPUT_10
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 18:22:23 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 18:22:23 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 18:22:23 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 18:22:23 -Generating unique operation named: addUsingGET_13
2019-03-20 18:22:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 18:22:23 -Generating unique operation named: editUsingGET_14
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_15
2019-03-20 18:22:23 -Generating unique operation named: addUsingGET_14
2019-03-20 18:22:23 -Generating unique operation named: saveUsingPOST_13
2019-03-20 18:22:23 -Generating unique operation named: saveUsingPOST_14
2019-03-20 18:22:23 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 18:22:23 -Generating unique operation named: updateUsingPOST_14
2019-03-20 18:22:23 -Generating unique operation named: editUsingGET_15
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_17
2019-03-20 18:22:23 -Generating unique operation named: listUsingGET_16
2019-03-20 18:22:24 -Generating unique operation named: listUsingHEAD_1
2019-03-20 18:22:24 -Generating unique operation named: listUsingPOST_1
2019-03-20 18:22:24 -Generating unique operation named: listUsingPUT_1
2019-03-20 18:22:24 -Generating unique operation named: listUsingPATCH_1
2019-03-20 18:22:24 -Generating unique operation named: listUsingDELETE_1
2019-03-20 18:22:24 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_26
2019-03-20 18:22:24 -Generating unique operation named: listUsingTRACE_1
2019-03-20 18:22:24 -Generating unique operation named: saveUsingPOST_15
2019-03-20 18:22:24 -Generating unique operation named: treeUsingGET_3
2019-03-20 18:22:24 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPOST_15
2019-03-20 18:22:24 -Generating unique operation named: addUsingGET_14
2019-03-20 18:22:24 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 18:22:24 -Generating unique operation named: editUsingGET_15
2019-03-20 18:22:24 -Generating unique operation named: addUsingGET_15
2019-03-20 18:22:24 -Generating unique operation named: editUsingGET_16
2019-03-20 18:22:24 -Generating unique operation named: listUsingGET_17
2019-03-20 18:22:24 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_26
2019-03-20 18:22:24 -Generating unique operation named: listUsingGET_18
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_27
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_28
2019-03-20 18:22:24 -Generating unique operation named: saveUsingPOST_16
2019-03-20 18:22:24 -Generating unique operation named: saveUsingPOST_15
2019-03-20 18:22:24 -Generating unique operation named: updateUsingGET_11
2019-03-20 18:22:24 -Generating unique operation named: treeUsingGET_3
2019-03-20 18:22:24 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 18:22:24 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPOST_16
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPUT_11
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPOST_15
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 18:22:24 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 18:22:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 18:22:24 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 18:22:24 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 18:22:24 -Generating unique operation named: addUsingGET_16
2019-03-20 18:22:24 -Generating unique operation named: editUsingGET_17
2019-03-20 18:22:24 -Generating unique operation named: listUsingGET_19
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_29
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_30
2019-03-20 18:22:24 -Generating unique operation named: saveUsingPOST_17
2019-03-20 18:22:24 -Generating unique operation named: updateUsingGET_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPOST_17
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPUT_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 18:22:24 -Generating unique operation named: addUsingGET_15
2019-03-20 18:22:24 -Generating unique operation named: addUsingGET_17
2019-03-20 18:22:24 -Generating unique operation named: editUsingGET_18
2019-03-20 18:22:24 -Generating unique operation named: editUsingGET_16
2019-03-20 18:22:24 -Generating unique operation named: listUsingGET_20
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_31
2019-03-20 18:22:24 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_32
2019-03-20 18:22:24 -Generating unique operation named: listUsingGET_18
2019-03-20 18:22:24 -Generating unique operation named: saveUsingPOST_18
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_27
2019-03-20 18:22:24 -Generating unique operation named: updateUsingGET_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_28
2019-03-20 18:22:24 -Generating unique operation named: saveUsingPOST_16
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPOST_18
2019-03-20 18:22:24 -Generating unique operation named: updateUsingGET_11
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPUT_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPOST_16
2019-03-20 18:22:24 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPUT_11
2019-03-20 18:22:24 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 18:22:24 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 18:22:24 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 18:22:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 18:22:24 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 18:22:24 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 18:22:24 -Generating unique operation named: addUsingGET_16
2019-03-20 18:22:24 -Generating unique operation named: editUsingGET_17
2019-03-20 18:22:24 -Generating unique operation named: listUsingGET_19
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_29
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_30
2019-03-20 18:22:24 -Generating unique operation named: saveUsingPOST_17
2019-03-20 18:22:24 -Generating unique operation named: updateUsingGET_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPOST_17
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPUT_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 18:22:24 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 18:22:24 -Generating unique operation named: addUsingGET_17
2019-03-20 18:22:24 -Generating unique operation named: editUsingGET_18
2019-03-20 18:22:24 -Generating unique operation named: listUsingGET_20
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_31
2019-03-20 18:22:24 -Generating unique operation named: removeUsingPOST_32
2019-03-20 18:22:24 -Starting Quartz Scheduler now
2019-03-20 18:22:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 18:22:24 -Starting...
2019-03-20 18:22:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 18:22:24 -Started.
2019-03-20 18:22:24 -Generating unique operation named: saveUsingPOST_18
2019-03-20 18:22:24 -Generating unique operation named: updateUsingGET_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPOST_18
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPUT_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 18:22:24 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 18:22:24 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 18:22:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 18:22:24 -Starting Quartz Scheduler now
2019-03-20 18:22:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 18:22:24 -Starting...
2019-03-20 18:22:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 18:22:24 -Started.
2019-03-20 18:22:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 18:22:24 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:20)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-20 18:22:24 -Using a shared selector for servlet write/read
2019-03-20 18:22:24 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-20 18:22:24 -Stopping service [Tomcat]
2019-03-20 18:22:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-20 18:22:24 -Started BootdoApplication in 103.396 seconds (JVM running for 106.641)
2019-03-20 18:22:25 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-20 18:22:25 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-20 18:22:25 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-20 18:22:25 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-20 18:22:25 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-20 18:22:25 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@277f7dd3: startup date [Wed Mar 20 18:20:50 CST 2019]; root of context hierarchy
2019-03-20 18:22:25 -Stopping beans in phase 2147483647
2019-03-20 18:22:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 18:22:25 -Stopping...
2019-03-20 18:22:25 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 18:22:25 -Stopped.
2019-03-20 18:22:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-20 18:22:25 -Unregistering JMX-exposed beans on shutdown
2019-03-20 18:22:25 -Unregistering JMX-exposed beans
2019-03-20 18:22:25 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-20 18:22:25 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-20 18:22:25 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-20 18:22:25 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-20 18:22:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-20 18:22:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 18:22:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-20 18:22:25 -Shutting down Quartz Scheduler
2019-03-20 18:22:26 -==> Parameters: 
2019-03-20 18:22:26 -<==      Total: 1
2019-03-20 18:23:06 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-20 18:24:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-20 18:24:12 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-20 18:24:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 81 ms
2019-03-20 18:24:12 -Enabling session validation scheduler...
2019-03-20 18:24:13 -请求地址 : http://localhost:8081/login;JSESSIONID=9a6a9447-65b5-42ea-acf9-d5f3d840df17
2019-03-20 18:24:13 -HTTP METHOD : GET
2019-03-20 18:24:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 18:24:13 -参数 : [{}]
2019-03-20 18:24:13 -耗时 : 5
2019-03-20 18:24:13 -返回值 : login
2019-03-20 18:24:20 -请求地址 : http://localhost:8081/getVerify
2019-03-20 18:24:20 -HTTP METHOD : GET
2019-03-20 18:24:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 18:24:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4701cb26, org.apache.shiro.web.servlet.ShiroHttpServletResponse@f49a4c1]
2019-03-20 18:24:38 -3905
2019-03-20 18:24:39 -耗时 : 19017
2019-03-20 18:24:39 -返回值 : null
2019-03-20 18:25:05 -请求地址 : http://localhost:8081/login
2019-03-20 18:25:05 -HTTP METHOD : POST
2019-03-20 18:25:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 18:25:05 -参数 : [admin, 111111, 3905, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2b1cfcd]
2019-03-20 18:25:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 18:25:05 -==> Parameters: admin(String)
2019-03-20 18:25:06 -<==      Total: 1
2019-03-20 18:25:06 -耗时 : 528
2019-03-20 18:25:06 -返回值 : {msg=操作成功, code=0}
2019-03-20 18:25:06 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-20 18:25:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 18:25:06 -==> Parameters: 1(Long), admin(String), 登录(String), 529(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 18:25:06.394(Timestamp)
2019-03-20 18:25:06 -请求地址 : http://localhost:8081/index
2019-03-20 18:25:06 -HTTP METHOD : GET
2019-03-20 18:25:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 18:25:06 -参数 : [{}]
2019-03-20 18:25:07 -<==    Updates: 1
2019-03-20 18:25:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 18:25:08 -==> Parameters: 1(Long)
2019-03-20 18:25:08 -<==      Total: 46
2019-03-20 18:25:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 18:25:08 -==> Parameters: 138(Long)
2019-03-20 18:25:08 -<==      Total: 1
2019-03-20 18:25:08 -耗时 : 1646
2019-03-20 18:25:08 -返回值 : index_v1
2019-03-20 18:25:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 18:25:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1646(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 18:25:08.599(Timestamp)
2019-03-20 18:25:08 -<==    Updates: 1
2019-03-20 18:25:09 -请求地址 : http://localhost:8081/main
2019-03-20 18:25:09 -HTTP METHOD : GET
2019-03-20 18:25:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 18:25:09 -参数 : []
2019-03-20 18:25:09 -耗时 : 1
2019-03-20 18:25:09 -返回值 : main
2019-03-20 18:25:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 18:25:11 -HTTP METHOD : GET
2019-03-20 18:25:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 18:25:11 -参数 : []
2019-03-20 18:25:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 18:25:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 18:25:11 -请求地址 : http://localhost:8081/main
2019-03-20 18:25:11 -HTTP METHOD : GET
2019-03-20 18:25:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 18:25:11 -参数 : []
2019-03-20 18:25:11 -耗时 : 0
2019-03-20 18:25:11 -返回值 : main
2019-03-20 18:25:11 -<==      Total: 0
2019-03-20 18:25:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 18:25:11 -==> Parameters: 1(Long), 0(String)
2019-03-20 18:25:11 -<==      Total: 1
2019-03-20 18:25:11 -耗时 : 620
2019-03-20 18:25:11 -返回值 : com.bootdo.common.utils.PageUtils@65a73a1c
2019-03-20 18:26:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 18:26:17 -==> Parameters: 1(Long)
2019-03-20 18:26:17 -<==      Total: 90
2019-03-20 18:26:17 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-20 18:26:17 -HTTP METHOD : GET
2019-03-20 18:26:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-20 18:26:17 -参数 : []
2019-03-20 18:26:17 -耗时 : 0
2019-03-20 18:26:17 -返回值 : /moneyList/moneyList
2019-03-20 18:26:41 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 18:26:41 -HTTP METHOD : GET
2019-03-20 18:26:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 18:26:41 -参数 : []
2019-03-20 18:26:41 -耗时 : 1
2019-03-20 18:26:41 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 18:26:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 18:26:42 -HTTP METHOD : GET
2019-03-20 18:26:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 18:26:42 -参数 : [userType]
2019-03-20 18:26:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 18:26:42 -==> Parameters: userType(String)
2019-03-20 18:26:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 18:26:42 -HTTP METHOD : GET
2019-03-20 18:26:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 18:26:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 18:26:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 18:26:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 18:26:43 -<==      Total: 2
2019-03-20 18:26:43 -耗时 : 718
2019-03-20 18:26:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 18:26:43 -<==      Total: 4
2019-03-20 18:26:43 -==>  Preparing: select count(*) from elec_log 
2019-03-20 18:26:43 -==> Parameters: 
2019-03-20 18:26:43 -<==      Total: 1
2019-03-20 18:26:43 -耗时 : 704
2019-03-20 18:26:43 -返回值 : com.bootdo.common.utils.PageUtils@79df2c21
2019-03-20 18:26:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-20 18:26:44 -HTTP METHOD : GET
2019-03-20 18:26:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-20 18:26:44 -参数 : []
2019-03-20 18:26:44 -耗时 : 1
2019-03-20 18:26:44 -返回值 : /moneyLog/heatLog/heatLog
2019-03-20 18:26:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 18:26:44 -HTTP METHOD : GET
2019-03-20 18:26:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 18:26:44 -参数 : [userType]
2019-03-20 18:26:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 18:26:44 -==> Parameters: userType(String)
2019-03-20 18:26:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-20 18:26:44 -HTTP METHOD : GET
2019-03-20 18:26:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-20 18:26:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-20 18:26:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-20 18:26:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 18:26:45 -<==      Total: 2
2019-03-20 18:26:45 -耗时 : 74
2019-03-20 18:26:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 18:26:46 -<==      Total: 3
2019-03-20 18:26:46 -==>  Preparing: select count(*) from heat_log 
2019-03-20 18:26:46 -==> Parameters: 
2019-03-20 18:26:46 -<==      Total: 1
2019-03-20 18:26:46 -耗时 : 1049
2019-03-20 18:26:46 -返回值 : com.bootdo.common.utils.PageUtils@7e75524
2019-03-20 18:26:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-20 18:26:49 -HTTP METHOD : GET
2019-03-20 18:26:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-20 18:26:49 -参数 : [1, {}]
2019-03-20 18:26:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-20 18:26:49 -==> Parameters: 1(Long)
2019-03-20 18:26:49 -<==      Total: 1
2019-03-20 18:26:49 -耗时 : 8
2019-03-20 18:26:49 -返回值 : moneyLog/heatLog/edit
2019-03-20 18:26:49 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-20 18:26:49 -HTTP METHOD : GET
2019-03-20 18:26:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 18:26:49 -参数 : [userArea]
2019-03-20 18:26:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 18:26:49 -HTTP METHOD : GET
2019-03-20 18:26:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 18:26:49 -参数 : [userType]
2019-03-20 18:26:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 18:26:49 -==> Parameters: userArea(String)
2019-03-20 18:26:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 18:26:49 -<==      Total: 0
2019-03-20 18:26:49 -==> Parameters: userType(String)
2019-03-20 18:26:49 -耗时 : 9
2019-03-20 18:26:49 -返回值 : []
2019-03-20 18:26:49 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-20 18:26:49 -HTTP METHOD : GET
2019-03-20 18:26:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 18:26:49 -<==      Total: 2
2019-03-20 18:26:49 -参数 : [userOrg]
2019-03-20 18:26:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 18:26:49 -==> Parameters: userOrg(String)
2019-03-20 18:26:49 -耗时 : 14
2019-03-20 18:26:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 18:26:49 -<==      Total: 0
2019-03-20 18:26:49 -耗时 : 6
2019-03-20 18:26:49 -返回值 : []
2019-03-20 18:26:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-20 18:26:54 -HTTP METHOD : GET
2019-03-20 18:26:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-20 18:26:54 -参数 : []
2019-03-20 18:26:54 -耗时 : 1
2019-03-20 18:26:54 -返回值 : moneyLog/heatLog/add
2019-03-20 18:27:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 18:27:53 -HTTP METHOD : GET
2019-03-20 18:27:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 18:27:53 -参数 : []
2019-03-20 18:27:53 -耗时 : 1
2019-03-20 18:27:53 -返回值 : system/dept/deptTree
2019-03-20 18:27:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 18:27:53 -HTTP METHOD : GET
2019-03-20 18:27:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 18:27:53 -参数 : []
2019-03-20 18:27:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 18:27:53 -==> Parameters: 
2019-03-20 18:27:53 -<==      Total: 3
2019-03-20 18:27:53 -耗时 : 22
2019-03-20 18:27:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 18:28:31 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 18:28:31 -HTTP METHOD : GET
2019-03-20 18:28:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 18:28:31 -参数 : []
2019-03-20 18:28:31 -耗时 : 0
2019-03-20 18:28:31 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 18:28:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 18:28:31 -HTTP METHOD : GET
2019-03-20 18:28:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 18:28:31 -参数 : [userType]
2019-03-20 18:28:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 18:28:31 -==> Parameters: userType(String)
2019-03-20 18:28:31 -<==      Total: 2
2019-03-20 18:28:31 -耗时 : 5
2019-03-20 18:28:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 18:28:31 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 18:28:31 -HTTP METHOD : GET
2019-03-20 18:28:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 18:28:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 18:28:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 18:28:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 18:28:32 -<==      Total: 4
2019-03-20 18:28:32 -==>  Preparing: select count(*) from elec_log 
2019-03-20 18:28:32 -==> Parameters: 
2019-03-20 18:28:32 -<==      Total: 1
2019-03-20 18:28:32 -耗时 : 82
2019-03-20 18:28:32 -返回值 : com.bootdo.common.utils.PageUtils@7bca056
2019-03-20 18:28:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 18:28:43 -HTTP METHOD : GET
2019-03-20 18:28:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 18:28:43 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-20 18:28:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-20 18:28:43 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-20 18:28:43 -<==      Total: 3
2019-03-20 18:28:43 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_date = ? 
2019-03-20 18:28:43 -==> Parameters: A(String), 2019-03-19(String)
2019-03-20 18:28:43 -<==      Total: 1
2019-03-20 18:28:43 -耗时 : 40
2019-03-20 18:28:43 -返回值 : com.bootdo.common.utils.PageUtils@58b9f23d
2019-03-20 18:28:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 18:28:44 -HTTP METHOD : GET
2019-03-20 18:28:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 18:28:44 -参数 : []
2019-03-20 18:28:44 -耗时 : 1
2019-03-20 18:28:44 -返回值 : system/dept/deptTree
2019-03-20 18:28:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 18:28:45 -HTTP METHOD : GET
2019-03-20 18:28:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 18:28:45 -参数 : []
2019-03-20 18:28:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 18:28:45 -==> Parameters: 
2019-03-20 18:28:45 -<==      Total: 3
2019-03-20 18:28:45 -耗时 : 7
2019-03-20 18:28:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 18:28:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-20 18:28:47 -HTTP METHOD : GET
2019-03-20 18:28:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotExcel
2019-03-20 18:28:47 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4fc6f575, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6bb098b6, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6aa88800]
2019-03-20 18:28:47 -耗时 : 78
2019-03-20 18:28:47 -返回值 : null
2019-03-20 18:30:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-20 18:30:05 -HTTP METHOD : GET
2019-03-20 18:30:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-20 18:30:05 -参数 : []
2019-03-20 18:30:05 -耗时 : 2
2019-03-20 18:30:05 -返回值 : /moneyLog/heatLog/heatLog
2019-03-20 18:30:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 18:30:07 -HTTP METHOD : GET
2019-03-20 18:30:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 18:30:07 -参数 : [userType]
2019-03-20 18:30:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 18:30:07 -==> Parameters: userType(String)
2019-03-20 18:30:07 -<==      Total: 2
2019-03-20 18:30:07 -耗时 : 7
2019-03-20 18:30:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 18:30:07 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-20 18:30:07 -HTTP METHOD : GET
2019-03-20 18:30:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-20 18:30:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-20 18:30:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-20 18:30:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 18:30:07 -<==      Total: 3
2019-03-20 18:30:07 -==>  Preparing: select count(*) from heat_log 
2019-03-20 18:30:07 -==> Parameters: 
2019-03-20 18:30:07 -<==      Total: 1
2019-03-20 18:30:07 -耗时 : 9
2019-03-20 18:30:07 -返回值 : com.bootdo.common.utils.PageUtils@d5af3db
2019-03-20 18:44:09 -Starting BootdoApplication on ZJZL-20180906VX with PID 17572 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 18:44:09 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 18:44:09 -The following profiles are active: dev
2019-03-20 18:44:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1de5f0ef: startup date [Wed Mar 20 18:44:09 CST 2019]; root of context hierarchy
2019-03-20 18:44:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 18:44:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dbbe2b22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:44:23 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ce1759c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:44:26 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:44:27 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:44:27 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:44:27 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 18:44:27 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 18:44:27 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:44:27 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:44:27 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:44:27 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:44:28 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 18:44:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 18:44:28 -Starting service [Tomcat]
2019-03-20 18:44:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 18:44:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 18:44:29 -Initializing Spring embedded WebApplicationContext
2019-03-20 18:44:29 -Root WebApplicationContext: initialization completed in 20136 ms
2019-03-20 18:44:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 18:44:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 18:44:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 18:44:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 18:44:30 -Filter xssFilter was not registered (disabled)
2019-03-20 18:44:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 18:44:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 18:44:30 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 18:44:30 -Servlet dispatcherServlet mapped to [/]
2019-03-20 18:44:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1de5f0ef: startup date [Wed Mar 20 18:44:09 CST 2019]; root of context hierarchy
2019-03-20 18:44:35 -Using default implementation for ThreadExecutor
2019-03-20 18:44:35 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 18:44:35 -Quartz Scheduler v.2.2.1 created.
2019-03-20 18:44:35 -RAMJobStore initialized.
2019-03-20 18:44:35 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 18:44:35 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 18:44:35 -Quartz scheduler version: 2.2.1
2019-03-20 18:44:35 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5030997b
2019-03-20 18:44:36 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 18:44:36 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 18:44:40 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:44:40 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 18:44:40 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 18:44:40 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 18:44:40 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 18:44:40 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 18:44:40 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 18:44:40 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 18:44:40 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 18:44:40 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 18:44:40 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 18:44:40 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 18:44:40 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 18:44:40 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 18:44:40 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 18:44:40 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 18:44:40 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 18:44:40 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 18:44:40 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 18:44:40 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 18:44:40 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 18:44:40 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 18:44:40 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 18:44:40 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 18:44:40 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 18:44:40 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 18:44:40 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 18:44:40 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 18:44:40 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 18:44:40 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 18:44:40 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 18:44:40 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:44:40 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:44:40 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 18:44:40 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 18:44:40 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 18:44:40 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 18:44:40 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 18:44:40 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:44:40 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 18:44:40 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 18:44:40 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:44:40 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 18:44:40 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 18:44:40 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 18:44:40 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 18:44:40 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 18:44:40 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 18:44:40 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 18:44:40 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 18:44:40 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 18:44:40 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 18:44:40 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 18:44:40 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 18:44:40 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:44:40 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 18:44:40 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:44:40 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 18:44:40 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 18:44:40 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 18:44:40 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 18:44:40 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 18:44:40 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 18:44:40 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 18:44:40 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 18:44:40 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 18:44:40 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 18:44:40 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 18:44:40 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 18:44:40 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 18:44:40 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 18:44:40 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 18:44:40 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 18:44:40 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 18:44:40 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 18:44:40 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 18:44:40 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 18:44:40 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 18:44:40 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 18:44:40 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 18:44:40 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 18:44:40 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 18:44:40 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 18:44:40 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 18:44:40 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 18:44:40 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 18:44:40 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 18:44:40 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 18:44:40 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 18:44:40 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 18:44:40 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:44:40 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:44:40 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 18:44:40 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 18:44:40 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 18:44:40 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 18:44:40 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 18:44:40 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 18:44:40 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 18:44:40 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 18:44:40 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 18:44:40 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 18:44:40 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 18:44:40 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 18:44:40 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 18:44:40 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 18:44:40 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 18:44:40 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 18:44:40 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 18:44:40 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 18:44:40 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 18:44:40 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:44:40 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 18:44:40 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 18:44:40 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 18:44:40 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 18:44:40 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 18:44:40 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:44:40 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 18:44:40 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:44:40 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 18:44:40 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 18:44:40 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 18:44:40 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 18:44:40 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 18:44:40 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 18:44:40 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:44:40 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 18:44:40 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:44:40 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:44:40 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 18:44:40 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 18:44:40 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 18:44:41 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 18:44:41 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 18:44:41 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 18:44:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:44:42 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1de5f0ef: startup date [Wed Mar 20 18:44:09 CST 2019]; root of context hierarchy
2019-03-20 18:44:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:44:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:44:42 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:44:42 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 18:44:43 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 18:44:46 -Registering beans for JMX exposure on startup
2019-03-20 18:44:46 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 18:44:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 18:44:46 -Starting beans in phase 2147483647
2019-03-20 18:44:46 -Context refreshed
2019-03-20 18:44:46 -Found 1 custom documentation plugin(s)
2019-03-20 18:44:46 -Scanning for api listing references
2019-03-20 18:44:47 -Generating unique operation named: removeUsingPOST_1
2019-03-20 18:44:47 -Generating unique operation named: addUsingGET_1
2019-03-20 18:44:47 -Generating unique operation named: editUsingGET_1
2019-03-20 18:44:47 -Generating unique operation named: listUsingGET_1
2019-03-20 18:44:47 -Generating unique operation named: removeUsingPOST_2
2019-03-20 18:44:47 -Generating unique operation named: removeUsingPOST_3
2019-03-20 18:44:47 -Generating unique operation named: saveUsingPOST_1
2019-03-20 18:44:47 -Generating unique operation named: updateUsingGET_1
2019-03-20 18:44:47 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 18:44:47 -Generating unique operation named: updateUsingPOST_1
2019-03-20 18:44:47 -Generating unique operation named: updateUsingPUT_1
2019-03-20 18:44:47 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 18:44:47 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 18:44:47 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 18:44:47 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 18:44:47 -Generating unique operation named: addUsingGET_2
2019-03-20 18:44:47 -Generating unique operation named: editUsingGET_2
2019-03-20 18:44:47 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 18:44:47 -Generating unique operation named: listUsingGET_2
2019-03-20 18:44:47 -Generating unique operation named: removeUsingPOST_4
2019-03-20 18:44:47 -Generating unique operation named: removeUsingPOST_5
2019-03-20 18:44:47 -Generating unique operation named: saveUsingPOST_2
2019-03-20 18:44:47 -Generating unique operation named: updateUsingGET_2
2019-03-20 18:44:47 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 18:44:47 -Generating unique operation named: updateUsingPOST_2
2019-03-20 18:44:47 -Generating unique operation named: updateUsingPUT_2
2019-03-20 18:44:47 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 18:44:47 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 18:44:47 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 18:44:47 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 18:44:47 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 18:44:47 -Generating unique operation named: addUsingGET_3
2019-03-20 18:44:47 -Generating unique operation named: editUsingGET_3
2019-03-20 18:44:47 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 18:44:47 -Generating unique operation named: listUsingGET_3
2019-03-20 18:44:47 -Generating unique operation named: removeUsingPOST_6
2019-03-20 18:44:47 -Generating unique operation named: removeUsingPOST_7
2019-03-20 18:44:47 -Generating unique operation named: saveUsingPOST_3
2019-03-20 18:44:47 -Generating unique operation named: updateUsingGET_3
2019-03-20 18:44:47 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 18:44:47 -Generating unique operation named: updateUsingPOST_3
2019-03-20 18:44:47 -Generating unique operation named: updateUsingPUT_3
2019-03-20 18:44:47 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 18:44:47 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 18:44:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 18:44:47 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 18:44:47 -Generating unique operation named: addUsingGET_4
2019-03-20 18:44:47 -Generating unique operation named: editUsingGET_4
2019-03-20 18:44:47 -Generating unique operation named: listUsingGET_4
2019-03-20 18:44:47 -Generating unique operation named: removeUsingPOST_8
2019-03-20 18:44:47 -Generating unique operation named: removeUsingPOST_9
2019-03-20 18:44:47 -Generating unique operation named: saveUsingPOST_4
2019-03-20 18:44:48 -Generating unique operation named: updateUsingGET_4
2019-03-20 18:44:48 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPOST_4
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPUT_4
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 18:44:48 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 18:44:48 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 18:44:48 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 18:44:48 -Generating unique operation named: ElecUsingGET_1
2019-03-20 18:44:48 -Generating unique operation named: addUsingGET_5
2019-03-20 18:44:48 -Generating unique operation named: editUsingGET_5
2019-03-20 18:44:48 -Generating unique operation named: listUsingGET_5
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_10
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_11
2019-03-20 18:44:48 -Generating unique operation named: saveUsingPOST_5
2019-03-20 18:44:48 -Generating unique operation named: updateUsingGET_5
2019-03-20 18:44:48 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPOST_5
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPUT_5
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 18:44:48 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 18:44:48 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 18:44:48 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 18:44:48 -Generating unique operation named: editUsingGET_6
2019-03-20 18:44:48 -Generating unique operation named: listUsingGET_6
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPOST_6
2019-03-20 18:44:48 -Generating unique operation named: addUsingGET_6
2019-03-20 18:44:48 -Generating unique operation named: editUsingGET_7
2019-03-20 18:44:48 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 18:44:48 -Generating unique operation named: listUsingGET_7
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_12
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_13
2019-03-20 18:44:48 -Generating unique operation named: saveUsingPOST_6
2019-03-20 18:44:48 -Generating unique operation named: updateUsingGET_6
2019-03-20 18:44:48 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPOST_7
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPUT_6
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 18:44:48 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 18:44:48 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 18:44:48 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 18:44:48 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 18:44:48 -Generating unique operation named: addUsingGET_7
2019-03-20 18:44:48 -Generating unique operation named: editUsingGET_8
2019-03-20 18:44:48 -Generating unique operation named: listUsingGET_8
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_14
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_15
2019-03-20 18:44:48 -Generating unique operation named: saveUsingPOST_7
2019-03-20 18:44:48 -Generating unique operation named: updateUsingGET_7
2019-03-20 18:44:48 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPOST_8
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPUT_7
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 18:44:48 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 18:44:48 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 18:44:48 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 18:44:48 -Generating unique operation named: addUsingGET_8
2019-03-20 18:44:48 -Generating unique operation named: editUsingGET_9
2019-03-20 18:44:48 -Generating unique operation named: listUsingGET_9
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_16
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_17
2019-03-20 18:44:48 -Generating unique operation named: saveUsingPOST_8
2019-03-20 18:44:48 -Generating unique operation named: updateUsingGET_8
2019-03-20 18:44:48 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPOST_9
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPUT_8
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 18:44:48 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 18:44:48 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 18:44:48 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 18:44:48 -Generating unique operation named: addUsingGET_9
2019-03-20 18:44:48 -Generating unique operation named: editUsingGET_10
2019-03-20 18:44:48 -Generating unique operation named: infoUsingGET_1
2019-03-20 18:44:48 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 18:44:48 -Generating unique operation named: infoUsingPOST_1
2019-03-20 18:44:48 -Generating unique operation named: infoUsingPUT_1
2019-03-20 18:44:48 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 18:44:48 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 18:44:48 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 18:44:48 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 18:44:48 -Generating unique operation named: listUsingGET_10
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_18
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_19
2019-03-20 18:44:48 -Generating unique operation named: saveUsingPOST_9
2019-03-20 18:44:48 -Generating unique operation named: updateUsingPOST_10
2019-03-20 18:44:48 -Generating unique operation named: listUsingGET_11
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_20
2019-03-20 18:44:48 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 18:44:48 -Generating unique operation named: addUsingGET_10
2019-03-20 18:44:48 -Generating unique operation named: editUsingGET_11
2019-03-20 18:44:48 -Generating unique operation named: listUsingGET_12
2019-03-20 18:44:48 -Generating unique operation named: removeUsingPOST_21
2019-03-20 18:44:48 -Generating unique operation named: saveUsingPOST_10
2019-03-20 18:44:48 -Generating unique operation named: treeUsingGET_1
2019-03-20 18:44:49 -Generating unique operation named: treeUsingGET_2
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPOST_11
2019-03-20 18:44:49 -Generating unique operation named: addUsingGET_11
2019-03-20 18:44:49 -Generating unique operation named: editUsingGET_12
2019-03-20 18:44:49 -Generating unique operation named: listUsingGET_13
2019-03-20 18:44:49 -Generating unique operation named: removeUsingPOST_22
2019-03-20 18:44:49 -Generating unique operation named: removeUsingPOST_23
2019-03-20 18:44:49 -Generating unique operation named: saveUsingPOST_11
2019-03-20 18:44:49 -Generating unique operation named: updateUsingGET_9
2019-03-20 18:44:49 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPOST_12
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPUT_9
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 18:44:49 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 18:44:49 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 18:44:49 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 18:44:49 -Generating unique operation named: addUsingGET_12
2019-03-20 18:44:49 -Generating unique operation named: editUsingGET_13
2019-03-20 18:44:49 -Generating unique operation named: listUsingGET_14
2019-03-20 18:44:49 -Generating unique operation named: removeUsingPOST_24
2019-03-20 18:44:49 -Generating unique operation named: removeUsingPOST_25
2019-03-20 18:44:49 -Generating unique operation named: saveUsingPOST_12
2019-03-20 18:44:49 -Generating unique operation named: updateUsingGET_10
2019-03-20 18:44:49 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPOST_13
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPUT_10
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 18:44:49 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 18:44:49 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 18:44:49 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 18:44:49 -Generating unique operation named: addUsingGET_13
2019-03-20 18:44:49 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 18:44:49 -Generating unique operation named: editUsingGET_14
2019-03-20 18:44:49 -Generating unique operation named: listUsingGET_15
2019-03-20 18:44:49 -Generating unique operation named: saveUsingPOST_13
2019-03-20 18:44:49 -Generating unique operation named: saveUsingPOST_14
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPOST_14
2019-03-20 18:44:49 -Generating unique operation named: listUsingGET_16
2019-03-20 18:44:49 -Generating unique operation named: listUsingHEAD_1
2019-03-20 18:44:49 -Generating unique operation named: listUsingPOST_1
2019-03-20 18:44:49 -Generating unique operation named: listUsingPUT_1
2019-03-20 18:44:49 -Generating unique operation named: listUsingPATCH_1
2019-03-20 18:44:49 -Generating unique operation named: listUsingDELETE_1
2019-03-20 18:44:49 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 18:44:49 -Generating unique operation named: listUsingTRACE_1
2019-03-20 18:44:49 -Generating unique operation named: addUsingGET_14
2019-03-20 18:44:49 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 18:44:49 -Generating unique operation named: editUsingGET_15
2019-03-20 18:44:49 -Generating unique operation named: listUsingGET_17
2019-03-20 18:44:49 -Generating unique operation named: removeUsingPOST_26
2019-03-20 18:44:49 -Generating unique operation named: saveUsingPOST_15
2019-03-20 18:44:49 -Generating unique operation named: treeUsingGET_3
2019-03-20 18:44:49 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPOST_15
2019-03-20 18:44:49 -Generating unique operation named: addUsingGET_15
2019-03-20 18:44:49 -Generating unique operation named: editUsingGET_16
2019-03-20 18:44:49 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 18:44:49 -Generating unique operation named: listUsingGET_18
2019-03-20 18:44:49 -Generating unique operation named: removeUsingPOST_27
2019-03-20 18:44:49 -Generating unique operation named: removeUsingPOST_28
2019-03-20 18:44:49 -Generating unique operation named: saveUsingPOST_16
2019-03-20 18:44:49 -Generating unique operation named: updateUsingGET_11
2019-03-20 18:44:49 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPOST_16
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPUT_11
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 18:44:49 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 18:44:49 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 18:44:49 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 18:44:49 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 18:44:49 -Generating unique operation named: addUsingGET_16
2019-03-20 18:44:49 -Generating unique operation named: editUsingGET_17
2019-03-20 18:44:49 -Generating unique operation named: listUsingGET_19
2019-03-20 18:44:49 -Generating unique operation named: removeUsingPOST_29
2019-03-20 18:44:49 -Generating unique operation named: removeUsingPOST_30
2019-03-20 18:44:49 -Generating unique operation named: saveUsingPOST_17
2019-03-20 18:44:49 -Generating unique operation named: updateUsingGET_12
2019-03-20 18:44:49 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPOST_17
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPUT_12
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 18:44:49 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 18:44:49 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 18:44:49 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 18:44:49 -Generating unique operation named: addUsingGET_17
2019-03-20 18:44:49 -Generating unique operation named: editUsingGET_18
2019-03-20 18:44:49 -Generating unique operation named: listUsingGET_20
2019-03-20 18:44:49 -Generating unique operation named: removeUsingPOST_31
2019-03-20 18:44:49 -Generating unique operation named: removeUsingPOST_32
2019-03-20 18:44:49 -Generating unique operation named: saveUsingPOST_18
2019-03-20 18:44:49 -Generating unique operation named: updateUsingGET_13
2019-03-20 18:44:49 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPOST_18
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPUT_13
2019-03-20 18:44:49 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 18:44:49 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 18:44:49 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 18:44:49 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 18:44:49 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 18:44:49 -Starting Quartz Scheduler now
2019-03-20 18:44:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 18:44:49 -Starting...
2019-03-20 18:44:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 18:44:49 -Started.
2019-03-20 18:44:49 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 18:44:49 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:20)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-20 18:44:50 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-20 18:44:50 -Stopping service [Tomcat]
2019-03-20 18:44:50 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-20 18:44:50 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-20 18:44:50 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-20 18:44:50 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-20 18:44:50 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-20 18:44:50 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1de5f0ef: startup date [Wed Mar 20 18:44:09 CST 2019]; root of context hierarchy
2019-03-20 18:44:50 -Stopping beans in phase 2147483647
2019-03-20 18:44:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 18:44:50 -Stopping...
2019-03-20 18:44:50 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 18:44:50 -Stopped.
2019-03-20 18:44:50 -Unregistering JMX-exposed beans on shutdown
2019-03-20 18:44:50 -Unregistering JMX-exposed beans
2019-03-20 18:44:50 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-20 18:44:50 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-20 18:44:50 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-20 18:44:50 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-20 18:44:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-20 18:44:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 18:44:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-20 18:44:50 -Shutting down Quartz Scheduler
2019-03-20 18:47:05 -Starting BootdoApplication on ZJZL-20180906VX with PID 9012 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 18:47:05 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 18:47:05 -The following profiles are active: dev
2019-03-20 18:47:05 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c7fd41f: startup date [Wed Mar 20 18:47:05 CST 2019]; root of context hierarchy
2019-03-20 18:47:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 18:47:11 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e2ef8683] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:47:11 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d548b52a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:47:12 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:47:12 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:47:12 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:47:12 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 18:47:12 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 18:47:12 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:47:12 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:47:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:47:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:47:14 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 18:47:14 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 18:47:14 -Starting service [Tomcat]
2019-03-20 18:47:14 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 18:47:14 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 18:47:14 -Initializing Spring embedded WebApplicationContext
2019-03-20 18:47:14 -Root WebApplicationContext: initialization completed in 9089 ms
2019-03-20 18:47:15 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 18:47:15 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 18:47:15 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 18:47:15 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 18:47:15 -Filter xssFilter was not registered (disabled)
2019-03-20 18:47:15 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 18:47:15 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 18:47:15 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 18:47:15 -Servlet dispatcherServlet mapped to [/]
2019-03-20 18:47:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c7fd41f: startup date [Wed Mar 20 18:47:05 CST 2019]; root of context hierarchy
2019-03-20 18:47:19 -Using default implementation for ThreadExecutor
2019-03-20 18:47:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 18:47:19 -Quartz Scheduler v.2.2.1 created.
2019-03-20 18:47:19 -RAMJobStore initialized.
2019-03-20 18:47:19 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 18:47:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 18:47:19 -Quartz scheduler version: 2.2.1
2019-03-20 18:47:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@54caeadc
2019-03-20 18:47:20 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 18:47:20 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 18:47:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 18:47:23 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:47:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 18:47:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 18:47:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 18:47:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 18:47:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 18:47:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 18:47:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 18:47:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 18:47:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 18:47:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 18:47:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 18:47:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 18:47:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 18:47:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 18:47:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 18:47:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 18:47:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 18:47:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 18:47:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 18:47:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 18:47:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 18:47:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 18:47:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 18:47:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 18:47:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 18:47:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 18:47:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 18:47:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 18:47:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 18:47:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:47:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:47:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 18:47:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 18:47:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 18:47:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 18:47:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:47:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 18:47:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 18:47:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:47:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 18:47:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 18:47:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 18:47:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 18:47:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 18:47:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 18:47:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 18:47:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 18:47:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 18:47:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 18:47:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 18:47:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 18:47:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 18:47:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:47:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 18:47:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:47:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 18:47:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 18:47:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 18:47:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 18:47:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 18:47:23 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 18:47:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 18:47:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 18:47:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 18:47:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 18:47:23 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 18:47:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 18:47:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 18:47:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 18:47:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 18:47:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 18:47:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 18:47:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 18:47:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 18:47:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 18:47:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 18:47:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 18:47:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 18:47:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 18:47:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 18:47:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 18:47:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 18:47:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 18:47:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 18:47:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 18:47:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 18:47:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 18:47:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:47:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:47:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 18:47:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 18:47:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 18:47:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 18:47:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 18:47:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 18:47:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 18:47:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 18:47:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 18:47:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 18:47:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 18:47:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 18:47:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 18:47:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 18:47:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 18:47:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 18:47:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 18:47:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 18:47:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 18:47:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 18:47:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:47:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 18:47:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 18:47:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 18:47:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 18:47:23 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 18:47:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:47:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 18:47:23 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:47:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 18:47:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 18:47:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 18:47:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 18:47:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 18:47:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 18:47:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:47:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 18:47:23 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:47:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:47:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 18:47:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 18:47:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 18:47:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 18:47:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 18:47:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 18:47:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:47:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c7fd41f: startup date [Wed Mar 20 18:47:05 CST 2019]; root of context hierarchy
2019-03-20 18:47:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:47:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:47:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:47:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 18:47:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 18:47:27 -Registering beans for JMX exposure on startup
2019-03-20 18:47:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 18:47:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 18:47:27 -Starting beans in phase 2147483647
2019-03-20 18:47:27 -Context refreshed
2019-03-20 18:47:27 -Found 1 custom documentation plugin(s)
2019-03-20 18:47:27 -Scanning for api listing references
2019-03-20 18:47:28 -Generating unique operation named: removeUsingPOST_1
2019-03-20 18:47:28 -Generating unique operation named: addUsingGET_1
2019-03-20 18:47:28 -Generating unique operation named: editUsingGET_1
2019-03-20 18:47:28 -Generating unique operation named: listUsingGET_1
2019-03-20 18:47:28 -Generating unique operation named: removeUsingPOST_2
2019-03-20 18:47:28 -Generating unique operation named: removeUsingPOST_3
2019-03-20 18:47:28 -Generating unique operation named: saveUsingPOST_1
2019-03-20 18:47:28 -Generating unique operation named: updateUsingGET_1
2019-03-20 18:47:28 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 18:47:28 -Generating unique operation named: updateUsingPOST_1
2019-03-20 18:47:28 -Generating unique operation named: updateUsingPUT_1
2019-03-20 18:47:28 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 18:47:28 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 18:47:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 18:47:28 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 18:47:28 -Generating unique operation named: addUsingGET_2
2019-03-20 18:47:28 -Generating unique operation named: editUsingGET_2
2019-03-20 18:47:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 18:47:28 -Generating unique operation named: listUsingGET_2
2019-03-20 18:47:28 -Generating unique operation named: removeUsingPOST_4
2019-03-20 18:47:28 -Generating unique operation named: removeUsingPOST_5
2019-03-20 18:47:28 -Generating unique operation named: saveUsingPOST_2
2019-03-20 18:47:28 -Generating unique operation named: updateUsingGET_2
2019-03-20 18:47:28 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 18:47:28 -Generating unique operation named: updateUsingPOST_2
2019-03-20 18:47:28 -Generating unique operation named: updateUsingPUT_2
2019-03-20 18:47:28 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 18:47:28 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 18:47:28 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 18:47:28 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 18:47:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 18:47:28 -Generating unique operation named: addUsingGET_3
2019-03-20 18:47:28 -Generating unique operation named: editUsingGET_3
2019-03-20 18:47:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 18:47:28 -Generating unique operation named: listUsingGET_3
2019-03-20 18:47:28 -Generating unique operation named: removeUsingPOST_6
2019-03-20 18:47:28 -Generating unique operation named: removeUsingPOST_7
2019-03-20 18:47:28 -Generating unique operation named: saveUsingPOST_3
2019-03-20 18:47:28 -Generating unique operation named: updateUsingGET_3
2019-03-20 18:47:28 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 18:47:28 -Generating unique operation named: updateUsingPOST_3
2019-03-20 18:47:28 -Generating unique operation named: updateUsingPUT_3
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 18:47:29 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 18:47:29 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 18:47:29 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 18:47:29 -Generating unique operation named: addUsingGET_4
2019-03-20 18:47:29 -Generating unique operation named: editUsingGET_4
2019-03-20 18:47:29 -Generating unique operation named: listUsingGET_4
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_8
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_9
2019-03-20 18:47:29 -Generating unique operation named: saveUsingPOST_4
2019-03-20 18:47:29 -Generating unique operation named: updateUsingGET_4
2019-03-20 18:47:29 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPOST_4
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPUT_4
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 18:47:29 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 18:47:29 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 18:47:29 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 18:47:29 -Generating unique operation named: ElecUsingGET_1
2019-03-20 18:47:29 -Generating unique operation named: addUsingGET_5
2019-03-20 18:47:29 -Generating unique operation named: editUsingGET_5
2019-03-20 18:47:29 -Generating unique operation named: listUsingGET_5
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_10
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_11
2019-03-20 18:47:29 -Generating unique operation named: saveUsingPOST_5
2019-03-20 18:47:29 -Generating unique operation named: updateUsingGET_5
2019-03-20 18:47:29 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPOST_5
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPUT_5
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 18:47:29 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 18:47:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 18:47:29 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 18:47:29 -Generating unique operation named: editUsingGET_6
2019-03-20 18:47:29 -Generating unique operation named: listUsingGET_6
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPOST_6
2019-03-20 18:47:29 -Generating unique operation named: addUsingGET_6
2019-03-20 18:47:29 -Generating unique operation named: editUsingGET_7
2019-03-20 18:47:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 18:47:29 -Generating unique operation named: listUsingGET_7
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_12
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_13
2019-03-20 18:47:29 -Generating unique operation named: saveUsingPOST_6
2019-03-20 18:47:29 -Generating unique operation named: updateUsingGET_6
2019-03-20 18:47:29 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPOST_7
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPUT_6
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 18:47:29 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 18:47:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 18:47:29 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 18:47:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 18:47:29 -Generating unique operation named: addUsingGET_7
2019-03-20 18:47:29 -Generating unique operation named: editUsingGET_8
2019-03-20 18:47:29 -Generating unique operation named: listUsingGET_8
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_14
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_15
2019-03-20 18:47:29 -Generating unique operation named: saveUsingPOST_7
2019-03-20 18:47:29 -Generating unique operation named: updateUsingGET_7
2019-03-20 18:47:29 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPOST_8
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPUT_7
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 18:47:29 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 18:47:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 18:47:29 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 18:47:29 -Generating unique operation named: addUsingGET_8
2019-03-20 18:47:29 -Generating unique operation named: editUsingGET_9
2019-03-20 18:47:29 -Generating unique operation named: listUsingGET_9
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_16
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_17
2019-03-20 18:47:29 -Generating unique operation named: saveUsingPOST_8
2019-03-20 18:47:29 -Generating unique operation named: updateUsingGET_8
2019-03-20 18:47:29 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPOST_9
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPUT_8
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 18:47:29 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 18:47:29 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 18:47:29 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 18:47:29 -Generating unique operation named: addUsingGET_9
2019-03-20 18:47:29 -Generating unique operation named: editUsingGET_10
2019-03-20 18:47:29 -Generating unique operation named: infoUsingGET_1
2019-03-20 18:47:29 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 18:47:29 -Generating unique operation named: infoUsingPOST_1
2019-03-20 18:47:29 -Generating unique operation named: infoUsingPUT_1
2019-03-20 18:47:29 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 18:47:29 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 18:47:29 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 18:47:29 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 18:47:29 -Generating unique operation named: listUsingGET_10
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_18
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_19
2019-03-20 18:47:29 -Generating unique operation named: saveUsingPOST_9
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPOST_10
2019-03-20 18:47:29 -Generating unique operation named: listUsingGET_11
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_20
2019-03-20 18:47:29 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 18:47:29 -Generating unique operation named: addUsingGET_10
2019-03-20 18:47:29 -Generating unique operation named: editUsingGET_11
2019-03-20 18:47:29 -Generating unique operation named: listUsingGET_12
2019-03-20 18:47:29 -Generating unique operation named: removeUsingPOST_21
2019-03-20 18:47:29 -Generating unique operation named: saveUsingPOST_10
2019-03-20 18:47:29 -Generating unique operation named: treeUsingGET_1
2019-03-20 18:47:29 -Generating unique operation named: treeUsingGET_2
2019-03-20 18:47:29 -Generating unique operation named: updateUsingPOST_11
2019-03-20 18:47:29 -Generating unique operation named: addUsingGET_11
2019-03-20 18:47:29 -Generating unique operation named: editUsingGET_12
2019-03-20 18:47:29 -Generating unique operation named: listUsingGET_13
2019-03-20 18:47:30 -Generating unique operation named: removeUsingPOST_22
2019-03-20 18:47:30 -Generating unique operation named: removeUsingPOST_23
2019-03-20 18:47:30 -Generating unique operation named: saveUsingPOST_11
2019-03-20 18:47:30 -Generating unique operation named: updateUsingGET_9
2019-03-20 18:47:30 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPOST_12
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPUT_9
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 18:47:30 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 18:47:30 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 18:47:30 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 18:47:30 -Generating unique operation named: addUsingGET_12
2019-03-20 18:47:30 -Generating unique operation named: editUsingGET_13
2019-03-20 18:47:30 -Generating unique operation named: listUsingGET_14
2019-03-20 18:47:30 -Generating unique operation named: removeUsingPOST_24
2019-03-20 18:47:30 -Generating unique operation named: removeUsingPOST_25
2019-03-20 18:47:30 -Generating unique operation named: saveUsingPOST_12
2019-03-20 18:47:30 -Generating unique operation named: updateUsingGET_10
2019-03-20 18:47:30 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPOST_13
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPUT_10
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 18:47:30 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 18:47:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 18:47:30 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 18:47:30 -Generating unique operation named: addUsingGET_13
2019-03-20 18:47:30 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 18:47:30 -Generating unique operation named: editUsingGET_14
2019-03-20 18:47:30 -Generating unique operation named: listUsingGET_15
2019-03-20 18:47:30 -Generating unique operation named: saveUsingPOST_13
2019-03-20 18:47:30 -Generating unique operation named: saveUsingPOST_14
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPOST_14
2019-03-20 18:47:30 -Generating unique operation named: listUsingGET_16
2019-03-20 18:47:30 -Generating unique operation named: listUsingHEAD_1
2019-03-20 18:47:30 -Generating unique operation named: listUsingPOST_1
2019-03-20 18:47:30 -Generating unique operation named: listUsingPUT_1
2019-03-20 18:47:30 -Generating unique operation named: listUsingPATCH_1
2019-03-20 18:47:30 -Generating unique operation named: listUsingDELETE_1
2019-03-20 18:47:30 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 18:47:30 -Generating unique operation named: listUsingTRACE_1
2019-03-20 18:47:30 -Generating unique operation named: addUsingGET_14
2019-03-20 18:47:30 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 18:47:30 -Generating unique operation named: editUsingGET_15
2019-03-20 18:47:30 -Generating unique operation named: listUsingGET_17
2019-03-20 18:47:30 -Generating unique operation named: removeUsingPOST_26
2019-03-20 18:47:30 -Generating unique operation named: saveUsingPOST_15
2019-03-20 18:47:30 -Generating unique operation named: treeUsingGET_3
2019-03-20 18:47:30 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPOST_15
2019-03-20 18:47:30 -Generating unique operation named: addUsingGET_15
2019-03-20 18:47:30 -Generating unique operation named: editUsingGET_16
2019-03-20 18:47:30 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 18:47:30 -Generating unique operation named: listUsingGET_18
2019-03-20 18:47:30 -Generating unique operation named: removeUsingPOST_27
2019-03-20 18:47:30 -Generating unique operation named: removeUsingPOST_28
2019-03-20 18:47:30 -Generating unique operation named: saveUsingPOST_16
2019-03-20 18:47:30 -Generating unique operation named: updateUsingGET_11
2019-03-20 18:47:30 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPOST_16
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPUT_11
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 18:47:30 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 18:47:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 18:47:30 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 18:47:30 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 18:47:30 -Generating unique operation named: addUsingGET_16
2019-03-20 18:47:30 -Generating unique operation named: editUsingGET_17
2019-03-20 18:47:30 -Generating unique operation named: listUsingGET_19
2019-03-20 18:47:30 -Generating unique operation named: removeUsingPOST_29
2019-03-20 18:47:30 -Generating unique operation named: removeUsingPOST_30
2019-03-20 18:47:30 -Generating unique operation named: saveUsingPOST_17
2019-03-20 18:47:30 -Generating unique operation named: updateUsingGET_12
2019-03-20 18:47:30 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPOST_17
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPUT_12
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 18:47:30 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 18:47:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 18:47:30 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 18:47:30 -Generating unique operation named: addUsingGET_17
2019-03-20 18:47:30 -Generating unique operation named: editUsingGET_18
2019-03-20 18:47:30 -Generating unique operation named: listUsingGET_20
2019-03-20 18:47:30 -Generating unique operation named: removeUsingPOST_31
2019-03-20 18:47:30 -Generating unique operation named: removeUsingPOST_32
2019-03-20 18:47:30 -Generating unique operation named: saveUsingPOST_18
2019-03-20 18:47:30 -Generating unique operation named: updateUsingGET_13
2019-03-20 18:47:30 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPOST_18
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPUT_13
2019-03-20 18:47:30 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 18:47:30 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 18:47:30 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 18:47:30 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 18:47:30 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 18:47:30 -Starting Quartz Scheduler now
2019-03-20 18:47:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 18:47:30 -Starting...
2019-03-20 18:47:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 18:47:30 -Started.
2019-03-20 18:47:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 18:47:30 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:20)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-20 18:47:30 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-20 18:47:30 -Stopping service [Tomcat]
2019-03-20 18:47:30 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-20 18:47:30 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-20 18:47:30 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-20 18:47:30 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-20 18:47:30 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-20 18:47:30 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c7fd41f: startup date [Wed Mar 20 18:47:05 CST 2019]; root of context hierarchy
2019-03-20 18:47:30 -Stopping beans in phase 2147483647
2019-03-20 18:47:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 18:47:30 -Stopping...
2019-03-20 18:47:30 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 18:47:30 -Stopped.
2019-03-20 18:47:30 -Unregistering JMX-exposed beans on shutdown
2019-03-20 18:47:30 -Unregistering JMX-exposed beans
2019-03-20 18:47:30 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-20 18:47:30 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-20 18:47:30 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-20 18:47:30 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-20 18:47:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-20 18:47:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 18:47:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-20 18:47:30 -Shutting down Quartz Scheduler
2019-03-20 18:50:42 -Starting BootdoApplication on ZJZL-20180906VX with PID 7584 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 18:50:42 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 18:50:42 -The following profiles are active: dev
2019-03-20 18:50:42 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b43fbf6: startup date [Wed Mar 20 18:50:42 CST 2019]; root of context hierarchy
2019-03-20 18:50:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 18:50:49 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dc5eaadf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:50:49 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ceb7d986] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:50:50 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:50:50 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:50:50 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:50:50 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 18:50:50 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 18:50:50 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:50:50 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:50:50 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:50:50 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 18:50:51 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 18:50:51 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 18:50:51 -Starting service [Tomcat]
2019-03-20 18:50:51 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 18:50:52 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 18:50:52 -Initializing Spring embedded WebApplicationContext
2019-03-20 18:50:52 -Root WebApplicationContext: initialization completed in 9646 ms
2019-03-20 18:50:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 18:50:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 18:50:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 18:50:53 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 18:50:53 -Filter xssFilter was not registered (disabled)
2019-03-20 18:50:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 18:50:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 18:50:53 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 18:50:53 -Servlet dispatcherServlet mapped to [/]
2019-03-20 18:50:55 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b43fbf6: startup date [Wed Mar 20 18:50:42 CST 2019]; root of context hierarchy
2019-03-20 18:50:56 -Using default implementation for ThreadExecutor
2019-03-20 18:50:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 18:50:56 -Quartz Scheduler v.2.2.1 created.
2019-03-20 18:50:56 -RAMJobStore initialized.
2019-03-20 18:50:56 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 18:50:56 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 18:50:56 -Quartz scheduler version: 2.2.1
2019-03-20 18:50:56 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3a0e7f89
2019-03-20 18:50:57 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 18:50:57 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 18:51:00 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 18:51:00 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:51:00 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 18:51:00 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 18:51:00 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 18:51:00 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 18:51:00 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 18:51:00 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 18:51:00 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 18:51:00 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 18:51:00 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 18:51:00 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 18:51:00 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 18:51:00 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 18:51:00 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 18:51:00 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 18:51:00 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 18:51:00 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 18:51:00 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 18:51:00 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 18:51:00 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 18:51:00 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 18:51:00 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 18:51:00 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 18:51:00 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 18:51:00 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 18:51:00 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 18:51:00 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 18:51:00 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 18:51:00 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 18:51:00 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 18:51:00 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:51:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:51:00 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 18:51:00 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 18:51:00 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 18:51:00 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 18:51:00 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:51:00 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 18:51:00 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 18:51:00 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:51:00 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 18:51:00 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 18:51:00 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 18:51:00 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 18:51:00 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 18:51:00 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 18:51:00 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 18:51:00 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 18:51:00 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 18:51:00 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 18:51:00 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 18:51:00 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 18:51:00 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:51:00 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 18:51:00 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:51:00 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 18:51:00 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 18:51:00 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 18:51:00 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 18:51:00 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 18:51:00 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 18:51:00 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 18:51:00 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 18:51:00 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 18:51:00 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 18:51:00 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 18:51:00 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 18:51:00 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 18:51:00 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 18:51:00 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 18:51:00 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 18:51:00 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 18:51:00 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 18:51:00 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 18:51:00 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 18:51:00 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 18:51:00 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 18:51:00 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 18:51:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 18:51:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 18:51:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 18:51:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 18:51:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 18:51:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 18:51:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 18:51:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 18:51:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 18:51:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 18:51:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 18:51:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:51:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 18:51:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 18:51:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 18:51:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 18:51:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 18:51:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 18:51:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 18:51:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 18:51:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 18:51:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 18:51:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 18:51:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 18:51:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 18:51:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 18:51:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 18:51:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:51:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 18:51:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 18:51:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 18:51:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 18:51:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 18:51:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 18:51:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 18:51:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 18:51:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:51:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 18:51:00 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 18:51:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 18:51:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 18:51:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 18:51:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 18:51:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 18:51:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 18:51:00 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 18:51:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 18:51:00 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 18:51:00 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 18:51:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 18:51:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 18:51:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 18:51:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 18:51:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 18:51:01 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 18:51:01 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 18:51:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:51:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b43fbf6: startup date [Wed Mar 20 18:50:42 CST 2019]; root of context hierarchy
2019-03-20 18:51:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:51:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:51:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 18:51:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 18:51:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 18:51:05 -Registering beans for JMX exposure on startup
2019-03-20 18:51:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 18:51:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 18:51:05 -Starting beans in phase 2147483647
2019-03-20 18:51:05 -Context refreshed
2019-03-20 18:51:05 -Found 1 custom documentation plugin(s)
2019-03-20 18:51:05 -Scanning for api listing references
2019-03-20 18:51:06 -Generating unique operation named: removeUsingPOST_1
2019-03-20 18:51:06 -Generating unique operation named: addUsingGET_1
2019-03-20 18:51:06 -Generating unique operation named: editUsingGET_1
2019-03-20 18:51:06 -Generating unique operation named: listUsingGET_1
2019-03-20 18:51:06 -Generating unique operation named: removeUsingPOST_2
2019-03-20 18:51:06 -Generating unique operation named: removeUsingPOST_3
2019-03-20 18:51:06 -Generating unique operation named: saveUsingPOST_1
2019-03-20 18:51:06 -Generating unique operation named: updateUsingGET_1
2019-03-20 18:51:06 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 18:51:06 -Generating unique operation named: updateUsingPOST_1
2019-03-20 18:51:06 -Generating unique operation named: updateUsingPUT_1
2019-03-20 18:51:06 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 18:51:06 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 18:51:06 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 18:51:06 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 18:51:06 -Generating unique operation named: addUsingGET_2
2019-03-20 18:51:06 -Generating unique operation named: editUsingGET_2
2019-03-20 18:51:06 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 18:51:06 -Generating unique operation named: listUsingGET_2
2019-03-20 18:51:06 -Generating unique operation named: removeUsingPOST_4
2019-03-20 18:51:06 -Generating unique operation named: removeUsingPOST_5
2019-03-20 18:51:06 -Generating unique operation named: saveUsingPOST_2
2019-03-20 18:51:06 -Generating unique operation named: updateUsingGET_2
2019-03-20 18:51:06 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 18:51:06 -Generating unique operation named: updateUsingPOST_2
2019-03-20 18:51:06 -Generating unique operation named: updateUsingPUT_2
2019-03-20 18:51:06 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 18:51:06 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 18:51:06 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 18:51:06 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 18:51:06 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 18:51:06 -Generating unique operation named: addUsingGET_3
2019-03-20 18:51:06 -Generating unique operation named: editUsingGET_3
2019-03-20 18:51:06 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 18:51:06 -Generating unique operation named: listUsingGET_3
2019-03-20 18:51:06 -Generating unique operation named: removeUsingPOST_6
2019-03-20 18:51:06 -Generating unique operation named: removeUsingPOST_7
2019-03-20 18:51:06 -Generating unique operation named: saveUsingPOST_3
2019-03-20 18:51:06 -Generating unique operation named: updateUsingGET_3
2019-03-20 18:51:06 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 18:51:06 -Generating unique operation named: updateUsingPOST_3
2019-03-20 18:51:06 -Generating unique operation named: updateUsingPUT_3
2019-03-20 18:51:06 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 18:51:06 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 18:51:06 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 18:51:06 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 18:51:06 -Generating unique operation named: addUsingGET_4
2019-03-20 18:51:06 -Generating unique operation named: editUsingGET_4
2019-03-20 18:51:06 -Generating unique operation named: listUsingGET_4
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_8
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_9
2019-03-20 18:51:07 -Generating unique operation named: saveUsingPOST_4
2019-03-20 18:51:07 -Generating unique operation named: updateUsingGET_4
2019-03-20 18:51:07 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPOST_4
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPUT_4
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 18:51:07 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 18:51:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 18:51:07 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 18:51:07 -Generating unique operation named: ElecUsingGET_1
2019-03-20 18:51:07 -Generating unique operation named: addUsingGET_5
2019-03-20 18:51:07 -Generating unique operation named: editUsingGET_5
2019-03-20 18:51:07 -Generating unique operation named: listUsingGET_5
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_10
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_11
2019-03-20 18:51:07 -Generating unique operation named: saveUsingPOST_5
2019-03-20 18:51:07 -Generating unique operation named: updateUsingGET_5
2019-03-20 18:51:07 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPOST_5
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPUT_5
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 18:51:07 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 18:51:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 18:51:07 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 18:51:07 -Generating unique operation named: editUsingGET_6
2019-03-20 18:51:07 -Generating unique operation named: listUsingGET_6
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPOST_6
2019-03-20 18:51:07 -Generating unique operation named: addUsingGET_6
2019-03-20 18:51:07 -Generating unique operation named: editUsingGET_7
2019-03-20 18:51:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 18:51:07 -Generating unique operation named: listUsingGET_7
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_12
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_13
2019-03-20 18:51:07 -Generating unique operation named: saveUsingPOST_6
2019-03-20 18:51:07 -Generating unique operation named: updateUsingGET_6
2019-03-20 18:51:07 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPOST_7
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPUT_6
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 18:51:07 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 18:51:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 18:51:07 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 18:51:07 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 18:51:07 -Generating unique operation named: addUsingGET_7
2019-03-20 18:51:07 -Generating unique operation named: editUsingGET_8
2019-03-20 18:51:07 -Generating unique operation named: listUsingGET_8
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_14
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_15
2019-03-20 18:51:07 -Generating unique operation named: saveUsingPOST_7
2019-03-20 18:51:07 -Generating unique operation named: updateUsingGET_7
2019-03-20 18:51:07 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPOST_8
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPUT_7
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 18:51:07 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 18:51:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 18:51:07 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 18:51:07 -Generating unique operation named: addUsingGET_8
2019-03-20 18:51:07 -Generating unique operation named: editUsingGET_9
2019-03-20 18:51:07 -Generating unique operation named: listUsingGET_9
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_16
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_17
2019-03-20 18:51:07 -Generating unique operation named: saveUsingPOST_8
2019-03-20 18:51:07 -Generating unique operation named: updateUsingGET_8
2019-03-20 18:51:07 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPOST_9
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPUT_8
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 18:51:07 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 18:51:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 18:51:07 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 18:51:07 -Generating unique operation named: addUsingGET_9
2019-03-20 18:51:07 -Generating unique operation named: editUsingGET_10
2019-03-20 18:51:07 -Generating unique operation named: infoUsingGET_1
2019-03-20 18:51:07 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 18:51:07 -Generating unique operation named: infoUsingPOST_1
2019-03-20 18:51:07 -Generating unique operation named: infoUsingPUT_1
2019-03-20 18:51:07 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 18:51:07 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 18:51:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 18:51:07 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 18:51:07 -Generating unique operation named: listUsingGET_10
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_18
2019-03-20 18:51:07 -Generating unique operation named: removeUsingPOST_19
2019-03-20 18:51:07 -Generating unique operation named: saveUsingPOST_9
2019-03-20 18:51:07 -Generating unique operation named: updateUsingPOST_10
2019-03-20 18:51:07 -Generating unique operation named: listUsingGET_11
2019-03-20 18:51:08 -Generating unique operation named: removeUsingPOST_20
2019-03-20 18:51:08 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 18:51:08 -Generating unique operation named: addUsingGET_10
2019-03-20 18:51:08 -Generating unique operation named: editUsingGET_11
2019-03-20 18:51:08 -Generating unique operation named: listUsingGET_12
2019-03-20 18:51:08 -Generating unique operation named: removeUsingPOST_21
2019-03-20 18:51:08 -Generating unique operation named: saveUsingPOST_10
2019-03-20 18:51:08 -Generating unique operation named: treeUsingGET_1
2019-03-20 18:51:08 -Generating unique operation named: treeUsingGET_2
2019-03-20 18:51:08 -Generating unique operation named: updateUsingPOST_11
2019-03-20 18:51:08 -Generating unique operation named: addUsingGET_11
2019-03-20 18:51:08 -Generating unique operation named: editUsingGET_12
2019-03-20 18:51:08 -Generating unique operation named: listUsingGET_13
2019-03-20 18:51:08 -Generating unique operation named: removeUsingPOST_22
2019-03-20 18:51:08 -Generating unique operation named: removeUsingPOST_23
2019-03-20 18:51:08 -Generating unique operation named: saveUsingPOST_11
2019-03-20 18:51:08 -Generating unique operation named: updateUsingGET_9
2019-03-20 18:51:08 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 18:51:08 -Generating unique operation named: updateUsingPOST_12
2019-03-20 18:51:08 -Generating unique operation named: updateUsingPUT_9
2019-03-20 18:51:08 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 18:51:08 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 18:51:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 18:51:08 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 18:51:08 -Generating unique operation named: addUsingGET_12
2019-03-20 18:51:08 -Generating unique operation named: editUsingGET_13
2019-03-20 18:51:08 -Generating unique operation named: listUsingGET_14
2019-03-20 18:51:08 -Generating unique operation named: removeUsingPOST_24
2019-03-20 18:51:08 -Generating unique operation named: removeUsingPOST_25
2019-03-20 18:51:08 -Generating unique operation named: saveUsingPOST_12
2019-03-20 18:51:08 -Generating unique operation named: updateUsingGET_10
2019-03-20 18:51:08 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 18:51:08 -Generating unique operation named: updateUsingPOST_13
2019-03-20 18:51:08 -Generating unique operation named: updateUsingPUT_10
2019-03-20 18:51:08 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 18:51:08 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 18:51:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 18:51:08 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 18:51:08 -Generating unique operation named: addUsingGET_13
2019-03-20 18:51:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 18:51:08 -Generating unique operation named: editUsingGET_14
2019-03-20 18:51:08 -Generating unique operation named: listUsingGET_15
2019-03-20 18:51:08 -Generating unique operation named: saveUsingPOST_13
2019-03-20 18:51:08 -Generating unique operation named: saveUsingPOST_14
2019-03-20 18:51:08 -Generating unique operation named: updateUsingPOST_14
2019-03-20 18:51:08 -Generating unique operation named: listUsingGET_16
2019-03-20 18:51:08 -Generating unique operation named: listUsingHEAD_1
2019-03-20 18:51:08 -Generating unique operation named: listUsingPOST_1
2019-03-20 18:51:08 -Generating unique operation named: listUsingPUT_1
2019-03-20 18:51:08 -Generating unique operation named: listUsingPATCH_1
2019-03-20 18:51:08 -Generating unique operation named: listUsingDELETE_1
2019-03-20 18:51:08 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 18:51:08 -Generating unique operation named: listUsingTRACE_1
2019-03-20 18:51:08 -Generating unique operation named: addUsingGET_14
2019-03-20 18:51:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 18:51:08 -Generating unique operation named: editUsingGET_15
2019-03-20 18:51:08 -Generating unique operation named: listUsingGET_17
2019-03-20 18:51:08 -Generating unique operation named: removeUsingPOST_26
2019-03-20 18:51:08 -Generating unique operation named: saveUsingPOST_15
2019-03-20 18:51:08 -Generating unique operation named: treeUsingGET_3
2019-03-20 18:51:08 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 18:51:08 -Generating unique operation named: updateUsingPOST_15
2019-03-20 18:51:08 -Generating unique operation named: addUsingGET_15
2019-03-20 18:51:08 -Generating unique operation named: editUsingGET_16
2019-03-20 18:51:08 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 18:51:08 -Generating unique operation named: listUsingGET_18
2019-03-20 18:51:08 -Generating unique operation named: removeUsingPOST_27
2019-03-20 18:51:08 -Generating unique operation named: removeUsingPOST_28
2019-03-20 18:51:08 -Generating unique operation named: saveUsingPOST_16
2019-03-20 18:51:08 -Generating unique operation named: updateUsingGET_11
2019-03-20 18:51:08 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 18:51:08 -Generating unique operation named: updateUsingPOST_16
2019-03-20 18:51:09 -Generating unique operation named: updateUsingPUT_11
2019-03-20 18:51:09 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 18:51:09 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 18:51:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 18:51:09 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 18:51:09 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 18:51:09 -Generating unique operation named: addUsingGET_16
2019-03-20 18:51:09 -Generating unique operation named: editUsingGET_17
2019-03-20 18:51:09 -Generating unique operation named: listUsingGET_19
2019-03-20 18:51:09 -Generating unique operation named: removeUsingPOST_29
2019-03-20 18:51:09 -Generating unique operation named: removeUsingPOST_30
2019-03-20 18:51:09 -Generating unique operation named: saveUsingPOST_17
2019-03-20 18:51:09 -Generating unique operation named: updateUsingGET_12
2019-03-20 18:51:09 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 18:51:09 -Generating unique operation named: updateUsingPOST_17
2019-03-20 18:51:09 -Generating unique operation named: updateUsingPUT_12
2019-03-20 18:51:09 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 18:51:09 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 18:51:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 18:51:09 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 18:51:09 -Generating unique operation named: addUsingGET_17
2019-03-20 18:51:09 -Generating unique operation named: editUsingGET_18
2019-03-20 18:51:09 -Generating unique operation named: listUsingGET_20
2019-03-20 18:51:09 -Generating unique operation named: removeUsingPOST_31
2019-03-20 18:51:09 -Generating unique operation named: removeUsingPOST_32
2019-03-20 18:51:09 -Generating unique operation named: saveUsingPOST_18
2019-03-20 18:51:09 -Generating unique operation named: updateUsingGET_13
2019-03-20 18:51:09 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 18:51:09 -Generating unique operation named: updateUsingPOST_18
2019-03-20 18:51:09 -Generating unique operation named: updateUsingPUT_13
2019-03-20 18:51:09 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 18:51:09 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 18:51:09 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 18:51:09 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 18:51:09 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 18:51:09 -Starting Quartz Scheduler now
2019-03-20 18:51:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 18:51:09 -Starting...
2019-03-20 18:51:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 18:51:09 -Started.
2019-03-20 18:51:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 18:51:09 -Using a shared selector for servlet write/read
2019-03-20 18:51:10 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-20 18:51:10 -Started BootdoApplication in 29.732 seconds (JVM running for 31.753)
2019-03-20 18:51:10 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-20 18:51:11 -==> Parameters: 
2019-03-20 18:51:12 -<==      Total: 1
2019-03-20 18:52:01 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-20 18:52:11 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-20 18:52:11 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-20 18:52:11 -FrameworkServlet 'dispatcherServlet': initialization completed in 82 ms
2019-03-20 18:52:11 -Enabling session validation scheduler...
2019-03-20 18:52:11 -请求地址 : http://localhost:8081/login;JSESSIONID=fb423a24-e459-4284-902a-f16b4daa24e5
2019-03-20 18:52:11 -HTTP METHOD : GET
2019-03-20 18:52:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 18:52:11 -参数 : [{}]
2019-03-20 18:52:11 -耗时 : 8
2019-03-20 18:52:11 -返回值 : login
2019-03-20 18:52:17 -请求地址 : http://localhost:8081/getVerify
2019-03-20 18:52:17 -HTTP METHOD : GET
2019-03-20 18:52:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 18:52:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f09709a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5a0bed1f]
2019-03-20 18:52:28 -2764
2019-03-20 18:52:28 -耗时 : 10877
2019-03-20 18:52:28 -返回值 : null
2019-03-20 18:52:50 -请求地址 : http://localhost:8081/login
2019-03-20 18:52:50 -HTTP METHOD : POST
2019-03-20 18:52:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 18:52:50 -参数 : [admin, 111111, 2764, org.apache.shiro.web.servlet.ShiroHttpServletRequest@f960ea5]
2019-03-20 18:52:50 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 18:52:50 -==> Parameters: admin(String)
2019-03-20 18:52:50 -<==      Total: 1
2019-03-20 18:52:50 -耗时 : 219
2019-03-20 18:52:50 -返回值 : {msg=操作成功, code=0}
2019-03-20 18:52:50 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-20 18:52:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 18:52:50 -==> Parameters: 1(Long), admin(String), 登录(String), 219(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 18:52:50.639(Timestamp)
2019-03-20 18:52:50 -<==    Updates: 1
2019-03-20 18:52:50 -请求地址 : http://localhost:8081/index
2019-03-20 18:52:50 -HTTP METHOD : GET
2019-03-20 18:52:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 18:52:50 -参数 : [{}]
2019-03-20 18:52:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 18:52:51 -==> Parameters: 1(Long)
2019-03-20 18:52:51 -<==      Total: 46
2019-03-20 18:52:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 18:52:51 -==> Parameters: 138(Long)
2019-03-20 18:52:51 -<==      Total: 1
2019-03-20 18:52:51 -耗时 : 533
2019-03-20 18:52:51 -返回值 : index_v1
2019-03-20 18:52:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 18:52:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 533(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 18:52:51.494(Timestamp)
2019-03-20 18:52:51 -<==    Updates: 1
2019-03-20 18:52:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 18:52:52 -HTTP METHOD : GET
2019-03-20 18:52:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 18:52:52 -参数 : []
2019-03-20 18:52:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 18:52:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 18:52:52 -<==      Total: 0
2019-03-20 18:52:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 18:52:52 -==> Parameters: 1(Long), 0(String)
2019-03-20 18:52:52 -<==      Total: 1
2019-03-20 18:52:52 -耗时 : 109
2019-03-20 18:52:52 -返回值 : com.bootdo.common.utils.PageUtils@12daad5
2019-03-20 18:52:52 -请求地址 : http://localhost:8081/main
2019-03-20 18:52:52 -HTTP METHOD : GET
2019-03-20 18:52:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 18:52:52 -参数 : []
2019-03-20 18:52:52 -耗时 : 0
2019-03-20 18:52:52 -返回值 : main
2019-03-20 18:52:53 -请求地址 : http://localhost:8081/main
2019-03-20 18:52:53 -HTTP METHOD : GET
2019-03-20 18:52:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 18:52:53 -参数 : []
2019-03-20 18:52:53 -耗时 : 0
2019-03-20 18:52:53 -返回值 : main
2019-03-20 18:53:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 18:53:32 -==> Parameters: 1(Long)
2019-03-20 18:53:32 -<==      Total: 90
2019-03-20 18:53:33 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 18:53:33 -HTTP METHOD : GET
2019-03-20 18:53:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 18:53:33 -参数 : []
2019-03-20 18:53:33 -耗时 : 0
2019-03-20 18:53:33 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 18:53:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 18:53:33 -HTTP METHOD : GET
2019-03-20 18:53:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 18:53:33 -参数 : [userType]
2019-03-20 18:53:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 18:53:33 -==> Parameters: userType(String)
2019-03-20 18:53:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 18:53:33 -HTTP METHOD : GET
2019-03-20 18:53:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 18:53:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 18:53:33 -<==      Total: 2
2019-03-20 18:53:33 -耗时 : 69
2019-03-20 18:53:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 18:53:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 18:53:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 18:53:34 -<==      Total: 4
2019-03-20 18:53:34 -==>  Preparing: select count(*) from elec_log 
2019-03-20 18:53:34 -==> Parameters: 
2019-03-20 18:53:34 -<==      Total: 1
2019-03-20 18:53:34 -耗时 : 181
2019-03-20 18:53:34 -返回值 : com.bootdo.common.utils.PageUtils@29a7de6
2019-03-20 18:53:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 18:53:47 -HTTP METHOD : GET
2019-03-20 18:53:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 18:53:47 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=, type=A}]
2019-03-20 18:53:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-20 18:53:47 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-20 18:53:47 -<==      Total: 3
2019-03-20 18:53:47 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-03-20 18:53:47 -==> Parameters: A(String)
2019-03-20 18:53:47 -<==      Total: 1
2019-03-20 18:53:47 -耗时 : 22
2019-03-20 18:53:47 -返回值 : com.bootdo.common.utils.PageUtils@3c286dd7
2019-03-20 18:53:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 18:53:48 -HTTP METHOD : GET
2019-03-20 18:53:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 18:53:48 -参数 : []
2019-03-20 18:53:48 -耗时 : 0
2019-03-20 18:53:48 -返回值 : system/dept/deptTree
2019-03-20 18:53:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 18:53:49 -HTTP METHOD : GET
2019-03-20 18:53:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 18:53:49 -参数 : []
2019-03-20 18:53:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 18:53:49 -==> Parameters: 
2019-03-20 18:53:49 -<==      Total: 3
2019-03-20 18:53:49 -耗时 : 23
2019-03-20 18:53:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 18:53:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 18:53:52 -HTTP METHOD : GET
2019-03-20 18:53:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 18:53:52 -参数 : []
2019-03-20 18:53:52 -耗时 : 1
2019-03-20 18:53:52 -返回值 : system/dept/deptTree
2019-03-20 18:53:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 18:53:53 -HTTP METHOD : GET
2019-03-20 18:53:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 18:53:53 -参数 : []
2019-03-20 18:53:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 18:53:53 -==> Parameters: 
2019-03-20 18:53:53 -<==      Total: 3
2019-03-20 18:53:53 -耗时 : 10
2019-03-20 18:53:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 18:53:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-20 18:53:55 -HTTP METHOD : GET
2019-03-20 18:53:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotExcel
2019-03-20 18:53:55 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5b8390f8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7e5e642a, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3a80c214]
2019-03-20 18:53:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? 
2019-03-20 18:53:55 -==> Parameters: A(String), 2(String)
2019-03-20 18:53:55 -<==      Total: 3
2019-03-20 18:53:57 -耗时 : 1087
2019-03-20 18:53:57 -返回值 : null
2019-03-20 19:01:04 -请求地址 : http://localhost:8081/index
2019-03-20 19:01:04 -HTTP METHOD : GET
2019-03-20 19:01:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 19:01:04 -参数 : [{}]
2019-03-20 19:01:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 19:01:04 -==> Parameters: 1(Long)
2019-03-20 19:01:04 -<==      Total: 46
2019-03-20 19:01:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 19:01:04 -==> Parameters: 138(Long)
2019-03-20 19:01:04 -<==      Total: 1
2019-03-20 19:01:04 -耗时 : 72
2019-03-20 19:01:04 -返回值 : index_v1
2019-03-20 19:01:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 19:01:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 72(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 19:01:04.7(Timestamp)
2019-03-20 19:01:04 -<==    Updates: 1
2019-03-20 19:01:04 -请求地址 : http://localhost:8081/main
2019-03-20 19:01:04 -HTTP METHOD : GET
2019-03-20 19:01:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 19:01:04 -参数 : []
2019-03-20 19:01:04 -耗时 : 1
2019-03-20 19:01:04 -返回值 : main
2019-03-20 19:01:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 19:01:05 -HTTP METHOD : GET
2019-03-20 19:01:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 19:01:05 -参数 : []
2019-03-20 19:01:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 19:01:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 19:01:05 -<==      Total: 0
2019-03-20 19:01:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 19:01:05 -==> Parameters: 1(Long), 0(String)
2019-03-20 19:01:05 -<==      Total: 1
2019-03-20 19:01:05 -耗时 : 30
2019-03-20 19:01:05 -返回值 : com.bootdo.common.utils.PageUtils@2a7f6e2e
2019-03-20 19:01:05 -请求地址 : http://localhost:8081/main
2019-03-20 19:01:05 -HTTP METHOD : GET
2019-03-20 19:01:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 19:01:05 -参数 : []
2019-03-20 19:01:05 -耗时 : 1
2019-03-20 19:01:05 -返回值 : main
2019-03-20 19:01:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 19:01:08 -HTTP METHOD : GET
2019-03-20 19:01:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 19:01:08 -参数 : []
2019-03-20 19:01:08 -耗时 : 0
2019-03-20 19:01:08 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 19:01:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:01:08 -HTTP METHOD : GET
2019-03-20 19:01:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:01:08 -参数 : [userType]
2019-03-20 19:01:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:01:08 -==> Parameters: userType(String)
2019-03-20 19:01:08 -<==      Total: 2
2019-03-20 19:01:08 -耗时 : 7
2019-03-20 19:01:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:01:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:01:08 -HTTP METHOD : GET
2019-03-20 19:01:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:01:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 19:01:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 19:01:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 19:01:08 -<==      Total: 4
2019-03-20 19:01:08 -==>  Preparing: select count(*) from elec_log 
2019-03-20 19:01:08 -==> Parameters: 
2019-03-20 19:01:08 -<==      Total: 1
2019-03-20 19:01:08 -耗时 : 12
2019-03-20 19:01:08 -返回值 : com.bootdo.common.utils.PageUtils@3df3e5d8
2019-03-20 19:01:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:01:11 -HTTP METHOD : GET
2019-03-20 19:01:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:01:11 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=, type=A}]
2019-03-20 19:01:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-20 19:01:11 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-20 19:01:11 -<==      Total: 3
2019-03-20 19:01:11 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-03-20 19:01:11 -==> Parameters: A(String)
2019-03-20 19:01:11 -<==      Total: 1
2019-03-20 19:01:11 -耗时 : 23
2019-03-20 19:01:11 -返回值 : com.bootdo.common.utils.PageUtils@87e3fb5
2019-03-20 19:01:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 19:01:12 -HTTP METHOD : GET
2019-03-20 19:01:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 19:01:12 -参数 : []
2019-03-20 19:01:12 -耗时 : 1
2019-03-20 19:01:12 -返回值 : system/dept/deptTree
2019-03-20 19:01:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 19:01:12 -HTTP METHOD : GET
2019-03-20 19:01:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 19:01:12 -参数 : []
2019-03-20 19:01:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 19:01:12 -==> Parameters: 
2019-03-20 19:01:12 -<==      Total: 3
2019-03-20 19:01:12 -耗时 : 6
2019-03-20 19:01:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 19:01:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-20 19:01:14 -HTTP METHOD : GET
2019-03-20 19:01:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotExcel
2019-03-20 19:01:14 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@5155e13, org.apache.shiro.web.servlet.ShiroHttpServletResponse@15058c27, org.apache.shiro.web.servlet.ShiroHttpServletRequest@780d14e8]
2019-03-20 19:01:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? 
2019-03-20 19:01:14 -==> Parameters: A(String), 2(String)
2019-03-20 19:01:14 -<==      Total: 3
2019-03-20 19:01:14 -耗时 : 17
2019-03-20 19:01:14 -返回值 : null
2019-03-20 19:01:41 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 19:09:02 -Starting BootdoApplication on ZJZL-20180906VX with PID 12108 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 19:09:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 19:09:02 -The following profiles are active: dev
2019-03-20 19:09:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65a4798f: startup date [Wed Mar 20 19:09:03 CST 2019]; root of context hierarchy
2019-03-20 19:09:08 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 19:09:11 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$693d98dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:09:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5b96c783] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:09:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:09:14 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:09:14 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:09:14 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 19:09:14 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 19:09:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:09:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:09:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:09:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:09:15 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 19:09:15 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 19:09:15 -Starting service [Tomcat]
2019-03-20 19:09:15 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 19:09:15 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 19:09:16 -Initializing Spring embedded WebApplicationContext
2019-03-20 19:09:16 -Root WebApplicationContext: initialization completed in 13277 ms
2019-03-20 19:09:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 19:09:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 19:09:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 19:09:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 19:09:17 -Filter xssFilter was not registered (disabled)
2019-03-20 19:09:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 19:09:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 19:09:17 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 19:09:17 -Servlet dispatcherServlet mapped to [/]
2019-03-20 19:09:21 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65a4798f: startup date [Wed Mar 20 19:09:03 CST 2019]; root of context hierarchy
2019-03-20 19:09:22 -Using default implementation for ThreadExecutor
2019-03-20 19:09:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 19:09:22 -Quartz Scheduler v.2.2.1 created.
2019-03-20 19:09:22 -RAMJobStore initialized.
2019-03-20 19:09:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 19:09:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 19:09:22 -Quartz scheduler version: 2.2.1
2019-03-20 19:09:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@70cd122
2019-03-20 19:09:23 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 19:09:23 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 19:09:26 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 19:09:26 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 19:09:26 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:09:26 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 19:09:26 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 19:09:26 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 19:09:26 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 19:09:26 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 19:09:26 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 19:09:26 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 19:09:26 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 19:09:26 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:26 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 19:09:26 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 19:09:26 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 19:09:26 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:26 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 19:09:26 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 19:09:26 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 19:09:26 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 19:09:26 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 19:09:26 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 19:09:26 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:26 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 19:09:26 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 19:09:26 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 19:09:26 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:26 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 19:09:26 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:26 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 19:09:26 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:09:26 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 19:09:26 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:09:26 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 19:09:26 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 19:09:26 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 19:09:26 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 19:09:26 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 19:09:26 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:26 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 19:09:26 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 19:09:26 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 19:09:26 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 19:09:26 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:26 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 19:09:26 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 19:09:26 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:26 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 19:09:26 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 19:09:26 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 19:09:26 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:09:26 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:09:26 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 19:09:26 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 19:09:26 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 19:09:26 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:09:26 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:09:26 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:09:26 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:09:26 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:26 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 19:09:26 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:09:26 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 19:09:26 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 19:09:26 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 19:09:26 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 19:09:26 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 19:09:26 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 19:09:26 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:26 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:09:26 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:26 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 19:09:26 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 19:09:26 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:09:26 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 19:09:26 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 19:09:26 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 19:09:26 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:09:26 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:26 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:09:26 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:09:26 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 19:09:26 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 19:09:26 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:09:26 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 19:09:26 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 19:09:26 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 19:09:26 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 19:09:26 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:09:26 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:26 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:09:26 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:26 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 19:09:26 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:09:26 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 19:09:26 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 19:09:26 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 19:09:26 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 19:09:27 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 19:09:27 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 19:09:27 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 19:09:27 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 19:09:27 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 19:09:27 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 19:09:27 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 19:09:27 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:09:27 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 19:09:27 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 19:09:27 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 19:09:27 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:09:27 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:09:27 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 19:09:27 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 19:09:27 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 19:09:27 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 19:09:27 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 19:09:27 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 19:09:27 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 19:09:27 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 19:09:27 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 19:09:27 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 19:09:27 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 19:09:27 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 19:09:27 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 19:09:27 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 19:09:27 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 19:09:27 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 19:09:27 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:09:27 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:09:27 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 19:09:27 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 19:09:27 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 19:09:27 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 19:09:27 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 19:09:27 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 19:09:27 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 19:09:27 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 19:09:27 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 19:09:27 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 19:09:27 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 19:09:27 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 19:09:27 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 19:09:27 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 19:09:27 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 19:09:27 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 19:09:27 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 19:09:27 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 19:09:27 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 19:09:27 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:09:27 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:09:27 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:09:27 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 19:09:27 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 19:09:27 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 19:09:27 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 19:09:27 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 19:09:27 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 19:09:27 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 19:09:27 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:09:27 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 19:09:27 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:09:27 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 19:09:27 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 19:09:27 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 19:09:27 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:09:27 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:09:27 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 19:09:27 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:09:27 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:09:27 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 19:09:27 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:09:27 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 19:09:27 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 19:09:27 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 19:09:27 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 19:09:27 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 19:09:28 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 19:09:28 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:09:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65a4798f: startup date [Wed Mar 20 19:09:03 CST 2019]; root of context hierarchy
2019-03-20 19:09:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:09:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:09:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:09:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 19:09:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 19:09:33 -Registering beans for JMX exposure on startup
2019-03-20 19:09:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 19:09:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 19:09:33 -Starting beans in phase 2147483647
2019-03-20 19:09:33 -Context refreshed
2019-03-20 19:09:33 -Found 1 custom documentation plugin(s)
2019-03-20 19:09:33 -Scanning for api listing references
2019-03-20 19:09:34 -Generating unique operation named: removeUsingPOST_1
2019-03-20 19:09:34 -Generating unique operation named: addUsingGET_1
2019-03-20 19:09:34 -Generating unique operation named: editUsingGET_1
2019-03-20 19:09:34 -Generating unique operation named: listUsingGET_1
2019-03-20 19:09:34 -Generating unique operation named: removeUsingPOST_2
2019-03-20 19:09:34 -Generating unique operation named: removeUsingPOST_3
2019-03-20 19:09:34 -Generating unique operation named: saveUsingPOST_1
2019-03-20 19:09:34 -Generating unique operation named: updateUsingGET_1
2019-03-20 19:09:34 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 19:09:34 -Generating unique operation named: updateUsingPOST_1
2019-03-20 19:09:34 -Generating unique operation named: updateUsingPUT_1
2019-03-20 19:09:34 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 19:09:34 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 19:09:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 19:09:34 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 19:09:34 -Generating unique operation named: addUsingGET_2
2019-03-20 19:09:34 -Generating unique operation named: editUsingGET_2
2019-03-20 19:09:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 19:09:34 -Generating unique operation named: listUsingGET_2
2019-03-20 19:09:34 -Generating unique operation named: removeUsingPOST_4
2019-03-20 19:09:34 -Generating unique operation named: removeUsingPOST_5
2019-03-20 19:09:34 -Generating unique operation named: saveUsingPOST_2
2019-03-20 19:09:34 -Generating unique operation named: updateUsingGET_2
2019-03-20 19:09:34 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 19:09:34 -Generating unique operation named: updateUsingPOST_2
2019-03-20 19:09:34 -Generating unique operation named: updateUsingPUT_2
2019-03-20 19:09:34 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 19:09:34 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 19:09:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 19:09:34 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 19:09:34 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 19:09:34 -Generating unique operation named: addUsingGET_3
2019-03-20 19:09:34 -Generating unique operation named: editUsingGET_3
2019-03-20 19:09:34 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 19:09:34 -Generating unique operation named: listUsingGET_3
2019-03-20 19:09:34 -Generating unique operation named: removeUsingPOST_6
2019-03-20 19:09:34 -Generating unique operation named: removeUsingPOST_7
2019-03-20 19:09:34 -Generating unique operation named: saveUsingPOST_3
2019-03-20 19:09:34 -Generating unique operation named: updateUsingGET_3
2019-03-20 19:09:34 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 19:09:34 -Generating unique operation named: updateUsingPOST_3
2019-03-20 19:09:34 -Generating unique operation named: updateUsingPUT_3
2019-03-20 19:09:34 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 19:09:34 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 19:09:34 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 19:09:34 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 19:09:35 -Generating unique operation named: addUsingGET_4
2019-03-20 19:09:35 -Generating unique operation named: editUsingGET_4
2019-03-20 19:09:35 -Generating unique operation named: listUsingGET_4
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_8
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_9
2019-03-20 19:09:35 -Generating unique operation named: saveUsingPOST_4
2019-03-20 19:09:35 -Generating unique operation named: updateUsingGET_4
2019-03-20 19:09:35 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPOST_4
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPUT_4
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 19:09:35 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 19:09:35 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 19:09:35 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 19:09:35 -Generating unique operation named: ElecUsingGET_1
2019-03-20 19:09:35 -Generating unique operation named: addUsingGET_5
2019-03-20 19:09:35 -Generating unique operation named: editUsingGET_5
2019-03-20 19:09:35 -Generating unique operation named: listUsingGET_5
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_10
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_11
2019-03-20 19:09:35 -Generating unique operation named: saveUsingPOST_5
2019-03-20 19:09:35 -Generating unique operation named: updateUsingGET_5
2019-03-20 19:09:35 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPOST_5
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPUT_5
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 19:09:35 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 19:09:35 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 19:09:35 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 19:09:35 -Generating unique operation named: editUsingGET_6
2019-03-20 19:09:35 -Generating unique operation named: listUsingGET_6
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPOST_6
2019-03-20 19:09:35 -Generating unique operation named: addUsingGET_6
2019-03-20 19:09:35 -Generating unique operation named: editUsingGET_7
2019-03-20 19:09:35 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 19:09:35 -Generating unique operation named: listUsingGET_7
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_12
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_13
2019-03-20 19:09:35 -Generating unique operation named: saveUsingPOST_6
2019-03-20 19:09:35 -Generating unique operation named: updateUsingGET_6
2019-03-20 19:09:35 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPOST_7
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPUT_6
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 19:09:35 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 19:09:35 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 19:09:35 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 19:09:35 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 19:09:35 -Generating unique operation named: addUsingGET_7
2019-03-20 19:09:35 -Generating unique operation named: editUsingGET_8
2019-03-20 19:09:35 -Generating unique operation named: listUsingGET_8
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_14
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_15
2019-03-20 19:09:35 -Generating unique operation named: saveUsingPOST_7
2019-03-20 19:09:35 -Generating unique operation named: updateUsingGET_7
2019-03-20 19:09:35 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPOST_8
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPUT_7
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 19:09:35 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 19:09:35 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 19:09:35 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 19:09:35 -Generating unique operation named: addUsingGET_8
2019-03-20 19:09:35 -Generating unique operation named: editUsingGET_9
2019-03-20 19:09:35 -Generating unique operation named: listUsingGET_9
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_16
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_17
2019-03-20 19:09:35 -Generating unique operation named: saveUsingPOST_8
2019-03-20 19:09:35 -Generating unique operation named: updateUsingGET_8
2019-03-20 19:09:35 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPOST_9
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPUT_8
2019-03-20 19:09:35 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 19:09:35 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 19:09:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 19:09:35 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 19:09:35 -Generating unique operation named: addUsingGET_9
2019-03-20 19:09:35 -Generating unique operation named: editUsingGET_10
2019-03-20 19:09:35 -Generating unique operation named: infoUsingGET_1
2019-03-20 19:09:35 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 19:09:35 -Generating unique operation named: infoUsingPOST_1
2019-03-20 19:09:35 -Generating unique operation named: infoUsingPUT_1
2019-03-20 19:09:35 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 19:09:35 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 19:09:35 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 19:09:35 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 19:09:35 -Generating unique operation named: listUsingGET_10
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_18
2019-03-20 19:09:35 -Generating unique operation named: removeUsingPOST_19
2019-03-20 19:09:36 -Generating unique operation named: saveUsingPOST_9
2019-03-20 19:09:36 -Generating unique operation named: updateUsingPOST_10
2019-03-20 19:09:36 -Generating unique operation named: listUsingGET_11
2019-03-20 19:09:36 -Generating unique operation named: removeUsingPOST_20
2019-03-20 19:09:36 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 19:09:36 -Generating unique operation named: addUsingGET_10
2019-03-20 19:09:36 -Generating unique operation named: editUsingGET_11
2019-03-20 19:09:36 -Generating unique operation named: listUsingGET_12
2019-03-20 19:09:36 -Generating unique operation named: removeUsingPOST_21
2019-03-20 19:09:36 -Generating unique operation named: saveUsingPOST_10
2019-03-20 19:09:36 -Generating unique operation named: treeUsingGET_1
2019-03-20 19:09:36 -Generating unique operation named: treeUsingGET_2
2019-03-20 19:09:36 -Generating unique operation named: updateUsingPOST_11
2019-03-20 19:09:36 -Generating unique operation named: addUsingGET_11
2019-03-20 19:09:36 -Generating unique operation named: editUsingGET_12
2019-03-20 19:09:36 -Generating unique operation named: listUsingGET_13
2019-03-20 19:09:36 -Generating unique operation named: removeUsingPOST_22
2019-03-20 19:09:36 -Generating unique operation named: removeUsingPOST_23
2019-03-20 19:09:36 -Generating unique operation named: saveUsingPOST_11
2019-03-20 19:09:36 -Generating unique operation named: updateUsingGET_9
2019-03-20 19:09:36 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 19:09:36 -Generating unique operation named: updateUsingPOST_12
2019-03-20 19:09:36 -Generating unique operation named: updateUsingPUT_9
2019-03-20 19:09:36 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 19:09:36 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 19:09:36 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 19:09:36 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 19:09:36 -Generating unique operation named: addUsingGET_12
2019-03-20 19:09:36 -Generating unique operation named: editUsingGET_13
2019-03-20 19:09:36 -Generating unique operation named: listUsingGET_14
2019-03-20 19:09:36 -Generating unique operation named: removeUsingPOST_24
2019-03-20 19:09:36 -Generating unique operation named: removeUsingPOST_25
2019-03-20 19:09:36 -Generating unique operation named: saveUsingPOST_12
2019-03-20 19:09:36 -Generating unique operation named: updateUsingGET_10
2019-03-20 19:09:36 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 19:09:36 -Generating unique operation named: updateUsingPOST_13
2019-03-20 19:09:36 -Generating unique operation named: updateUsingPUT_10
2019-03-20 19:09:36 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 19:09:36 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 19:09:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 19:09:36 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 19:09:36 -Generating unique operation named: addUsingGET_13
2019-03-20 19:09:36 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 19:09:36 -Generating unique operation named: editUsingGET_14
2019-03-20 19:09:36 -Generating unique operation named: listUsingGET_15
2019-03-20 19:09:36 -Generating unique operation named: saveUsingPOST_13
2019-03-20 19:09:36 -Generating unique operation named: saveUsingPOST_14
2019-03-20 19:09:36 -Generating unique operation named: updateUsingPOST_14
2019-03-20 19:09:36 -Generating unique operation named: listUsingGET_16
2019-03-20 19:09:36 -Generating unique operation named: listUsingHEAD_1
2019-03-20 19:09:36 -Generating unique operation named: listUsingPOST_1
2019-03-20 19:09:36 -Generating unique operation named: listUsingPUT_1
2019-03-20 19:09:36 -Generating unique operation named: listUsingPATCH_1
2019-03-20 19:09:36 -Generating unique operation named: listUsingDELETE_1
2019-03-20 19:09:36 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 19:09:36 -Generating unique operation named: listUsingTRACE_1
2019-03-20 19:09:36 -Generating unique operation named: addUsingGET_14
2019-03-20 19:09:36 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 19:09:36 -Generating unique operation named: editUsingGET_15
2019-03-20 19:09:36 -Generating unique operation named: listUsingGET_17
2019-03-20 19:09:36 -Generating unique operation named: removeUsingPOST_26
2019-03-20 19:09:36 -Generating unique operation named: saveUsingPOST_15
2019-03-20 19:09:36 -Generating unique operation named: treeUsingGET_3
2019-03-20 19:09:37 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 19:09:37 -Generating unique operation named: updateUsingPOST_15
2019-03-20 19:09:37 -Generating unique operation named: addUsingGET_15
2019-03-20 19:09:37 -Generating unique operation named: editUsingGET_16
2019-03-20 19:09:37 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 19:09:37 -Generating unique operation named: listUsingGET_18
2019-03-20 19:09:37 -Generating unique operation named: removeUsingPOST_27
2019-03-20 19:09:37 -Generating unique operation named: removeUsingPOST_28
2019-03-20 19:09:37 -Generating unique operation named: saveUsingPOST_16
2019-03-20 19:09:37 -Generating unique operation named: updateUsingGET_11
2019-03-20 19:09:37 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 19:09:37 -Generating unique operation named: updateUsingPOST_16
2019-03-20 19:09:37 -Generating unique operation named: updateUsingPUT_11
2019-03-20 19:09:37 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 19:09:37 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 19:09:37 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 19:09:37 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 19:09:37 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 19:09:37 -Generating unique operation named: addUsingGET_16
2019-03-20 19:09:37 -Generating unique operation named: editUsingGET_17
2019-03-20 19:09:37 -Generating unique operation named: listUsingGET_19
2019-03-20 19:09:37 -Generating unique operation named: removeUsingPOST_29
2019-03-20 19:09:37 -Generating unique operation named: removeUsingPOST_30
2019-03-20 19:09:37 -Generating unique operation named: saveUsingPOST_17
2019-03-20 19:09:37 -Generating unique operation named: updateUsingGET_12
2019-03-20 19:09:37 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 19:09:37 -Generating unique operation named: updateUsingPOST_17
2019-03-20 19:09:37 -Generating unique operation named: updateUsingPUT_12
2019-03-20 19:09:37 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 19:09:37 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 19:09:37 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 19:09:37 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 19:09:37 -Generating unique operation named: addUsingGET_17
2019-03-20 19:09:37 -Generating unique operation named: editUsingGET_18
2019-03-20 19:09:37 -Generating unique operation named: listUsingGET_20
2019-03-20 19:09:37 -Generating unique operation named: removeUsingPOST_31
2019-03-20 19:09:37 -Generating unique operation named: removeUsingPOST_32
2019-03-20 19:09:37 -Generating unique operation named: saveUsingPOST_18
2019-03-20 19:09:37 -Generating unique operation named: updateUsingGET_13
2019-03-20 19:09:37 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 19:09:37 -Generating unique operation named: updateUsingPOST_18
2019-03-20 19:09:37 -Generating unique operation named: updateUsingPUT_13
2019-03-20 19:09:37 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 19:09:37 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 19:09:37 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 19:09:37 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 19:09:37 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 19:09:37 -Starting Quartz Scheduler now
2019-03-20 19:09:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 19:09:37 -Starting...
2019-03-20 19:09:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 19:09:37 -Started.
2019-03-20 19:09:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 19:09:37 -Using a shared selector for servlet write/read
2019-03-20 19:09:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-20 19:09:37 -Started BootdoApplication in 37.219 seconds (JVM running for 39.083)
2019-03-20 19:09:37 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-20 19:09:38 -==> Parameters: 
2019-03-20 19:09:38 -<==      Total: 1
2019-03-20 19:10:28 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-20 19:11:42 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-20 19:11:42 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-20 19:11:42 -FrameworkServlet 'dispatcherServlet': initialization completed in 97 ms
2019-03-20 19:11:43 -Enabling session validation scheduler...
2019-03-20 19:11:43 -请求地址 : http://localhost:8081/login;JSESSIONID=8aa121dd-a6e3-4f59-b584-1d5ff7a051fc
2019-03-20 19:11:43 -HTTP METHOD : GET
2019-03-20 19:11:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 19:11:43 -参数 : [{}]
2019-03-20 19:11:43 -耗时 : 11
2019-03-20 19:11:43 -返回值 : login
2019-03-20 19:11:44 -请求地址 : http://localhost:8081/getVerify
2019-03-20 19:11:44 -HTTP METHOD : GET
2019-03-20 19:11:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 19:11:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4d7a9843, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1f612aa5]
2019-03-20 19:11:50 -1567
2019-03-20 19:11:50 -耗时 : 5755
2019-03-20 19:11:50 -返回值 : null
2019-03-20 19:11:50 -请求地址 : http://localhost:8081/login
2019-03-20 19:11:50 -HTTP METHOD : GET
2019-03-20 19:11:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 19:11:50 -参数 : [{}]
2019-03-20 19:11:50 -耗时 : 1
2019-03-20 19:11:50 -返回值 : login
2019-03-20 19:11:59 -请求地址 : http://localhost:8081/login
2019-03-20 19:11:59 -HTTP METHOD : POST
2019-03-20 19:11:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 19:11:59 -参数 : [admin, 111111, 1567, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2b9d8e71]
2019-03-20 19:11:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 19:11:59 -==> Parameters: admin(String)
2019-03-20 19:11:59 -<==      Total: 1
2019-03-20 19:11:59 -耗时 : 164
2019-03-20 19:11:59 -返回值 : {msg=操作成功, code=0}
2019-03-20 19:11:59 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-20 19:11:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 19:11:59 -==> Parameters: 1(Long), admin(String), 登录(String), 164(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 19:11:59.447(Timestamp)
2019-03-20 19:11:59 -请求地址 : http://localhost:8081/index
2019-03-20 19:11:59 -HTTP METHOD : GET
2019-03-20 19:11:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 19:11:59 -参数 : [{}]
2019-03-20 19:11:59 -<==    Updates: 1
2019-03-20 19:11:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 19:11:59 -==> Parameters: 1(Long)
2019-03-20 19:11:59 -<==      Total: 46
2019-03-20 19:11:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 19:11:59 -==> Parameters: 138(Long)
2019-03-20 19:11:59 -<==      Total: 1
2019-03-20 19:11:59 -耗时 : 239
2019-03-20 19:11:59 -返回值 : index_v1
2019-03-20 19:11:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 19:11:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 240(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 19:11:59.84(Timestamp)
2019-03-20 19:11:59 -<==    Updates: 1
2019-03-20 19:11:59 -请求地址 : http://localhost:8081/main
2019-03-20 19:11:59 -HTTP METHOD : GET
2019-03-20 19:11:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 19:11:59 -参数 : []
2019-03-20 19:11:59 -耗时 : 1
2019-03-20 19:11:59 -返回值 : main
2019-03-20 19:12:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 19:12:00 -HTTP METHOD : GET
2019-03-20 19:12:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 19:12:00 -参数 : []
2019-03-20 19:12:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 19:12:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 19:12:00 -请求地址 : http://localhost:8081/main
2019-03-20 19:12:00 -HTTP METHOD : GET
2019-03-20 19:12:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 19:12:00 -参数 : []
2019-03-20 19:12:00 -耗时 : 1
2019-03-20 19:12:00 -返回值 : main
2019-03-20 19:12:00 -<==      Total: 0
2019-03-20 19:12:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 19:12:00 -==> Parameters: 1(Long), 0(String)
2019-03-20 19:12:00 -<==      Total: 1
2019-03-20 19:12:00 -耗时 : 248
2019-03-20 19:12:00 -返回值 : com.bootdo.common.utils.PageUtils@1264d029
2019-03-20 19:12:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 19:12:53 -==> Parameters: 1(Long)
2019-03-20 19:12:53 -<==      Total: 90
2019-03-20 19:12:53 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 19:12:53 -HTTP METHOD : GET
2019-03-20 19:12:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 19:12:53 -参数 : []
2019-03-20 19:12:53 -耗时 : 0
2019-03-20 19:12:53 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 19:12:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:12:54 -HTTP METHOD : GET
2019-03-20 19:12:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:12:54 -参数 : [userType]
2019-03-20 19:12:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:12:54 -==> Parameters: userType(String)
2019-03-20 19:12:54 -<==      Total: 2
2019-03-20 19:12:54 -耗时 : 62
2019-03-20 19:12:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:12:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:12:54 -HTTP METHOD : GET
2019-03-20 19:12:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:12:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 19:12:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 19:12:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 19:12:54 -<==      Total: 4
2019-03-20 19:12:54 -==>  Preparing: select count(*) from elec_log 
2019-03-20 19:12:54 -==> Parameters: 
2019-03-20 19:12:54 -<==      Total: 1
2019-03-20 19:12:54 -耗时 : 69
2019-03-20 19:12:54 -返回值 : com.bootdo.common.utils.PageUtils@306ab73f
2019-03-20 19:12:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:12:58 -HTTP METHOD : GET
2019-03-20 19:12:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:12:58 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=, type=A}]
2019-03-20 19:12:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-20 19:12:58 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-20 19:12:58 -<==      Total: 3
2019-03-20 19:12:58 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-03-20 19:12:58 -==> Parameters: A(String)
2019-03-20 19:12:58 -<==      Total: 1
2019-03-20 19:12:58 -耗时 : 167
2019-03-20 19:12:58 -返回值 : com.bootdo.common.utils.PageUtils@42d1d8b2
2019-03-20 19:12:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 19:12:58 -HTTP METHOD : GET
2019-03-20 19:12:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 19:12:58 -参数 : []
2019-03-20 19:12:58 -耗时 : 1
2019-03-20 19:12:58 -返回值 : system/dept/deptTree
2019-03-20 19:12:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 19:12:59 -HTTP METHOD : GET
2019-03-20 19:12:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 19:12:59 -参数 : []
2019-03-20 19:12:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 19:12:59 -==> Parameters: 
2019-03-20 19:12:59 -<==      Total: 3
2019-03-20 19:12:59 -耗时 : 17
2019-03-20 19:12:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 19:13:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-20 19:13:02 -HTTP METHOD : GET
2019-03-20 19:13:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotExcel
2019-03-20 19:13:02 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7f79f698, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c47e62d, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6cbbf848]
2019-03-20 19:13:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? 
2019-03-20 19:13:02 -==> Parameters: A(String), 2(String)
2019-03-20 19:13:02 -<==      Total: 3
2019-03-20 19:13:03 -耗时 : 944
2019-03-20 19:13:03 -返回值 : null
2019-03-20 19:14:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:14:53 -HTTP METHOD : GET
2019-03-20 19:14:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:14:53 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-10}]
2019-03-20 19:14:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-20 19:14:53 -==> Parameters: A(String), 2(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-20 19:14:53 -<==      Total: 0
2019-03-20 19:14:53 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-20 19:14:53 -==> Parameters: A(String), 2(String), 2019-03-10(String)
2019-03-20 19:14:53 -<==      Total: 1
2019-03-20 19:14:53 -耗时 : 16
2019-03-20 19:14:53 -返回值 : com.bootdo.common.utils.PageUtils@2444419
2019-03-20 19:14:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:14:55 -HTTP METHOD : GET
2019-03-20 19:14:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:14:55 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, elecDate=2019-03-10, type=}]
2019-03-20 19:14:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-20 19:14:55 -==> Parameters: 2(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-20 19:14:55 -<==      Total: 0
2019-03-20 19:14:55 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? and elec_date = ? 
2019-03-20 19:14:55 -==> Parameters: 2(String), 2019-03-10(String)
2019-03-20 19:14:55 -<==      Total: 1
2019-03-20 19:14:55 -耗时 : 24
2019-03-20 19:14:55 -返回值 : com.bootdo.common.utils.PageUtils@70696efe
2019-03-20 19:14:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:14:56 -HTTP METHOD : GET
2019-03-20 19:14:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:14:56 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, elecDate=2019-03-10}]
2019-03-20 19:14:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-20 19:14:56 -==> Parameters: 2(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-20 19:14:56 -<==      Total: 0
2019-03-20 19:14:56 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? and elec_date = ? 
2019-03-20 19:14:56 -==> Parameters: 2(String), 2019-03-10(String)
2019-03-20 19:14:56 -<==      Total: 1
2019-03-20 19:14:56 -耗时 : 8
2019-03-20 19:14:56 -返回值 : com.bootdo.common.utils.PageUtils@45447be6
2019-03-20 19:14:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 19:14:57 -HTTP METHOD : GET
2019-03-20 19:14:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 19:14:57 -参数 : []
2019-03-20 19:14:57 -耗时 : 1
2019-03-20 19:14:57 -返回值 : system/dept/deptTree
2019-03-20 19:14:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 19:14:57 -HTTP METHOD : GET
2019-03-20 19:14:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 19:14:57 -参数 : []
2019-03-20 19:14:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 19:14:57 -==> Parameters: 
2019-03-20 19:14:57 -<==      Total: 3
2019-03-20 19:14:57 -耗时 : 6
2019-03-20 19:14:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 19:14:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:14:58 -HTTP METHOD : GET
2019-03-20 19:14:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:14:58 -参数 : [{limit=10, offset=0, userType=, userOrg=3, userId=, elecDate=2019-03-10}]
2019-03-20 19:14:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-20 19:14:58 -==> Parameters: 3(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-20 19:14:58 -<==      Total: 1
2019-03-20 19:14:58 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? and elec_date = ? 
2019-03-20 19:14:58 -==> Parameters: 3(String), 2019-03-10(String)
2019-03-20 19:14:58 -<==      Total: 1
2019-03-20 19:14:58 -耗时 : 10
2019-03-20 19:14:58 -返回值 : com.bootdo.common.utils.PageUtils@1716053f
2019-03-20 19:15:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-20 19:15:07 -HTTP METHOD : GET
2019-03-20 19:15:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-20 19:15:07 -参数 : []
2019-03-20 19:15:07 -耗时 : 1
2019-03-20 19:15:07 -返回值 : /moneyLog/heatLog/heatLog
2019-03-20 19:15:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:15:08 -HTTP METHOD : GET
2019-03-20 19:15:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:15:08 -参数 : [userType]
2019-03-20 19:15:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:15:08 -==> Parameters: userType(String)
2019-03-20 19:15:08 -<==      Total: 2
2019-03-20 19:15:08 -耗时 : 7
2019-03-20 19:15:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:15:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-20 19:15:08 -HTTP METHOD : GET
2019-03-20 19:15:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-20 19:15:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-20 19:15:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-20 19:15:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 19:15:08 -<==      Total: 3
2019-03-20 19:15:08 -==>  Preparing: select count(*) from heat_log 
2019-03-20 19:15:08 -==> Parameters: 
2019-03-20 19:15:08 -<==      Total: 1
2019-03-20 19:15:08 -耗时 : 51
2019-03-20 19:15:08 -返回值 : com.bootdo.common.utils.PageUtils@57426437
2019-03-20 19:15:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-20 19:15:11 -HTTP METHOD : GET
2019-03-20 19:15:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-20 19:15:11 -参数 : [1, {}]
2019-03-20 19:15:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-20 19:15:11 -==> Parameters: 1(Long)
2019-03-20 19:15:11 -<==      Total: 1
2019-03-20 19:15:11 -耗时 : 11
2019-03-20 19:15:11 -返回值 : moneyLog/heatLog/edit
2019-03-20 19:15:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:15:11 -HTTP METHOD : GET
2019-03-20 19:15:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:15:11 -参数 : [userType]
2019-03-20 19:15:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:15:11 -==> Parameters: userType(String)
2019-03-20 19:15:11 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-20 19:15:11 -HTTP METHOD : GET
2019-03-20 19:15:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:15:11 -参数 : [userArea]
2019-03-20 19:15:11 -<==      Total: 2
2019-03-20 19:15:11 -耗时 : 8
2019-03-20 19:15:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:15:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:15:11 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-20 19:15:11 -==> Parameters: userArea(String)
2019-03-20 19:15:11 -HTTP METHOD : GET
2019-03-20 19:15:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:15:11 -参数 : [userOrg]
2019-03-20 19:15:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:15:11 -==> Parameters: userOrg(String)
2019-03-20 19:15:11 -<==      Total: 0
2019-03-20 19:15:11 -耗时 : 4
2019-03-20 19:15:11 -返回值 : []
2019-03-20 19:15:11 -<==      Total: 0
2019-03-20 19:15:11 -耗时 : 59
2019-03-20 19:15:11 -返回值 : []
2019-03-20 19:15:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-20 19:15:14 -HTTP METHOD : GET
2019-03-20 19:15:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-20 19:15:14 -参数 : []
2019-03-20 19:15:14 -耗时 : 0
2019-03-20 19:15:14 -返回值 : moneyLog/heatLog/add
2019-03-20 19:16:25 -请求地址 : http://localhost:8081/moneyLog/heatLog/save
2019-03-20 19:16:25 -HTTP METHOD : POST
2019-03-20 19:16:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.save
2019-03-20 19:16:25 -参数 : [com.bootdo.moneyLog.domain.HeatLogDO@56b98a99]
2019-03-20 19:16:25 -==>  Preparing: insert into heat_log ( `heat_id`, `user_id`, `user_name`, `user_type`, `user_org`, `heat_ money`, `heat_date `, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 19:16:25 -==> Parameters: null, 1-0009(String), 水电费(String), null, null, 60(BigDecimal), 2019-03-20 00:00:00.0(Timestamp), 2019-03(String), 1(Long), null, null, (String)
2019-03-20 19:16:25 -{conn-10002, pstmt-20023} execute error. insert into heat_log
		(	
			`heat_id`, 
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`heat_ money`, 
			`heat_date `, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:29)
	at com.bootdo.moneyLog.controller.HeatLogController.save(HeatLogController.java:95)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$2c6a47e9.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 19:16:26 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-20 19:16:26 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-20 19:16:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 19:16:26 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_ money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_ money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:29)
	at com.bootdo.moneyLog.controller.HeatLogController.save(HeatLogController.java:95)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$2c6a47e9.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-20 19:16:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/save(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `heat_id`,     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_ money`,     `heat_date `,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'heat_ money' in 'field list'(String), null, 2019-03-20 19:16:26.136(Timestamp)
2019-03-20 19:16:26 -<==    Updates: 1
2019-03-20 19:26:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 19:26:04 -==> Parameters: 1(Long)
2019-03-20 19:26:04 -<==      Total: 90
2019-03-20 19:26:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-20 19:26:04 -HTTP METHOD : GET
2019-03-20 19:26:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-20 19:26:04 -参数 : []
2019-03-20 19:26:04 -耗时 : 5
2019-03-20 19:26:04 -返回值 : moneyLog/heatLog/add
2019-03-20 19:27:00 -Starting BootdoApplication on ZJZL-20180906VX with PID 9360 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 19:27:00 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 19:27:00 -The following profiles are active: dev
2019-03-20 19:27:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@160ac7fb: startup date [Wed Mar 20 19:27:01 CST 2019]; root of context hierarchy
2019-03-20 19:27:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 19:27:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$164559b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:27:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$89e885f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:27:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:27:08 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:27:08 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:27:08 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 19:27:08 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 19:27:08 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:27:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:27:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:27:08 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:27:09 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 19:27:09 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 19:27:09 -Starting service [Tomcat]
2019-03-20 19:27:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 19:27:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 19:27:10 -Initializing Spring embedded WebApplicationContext
2019-03-20 19:27:10 -Root WebApplicationContext: initialization completed in 8843 ms
2019-03-20 19:27:10 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 19:27:10 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 19:27:10 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 19:27:10 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 19:27:10 -Filter xssFilter was not registered (disabled)
2019-03-20 19:27:10 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 19:27:10 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 19:27:10 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 19:27:10 -Servlet dispatcherServlet mapped to [/]
2019-03-20 19:27:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@160ac7fb: startup date [Wed Mar 20 19:27:01 CST 2019]; root of context hierarchy
2019-03-20 19:27:13 -Using default implementation for ThreadExecutor
2019-03-20 19:27:13 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 19:27:13 -Quartz Scheduler v.2.2.1 created.
2019-03-20 19:27:13 -RAMJobStore initialized.
2019-03-20 19:27:13 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 19:27:13 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 19:27:13 -Quartz scheduler version: 2.2.1
2019-03-20 19:27:13 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1700d089
2019-03-20 19:27:14 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 19:27:14 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 19:27:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 19:27:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 19:27:17 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:27:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 19:27:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 19:27:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 19:27:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 19:27:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 19:27:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 19:27:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 19:27:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 19:27:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 19:27:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 19:27:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 19:27:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 19:27:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 19:27:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 19:27:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 19:27:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 19:27:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 19:27:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:27:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 19:27:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:27:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 19:27:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 19:27:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 19:27:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 19:27:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 19:27:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 19:27:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 19:27:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 19:27:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:27:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:27:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 19:27:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:27:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:27:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:27:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:27:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 19:27:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:27:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 19:27:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 19:27:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 19:27:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 19:27:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:27:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 19:27:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 19:27:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:27:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 19:27:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 19:27:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 19:27:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:27:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:27:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:27:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 19:27:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:27:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 19:27:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 19:27:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:27:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:27:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 19:27:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 19:27:17 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:27:17 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 19:27:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 19:27:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 19:27:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 19:27:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 19:27:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 19:27:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 19:27:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 19:27:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 19:27:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 19:27:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:27:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:27:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 19:27:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 19:27:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 19:27:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 19:27:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 19:27:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 19:27:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 19:27:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 19:27:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 19:27:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 19:27:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 19:27:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 19:27:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 19:27:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 19:27:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 19:27:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:27:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:27:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 19:27:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 19:27:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 19:27:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 19:27:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 19:27:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 19:27:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 19:27:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 19:27:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 19:27:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 19:27:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 19:27:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 19:27:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 19:27:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 19:27:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 19:27:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 19:27:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:27:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 19:27:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:27:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:27:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 19:27:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 19:27:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 19:27:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 19:27:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:27:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 19:27:17 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:27:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 19:27:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 19:27:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 19:27:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 19:27:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:27:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:27:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:27:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 19:27:17 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:27:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 19:27:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:27:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 19:27:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 19:27:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 19:27:17 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 19:27:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 19:27:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 19:27:18 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:27:18 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@160ac7fb: startup date [Wed Mar 20 19:27:01 CST 2019]; root of context hierarchy
2019-03-20 19:27:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:27:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:27:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:27:19 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 19:27:19 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 19:27:21 -Registering beans for JMX exposure on startup
2019-03-20 19:27:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 19:27:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 19:27:21 -Starting beans in phase 2147483647
2019-03-20 19:27:21 -Context refreshed
2019-03-20 19:27:21 -Found 1 custom documentation plugin(s)
2019-03-20 19:27:21 -Scanning for api listing references
2019-03-20 19:27:22 -Generating unique operation named: removeUsingPOST_1
2019-03-20 19:27:22 -Generating unique operation named: addUsingGET_1
2019-03-20 19:27:22 -Generating unique operation named: editUsingGET_1
2019-03-20 19:27:22 -Generating unique operation named: listUsingGET_1
2019-03-20 19:27:22 -Generating unique operation named: removeUsingPOST_2
2019-03-20 19:27:22 -Generating unique operation named: removeUsingPOST_3
2019-03-20 19:27:22 -Generating unique operation named: saveUsingPOST_1
2019-03-20 19:27:22 -Generating unique operation named: updateUsingGET_1
2019-03-20 19:27:22 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 19:27:22 -Generating unique operation named: updateUsingPOST_1
2019-03-20 19:27:22 -Generating unique operation named: updateUsingPUT_1
2019-03-20 19:27:22 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 19:27:22 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 19:27:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 19:27:22 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 19:27:22 -Generating unique operation named: addUsingGET_2
2019-03-20 19:27:22 -Generating unique operation named: editUsingGET_2
2019-03-20 19:27:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 19:27:22 -Generating unique operation named: listUsingGET_2
2019-03-20 19:27:22 -Generating unique operation named: removeUsingPOST_4
2019-03-20 19:27:22 -Generating unique operation named: removeUsingPOST_5
2019-03-20 19:27:22 -Generating unique operation named: saveUsingPOST_2
2019-03-20 19:27:22 -Generating unique operation named: updateUsingGET_2
2019-03-20 19:27:22 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 19:27:22 -Generating unique operation named: updateUsingPOST_2
2019-03-20 19:27:22 -Generating unique operation named: updateUsingPUT_2
2019-03-20 19:27:22 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 19:27:22 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 19:27:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 19:27:22 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 19:27:23 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 19:27:23 -Generating unique operation named: addUsingGET_3
2019-03-20 19:27:23 -Generating unique operation named: editUsingGET_3
2019-03-20 19:27:23 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 19:27:23 -Generating unique operation named: listUsingGET_3
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_6
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_7
2019-03-20 19:27:23 -Generating unique operation named: saveUsingPOST_3
2019-03-20 19:27:23 -Generating unique operation named: updateUsingGET_3
2019-03-20 19:27:23 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPOST_3
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPUT_3
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 19:27:23 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 19:27:23 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 19:27:23 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 19:27:23 -Generating unique operation named: addUsingGET_4
2019-03-20 19:27:23 -Generating unique operation named: editUsingGET_4
2019-03-20 19:27:23 -Generating unique operation named: listUsingGET_4
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_8
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_9
2019-03-20 19:27:23 -Generating unique operation named: saveUsingPOST_4
2019-03-20 19:27:23 -Generating unique operation named: updateUsingGET_4
2019-03-20 19:27:23 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPOST_4
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPUT_4
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 19:27:23 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 19:27:23 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 19:27:23 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 19:27:23 -Generating unique operation named: ElecUsingGET_1
2019-03-20 19:27:23 -Generating unique operation named: addUsingGET_5
2019-03-20 19:27:23 -Generating unique operation named: editUsingGET_5
2019-03-20 19:27:23 -Generating unique operation named: listUsingGET_5
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_10
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_11
2019-03-20 19:27:23 -Generating unique operation named: saveUsingPOST_5
2019-03-20 19:27:23 -Generating unique operation named: updateUsingGET_5
2019-03-20 19:27:23 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPOST_5
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPUT_5
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 19:27:23 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 19:27:23 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 19:27:23 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 19:27:23 -Generating unique operation named: editUsingGET_6
2019-03-20 19:27:23 -Generating unique operation named: listUsingGET_6
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPOST_6
2019-03-20 19:27:23 -Generating unique operation named: addUsingGET_6
2019-03-20 19:27:23 -Generating unique operation named: editUsingGET_7
2019-03-20 19:27:23 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 19:27:23 -Generating unique operation named: listUsingGET_7
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_12
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_13
2019-03-20 19:27:23 -Generating unique operation named: saveUsingPOST_6
2019-03-20 19:27:23 -Generating unique operation named: updateUsingGET_6
2019-03-20 19:27:23 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPOST_7
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPUT_6
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 19:27:23 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 19:27:23 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 19:27:23 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 19:27:23 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 19:27:23 -Generating unique operation named: addUsingGET_7
2019-03-20 19:27:23 -Generating unique operation named: editUsingGET_8
2019-03-20 19:27:23 -Generating unique operation named: listUsingGET_8
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_14
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_15
2019-03-20 19:27:23 -Generating unique operation named: saveUsingPOST_7
2019-03-20 19:27:23 -Generating unique operation named: updateUsingGET_7
2019-03-20 19:27:23 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPOST_8
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPUT_7
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 19:27:23 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 19:27:23 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 19:27:23 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 19:27:23 -Generating unique operation named: addUsingGET_8
2019-03-20 19:27:23 -Generating unique operation named: editUsingGET_9
2019-03-20 19:27:23 -Generating unique operation named: listUsingGET_9
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_16
2019-03-20 19:27:23 -Generating unique operation named: removeUsingPOST_17
2019-03-20 19:27:23 -Generating unique operation named: saveUsingPOST_8
2019-03-20 19:27:23 -Generating unique operation named: updateUsingGET_8
2019-03-20 19:27:23 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPOST_9
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPUT_8
2019-03-20 19:27:23 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 19:27:23 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 19:27:23 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 19:27:23 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 19:27:24 -Generating unique operation named: addUsingGET_9
2019-03-20 19:27:24 -Generating unique operation named: editUsingGET_10
2019-03-20 19:27:24 -Generating unique operation named: infoUsingGET_1
2019-03-20 19:27:24 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 19:27:24 -Generating unique operation named: infoUsingPOST_1
2019-03-20 19:27:24 -Generating unique operation named: infoUsingPUT_1
2019-03-20 19:27:24 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 19:27:24 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 19:27:24 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 19:27:24 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 19:27:24 -Generating unique operation named: listUsingGET_10
2019-03-20 19:27:24 -Generating unique operation named: removeUsingPOST_18
2019-03-20 19:27:24 -Generating unique operation named: removeUsingPOST_19
2019-03-20 19:27:24 -Generating unique operation named: saveUsingPOST_9
2019-03-20 19:27:24 -Generating unique operation named: updateUsingPOST_10
2019-03-20 19:27:24 -Generating unique operation named: listUsingGET_11
2019-03-20 19:27:24 -Generating unique operation named: removeUsingPOST_20
2019-03-20 19:27:24 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 19:27:24 -Generating unique operation named: addUsingGET_10
2019-03-20 19:27:24 -Generating unique operation named: editUsingGET_11
2019-03-20 19:27:24 -Generating unique operation named: listUsingGET_12
2019-03-20 19:27:24 -Generating unique operation named: removeUsingPOST_21
2019-03-20 19:27:24 -Generating unique operation named: saveUsingPOST_10
2019-03-20 19:27:24 -Generating unique operation named: treeUsingGET_1
2019-03-20 19:27:24 -Generating unique operation named: treeUsingGET_2
2019-03-20 19:27:24 -Generating unique operation named: updateUsingPOST_11
2019-03-20 19:27:24 -Generating unique operation named: addUsingGET_11
2019-03-20 19:27:24 -Generating unique operation named: editUsingGET_12
2019-03-20 19:27:24 -Generating unique operation named: listUsingGET_13
2019-03-20 19:27:24 -Generating unique operation named: removeUsingPOST_22
2019-03-20 19:27:24 -Generating unique operation named: removeUsingPOST_23
2019-03-20 19:27:24 -Generating unique operation named: saveUsingPOST_11
2019-03-20 19:27:24 -Generating unique operation named: updateUsingGET_9
2019-03-20 19:27:24 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 19:27:24 -Generating unique operation named: updateUsingPOST_12
2019-03-20 19:27:24 -Generating unique operation named: updateUsingPUT_9
2019-03-20 19:27:24 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 19:27:24 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 19:27:24 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 19:27:24 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 19:27:24 -Generating unique operation named: addUsingGET_12
2019-03-20 19:27:24 -Generating unique operation named: editUsingGET_13
2019-03-20 19:27:24 -Generating unique operation named: listUsingGET_14
2019-03-20 19:27:24 -Generating unique operation named: removeUsingPOST_24
2019-03-20 19:27:24 -Generating unique operation named: removeUsingPOST_25
2019-03-20 19:27:24 -Generating unique operation named: saveUsingPOST_12
2019-03-20 19:27:24 -Generating unique operation named: updateUsingGET_10
2019-03-20 19:27:24 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 19:27:24 -Generating unique operation named: updateUsingPOST_13
2019-03-20 19:27:24 -Generating unique operation named: updateUsingPUT_10
2019-03-20 19:27:24 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 19:27:24 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 19:27:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 19:27:24 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 19:27:24 -Generating unique operation named: addUsingGET_13
2019-03-20 19:27:24 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 19:27:24 -Generating unique operation named: editUsingGET_14
2019-03-20 19:27:24 -Generating unique operation named: listUsingGET_15
2019-03-20 19:27:24 -Generating unique operation named: saveUsingPOST_13
2019-03-20 19:27:24 -Generating unique operation named: saveUsingPOST_14
2019-03-20 19:27:24 -Generating unique operation named: updateUsingPOST_14
2019-03-20 19:27:24 -Generating unique operation named: listUsingGET_16
2019-03-20 19:27:24 -Generating unique operation named: listUsingHEAD_1
2019-03-20 19:27:24 -Generating unique operation named: listUsingPOST_1
2019-03-20 19:27:24 -Generating unique operation named: listUsingPUT_1
2019-03-20 19:27:24 -Generating unique operation named: listUsingPATCH_1
2019-03-20 19:27:24 -Generating unique operation named: listUsingDELETE_1
2019-03-20 19:27:24 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 19:27:24 -Generating unique operation named: listUsingTRACE_1
2019-03-20 19:27:24 -Generating unique operation named: addUsingGET_14
2019-03-20 19:27:24 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 19:27:24 -Generating unique operation named: editUsingGET_15
2019-03-20 19:27:24 -Generating unique operation named: listUsingGET_17
2019-03-20 19:27:24 -Generating unique operation named: removeUsingPOST_26
2019-03-20 19:27:24 -Generating unique operation named: saveUsingPOST_15
2019-03-20 19:27:24 -Generating unique operation named: treeUsingGET_3
2019-03-20 19:27:24 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 19:27:24 -Generating unique operation named: updateUsingPOST_15
2019-03-20 19:27:25 -Generating unique operation named: addUsingGET_15
2019-03-20 19:27:25 -Generating unique operation named: editUsingGET_16
2019-03-20 19:27:25 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 19:27:25 -Generating unique operation named: listUsingGET_18
2019-03-20 19:27:25 -Generating unique operation named: removeUsingPOST_27
2019-03-20 19:27:25 -Generating unique operation named: removeUsingPOST_28
2019-03-20 19:27:25 -Generating unique operation named: saveUsingPOST_16
2019-03-20 19:27:25 -Generating unique operation named: updateUsingGET_11
2019-03-20 19:27:25 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 19:27:25 -Generating unique operation named: updateUsingPOST_16
2019-03-20 19:27:25 -Generating unique operation named: updateUsingPUT_11
2019-03-20 19:27:25 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 19:27:25 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 19:27:25 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 19:27:25 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 19:27:25 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 19:27:25 -Generating unique operation named: addUsingGET_16
2019-03-20 19:27:25 -Generating unique operation named: editUsingGET_17
2019-03-20 19:27:25 -Generating unique operation named: listUsingGET_19
2019-03-20 19:27:25 -Generating unique operation named: removeUsingPOST_29
2019-03-20 19:27:25 -Generating unique operation named: removeUsingPOST_30
2019-03-20 19:27:25 -Generating unique operation named: saveUsingPOST_17
2019-03-20 19:27:25 -Generating unique operation named: updateUsingGET_12
2019-03-20 19:27:25 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 19:27:25 -Generating unique operation named: updateUsingPOST_17
2019-03-20 19:27:25 -Generating unique operation named: updateUsingPUT_12
2019-03-20 19:27:25 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 19:27:25 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 19:27:25 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 19:27:25 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 19:27:25 -Generating unique operation named: addUsingGET_17
2019-03-20 19:27:25 -Generating unique operation named: editUsingGET_18
2019-03-20 19:27:25 -Generating unique operation named: listUsingGET_20
2019-03-20 19:27:25 -Generating unique operation named: removeUsingPOST_31
2019-03-20 19:27:25 -Generating unique operation named: removeUsingPOST_32
2019-03-20 19:27:25 -Generating unique operation named: saveUsingPOST_18
2019-03-20 19:27:25 -Generating unique operation named: updateUsingGET_13
2019-03-20 19:27:25 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 19:27:25 -Generating unique operation named: updateUsingPOST_18
2019-03-20 19:27:25 -Generating unique operation named: updateUsingPUT_13
2019-03-20 19:27:25 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 19:27:25 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 19:27:25 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 19:27:25 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 19:27:25 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 19:27:25 -Starting Quartz Scheduler now
2019-03-20 19:27:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 19:27:25 -Starting...
2019-03-20 19:27:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 19:27:25 -Started.
2019-03-20 19:27:25 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 19:27:25 -Using a shared selector for servlet write/read
2019-03-20 19:27:25 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-20 19:27:25 -Started BootdoApplication in 26.651 seconds (JVM running for 28.188)
2019-03-20 19:27:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-20 19:27:25 -==> Parameters: 
2019-03-20 19:27:26 -<==      Total: 1
2019-03-20 19:28:18 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-20 19:28:34 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-20 19:28:34 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-20 19:28:34 -FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2019-03-20 19:28:34 -Enabling session validation scheduler...
2019-03-20 19:28:34 -请求地址 : http://localhost:8081/login;JSESSIONID=ac460541-b726-4fdd-be34-ae9e60407880
2019-03-20 19:28:34 -HTTP METHOD : GET
2019-03-20 19:28:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 19:28:34 -参数 : [{}]
2019-03-20 19:28:34 -耗时 : 4
2019-03-20 19:28:34 -返回值 : login
2019-03-20 19:28:36 -请求地址 : http://localhost:8081/getVerify
2019-03-20 19:28:36 -HTTP METHOD : GET
2019-03-20 19:28:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 19:28:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@22ea6596, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c2d8fbb]
2019-03-20 19:28:36 -5106
2019-03-20 19:28:36 -耗时 : 537
2019-03-20 19:28:36 -返回值 : null
2019-03-20 19:28:36 -请求地址 : http://localhost:8081/login
2019-03-20 19:28:36 -HTTP METHOD : GET
2019-03-20 19:28:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 19:28:36 -参数 : [{}]
2019-03-20 19:28:36 -耗时 : 0
2019-03-20 19:28:36 -返回值 : login
2019-03-20 19:28:42 -请求地址 : http://localhost:8081/login
2019-03-20 19:28:42 -HTTP METHOD : POST
2019-03-20 19:28:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 19:28:42 -参数 : [admin, 111111, 5106, org.apache.shiro.web.servlet.ShiroHttpServletRequest@705fa6d0]
2019-03-20 19:28:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 19:28:42 -==> Parameters: admin(String)
2019-03-20 19:28:42 -<==      Total: 1
2019-03-20 19:28:42 -耗时 : 162
2019-03-20 19:28:42 -返回值 : {msg=操作成功, code=0}
2019-03-20 19:28:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-20 19:28:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 19:28:42 -==> Parameters: 1(Long), admin(String), 登录(String), 162(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 19:28:42.947(Timestamp)
2019-03-20 19:28:43 -请求地址 : http://localhost:8081/index
2019-03-20 19:28:43 -HTTP METHOD : GET
2019-03-20 19:28:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 19:28:43 -参数 : [{}]
2019-03-20 19:28:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 19:28:43 -<==    Updates: 1
2019-03-20 19:28:43 -==> Parameters: 1(Long)
2019-03-20 19:28:43 -<==      Total: 46
2019-03-20 19:28:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 19:28:43 -==> Parameters: 138(Long)
2019-03-20 19:28:43 -<==      Total: 1
2019-03-20 19:28:43 -耗时 : 264
2019-03-20 19:28:43 -返回值 : index_v1
2019-03-20 19:28:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 19:28:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 265(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 19:28:43.324(Timestamp)
2019-03-20 19:28:43 -<==    Updates: 1
2019-03-20 19:28:43 -请求地址 : http://localhost:8081/main
2019-03-20 19:28:43 -HTTP METHOD : GET
2019-03-20 19:28:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 19:28:43 -参数 : []
2019-03-20 19:28:43 -耗时 : 1
2019-03-20 19:28:43 -返回值 : main
2019-03-20 19:28:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 19:28:43 -HTTP METHOD : GET
2019-03-20 19:28:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 19:28:43 -参数 : []
2019-03-20 19:28:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 19:28:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 19:28:43 -<==      Total: 0
2019-03-20 19:28:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 19:28:43 -==> Parameters: 1(Long), 0(String)
2019-03-20 19:28:43 -<==      Total: 1
2019-03-20 19:28:43 -耗时 : 112
2019-03-20 19:28:43 -返回值 : com.bootdo.common.utils.PageUtils@471dbd23
2019-03-20 19:28:43 -请求地址 : http://localhost:8081/main
2019-03-20 19:28:43 -HTTP METHOD : GET
2019-03-20 19:28:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 19:28:43 -参数 : []
2019-03-20 19:28:43 -耗时 : 1
2019-03-20 19:28:43 -返回值 : main
2019-03-20 19:28:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 19:28:57 -==> Parameters: 1(Long)
2019-03-20 19:28:57 -<==      Total: 90
2019-03-20 19:28:57 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 19:28:57 -HTTP METHOD : GET
2019-03-20 19:28:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 19:28:57 -参数 : []
2019-03-20 19:28:57 -耗时 : 0
2019-03-20 19:28:57 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 19:28:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:28:58 -HTTP METHOD : GET
2019-03-20 19:28:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:28:58 -参数 : [userType]
2019-03-20 19:28:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:28:58 -==> Parameters: userType(String)
2019-03-20 19:28:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:28:58 -HTTP METHOD : GET
2019-03-20 19:28:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:28:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 19:28:58 -<==      Total: 2
2019-03-20 19:28:58 -耗时 : 77
2019-03-20 19:28:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:28:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 19:28:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 19:28:58 -<==      Total: 4
2019-03-20 19:28:58 -==>  Preparing: select count(*) from elec_log 
2019-03-20 19:28:58 -==> Parameters: 
2019-03-20 19:28:58 -<==      Total: 1
2019-03-20 19:28:58 -耗时 : 193
2019-03-20 19:28:58 -返回值 : com.bootdo.common.utils.PageUtils@1205b592
2019-03-20 19:28:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-20 19:28:59 -HTTP METHOD : GET
2019-03-20 19:28:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-20 19:28:59 -参数 : []
2019-03-20 19:28:59 -耗时 : 0
2019-03-20 19:28:59 -返回值 : moneyLog/elecLog/add
2019-03-20 19:29:26 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 19:29:27 -HTTP METHOD : GET
2019-03-20 19:29:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 19:29:27 -参数 : []
2019-03-20 19:29:27 -耗时 : 1
2019-03-20 19:29:27 -返回值 : elec/elec/elec
2019-03-20 19:29:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:29:27 -HTTP METHOD : GET
2019-03-20 19:29:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:29:27 -参数 : [userType]
2019-03-20 19:29:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:29:27 -==> Parameters: userType(String)
2019-03-20 19:29:27 -<==      Total: 2
2019-03-20 19:29:27 -耗时 : 6
2019-03-20 19:29:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:29:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 19:29:27 -HTTP METHOD : GET
2019-03-20 19:29:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 19:29:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@457f5971]
2019-03-20 19:29:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 19:29:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 19:29:27 -<==      Total: 10
2019-03-20 19:29:27 -==>  Preparing: select count(*) from elec 
2019-03-20 19:29:27 -==> Parameters: 
2019-03-20 19:29:27 -<==      Total: 1
2019-03-20 19:29:27 -耗时 : 194
2019-03-20 19:29:27 -返回值 : com.bootdo.common.utils.PageUtils@560b42e
2019-03-20 19:29:43 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 19:29:43 -HTTP METHOD : GET
2019-03-20 19:29:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 19:29:43 -参数 : []
2019-03-20 19:29:43 -耗时 : 1
2019-03-20 19:29:43 -返回值 : elec/elec/add
2019-03-20 19:29:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:29:43 -HTTP METHOD : GET
2019-03-20 19:29:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:29:43 -参数 : [userType]
2019-03-20 19:29:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:29:43 -==> Parameters: userType(String)
2019-03-20 19:29:43 -<==      Total: 2
2019-03-20 19:29:43 -耗时 : 8
2019-03-20 19:29:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:29:43 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 19:29:43 -HTTP METHOD : GET
2019-03-20 19:29:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:29:43 -参数 : [userState]
2019-03-20 19:29:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:29:43 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 19:29:43 -HTTP METHOD : GET
2019-03-20 19:29:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:29:43 -参数 : [elecType]
2019-03-20 19:29:43 -==> Parameters: userState(String)
2019-03-20 19:29:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:29:43 -<==      Total: 2
2019-03-20 19:29:43 -耗时 : 6
2019-03-20 19:29:43 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:29:43 -==> Parameters: elecType(String)
2019-03-20 19:29:43 -<==      Total: 2
2019-03-20 19:29:43 -耗时 : 30
2019-03-20 19:29:43 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:29:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 19:29:44 -HTTP METHOD : GET
2019-03-20 19:29:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 19:29:44 -参数 : []
2019-03-20 19:29:44 -耗时 : 1
2019-03-20 19:29:44 -返回值 : system/dept/deptTree
2019-03-20 19:29:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 19:29:44 -HTTP METHOD : GET
2019-03-20 19:29:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 19:29:44 -参数 : []
2019-03-20 19:29:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 19:29:44 -==> Parameters: 
2019-03-20 19:29:44 -<==      Total: 3
2019-03-20 19:29:44 -耗时 : 50
2019-03-20 19:29:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 19:37:02 -Starting BootdoApplication on ZJZL-20180906VX with PID 7176 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 19:37:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 19:37:03 -The following profiles are active: dev
2019-03-20 19:37:03 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@58359ebd: startup date [Wed Mar 20 19:37:03 CST 2019]; root of context hierarchy
2019-03-20 19:37:15 -Starting BootdoApplication on ZJZL-20180906VX with PID 17724 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 19:37:15 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 19:37:15 -The following profiles are active: dev
2019-03-20 19:37:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3382f8ae: startup date [Wed Mar 20 19:37:15 CST 2019]; root of context hierarchy
2019-03-20 19:37:18 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 19:37:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 19:37:26 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f54886f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:26 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7a1b597] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2ae43082] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1d3d5f29] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:32 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:32 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:36 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:36 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 19:37:36 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:36 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 19:37:36 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 19:37:36 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:36 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 19:37:36 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:37 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:38 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:37:42 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 19:37:42 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 19:37:42 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 19:37:42 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 19:37:42 -Starting service [Tomcat]
2019-03-20 19:37:42 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 19:37:42 -Starting service [Tomcat]
2019-03-20 19:37:42 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 19:37:42 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 19:37:42 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 19:37:43 -Initializing Spring embedded WebApplicationContext
2019-03-20 19:37:43 -Root WebApplicationContext: initialization completed in 28214 ms
2019-03-20 19:37:43 -Initializing Spring embedded WebApplicationContext
2019-03-20 19:37:43 -Root WebApplicationContext: initialization completed in 39951 ms
2019-03-20 19:37:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 19:37:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 19:37:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 19:37:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 19:37:49 -Filter xssFilter was not registered (disabled)
2019-03-20 19:37:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 19:37:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 19:37:49 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 19:37:49 -Servlet dispatcherServlet mapped to [/]
2019-03-20 19:37:49 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 19:37:49 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 19:37:49 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 19:37:49 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 19:37:49 -Filter xssFilter was not registered (disabled)
2019-03-20 19:37:49 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 19:37:49 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 19:37:49 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 19:37:49 -Servlet dispatcherServlet mapped to [/]
2019-03-20 19:38:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3382f8ae: startup date [Wed Mar 20 19:37:15 CST 2019]; root of context hierarchy
2019-03-20 19:38:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@58359ebd: startup date [Wed Mar 20 19:37:03 CST 2019]; root of context hierarchy
2019-03-20 19:38:12 -Using default implementation for ThreadExecutor
2019-03-20 19:38:12 -Using default implementation for ThreadExecutor
2019-03-20 19:38:12 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 19:38:12 -Quartz Scheduler v.2.2.1 created.
2019-03-20 19:38:12 -RAMJobStore initialized.
2019-03-20 19:38:12 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 19:38:12 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 19:38:12 -Quartz scheduler version: 2.2.1
2019-03-20 19:38:12 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@663cf5d7
2019-03-20 19:38:12 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 19:38:12 -Quartz Scheduler v.2.2.1 created.
2019-03-20 19:38:12 -RAMJobStore initialized.
2019-03-20 19:38:12 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 19:38:12 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 19:38:12 -Quartz scheduler version: 2.2.1
2019-03-20 19:38:12 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@39004e4f
2019-03-20 19:38:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 19:38:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 19:38:16 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 19:38:16 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 19:38:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 19:38:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 19:38:23 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 19:38:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 19:38:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 19:38:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 19:38:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 19:38:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 19:38:23 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 19:38:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 19:38:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 19:38:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 19:38:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 19:38:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 19:38:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 19:38:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 19:38:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 19:38:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 19:38:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 19:38:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 19:38:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 19:38:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 19:38:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 19:38:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 19:38:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 19:38:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 19:38:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 19:38:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 19:38:24 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 19:38:24 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 19:38:24 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 19:38:24 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 19:38:24 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 19:38:24 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 19:38:24 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 19:38:24 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:24 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 19:38:24 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 19:38:24 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:24 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 19:38:24 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:38:24 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 19:38:24 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:38:24 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 19:38:24 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 19:38:24 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:38:24 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 19:38:24 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 19:38:24 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 19:38:24 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 19:38:24 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 19:38:24 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 19:38:24 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 19:38:24 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:38:24 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 19:38:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 19:38:24 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:38:24 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:38:24 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:38:24 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 19:38:24 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 19:38:24 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 19:38:24 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 19:38:24 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 19:38:24 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 19:38:24 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 19:38:24 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 19:38:24 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 19:38:24 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 19:38:24 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 19:38:24 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:38:24 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 19:38:24 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 19:38:24 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 19:38:24 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:38:24 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:38:24 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 19:38:24 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 19:38:24 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 19:38:24 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:38:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 19:38:24 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:38:24 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:38:24 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:38:24 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 19:38:24 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 19:38:24 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 19:38:24 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 19:38:24 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 19:38:24 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 19:38:24 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 19:38:24 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:38:24 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 19:38:24 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 19:38:24 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 19:38:24 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 19:38:24 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 19:38:24 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:38:24 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:38:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 19:38:24 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 19:38:24 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 19:38:24 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 19:38:24 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:38:24 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 19:38:24 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 19:38:24 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 19:38:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 19:38:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 19:38:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 19:38:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:38:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:38:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 19:38:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 19:38:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 19:38:24 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 19:38:24 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 19:38:24 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 19:38:24 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 19:38:24 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 19:38:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 19:38:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 19:38:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:24 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 19:38:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 19:38:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 19:38:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 19:38:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 19:38:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 19:38:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 19:38:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 19:38:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 19:38:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 19:38:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 19:38:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 19:38:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 19:38:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:38:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 19:38:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 19:38:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 19:38:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 19:38:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 19:38:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 19:38:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:38:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:38:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 19:38:24 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 19:38:24 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 19:38:24 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 19:38:24 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 19:38:24 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 19:38:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 19:38:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:38:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:38:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 19:38:24 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 19:38:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 19:38:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 19:38:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 19:38:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 19:38:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 19:38:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 19:38:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 19:38:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 19:38:25 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 19:38:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 19:38:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 19:38:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 19:38:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 19:38:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 19:38:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 19:38:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 19:38:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:38:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 19:38:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 19:38:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 19:38:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 19:38:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 19:38:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:38:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 19:38:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 19:38:25 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 19:38:25 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 19:38:25 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 19:38:25 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 19:38:25 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 19:38:25 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 19:38:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 19:38:25 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 19:38:25 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 19:38:25 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 19:38:25 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 19:38:25 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 19:38:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 19:38:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 19:38:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 19:38:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 19:38:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 19:38:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 19:38:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 19:38:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:38:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:38:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:38:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 19:38:25 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 19:38:25 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 19:38:25 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 19:38:25 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 19:38:25 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:25 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 19:38:25 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:25 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 19:38:25 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:25 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 19:38:25 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:38:25 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 19:38:25 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 19:38:25 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 19:38:25 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:38:25 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:25 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:38:25 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 19:38:25 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:38:25 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 19:38:25 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:38:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:38:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 19:38:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 19:38:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 19:38:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 19:38:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 19:38:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 19:38:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 19:38:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 19:38:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 19:38:28 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:38:28 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:38:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3382f8ae: startup date [Wed Mar 20 19:37:15 CST 2019]; root of context hierarchy
2019-03-20 19:38:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@58359ebd: startup date [Wed Mar 20 19:37:03 CST 2019]; root of context hierarchy
2019-03-20 19:38:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:38:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:38:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:38:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:38:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:38:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:38:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 19:38:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 19:38:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 19:38:31 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 19:38:37 -Registering beans for JMX exposure on startup
2019-03-20 19:38:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 19:38:37 -Registering beans for JMX exposure on startup
2019-03-20 19:38:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 19:38:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 19:38:37 -Starting beans in phase 2147483647
2019-03-20 19:38:37 -Context refreshed
2019-03-20 19:38:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 19:38:37 -Starting beans in phase 2147483647
2019-03-20 19:38:37 -Context refreshed
2019-03-20 19:38:38 -Found 1 custom documentation plugin(s)
2019-03-20 19:38:38 -Found 1 custom documentation plugin(s)
2019-03-20 19:38:38 -Scanning for api listing references
2019-03-20 19:38:38 -Scanning for api listing references
2019-03-20 19:38:39 -Generating unique operation named: removeUsingPOST_1
2019-03-20 19:38:39 -Generating unique operation named: removeUsingPOST_1
2019-03-20 19:38:41 -Generating unique operation named: addUsingGET_1
2019-03-20 19:38:41 -Generating unique operation named: addUsingGET_1
2019-03-20 19:38:41 -Generating unique operation named: editUsingGET_1
2019-03-20 19:38:41 -Generating unique operation named: listUsingGET_1
2019-03-20 19:38:41 -Generating unique operation named: editUsingGET_1
2019-03-20 19:38:41 -Generating unique operation named: listUsingGET_1
2019-03-20 19:38:41 -Generating unique operation named: removeUsingPOST_2
2019-03-20 19:38:41 -Generating unique operation named: removeUsingPOST_2
2019-03-20 19:38:42 -Generating unique operation named: removeUsingPOST_3
2019-03-20 19:38:42 -Generating unique operation named: saveUsingPOST_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingGET_1
2019-03-20 19:38:42 -Generating unique operation named: removeUsingPOST_3
2019-03-20 19:38:42 -Generating unique operation named: saveUsingPOST_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingPOST_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingPUT_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingGET_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingPOST_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingPUT_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 19:38:42 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 19:38:42 -Generating unique operation named: addUsingGET_2
2019-03-20 19:38:42 -Generating unique operation named: editUsingGET_2
2019-03-20 19:38:42 -Generating unique operation named: addUsingGET_2
2019-03-20 19:38:42 -Generating unique operation named: editUsingGET_2
2019-03-20 19:38:42 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 19:38:42 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 19:38:42 -Generating unique operation named: listUsingGET_2
2019-03-20 19:38:42 -Generating unique operation named: removeUsingPOST_4
2019-03-20 19:38:43 -Generating unique operation named: listUsingGET_2
2019-03-20 19:38:43 -Generating unique operation named: removeUsingPOST_5
2019-03-20 19:38:43 -Generating unique operation named: saveUsingPOST_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingGET_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 19:38:43 -Generating unique operation named: removeUsingPOST_4
2019-03-20 19:38:43 -Generating unique operation named: removeUsingPOST_5
2019-03-20 19:38:43 -Generating unique operation named: saveUsingPOST_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingPOST_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingPUT_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingGET_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingPOST_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingPUT_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 19:38:43 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 19:38:43 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 19:38:43 -Generating unique operation named: addUsingGET_3
2019-03-20 19:38:43 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 19:38:43 -Generating unique operation named: editUsingGET_3
2019-03-20 19:38:43 -Generating unique operation named: addUsingGET_3
2019-03-20 19:38:43 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 19:38:43 -Generating unique operation named: editUsingGET_3
2019-03-20 19:38:43 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 19:38:43 -Generating unique operation named: listUsingGET_3
2019-03-20 19:38:43 -Generating unique operation named: listUsingGET_3
2019-03-20 19:38:43 -Generating unique operation named: removeUsingPOST_6
2019-03-20 19:38:43 -Generating unique operation named: removeUsingPOST_6
2019-03-20 19:38:44 -Generating unique operation named: removeUsingPOST_7
2019-03-20 19:38:44 -Generating unique operation named: saveUsingPOST_3
2019-03-20 19:38:44 -Generating unique operation named: removeUsingPOST_7
2019-03-20 19:38:44 -Generating unique operation named: updateUsingGET_3
2019-03-20 19:38:44 -Generating unique operation named: saveUsingPOST_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingGET_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPOST_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPOST_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPUT_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPUT_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 19:38:44 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 19:38:44 -Generating unique operation named: addUsingGET_4
2019-03-20 19:38:44 -Generating unique operation named: editUsingGET_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 19:38:44 -Generating unique operation named: listUsingGET_4
2019-03-20 19:38:44 -Generating unique operation named: addUsingGET_4
2019-03-20 19:38:44 -Generating unique operation named: removeUsingPOST_8
2019-03-20 19:38:44 -Generating unique operation named: editUsingGET_4
2019-03-20 19:38:44 -Generating unique operation named: listUsingGET_4
2019-03-20 19:38:44 -Generating unique operation named: removeUsingPOST_8
2019-03-20 19:38:44 -Generating unique operation named: removeUsingPOST_9
2019-03-20 19:38:44 -Generating unique operation named: removeUsingPOST_9
2019-03-20 19:38:44 -Generating unique operation named: saveUsingPOST_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingGET_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 19:38:44 -Generating unique operation named: saveUsingPOST_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingGET_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPOST_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPOST_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPUT_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPUT_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 19:38:44 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 19:38:44 -Generating unique operation named: ElecUsingGET_1
2019-03-20 19:38:44 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 19:38:44 -Generating unique operation named: ElecUsingGET_1
2019-03-20 19:38:44 -Generating unique operation named: addUsingGET_5
2019-03-20 19:38:44 -Generating unique operation named: addUsingGET_5
2019-03-20 19:38:44 -Generating unique operation named: editUsingGET_5
2019-03-20 19:38:44 -Generating unique operation named: editUsingGET_5
2019-03-20 19:38:44 -Generating unique operation named: listUsingGET_5
2019-03-20 19:38:44 -Generating unique operation named: listUsingGET_5
2019-03-20 19:38:44 -Generating unique operation named: removeUsingPOST_10
2019-03-20 19:38:44 -Generating unique operation named: removeUsingPOST_10
2019-03-20 19:38:44 -Generating unique operation named: removeUsingPOST_11
2019-03-20 19:38:44 -Generating unique operation named: removeUsingPOST_11
2019-03-20 19:38:44 -Generating unique operation named: saveUsingPOST_5
2019-03-20 19:38:44 -Generating unique operation named: saveUsingPOST_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingGET_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPOST_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingGET_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPUT_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPOST_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPUT_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 19:38:44 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 19:38:45 -Generating unique operation named: editUsingGET_6
2019-03-20 19:38:45 -Generating unique operation named: editUsingGET_6
2019-03-20 19:38:45 -Generating unique operation named: listUsingGET_6
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPOST_6
2019-03-20 19:38:45 -Generating unique operation named: listUsingGET_6
2019-03-20 19:38:45 -Generating unique operation named: addUsingGET_6
2019-03-20 19:38:45 -Generating unique operation named: editUsingGET_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPOST_6
2019-03-20 19:38:45 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 19:38:45 -Generating unique operation named: listUsingGET_7
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_12
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_13
2019-03-20 19:38:45 -Generating unique operation named: addUsingGET_6
2019-03-20 19:38:45 -Generating unique operation named: editUsingGET_7
2019-03-20 19:38:45 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 19:38:45 -Generating unique operation named: saveUsingPOST_6
2019-03-20 19:38:45 -Generating unique operation named: updateUsingGET_6
2019-03-20 19:38:45 -Generating unique operation named: listUsingGET_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPOST_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPUT_6
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_12
2019-03-20 19:38:45 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_13
2019-03-20 19:38:45 -Generating unique operation named: saveUsingPOST_6
2019-03-20 19:38:45 -Generating unique operation named: updateUsingGET_6
2019-03-20 19:38:45 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 19:38:45 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 19:38:45 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 19:38:45 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPOST_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPUT_6
2019-03-20 19:38:45 -Generating unique operation named: addUsingGET_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 19:38:45 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 19:38:45 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 19:38:45 -Generating unique operation named: editUsingGET_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 19:38:45 -Generating unique operation named: listUsingGET_8
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_14
2019-03-20 19:38:45 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_15
2019-03-20 19:38:45 -Generating unique operation named: saveUsingPOST_7
2019-03-20 19:38:45 -Generating unique operation named: addUsingGET_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingGET_7
2019-03-20 19:38:45 -Generating unique operation named: editUsingGET_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 19:38:45 -Generating unique operation named: listUsingGET_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPOST_8
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_14
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPUT_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_15
2019-03-20 19:38:45 -Generating unique operation named: saveUsingPOST_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingGET_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPOST_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPUT_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 19:38:45 -Generating unique operation named: addUsingGET_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 19:38:45 -Generating unique operation named: editUsingGET_9
2019-03-20 19:38:45 -Generating unique operation named: listUsingGET_9
2019-03-20 19:38:45 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 19:38:45 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_16
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_17
2019-03-20 19:38:45 -Generating unique operation named: addUsingGET_8
2019-03-20 19:38:45 -Generating unique operation named: saveUsingPOST_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingGET_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 19:38:45 -Generating unique operation named: editUsingGET_9
2019-03-20 19:38:45 -Generating unique operation named: listUsingGET_9
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_16
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_17
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPOST_9
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPUT_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 19:38:45 -Generating unique operation named: saveUsingPOST_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingGET_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 19:38:45 -Generating unique operation named: addUsingGET_9
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPOST_9
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPUT_8
2019-03-20 19:38:45 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 19:38:45 -Generating unique operation named: editUsingGET_10
2019-03-20 19:38:45 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 19:38:45 -Generating unique operation named: infoUsingGET_1
2019-03-20 19:38:45 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 19:38:45 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 19:38:45 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 19:38:45 -Generating unique operation named: infoUsingPOST_1
2019-03-20 19:38:45 -Generating unique operation named: addUsingGET_9
2019-03-20 19:38:45 -Generating unique operation named: editUsingGET_10
2019-03-20 19:38:45 -Generating unique operation named: infoUsingPUT_1
2019-03-20 19:38:45 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 19:38:45 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 19:38:45 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 19:38:45 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 19:38:45 -Generating unique operation named: listUsingGET_10
2019-03-20 19:38:45 -Generating unique operation named: removeUsingPOST_18
2019-03-20 19:38:45 -Generating unique operation named: infoUsingGET_1
2019-03-20 19:38:45 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 19:38:45 -Generating unique operation named: infoUsingPOST_1
2019-03-20 19:38:45 -Generating unique operation named: infoUsingPUT_1
2019-03-20 19:38:46 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 19:38:46 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 19:38:46 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 19:38:46 -Generating unique operation named: removeUsingPOST_19
2019-03-20 19:38:46 -Generating unique operation named: saveUsingPOST_9
2019-03-20 19:38:46 -Generating unique operation named: updateUsingPOST_10
2019-03-20 19:38:46 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 19:38:46 -Generating unique operation named: listUsingGET_10
2019-03-20 19:38:46 -Generating unique operation named: removeUsingPOST_18
2019-03-20 19:38:46 -Generating unique operation named: removeUsingPOST_19
2019-03-20 19:38:46 -Generating unique operation named: listUsingGET_11
2019-03-20 19:38:46 -Generating unique operation named: saveUsingPOST_9
2019-03-20 19:38:46 -Generating unique operation named: removeUsingPOST_20
2019-03-20 19:38:46 -Generating unique operation named: updateUsingPOST_10
2019-03-20 19:38:46 -Generating unique operation named: listUsingGET_11
2019-03-20 19:38:46 -Generating unique operation named: removeUsingPOST_20
2019-03-20 19:38:46 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 19:38:46 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 19:38:46 -Generating unique operation named: addUsingGET_10
2019-03-20 19:38:46 -Generating unique operation named: editUsingGET_11
2019-03-20 19:38:46 -Generating unique operation named: listUsingGET_12
2019-03-20 19:38:46 -Generating unique operation named: addUsingGET_10
2019-03-20 19:38:46 -Generating unique operation named: editUsingGET_11
2019-03-20 19:38:46 -Generating unique operation named: listUsingGET_12
2019-03-20 19:38:46 -Generating unique operation named: removeUsingPOST_21
2019-03-20 19:38:46 -Generating unique operation named: saveUsingPOST_10
2019-03-20 19:38:46 -Generating unique operation named: removeUsingPOST_21
2019-03-20 19:38:46 -Generating unique operation named: saveUsingPOST_10
2019-03-20 19:38:46 -Generating unique operation named: treeUsingGET_1
2019-03-20 19:38:46 -Generating unique operation named: treeUsingGET_2
2019-03-20 19:38:46 -Generating unique operation named: treeUsingGET_1
2019-03-20 19:38:46 -Generating unique operation named: updateUsingPOST_11
2019-03-20 19:38:46 -Generating unique operation named: treeUsingGET_2
2019-03-20 19:38:46 -Generating unique operation named: updateUsingPOST_11
2019-03-20 19:38:46 -Generating unique operation named: addUsingGET_11
2019-03-20 19:38:46 -Generating unique operation named: addUsingGET_11
2019-03-20 19:38:46 -Generating unique operation named: editUsingGET_12
2019-03-20 19:38:46 -Generating unique operation named: editUsingGET_12
2019-03-20 19:38:46 -Generating unique operation named: listUsingGET_13
2019-03-20 19:38:46 -Generating unique operation named: listUsingGET_13
2019-03-20 19:38:46 -Generating unique operation named: removeUsingPOST_22
2019-03-20 19:38:46 -Generating unique operation named: removeUsingPOST_23
2019-03-20 19:38:46 -Generating unique operation named: removeUsingPOST_22
2019-03-20 19:38:46 -Generating unique operation named: removeUsingPOST_23
2019-03-20 19:38:46 -Generating unique operation named: saveUsingPOST_11
2019-03-20 19:38:46 -Generating unique operation named: saveUsingPOST_11
2019-03-20 19:38:46 -Generating unique operation named: updateUsingGET_9
2019-03-20 19:38:46 -Generating unique operation named: updateUsingGET_9
2019-03-20 19:38:46 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 19:38:46 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 19:38:46 -Generating unique operation named: updateUsingPOST_12
2019-03-20 19:38:46 -Generating unique operation named: updateUsingPOST_12
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPUT_9
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPUT_9
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 19:38:47 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 19:38:47 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 19:38:47 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 19:38:47 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 19:38:47 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 19:38:47 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 19:38:47 -Generating unique operation named: addUsingGET_12
2019-03-20 19:38:47 -Generating unique operation named: addUsingGET_12
2019-03-20 19:38:47 -Generating unique operation named: editUsingGET_13
2019-03-20 19:38:47 -Generating unique operation named: editUsingGET_13
2019-03-20 19:38:47 -Generating unique operation named: listUsingGET_14
2019-03-20 19:38:47 -Generating unique operation named: listUsingGET_14
2019-03-20 19:38:47 -Generating unique operation named: removeUsingPOST_24
2019-03-20 19:38:47 -Generating unique operation named: removeUsingPOST_25
2019-03-20 19:38:47 -Generating unique operation named: removeUsingPOST_24
2019-03-20 19:38:47 -Generating unique operation named: removeUsingPOST_25
2019-03-20 19:38:47 -Generating unique operation named: saveUsingPOST_12
2019-03-20 19:38:47 -Generating unique operation named: updateUsingGET_10
2019-03-20 19:38:47 -Generating unique operation named: saveUsingPOST_12
2019-03-20 19:38:47 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPOST_13
2019-03-20 19:38:47 -Generating unique operation named: updateUsingGET_10
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPUT_10
2019-03-20 19:38:47 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPOST_13
2019-03-20 19:38:47 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPUT_10
2019-03-20 19:38:47 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 19:38:47 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 19:38:47 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 19:38:47 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 19:38:47 -Generating unique operation named: addUsingGET_13
2019-03-20 19:38:47 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 19:38:47 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 19:38:47 -Generating unique operation named: editUsingGET_14
2019-03-20 19:38:47 -Generating unique operation named: addUsingGET_13
2019-03-20 19:38:47 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 19:38:47 -Generating unique operation named: editUsingGET_14
2019-03-20 19:38:47 -Generating unique operation named: listUsingGET_15
2019-03-20 19:38:47 -Generating unique operation named: saveUsingPOST_13
2019-03-20 19:38:47 -Generating unique operation named: listUsingGET_15
2019-03-20 19:38:47 -Generating unique operation named: saveUsingPOST_13
2019-03-20 19:38:47 -Generating unique operation named: saveUsingPOST_14
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPOST_14
2019-03-20 19:38:47 -Generating unique operation named: saveUsingPOST_14
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPOST_14
2019-03-20 19:38:47 -Generating unique operation named: listUsingGET_16
2019-03-20 19:38:47 -Generating unique operation named: listUsingHEAD_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingPOST_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingGET_16
2019-03-20 19:38:47 -Generating unique operation named: listUsingPUT_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingHEAD_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingPATCH_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingPOST_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingDELETE_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingPUT_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingPATCH_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingTRACE_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingDELETE_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 19:38:47 -Generating unique operation named: listUsingTRACE_1
2019-03-20 19:38:47 -Generating unique operation named: addUsingGET_14
2019-03-20 19:38:47 -Generating unique operation named: addUsingGET_14
2019-03-20 19:38:47 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 19:38:47 -Generating unique operation named: editUsingGET_15
2019-03-20 19:38:47 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 19:38:47 -Generating unique operation named: editUsingGET_15
2019-03-20 19:38:47 -Generating unique operation named: listUsingGET_17
2019-03-20 19:38:47 -Generating unique operation named: removeUsingPOST_26
2019-03-20 19:38:47 -Generating unique operation named: listUsingGET_17
2019-03-20 19:38:47 -Generating unique operation named: removeUsingPOST_26
2019-03-20 19:38:47 -Generating unique operation named: saveUsingPOST_15
2019-03-20 19:38:47 -Generating unique operation named: treeUsingGET_3
2019-03-20 19:38:47 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 19:38:47 -Generating unique operation named: saveUsingPOST_15
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPOST_15
2019-03-20 19:38:47 -Generating unique operation named: treeUsingGET_3
2019-03-20 19:38:47 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 19:38:47 -Generating unique operation named: updateUsingPOST_15
2019-03-20 19:38:47 -Generating unique operation named: addUsingGET_15
2019-03-20 19:38:47 -Generating unique operation named: editUsingGET_16
2019-03-20 19:38:47 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 19:38:47 -Generating unique operation named: listUsingGET_18
2019-03-20 19:38:47 -Generating unique operation named: removeUsingPOST_27
2019-03-20 19:38:48 -Generating unique operation named: removeUsingPOST_28
2019-03-20 19:38:48 -Generating unique operation named: addUsingGET_15
2019-03-20 19:38:48 -Generating unique operation named: saveUsingPOST_16
2019-03-20 19:38:48 -Generating unique operation named: editUsingGET_16
2019-03-20 19:38:48 -Generating unique operation named: updateUsingGET_11
2019-03-20 19:38:48 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPOST_16
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPUT_11
2019-03-20 19:38:48 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 19:38:48 -Generating unique operation named: listUsingGET_18
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 19:38:48 -Generating unique operation named: removeUsingPOST_27
2019-03-20 19:38:48 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 19:38:48 -Generating unique operation named: removeUsingPOST_28
2019-03-20 19:38:48 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 19:38:48 -Generating unique operation named: saveUsingPOST_16
2019-03-20 19:38:48 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 19:38:48 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 19:38:48 -Generating unique operation named: updateUsingGET_11
2019-03-20 19:38:48 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 19:38:48 -Generating unique operation named: addUsingGET_16
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPOST_16
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPUT_11
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 19:38:48 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 19:38:48 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 19:38:48 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 19:38:48 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 19:38:48 -Generating unique operation named: editUsingGET_17
2019-03-20 19:38:48 -Generating unique operation named: addUsingGET_16
2019-03-20 19:38:48 -Generating unique operation named: listUsingGET_19
2019-03-20 19:38:48 -Generating unique operation named: editUsingGET_17
2019-03-20 19:38:48 -Generating unique operation named: removeUsingPOST_29
2019-03-20 19:38:48 -Generating unique operation named: listUsingGET_19
2019-03-20 19:38:48 -Generating unique operation named: removeUsingPOST_30
2019-03-20 19:38:48 -Generating unique operation named: removeUsingPOST_29
2019-03-20 19:38:48 -Generating unique operation named: saveUsingPOST_17
2019-03-20 19:38:48 -Generating unique operation named: removeUsingPOST_30
2019-03-20 19:38:48 -Generating unique operation named: updateUsingGET_12
2019-03-20 19:38:48 -Generating unique operation named: saveUsingPOST_17
2019-03-20 19:38:48 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingGET_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPOST_17
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPUT_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPOST_17
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPUT_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 19:38:48 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 19:38:48 -Generating unique operation named: addUsingGET_17
2019-03-20 19:38:48 -Generating unique operation named: addUsingGET_17
2019-03-20 19:38:48 -Generating unique operation named: editUsingGET_18
2019-03-20 19:38:48 -Generating unique operation named: listUsingGET_20
2019-03-20 19:38:48 -Generating unique operation named: removeUsingPOST_31
2019-03-20 19:38:48 -Generating unique operation named: removeUsingPOST_32
2019-03-20 19:38:48 -Generating unique operation named: editUsingGET_18
2019-03-20 19:38:48 -Generating unique operation named: saveUsingPOST_18
2019-03-20 19:38:48 -Generating unique operation named: listUsingGET_20
2019-03-20 19:38:48 -Generating unique operation named: updateUsingGET_13
2019-03-20 19:38:48 -Generating unique operation named: removeUsingPOST_31
2019-03-20 19:38:48 -Generating unique operation named: removeUsingPOST_32
2019-03-20 19:38:48 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPOST_18
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPUT_13
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 19:38:48 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 19:38:48 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 19:38:48 -Generating unique operation named: saveUsingPOST_18
2019-03-20 19:38:48 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 19:38:48 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 19:38:48 -Generating unique operation named: updateUsingGET_13
2019-03-20 19:38:48 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPOST_18
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPUT_13
2019-03-20 19:38:48 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 19:38:48 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 19:38:48 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 19:38:48 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 19:38:48 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 19:38:48 -Starting Quartz Scheduler now
2019-03-20 19:38:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 19:38:48 -Starting...
2019-03-20 19:38:48 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 19:38:48 -Starting Quartz Scheduler now
2019-03-20 19:38:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 19:38:48 -Starting...
2019-03-20 19:38:48 -Started.
2019-03-20 19:38:48 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 19:38:48 -Started.
2019-03-20 19:38:48 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 19:38:48 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 19:38:49 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-20 19:38:49 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-20 19:38:49 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-20 19:38:49 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-20 19:38:49 -Stopping service [Tomcat]
2019-03-20 19:38:49 -Stopping service [Tomcat]
2019-03-20 19:38:50 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-20 19:38:50 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-20 19:38:50 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-20 19:38:50 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-20 19:38:50 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-20 19:38:50 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-20 19:38:50 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-20 19:38:50 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-20 19:38:50 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-20 19:38:50 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@58359ebd: startup date [Wed Mar 20 19:37:03 CST 2019]; root of context hierarchy
2019-03-20 19:38:50 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-20 19:38:50 -Stopping beans in phase 2147483647
2019-03-20 19:38:50 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3382f8ae: startup date [Wed Mar 20 19:37:15 CST 2019]; root of context hierarchy
2019-03-20 19:38:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 19:38:50 -Stopping...
2019-03-20 19:38:50 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 19:38:50 -Stopped.
2019-03-20 19:38:50 -Stopping beans in phase 2147483647
2019-03-20 19:38:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 19:38:50 -Stopping...
2019-03-20 19:38:50 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 19:38:50 -Stopped.
2019-03-20 19:38:50 -Unregistering JMX-exposed beans on shutdown
2019-03-20 19:38:50 -Unregistering JMX-exposed beans
2019-03-20 19:38:50 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-20 19:38:50 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-20 19:38:50 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-20 19:38:50 -Unregistering JMX-exposed beans on shutdown
2019-03-20 19:38:50 -Unregistering JMX-exposed beans
2019-03-20 19:38:50 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-20 19:38:50 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-20 19:38:50 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-20 19:38:50 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-20 19:38:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-20 19:38:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 19:38:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-20 19:38:50 -Shutting down Quartz Scheduler
2019-03-20 19:38:50 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-20 19:38:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-20 19:38:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 19:38:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-20 19:38:50 -Shutting down Quartz Scheduler
2019-03-20 19:39:57 -Starting BootdoApplication on ZJZL-20180906VX with PID 224 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 19:39:57 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 19:39:57 -The following profiles are active: dev
2019-03-20 19:39:57 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed Mar 20 19:39:57 CST 2019]; root of context hierarchy
2019-03-20 19:40:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 19:40:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9bc281b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:40:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8e1bb05a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:40:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:40:03 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:40:03 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:40:03 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 19:40:03 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 19:40:03 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:40:03 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:40:03 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:40:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:40:04 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 19:40:04 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 19:40:04 -Starting service [Tomcat]
2019-03-20 19:40:04 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 19:40:04 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 19:40:05 -Initializing Spring embedded WebApplicationContext
2019-03-20 19:40:05 -Root WebApplicationContext: initialization completed in 7796 ms
2019-03-20 19:40:05 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 19:40:05 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 19:40:05 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 19:40:05 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 19:40:05 -Filter xssFilter was not registered (disabled)
2019-03-20 19:40:05 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 19:40:05 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 19:40:05 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 19:40:05 -Servlet dispatcherServlet mapped to [/]
2019-03-20 19:40:09 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed Mar 20 19:39:57 CST 2019]; root of context hierarchy
2019-03-20 19:40:09 -Using default implementation for ThreadExecutor
2019-03-20 19:40:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 19:40:09 -Quartz Scheduler v.2.2.1 created.
2019-03-20 19:40:09 -RAMJobStore initialized.
2019-03-20 19:40:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 19:40:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 19:40:09 -Quartz scheduler version: 2.2.1
2019-03-20 19:40:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@f18b738
2019-03-20 19:40:10 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 19:40:10 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 19:40:12 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 19:40:12 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 19:40:12 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:40:12 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 19:40:12 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 19:40:12 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 19:40:12 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 19:40:12 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 19:40:12 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 19:40:12 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 19:40:12 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 19:40:12 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 19:40:12 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 19:40:12 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 19:40:12 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 19:40:12 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 19:40:12 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 19:40:12 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 19:40:12 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 19:40:12 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 19:40:12 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:40:12 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 19:40:12 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:40:12 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 19:40:12 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 19:40:12 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 19:40:12 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 19:40:12 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 19:40:12 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 19:40:12 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 19:40:12 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 19:40:12 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:40:12 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:40:12 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 19:40:12 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:40:12 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:40:12 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:40:12 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 19:40:12 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:40:12 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 19:40:12 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 19:40:12 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:40:12 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 19:40:12 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 19:40:12 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:40:12 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 19:40:12 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 19:40:12 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:40:12 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 19:40:12 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 19:40:12 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 19:40:12 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:40:12 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:40:12 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 19:40:12 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:40:12 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 19:40:12 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:40:12 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 19:40:12 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:40:12 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:40:12 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 19:40:12 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 19:40:12 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 19:40:12 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:40:12 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 19:40:12 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 19:40:12 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 19:40:12 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 19:40:12 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 19:40:12 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 19:40:12 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:40:12 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 19:40:12 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 19:40:12 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:40:12 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:40:12 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 19:40:12 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 19:40:12 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 19:40:12 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 19:40:12 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 19:40:12 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 19:40:12 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 19:40:12 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 19:40:12 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 19:40:12 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 19:40:12 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 19:40:12 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 19:40:12 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 19:40:12 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 19:40:12 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 19:40:12 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:40:12 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:40:12 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 19:40:12 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 19:40:12 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 19:40:12 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 19:40:12 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 19:40:12 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 19:40:12 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 19:40:12 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 19:40:12 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 19:40:12 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 19:40:12 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 19:40:12 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 19:40:12 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 19:40:12 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 19:40:12 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 19:40:12 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:40:12 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:40:12 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 19:40:12 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:40:12 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 19:40:12 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 19:40:12 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 19:40:12 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 19:40:12 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 19:40:12 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 19:40:12 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:40:12 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 19:40:12 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:40:12 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 19:40:12 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 19:40:12 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 19:40:12 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:40:12 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:40:12 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 19:40:12 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:40:12 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:40:12 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 19:40:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:40:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 19:40:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 19:40:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 19:40:13 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 19:40:13 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 19:40:13 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 19:40:13 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:40:14 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed Mar 20 19:39:57 CST 2019]; root of context hierarchy
2019-03-20 19:40:14 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:40:14 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:40:14 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:40:14 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 19:40:14 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 19:40:16 -Registering beans for JMX exposure on startup
2019-03-20 19:40:16 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 19:40:16 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 19:40:16 -Starting beans in phase 2147483647
2019-03-20 19:40:16 -Context refreshed
2019-03-20 19:40:17 -Found 1 custom documentation plugin(s)
2019-03-20 19:40:17 -Scanning for api listing references
2019-03-20 19:40:19 -Generating unique operation named: removeUsingPOST_1
2019-03-20 19:40:19 -Generating unique operation named: addUsingGET_1
2019-03-20 19:40:19 -Generating unique operation named: editUsingGET_1
2019-03-20 19:40:19 -Generating unique operation named: listUsingGET_1
2019-03-20 19:40:19 -Generating unique operation named: removeUsingPOST_2
2019-03-20 19:40:19 -Generating unique operation named: removeUsingPOST_3
2019-03-20 19:40:19 -Generating unique operation named: saveUsingPOST_1
2019-03-20 19:40:19 -Generating unique operation named: updateUsingGET_1
2019-03-20 19:40:19 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPOST_1
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPUT_1
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 19:40:19 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 19:40:19 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 19:40:19 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 19:40:19 -Generating unique operation named: addUsingGET_2
2019-03-20 19:40:19 -Generating unique operation named: editUsingGET_2
2019-03-20 19:40:19 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 19:40:19 -Generating unique operation named: listUsingGET_2
2019-03-20 19:40:19 -Generating unique operation named: removeUsingPOST_4
2019-03-20 19:40:19 -Generating unique operation named: removeUsingPOST_5
2019-03-20 19:40:19 -Generating unique operation named: saveUsingPOST_2
2019-03-20 19:40:19 -Generating unique operation named: updateUsingGET_2
2019-03-20 19:40:19 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPOST_2
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPUT_2
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 19:40:19 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 19:40:19 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 19:40:19 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 19:40:19 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 19:40:19 -Generating unique operation named: addUsingGET_3
2019-03-20 19:40:19 -Generating unique operation named: editUsingGET_3
2019-03-20 19:40:19 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 19:40:19 -Generating unique operation named: listUsingGET_3
2019-03-20 19:40:19 -Generating unique operation named: removeUsingPOST_6
2019-03-20 19:40:19 -Generating unique operation named: removeUsingPOST_7
2019-03-20 19:40:19 -Generating unique operation named: saveUsingPOST_3
2019-03-20 19:40:19 -Generating unique operation named: updateUsingGET_3
2019-03-20 19:40:19 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPOST_3
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPUT_3
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 19:40:19 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 19:40:19 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 19:40:19 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 19:40:19 -Generating unique operation named: addUsingGET_4
2019-03-20 19:40:19 -Generating unique operation named: editUsingGET_4
2019-03-20 19:40:19 -Generating unique operation named: listUsingGET_4
2019-03-20 19:40:19 -Generating unique operation named: removeUsingPOST_8
2019-03-20 19:40:19 -Generating unique operation named: removeUsingPOST_9
2019-03-20 19:40:19 -Generating unique operation named: saveUsingPOST_4
2019-03-20 19:40:19 -Generating unique operation named: updateUsingGET_4
2019-03-20 19:40:19 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPOST_4
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPUT_4
2019-03-20 19:40:19 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 19:40:19 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 19:40:19 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 19:40:19 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 19:40:19 -Generating unique operation named: ElecUsingGET_1
2019-03-20 19:40:20 -Generating unique operation named: addUsingGET_5
2019-03-20 19:40:20 -Generating unique operation named: editUsingGET_5
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_5
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_10
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_11
2019-03-20 19:40:20 -Generating unique operation named: saveUsingPOST_5
2019-03-20 19:40:20 -Generating unique operation named: updateUsingGET_5
2019-03-20 19:40:20 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPOST_5
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPUT_5
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 19:40:20 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 19:40:20 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 19:40:20 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 19:40:20 -Generating unique operation named: editUsingGET_6
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_6
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPOST_6
2019-03-20 19:40:20 -Generating unique operation named: addUsingGET_6
2019-03-20 19:40:20 -Generating unique operation named: editUsingGET_7
2019-03-20 19:40:20 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_7
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_12
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_13
2019-03-20 19:40:20 -Generating unique operation named: saveUsingPOST_6
2019-03-20 19:40:20 -Generating unique operation named: updateUsingGET_6
2019-03-20 19:40:20 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPOST_7
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPUT_6
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 19:40:20 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 19:40:20 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 19:40:20 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 19:40:20 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 19:40:20 -Generating unique operation named: addUsingGET_7
2019-03-20 19:40:20 -Generating unique operation named: editUsingGET_8
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_8
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_14
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_15
2019-03-20 19:40:20 -Generating unique operation named: saveUsingPOST_7
2019-03-20 19:40:20 -Generating unique operation named: updateUsingGET_7
2019-03-20 19:40:20 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPOST_8
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPUT_7
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 19:40:20 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 19:40:20 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 19:40:20 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 19:40:20 -Generating unique operation named: addUsingGET_8
2019-03-20 19:40:20 -Generating unique operation named: editUsingGET_9
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_9
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_16
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_17
2019-03-20 19:40:20 -Generating unique operation named: saveUsingPOST_8
2019-03-20 19:40:20 -Generating unique operation named: updateUsingGET_8
2019-03-20 19:40:20 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPOST_9
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPUT_8
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 19:40:20 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 19:40:20 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 19:40:20 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 19:40:20 -Generating unique operation named: addUsingGET_9
2019-03-20 19:40:20 -Generating unique operation named: editUsingGET_10
2019-03-20 19:40:20 -Generating unique operation named: infoUsingGET_1
2019-03-20 19:40:20 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 19:40:20 -Generating unique operation named: infoUsingPOST_1
2019-03-20 19:40:20 -Generating unique operation named: infoUsingPUT_1
2019-03-20 19:40:20 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 19:40:20 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 19:40:20 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 19:40:20 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_10
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_18
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_19
2019-03-20 19:40:20 -Generating unique operation named: saveUsingPOST_9
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPOST_10
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_11
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_20
2019-03-20 19:40:20 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 19:40:20 -Generating unique operation named: addUsingGET_10
2019-03-20 19:40:20 -Generating unique operation named: editUsingGET_11
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_12
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_21
2019-03-20 19:40:20 -Generating unique operation named: saveUsingPOST_10
2019-03-20 19:40:20 -Generating unique operation named: treeUsingGET_1
2019-03-20 19:40:20 -Generating unique operation named: treeUsingGET_2
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPOST_11
2019-03-20 19:40:20 -Generating unique operation named: addUsingGET_11
2019-03-20 19:40:20 -Generating unique operation named: editUsingGET_12
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_13
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_22
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_23
2019-03-20 19:40:20 -Generating unique operation named: saveUsingPOST_11
2019-03-20 19:40:20 -Generating unique operation named: updateUsingGET_9
2019-03-20 19:40:20 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPOST_12
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPUT_9
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 19:40:20 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 19:40:20 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 19:40:20 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 19:40:20 -Generating unique operation named: addUsingGET_12
2019-03-20 19:40:20 -Generating unique operation named: editUsingGET_13
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_14
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_24
2019-03-20 19:40:20 -Generating unique operation named: removeUsingPOST_25
2019-03-20 19:40:20 -Generating unique operation named: saveUsingPOST_12
2019-03-20 19:40:20 -Generating unique operation named: updateUsingGET_10
2019-03-20 19:40:20 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPOST_13
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPUT_10
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 19:40:20 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 19:40:20 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 19:40:20 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 19:40:20 -Generating unique operation named: addUsingGET_13
2019-03-20 19:40:20 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 19:40:20 -Generating unique operation named: editUsingGET_14
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_15
2019-03-20 19:40:20 -Generating unique operation named: saveUsingPOST_13
2019-03-20 19:40:20 -Generating unique operation named: saveUsingPOST_14
2019-03-20 19:40:20 -Generating unique operation named: updateUsingPOST_14
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_16
2019-03-20 19:40:20 -Generating unique operation named: listUsingHEAD_1
2019-03-20 19:40:20 -Generating unique operation named: listUsingPOST_1
2019-03-20 19:40:20 -Generating unique operation named: listUsingPUT_1
2019-03-20 19:40:20 -Generating unique operation named: listUsingPATCH_1
2019-03-20 19:40:20 -Generating unique operation named: listUsingDELETE_1
2019-03-20 19:40:20 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 19:40:20 -Generating unique operation named: listUsingTRACE_1
2019-03-20 19:40:20 -Generating unique operation named: addUsingGET_14
2019-03-20 19:40:20 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 19:40:20 -Generating unique operation named: editUsingGET_15
2019-03-20 19:40:20 -Generating unique operation named: listUsingGET_17
2019-03-20 19:40:21 -Generating unique operation named: removeUsingPOST_26
2019-03-20 19:40:21 -Generating unique operation named: saveUsingPOST_15
2019-03-20 19:40:21 -Generating unique operation named: treeUsingGET_3
2019-03-20 19:40:21 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 19:40:21 -Generating unique operation named: updateUsingPOST_15
2019-03-20 19:40:21 -Generating unique operation named: addUsingGET_15
2019-03-20 19:40:21 -Generating unique operation named: editUsingGET_16
2019-03-20 19:40:21 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 19:40:21 -Generating unique operation named: listUsingGET_18
2019-03-20 19:40:21 -Generating unique operation named: removeUsingPOST_27
2019-03-20 19:40:21 -Generating unique operation named: removeUsingPOST_28
2019-03-20 19:40:21 -Generating unique operation named: saveUsingPOST_16
2019-03-20 19:40:21 -Generating unique operation named: updateUsingGET_11
2019-03-20 19:40:21 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 19:40:21 -Generating unique operation named: updateUsingPOST_16
2019-03-20 19:40:21 -Generating unique operation named: updateUsingPUT_11
2019-03-20 19:40:21 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 19:40:21 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 19:40:21 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 19:40:21 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 19:40:21 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 19:40:21 -Generating unique operation named: addUsingGET_16
2019-03-20 19:40:21 -Generating unique operation named: editUsingGET_17
2019-03-20 19:40:21 -Generating unique operation named: listUsingGET_19
2019-03-20 19:40:21 -Generating unique operation named: removeUsingPOST_29
2019-03-20 19:40:21 -Generating unique operation named: removeUsingPOST_30
2019-03-20 19:40:21 -Generating unique operation named: saveUsingPOST_17
2019-03-20 19:40:21 -Generating unique operation named: updateUsingGET_12
2019-03-20 19:40:21 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 19:40:21 -Generating unique operation named: updateUsingPOST_17
2019-03-20 19:40:21 -Generating unique operation named: updateUsingPUT_12
2019-03-20 19:40:21 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 19:40:21 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 19:40:21 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 19:40:21 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 19:40:21 -Generating unique operation named: addUsingGET_17
2019-03-20 19:40:21 -Generating unique operation named: editUsingGET_18
2019-03-20 19:40:21 -Generating unique operation named: listUsingGET_20
2019-03-20 19:40:21 -Generating unique operation named: removeUsingPOST_31
2019-03-20 19:40:21 -Generating unique operation named: removeUsingPOST_32
2019-03-20 19:40:21 -Generating unique operation named: saveUsingPOST_18
2019-03-20 19:40:21 -Generating unique operation named: updateUsingGET_13
2019-03-20 19:40:21 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 19:40:21 -Generating unique operation named: updateUsingPOST_18
2019-03-20 19:40:21 -Generating unique operation named: updateUsingPUT_13
2019-03-20 19:40:21 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 19:40:21 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 19:40:21 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 19:40:21 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 19:40:21 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 19:40:21 -Starting Quartz Scheduler now
2019-03-20 19:40:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 19:40:21 -Starting...
2019-03-20 19:40:21 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 19:40:21 -Started.
2019-03-20 19:40:21 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 19:40:21 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:21)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-20 19:40:21 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-20 19:40:21 -Stopping service [Tomcat]
2019-03-20 19:40:21 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-20 19:40:21 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-20 19:40:21 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-20 19:40:21 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-20 19:40:21 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-20 19:40:21 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Wed Mar 20 19:39:57 CST 2019]; root of context hierarchy
2019-03-20 19:40:21 -Stopping beans in phase 2147483647
2019-03-20 19:40:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 19:40:21 -Stopping...
2019-03-20 19:40:21 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 19:40:21 -Stopped.
2019-03-20 19:40:21 -Unregistering JMX-exposed beans on shutdown
2019-03-20 19:40:21 -Unregistering JMX-exposed beans
2019-03-20 19:40:21 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-20 19:40:21 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-20 19:40:21 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-20 19:40:21 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-20 19:40:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-20 19:40:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-20 19:40:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-20 19:40:21 -Shutting down Quartz Scheduler
2019-03-20 19:50:44 -Starting BootdoApplication on ZJZL-20180906VX with PID 16444 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-20 19:50:44 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-20 19:50:44 -The following profiles are active: dev
2019-03-20 19:50:44 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1de5f0ef: startup date [Wed Mar 20 19:50:44 CST 2019]; root of context hierarchy
2019-03-20 19:50:48 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-20 19:50:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1f6a30ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:50:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$11c35f55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:50:53 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:50:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:50:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:50:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-20 19:50:53 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-20 19:50:53 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:50:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:50:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:50:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-20 19:50:55 -Tomcat initialized with port(s): 8081 (http)
2019-03-20 19:50:55 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-20 19:50:55 -Starting service [Tomcat]
2019-03-20 19:50:55 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-20 19:50:56 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-20 19:50:56 -Initializing Spring embedded WebApplicationContext
2019-03-20 19:50:56 -Root WebApplicationContext: initialization completed in 12179 ms
2019-03-20 19:50:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-20 19:50:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-20 19:50:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-20 19:50:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-20 19:50:58 -Filter xssFilter was not registered (disabled)
2019-03-20 19:50:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-20 19:50:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-20 19:50:58 -Servlet statViewServlet mapped to [/druid/*]
2019-03-20 19:50:58 -Servlet dispatcherServlet mapped to [/]
2019-03-20 19:51:01 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1de5f0ef: startup date [Wed Mar 20 19:50:44 CST 2019]; root of context hierarchy
2019-03-20 19:51:01 -Using default implementation for ThreadExecutor
2019-03-20 19:51:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-20 19:51:01 -Quartz Scheduler v.2.2.1 created.
2019-03-20 19:51:01 -RAMJobStore initialized.
2019-03-20 19:51:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-20 19:51:01 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-20 19:51:01 -Quartz scheduler version: 2.2.1
2019-03-20 19:51:01 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@14c5283
2019-03-20 19:51:02 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-20 19:51:02 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-20 19:51:05 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:51:05 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-20 19:51:05 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-20 19:51:05 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-20 19:51:05 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-20 19:51:05 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-20 19:51:05 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-20 19:51:05 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-20 19:51:05 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-20 19:51:05 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-20 19:51:05 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-20 19:51:05 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-20 19:51:05 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-20 19:51:05 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-20 19:51:05 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-20 19:51:05 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-20 19:51:05 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-20 19:51:05 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-20 19:51:05 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-20 19:51:05 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-20 19:51:05 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:51:05 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-20 19:51:05 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-20 19:51:05 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-20 19:51:05 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-20 19:51:05 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-20 19:51:05 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-20 19:51:05 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-20 19:51:05 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-20 19:51:05 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-20 19:51:05 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-20 19:51:05 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:51:05 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:51:05 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-20 19:51:05 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:51:05 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:51:05 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-20 19:51:05 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-20 19:51:05 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:51:05 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-20 19:51:05 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:51:05 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-20 19:51:05 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-20 19:51:05 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-20 19:51:05 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-03-20 19:51:05 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-20 19:51:05 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-20 19:51:05 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:51:05 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-20 19:51:05 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-20 19:51:05 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-20 19:51:05 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:51:05 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-20 19:51:05 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-20 19:51:05 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:51:05 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:51:05 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-20 19:51:05 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-20 19:51:05 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:51:05 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-20 19:51:05 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-20 19:51:05 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-20 19:51:05 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-20 19:51:05 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-20 19:51:05 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-20 19:51:05 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-20 19:51:05 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-20 19:51:05 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-20 19:51:05 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-20 19:51:05 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-20 19:51:05 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-20 19:51:05 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-20 19:51:05 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:51:05 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-20 19:51:05 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-20 19:51:05 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-20 19:51:05 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-20 19:51:05 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-20 19:51:05 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-20 19:51:05 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-20 19:51:05 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-20 19:51:05 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-20 19:51:05 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-20 19:51:05 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-20 19:51:05 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-20 19:51:05 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-20 19:51:05 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-20 19:51:05 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-20 19:51:05 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-20 19:51:05 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:51:05 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-20 19:51:05 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-20 19:51:05 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-20 19:51:05 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-20 19:51:05 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-20 19:51:05 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-20 19:51:05 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-20 19:51:05 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-20 19:51:05 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-20 19:51:05 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-20 19:51:05 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-20 19:51:05 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-20 19:51:05 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-20 19:51:05 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-20 19:51:05 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-20 19:51:05 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-20 19:51:05 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-20 19:51:05 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:51:05 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:51:05 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-20 19:51:05 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-20 19:51:05 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-20 19:51:05 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-20 19:51:05 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-20 19:51:05 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-20 19:51:05 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:51:05 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-20 19:51:05 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-20 19:51:05 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-20 19:51:05 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-20 19:51:05 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-20 19:51:05 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-20 19:51:05 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:51:05 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-20 19:51:05 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-20 19:51:05 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-20 19:51:05 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-20 19:51:05 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-20 19:51:05 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-20 19:51:05 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-20 19:51:05 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-20 19:51:05 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-20 19:51:06 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-20 19:51:06 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-20 19:51:06 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-20 19:51:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:51:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1de5f0ef: startup date [Wed Mar 20 19:50:44 CST 2019]; root of context hierarchy
2019-03-20 19:51:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:51:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:51:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-20 19:51:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-20 19:51:07 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-20 19:51:10 -Registering beans for JMX exposure on startup
2019-03-20 19:51:10 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-20 19:51:10 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-20 19:51:10 -Starting beans in phase 2147483647
2019-03-20 19:51:10 -Context refreshed
2019-03-20 19:51:10 -Found 1 custom documentation plugin(s)
2019-03-20 19:51:10 -Scanning for api listing references
2019-03-20 19:51:10 -Generating unique operation named: removeUsingPOST_1
2019-03-20 19:51:10 -Generating unique operation named: addUsingGET_1
2019-03-20 19:51:10 -Generating unique operation named: editUsingGET_1
2019-03-20 19:51:10 -Generating unique operation named: listUsingGET_1
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_2
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_3
2019-03-20 19:51:11 -Generating unique operation named: saveUsingPOST_1
2019-03-20 19:51:11 -Generating unique operation named: updateUsingGET_1
2019-03-20 19:51:11 -Generating unique operation named: updateUsingHEAD_1
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPOST_1
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPUT_1
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPATCH_1
2019-03-20 19:51:11 -Generating unique operation named: updateUsingDELETE_1
2019-03-20 19:51:11 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-20 19:51:11 -Generating unique operation named: updateUsingTRACE_1
2019-03-20 19:51:11 -Generating unique operation named: addUsingGET_2
2019-03-20 19:51:11 -Generating unique operation named: editUsingGET_2
2019-03-20 19:51:11 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-20 19:51:11 -Generating unique operation named: listUsingGET_2
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_4
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_5
2019-03-20 19:51:11 -Generating unique operation named: saveUsingPOST_2
2019-03-20 19:51:11 -Generating unique operation named: updateUsingGET_2
2019-03-20 19:51:11 -Generating unique operation named: updateUsingHEAD_2
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPOST_2
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPUT_2
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPATCH_2
2019-03-20 19:51:11 -Generating unique operation named: updateUsingDELETE_2
2019-03-20 19:51:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-20 19:51:11 -Generating unique operation named: updateUsingTRACE_2
2019-03-20 19:51:11 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-20 19:51:11 -Generating unique operation named: addUsingGET_3
2019-03-20 19:51:11 -Generating unique operation named: editUsingGET_3
2019-03-20 19:51:11 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-20 19:51:11 -Generating unique operation named: listUsingGET_3
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_6
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_7
2019-03-20 19:51:11 -Generating unique operation named: saveUsingPOST_3
2019-03-20 19:51:11 -Generating unique operation named: updateUsingGET_3
2019-03-20 19:51:11 -Generating unique operation named: updateUsingHEAD_3
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPOST_3
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPUT_3
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPATCH_3
2019-03-20 19:51:11 -Generating unique operation named: updateUsingDELETE_3
2019-03-20 19:51:11 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-20 19:51:11 -Generating unique operation named: updateUsingTRACE_3
2019-03-20 19:51:11 -Generating unique operation named: addUsingGET_4
2019-03-20 19:51:11 -Generating unique operation named: editUsingGET_4
2019-03-20 19:51:11 -Generating unique operation named: listUsingGET_4
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_8
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_9
2019-03-20 19:51:11 -Generating unique operation named: saveUsingPOST_4
2019-03-20 19:51:11 -Generating unique operation named: updateUsingGET_4
2019-03-20 19:51:11 -Generating unique operation named: updateUsingHEAD_4
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPOST_4
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPUT_4
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPATCH_4
2019-03-20 19:51:11 -Generating unique operation named: updateUsingDELETE_4
2019-03-20 19:51:11 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-20 19:51:11 -Generating unique operation named: updateUsingTRACE_4
2019-03-20 19:51:11 -Generating unique operation named: ElecUsingGET_1
2019-03-20 19:51:11 -Generating unique operation named: addUsingGET_5
2019-03-20 19:51:11 -Generating unique operation named: editUsingGET_5
2019-03-20 19:51:11 -Generating unique operation named: listUsingGET_5
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_10
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_11
2019-03-20 19:51:11 -Generating unique operation named: saveUsingPOST_5
2019-03-20 19:51:11 -Generating unique operation named: updateUsingGET_5
2019-03-20 19:51:11 -Generating unique operation named: updateUsingHEAD_5
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPOST_5
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPUT_5
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPATCH_5
2019-03-20 19:51:11 -Generating unique operation named: updateUsingDELETE_5
2019-03-20 19:51:11 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-20 19:51:11 -Generating unique operation named: updateUsingTRACE_5
2019-03-20 19:51:11 -Generating unique operation named: editUsingGET_6
2019-03-20 19:51:11 -Generating unique operation named: listUsingGET_6
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPOST_6
2019-03-20 19:51:11 -Generating unique operation named: addUsingGET_6
2019-03-20 19:51:11 -Generating unique operation named: editUsingGET_7
2019-03-20 19:51:11 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-20 19:51:11 -Generating unique operation named: listUsingGET_7
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_12
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_13
2019-03-20 19:51:11 -Generating unique operation named: saveUsingPOST_6
2019-03-20 19:51:11 -Generating unique operation named: updateUsingGET_6
2019-03-20 19:51:11 -Generating unique operation named: updateUsingHEAD_6
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPOST_7
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPUT_6
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPATCH_6
2019-03-20 19:51:11 -Generating unique operation named: updateUsingDELETE_6
2019-03-20 19:51:11 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-20 19:51:11 -Generating unique operation named: updateUsingTRACE_6
2019-03-20 19:51:11 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-20 19:51:11 -Generating unique operation named: addUsingGET_7
2019-03-20 19:51:11 -Generating unique operation named: editUsingGET_8
2019-03-20 19:51:11 -Generating unique operation named: listUsingGET_8
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_14
2019-03-20 19:51:11 -Generating unique operation named: removeUsingPOST_15
2019-03-20 19:51:11 -Generating unique operation named: saveUsingPOST_7
2019-03-20 19:51:11 -Generating unique operation named: updateUsingGET_7
2019-03-20 19:51:11 -Generating unique operation named: updateUsingHEAD_7
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPOST_8
2019-03-20 19:51:11 -Generating unique operation named: updateUsingPUT_7
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPATCH_7
2019-03-20 19:51:12 -Generating unique operation named: updateUsingDELETE_7
2019-03-20 19:51:12 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-20 19:51:12 -Generating unique operation named: updateUsingTRACE_7
2019-03-20 19:51:12 -Generating unique operation named: addUsingGET_8
2019-03-20 19:51:12 -Generating unique operation named: editUsingGET_9
2019-03-20 19:51:12 -Generating unique operation named: listUsingGET_9
2019-03-20 19:51:12 -Generating unique operation named: removeUsingPOST_16
2019-03-20 19:51:12 -Generating unique operation named: removeUsingPOST_17
2019-03-20 19:51:12 -Generating unique operation named: saveUsingPOST_8
2019-03-20 19:51:12 -Generating unique operation named: updateUsingGET_8
2019-03-20 19:51:12 -Generating unique operation named: updateUsingHEAD_8
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPOST_9
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPUT_8
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPATCH_8
2019-03-20 19:51:12 -Generating unique operation named: updateUsingDELETE_8
2019-03-20 19:51:12 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-20 19:51:12 -Generating unique operation named: updateUsingTRACE_8
2019-03-20 19:51:12 -Generating unique operation named: addUsingGET_9
2019-03-20 19:51:12 -Generating unique operation named: editUsingGET_10
2019-03-20 19:51:12 -Generating unique operation named: infoUsingGET_1
2019-03-20 19:51:12 -Generating unique operation named: infoUsingHEAD_1
2019-03-20 19:51:12 -Generating unique operation named: infoUsingPOST_1
2019-03-20 19:51:12 -Generating unique operation named: infoUsingPUT_1
2019-03-20 19:51:12 -Generating unique operation named: infoUsingPATCH_1
2019-03-20 19:51:12 -Generating unique operation named: infoUsingDELETE_1
2019-03-20 19:51:12 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-20 19:51:12 -Generating unique operation named: infoUsingTRACE_1
2019-03-20 19:51:12 -Generating unique operation named: listUsingGET_10
2019-03-20 19:51:12 -Generating unique operation named: removeUsingPOST_18
2019-03-20 19:51:12 -Generating unique operation named: removeUsingPOST_19
2019-03-20 19:51:12 -Generating unique operation named: saveUsingPOST_9
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPOST_10
2019-03-20 19:51:12 -Generating unique operation named: listUsingGET_11
2019-03-20 19:51:12 -Generating unique operation named: removeUsingPOST_20
2019-03-20 19:51:12 -Generating unique operation named: welcomeUsingGET_1
2019-03-20 19:51:12 -Generating unique operation named: addUsingGET_10
2019-03-20 19:51:12 -Generating unique operation named: editUsingGET_11
2019-03-20 19:51:12 -Generating unique operation named: listUsingGET_12
2019-03-20 19:51:12 -Generating unique operation named: removeUsingPOST_21
2019-03-20 19:51:12 -Generating unique operation named: saveUsingPOST_10
2019-03-20 19:51:12 -Generating unique operation named: treeUsingGET_1
2019-03-20 19:51:12 -Generating unique operation named: treeUsingGET_2
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPOST_11
2019-03-20 19:51:12 -Generating unique operation named: addUsingGET_11
2019-03-20 19:51:12 -Generating unique operation named: editUsingGET_12
2019-03-20 19:51:12 -Generating unique operation named: listUsingGET_13
2019-03-20 19:51:12 -Generating unique operation named: removeUsingPOST_22
2019-03-20 19:51:12 -Generating unique operation named: removeUsingPOST_23
2019-03-20 19:51:12 -Generating unique operation named: saveUsingPOST_11
2019-03-20 19:51:12 -Generating unique operation named: updateUsingGET_9
2019-03-20 19:51:12 -Generating unique operation named: updateUsingHEAD_9
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPOST_12
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPUT_9
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPATCH_9
2019-03-20 19:51:12 -Generating unique operation named: updateUsingDELETE_9
2019-03-20 19:51:12 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-20 19:51:12 -Generating unique operation named: updateUsingTRACE_9
2019-03-20 19:51:12 -Generating unique operation named: addUsingGET_12
2019-03-20 19:51:12 -Generating unique operation named: editUsingGET_13
2019-03-20 19:51:12 -Generating unique operation named: listUsingGET_14
2019-03-20 19:51:12 -Generating unique operation named: removeUsingPOST_24
2019-03-20 19:51:12 -Generating unique operation named: removeUsingPOST_25
2019-03-20 19:51:12 -Generating unique operation named: saveUsingPOST_12
2019-03-20 19:51:12 -Generating unique operation named: updateUsingGET_10
2019-03-20 19:51:12 -Generating unique operation named: updateUsingHEAD_10
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPOST_13
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPUT_10
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPATCH_10
2019-03-20 19:51:12 -Generating unique operation named: updateUsingDELETE_10
2019-03-20 19:51:12 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-20 19:51:12 -Generating unique operation named: updateUsingTRACE_10
2019-03-20 19:51:12 -Generating unique operation named: addUsingGET_13
2019-03-20 19:51:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-20 19:51:12 -Generating unique operation named: editUsingGET_14
2019-03-20 19:51:12 -Generating unique operation named: listUsingGET_15
2019-03-20 19:51:12 -Generating unique operation named: saveUsingPOST_13
2019-03-20 19:51:12 -Generating unique operation named: saveUsingPOST_14
2019-03-20 19:51:12 -Generating unique operation named: updateUsingPOST_14
2019-03-20 19:51:12 -Generating unique operation named: listUsingGET_16
2019-03-20 19:51:12 -Generating unique operation named: listUsingHEAD_1
2019-03-20 19:51:12 -Generating unique operation named: listUsingPOST_1
2019-03-20 19:51:12 -Generating unique operation named: listUsingPUT_1
2019-03-20 19:51:12 -Generating unique operation named: listUsingPATCH_1
2019-03-20 19:51:12 -Generating unique operation named: listUsingDELETE_1
2019-03-20 19:51:12 -Generating unique operation named: listUsingOPTIONS_1
2019-03-20 19:51:12 -Generating unique operation named: listUsingTRACE_1
2019-03-20 19:51:13 -Generating unique operation named: addUsingGET_14
2019-03-20 19:51:13 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-20 19:51:13 -Generating unique operation named: editUsingGET_15
2019-03-20 19:51:13 -Generating unique operation named: listUsingGET_17
2019-03-20 19:51:13 -Generating unique operation named: removeUsingPOST_26
2019-03-20 19:51:13 -Generating unique operation named: saveUsingPOST_15
2019-03-20 19:51:13 -Generating unique operation named: treeUsingGET_3
2019-03-20 19:51:13 -Generating unique operation named: treeViewUsingGET_1
2019-03-20 19:51:13 -Generating unique operation named: updateUsingPOST_15
2019-03-20 19:51:13 -Generating unique operation named: addUsingGET_15
2019-03-20 19:51:13 -Generating unique operation named: editUsingGET_16
2019-03-20 19:51:13 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-20 19:51:13 -Generating unique operation named: listUsingGET_18
2019-03-20 19:51:13 -Generating unique operation named: removeUsingPOST_27
2019-03-20 19:51:13 -Generating unique operation named: removeUsingPOST_28
2019-03-20 19:51:13 -Generating unique operation named: saveUsingPOST_16
2019-03-20 19:51:13 -Generating unique operation named: updateUsingGET_11
2019-03-20 19:51:13 -Generating unique operation named: updateUsingHEAD_11
2019-03-20 19:51:13 -Generating unique operation named: updateUsingPOST_16
2019-03-20 19:51:13 -Generating unique operation named: updateUsingPUT_11
2019-03-20 19:51:13 -Generating unique operation named: updateUsingPATCH_11
2019-03-20 19:51:13 -Generating unique operation named: updateUsingDELETE_11
2019-03-20 19:51:13 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-20 19:51:13 -Generating unique operation named: updateUsingTRACE_11
2019-03-20 19:51:13 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-20 19:51:13 -Generating unique operation named: addUsingGET_16
2019-03-20 19:51:13 -Generating unique operation named: editUsingGET_17
2019-03-20 19:51:13 -Generating unique operation named: listUsingGET_19
2019-03-20 19:51:13 -Generating unique operation named: removeUsingPOST_29
2019-03-20 19:51:13 -Generating unique operation named: removeUsingPOST_30
2019-03-20 19:51:13 -Generating unique operation named: saveUsingPOST_17
2019-03-20 19:51:13 -Generating unique operation named: updateUsingGET_12
2019-03-20 19:51:13 -Generating unique operation named: updateUsingHEAD_12
2019-03-20 19:51:13 -Generating unique operation named: updateUsingPOST_17
2019-03-20 19:51:13 -Generating unique operation named: updateUsingPUT_12
2019-03-20 19:51:13 -Generating unique operation named: updateUsingPATCH_12
2019-03-20 19:51:13 -Generating unique operation named: updateUsingDELETE_12
2019-03-20 19:51:13 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-20 19:51:13 -Generating unique operation named: updateUsingTRACE_12
2019-03-20 19:51:13 -Generating unique operation named: addUsingGET_17
2019-03-20 19:51:13 -Generating unique operation named: editUsingGET_18
2019-03-20 19:51:13 -Generating unique operation named: listUsingGET_20
2019-03-20 19:51:13 -Generating unique operation named: removeUsingPOST_31
2019-03-20 19:51:13 -Generating unique operation named: removeUsingPOST_32
2019-03-20 19:51:13 -Generating unique operation named: saveUsingPOST_18
2019-03-20 19:51:13 -Generating unique operation named: updateUsingGET_13
2019-03-20 19:51:13 -Generating unique operation named: updateUsingHEAD_13
2019-03-20 19:51:13 -Generating unique operation named: updateUsingPOST_18
2019-03-20 19:51:13 -Generating unique operation named: updateUsingPUT_13
2019-03-20 19:51:13 -Generating unique operation named: updateUsingPATCH_13
2019-03-20 19:51:13 -Generating unique operation named: updateUsingDELETE_13
2019-03-20 19:51:13 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-20 19:51:13 -Generating unique operation named: updateUsingTRACE_13
2019-03-20 19:51:13 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-20 19:51:13 -Starting Quartz Scheduler now
2019-03-20 19:51:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-20 19:51:13 -Starting...
2019-03-20 19:51:13 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-20 19:51:13 -Started.
2019-03-20 19:51:13 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-20 19:51:13 -Using a shared selector for servlet write/read
2019-03-20 19:51:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-20 19:51:13 -Started BootdoApplication in 31.338 seconds (JVM running for 33.227)
2019-03-20 19:51:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-20 19:51:14 -==> Parameters: 
2019-03-20 19:51:14 -<==      Total: 1
2019-03-20 19:51:45 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-20 19:51:45 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-20 19:51:45 -FrameworkServlet 'dispatcherServlet': initialization completed in 73 ms
2019-03-20 19:51:45 -Enabling session validation scheduler...
2019-03-20 19:51:45 -请求地址 : http://localhost:8081/login;JSESSIONID=35fadd14-e008-4074-996c-a3b057e70143
2019-03-20 19:51:45 -HTTP METHOD : GET
2019-03-20 19:51:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 19:51:45 -参数 : [{}]
2019-03-20 19:51:45 -耗时 : 3
2019-03-20 19:51:45 -返回值 : login
2019-03-20 19:51:47 -请求地址 : http://localhost:8081/getVerify
2019-03-20 19:51:47 -HTTP METHOD : GET
2019-03-20 19:51:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-20 19:51:47 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@276e00ea, org.apache.shiro.web.servlet.ShiroHttpServletResponse@62cce3b0]
2019-03-20 19:51:51 -1553
2019-03-20 19:51:51 -耗时 : 4276
2019-03-20 19:51:51 -返回值 : null
2019-03-20 19:51:51 -请求地址 : http://localhost:8081/login
2019-03-20 19:51:51 -HTTP METHOD : GET
2019-03-20 19:51:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-20 19:51:51 -参数 : [{}]
2019-03-20 19:51:51 -耗时 : 1
2019-03-20 19:51:51 -返回值 : login
2019-03-20 19:51:56 -请求地址 : http://localhost:8081/login
2019-03-20 19:51:56 -HTTP METHOD : POST
2019-03-20 19:51:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-20 19:51:56 -参数 : [admin, 111111, 1553, org.apache.shiro.web.servlet.ShiroHttpServletRequest@63d4d89b]
2019-03-20 19:51:56 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-20 19:51:56 -==> Parameters: admin(String)
2019-03-20 19:51:56 -<==      Total: 1
2019-03-20 19:51:56 -耗时 : 195
2019-03-20 19:51:56 -返回值 : {msg=操作成功, code=0}
2019-03-20 19:51:56 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-20 19:51:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 19:51:56 -==> Parameters: 1(Long), admin(String), 登录(String), 195(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-20 19:51:56.945(Timestamp)
2019-03-20 19:51:57 -请求地址 : http://localhost:8081/index
2019-03-20 19:51:57 -HTTP METHOD : GET
2019-03-20 19:51:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 19:51:57 -参数 : [{}]
2019-03-20 19:51:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 19:51:57 -==> Parameters: 1(Long)
2019-03-20 19:51:57 -<==    Updates: 1
2019-03-20 19:51:57 -<==      Total: 46
2019-03-20 19:51:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 19:51:57 -==> Parameters: 138(Long)
2019-03-20 19:51:57 -<==      Total: 1
2019-03-20 19:51:57 -耗时 : 478
2019-03-20 19:51:57 -返回值 : index_v1
2019-03-20 19:51:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 19:51:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 478(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 19:51:57.554(Timestamp)
2019-03-20 19:51:57 -请求地址 : http://localhost:8081/main
2019-03-20 19:51:57 -HTTP METHOD : GET
2019-03-20 19:51:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 19:51:57 -参数 : []
2019-03-20 19:51:57 -耗时 : 0
2019-03-20 19:51:57 -返回值 : main
2019-03-20 19:51:57 -<==    Updates: 1
2019-03-20 19:51:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 19:51:58 -HTTP METHOD : GET
2019-03-20 19:51:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 19:51:58 -参数 : []
2019-03-20 19:51:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 19:51:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 19:51:58 -请求地址 : http://localhost:8081/main
2019-03-20 19:51:58 -HTTP METHOD : GET
2019-03-20 19:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 19:51:58 -参数 : []
2019-03-20 19:51:58 -耗时 : 0
2019-03-20 19:51:58 -返回值 : main
2019-03-20 19:51:58 -<==      Total: 0
2019-03-20 19:51:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 19:51:58 -==> Parameters: 1(Long), 0(String)
2019-03-20 19:51:58 -<==      Total: 1
2019-03-20 19:51:58 -耗时 : 123
2019-03-20 19:51:58 -返回值 : com.bootdo.common.utils.PageUtils@5e7860d5
2019-03-20 19:52:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-03-20 19:52:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 19:52:15 -==> Parameters: 1(Long)
2019-03-20 19:52:15 -<==      Total: 90
2019-03-20 19:52:15 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 19:52:15 -HTTP METHOD : GET
2019-03-20 19:52:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 19:52:15 -参数 : []
2019-03-20 19:52:15 -耗时 : 0
2019-03-20 19:52:15 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 19:52:16 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:52:16 -HTTP METHOD : GET
2019-03-20 19:52:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:52:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 19:52:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:52:16 -HTTP METHOD : GET
2019-03-20 19:52:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:52:16 -参数 : [userType]
2019-03-20 19:52:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 19:52:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 19:52:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:52:16 -==> Parameters: userType(String)
2019-03-20 19:52:16 -<==      Total: 2
2019-03-20 19:52:16 -耗时 : 169
2019-03-20 19:52:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:52:16 -<==      Total: 4
2019-03-20 19:52:16 -==>  Preparing: select count(*) from elec_log 
2019-03-20 19:52:16 -==> Parameters: 
2019-03-20 19:52:16 -<==      Total: 1
2019-03-20 19:52:16 -耗时 : 248
2019-03-20 19:52:16 -返回值 : com.bootdo.common.utils.PageUtils@4d0514b0
2019-03-20 19:52:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:52:25 -HTTP METHOD : GET
2019-03-20 19:52:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:52:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-20 19:52:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-20 19:52:25 -==> Parameters: 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-20 19:52:25 -<==      Total: 1
2019-03-20 19:52:25 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-20 19:52:25 -==> Parameters: 2019-03-10(String)
2019-03-20 19:52:25 -<==      Total: 1
2019-03-20 19:52:25 -耗时 : 13
2019-03-20 19:52:25 -返回值 : com.bootdo.common.utils.PageUtils@190ee870
2019-03-20 19:52:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-20 19:52:31 -HTTP METHOD : GET
2019-03-20 19:52:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-20 19:52:31 -参数 : []
2019-03-20 19:52:31 -耗时 : 1
2019-03-20 19:52:31 -返回值 : /moneyLog/heatLog/heatLog
2019-03-20 19:52:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:52:31 -HTTP METHOD : GET
2019-03-20 19:52:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:52:31 -参数 : [userType]
2019-03-20 19:52:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:52:31 -==> Parameters: userType(String)
2019-03-20 19:52:31 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-20 19:52:31 -HTTP METHOD : GET
2019-03-20 19:52:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-20 19:52:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-20 19:52:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-20 19:52:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 19:52:31 -<==      Total: 2
2019-03-20 19:52:31 -耗时 : 108
2019-03-20 19:52:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:52:31 -<==      Total: 3
2019-03-20 19:52:31 -==>  Preparing: select count(*) from heat_log 
2019-03-20 19:52:31 -==> Parameters: 
2019-03-20 19:52:31 -<==      Total: 1
2019-03-20 19:52:31 -耗时 : 225
2019-03-20 19:52:31 -返回值 : com.bootdo.common.utils.PageUtils@227b3378
2019-03-20 19:52:32 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 19:52:32 -HTTP METHOD : GET
2019-03-20 19:52:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 19:52:32 -参数 : []
2019-03-20 19:52:32 -耗时 : 1
2019-03-20 19:52:32 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 19:52:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:52:32 -HTTP METHOD : GET
2019-03-20 19:52:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:52:32 -参数 : [userType]
2019-03-20 19:52:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:52:32 -==> Parameters: userType(String)
2019-03-20 19:52:32 -<==      Total: 2
2019-03-20 19:52:32 -耗时 : 10
2019-03-20 19:52:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:52:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 19:52:33 -HTTP METHOD : GET
2019-03-20 19:52:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 19:52:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 19:52:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 19:52:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 19:52:33 -<==      Total: 4
2019-03-20 19:52:33 -==>  Preparing: select count(*) from elec_log 
2019-03-20 19:52:33 -==> Parameters: 
2019-03-20 19:52:33 -<==      Total: 1
2019-03-20 19:52:33 -耗时 : 187
2019-03-20 19:52:33 -返回值 : com.bootdo.common.utils.PageUtils@72e04576
2019-03-20 19:52:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-20 19:52:36 -HTTP METHOD : GET
2019-03-20 19:52:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-20 19:52:36 -参数 : []
2019-03-20 19:52:36 -耗时 : 1
2019-03-20 19:52:36 -返回值 : moneyLog/elecLog/add
2019-03-20 19:52:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:52:36 -HTTP METHOD : GET
2019-03-20 19:52:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:52:36 -参数 : [userType]
2019-03-20 19:52:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:52:36 -==> Parameters: userType(String)
2019-03-20 19:52:36 -<==      Total: 2
2019-03-20 19:52:36 -耗时 : 8
2019-03-20 19:52:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:52:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 19:52:37 -HTTP METHOD : GET
2019-03-20 19:52:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 19:52:37 -参数 : []
2019-03-20 19:52:37 -耗时 : 1
2019-03-20 19:52:37 -返回值 : system/dept/deptTree
2019-03-20 19:52:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 19:52:38 -HTTP METHOD : GET
2019-03-20 19:52:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 19:52:38 -参数 : []
2019-03-20 19:52:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 19:52:38 -==> Parameters: 
2019-03-20 19:52:38 -<==      Total: 3
2019-03-20 19:52:38 -耗时 : 52
2019-03-20 19:52:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 19:52:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 19:52:42 -HTTP METHOD : GET
2019-03-20 19:52:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 19:52:42 -参数 : []
2019-03-20 19:52:42 -耗时 : 1
2019-03-20 19:52:42 -返回值 : system/dept/deptTree
2019-03-20 19:52:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 19:52:42 -HTTP METHOD : GET
2019-03-20 19:52:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 19:52:42 -参数 : []
2019-03-20 19:52:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 19:52:42 -==> Parameters: 
2019-03-20 19:52:42 -<==      Total: 3
2019-03-20 19:52:42 -耗时 : 7
2019-03-20 19:52:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 19:52:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 19:52:45 -HTTP METHOD : GET
2019-03-20 19:52:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 19:52:45 -参数 : []
2019-03-20 19:52:45 -耗时 : 0
2019-03-20 19:52:45 -返回值 : system/dept/deptTree
2019-03-20 19:52:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 19:52:45 -HTTP METHOD : GET
2019-03-20 19:52:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 19:52:45 -参数 : []
2019-03-20 19:52:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 19:52:45 -==> Parameters: 
2019-03-20 19:52:45 -<==      Total: 3
2019-03-20 19:52:45 -耗时 : 5
2019-03-20 19:52:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 19:57:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-20 19:57:14 -HTTP METHOD : GET
2019-03-20 19:57:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-20 19:57:14 -参数 : []
2019-03-20 19:57:14 -耗时 : 0
2019-03-20 19:57:14 -返回值 : /moneyLog/heatLog/heatLog
2019-03-20 19:57:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 19:57:14 -HTTP METHOD : GET
2019-03-20 19:57:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 19:57:14 -参数 : [userType]
2019-03-20 19:57:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 19:57:14 -==> Parameters: userType(String)
2019-03-20 19:57:14 -<==      Total: 2
2019-03-20 19:57:14 -耗时 : 6
2019-03-20 19:57:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 19:57:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-20 19:57:14 -HTTP METHOD : GET
2019-03-20 19:57:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-20 19:57:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-20 19:57:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-20 19:57:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 19:57:14 -<==      Total: 3
2019-03-20 19:57:14 -==>  Preparing: select count(*) from heat_log 
2019-03-20 19:57:14 -==> Parameters: 
2019-03-20 19:57:14 -<==      Total: 1
2019-03-20 19:57:14 -耗时 : 9
2019-03-20 19:57:14 -返回值 : com.bootdo.common.utils.PageUtils@330c09aa
2019-03-20 19:57:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-20 19:57:15 -HTTP METHOD : GET
2019-03-20 19:57:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-20 19:57:15 -参数 : []
2019-03-20 19:57:15 -耗时 : 1
2019-03-20 19:57:15 -返回值 : moneyLog/heatLog/add
2019-03-20 20:00:00 -请求地址 : http://localhost:8081/index
2019-03-20 20:00:00 -HTTP METHOD : GET
2019-03-20 20:00:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:00:00 -参数 : [{}]
2019-03-20 20:00:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:00:00 -==> Parameters: 1(Long)
2019-03-20 20:00:00 -<==      Total: 46
2019-03-20 20:00:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:00:00 -==> Parameters: 138(Long)
2019-03-20 20:00:00 -<==      Total: 1
2019-03-20 20:00:00 -耗时 : 222
2019-03-20 20:00:00 -返回值 : index_v1
2019-03-20 20:00:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:00:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 222(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:00:00.957(Timestamp)
2019-03-20 20:00:01 -<==    Updates: 1
2019-03-20 20:00:01 -请求地址 : http://localhost:8081/main
2019-03-20 20:00:01 -HTTP METHOD : GET
2019-03-20 20:00:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:00:01 -参数 : []
2019-03-20 20:00:01 -耗时 : 1
2019-03-20 20:00:01 -返回值 : main
2019-03-20 20:00:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:00:01 -HTTP METHOD : GET
2019-03-20 20:00:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:00:01 -参数 : []
2019-03-20 20:00:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:00:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:00:01 -<==      Total: 0
2019-03-20 20:00:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:00:01 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:00:01 -<==      Total: 1
2019-03-20 20:00:01 -耗时 : 18
2019-03-20 20:00:01 -返回值 : com.bootdo.common.utils.PageUtils@1f4f788b
2019-03-20 20:00:01 -请求地址 : http://localhost:8081/main
2019-03-20 20:00:01 -HTTP METHOD : GET
2019-03-20 20:00:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:00:01 -参数 : []
2019-03-20 20:00:01 -耗时 : 0
2019-03-20 20:00:01 -返回值 : main
2019-03-20 20:00:03 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 20:00:03 -HTTP METHOD : GET
2019-03-20 20:00:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 20:00:03 -参数 : []
2019-03-20 20:00:03 -耗时 : 1
2019-03-20 20:00:03 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 20:00:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:00:03 -HTTP METHOD : GET
2019-03-20 20:00:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:00:03 -参数 : [userType]
2019-03-20 20:00:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:00:03 -==> Parameters: userType(String)
2019-03-20 20:00:03 -<==      Total: 2
2019-03-20 20:00:03 -耗时 : 6
2019-03-20 20:00:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:00:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 20:00:03 -HTTP METHOD : GET
2019-03-20 20:00:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 20:00:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 20:00:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 20:00:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:00:03 -<==      Total: 4
2019-03-20 20:00:03 -==>  Preparing: select count(*) from elec_log 
2019-03-20 20:00:03 -==> Parameters: 
2019-03-20 20:00:03 -<==      Total: 1
2019-03-20 20:00:03 -耗时 : 10
2019-03-20 20:00:03 -返回值 : com.bootdo.common.utils.PageUtils@250884af
2019-03-20 20:00:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-20 20:00:05 -HTTP METHOD : GET
2019-03-20 20:00:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-20 20:00:05 -参数 : []
2019-03-20 20:00:05 -耗时 : 1
2019-03-20 20:00:05 -返回值 : moneyLog/elecLog/add
2019-03-20 20:00:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:00:05 -HTTP METHOD : GET
2019-03-20 20:00:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:00:05 -参数 : [userType]
2019-03-20 20:00:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:00:05 -==> Parameters: userType(String)
2019-03-20 20:00:05 -<==      Total: 2
2019-03-20 20:00:05 -耗时 : 11
2019-03-20 20:00:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:01:20 -请求地址 : http://localhost:8081/index
2019-03-20 20:01:20 -HTTP METHOD : GET
2019-03-20 20:01:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:01:20 -参数 : [{}]
2019-03-20 20:01:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:01:20 -==> Parameters: 1(Long)
2019-03-20 20:01:20 -<==      Total: 46
2019-03-20 20:01:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:01:20 -==> Parameters: 138(Long)
2019-03-20 20:01:20 -<==      Total: 1
2019-03-20 20:01:20 -耗时 : 38
2019-03-20 20:01:20 -返回值 : index_v1
2019-03-20 20:01:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:01:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:01:20.748(Timestamp)
2019-03-20 20:01:20 -<==    Updates: 1
2019-03-20 20:01:21 -请求地址 : http://localhost:8081/main
2019-03-20 20:01:21 -HTTP METHOD : GET
2019-03-20 20:01:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:01:21 -参数 : []
2019-03-20 20:01:21 -耗时 : 4
2019-03-20 20:01:21 -返回值 : main
2019-03-20 20:01:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:01:21 -HTTP METHOD : GET
2019-03-20 20:01:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:01:21 -参数 : []
2019-03-20 20:01:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:01:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:01:21 -<==      Total: 0
2019-03-20 20:01:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:01:21 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:01:21 -<==      Total: 1
2019-03-20 20:01:21 -耗时 : 10
2019-03-20 20:01:21 -返回值 : com.bootdo.common.utils.PageUtils@29bb3238
2019-03-20 20:01:21 -请求地址 : http://localhost:8081/main
2019-03-20 20:01:21 -HTTP METHOD : GET
2019-03-20 20:01:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:01:21 -参数 : []
2019-03-20 20:01:21 -耗时 : 1
2019-03-20 20:01:21 -返回值 : main
2019-03-20 20:01:22 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 20:01:22 -HTTP METHOD : GET
2019-03-20 20:01:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 20:01:22 -参数 : []
2019-03-20 20:01:22 -耗时 : 0
2019-03-20 20:01:22 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 20:01:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:01:23 -HTTP METHOD : GET
2019-03-20 20:01:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:01:23 -参数 : [userType]
2019-03-20 20:01:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:01:23 -==> Parameters: userType(String)
2019-03-20 20:01:23 -<==      Total: 2
2019-03-20 20:01:23 -耗时 : 9
2019-03-20 20:01:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:01:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 20:01:23 -HTTP METHOD : GET
2019-03-20 20:01:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 20:01:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 20:01:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 20:01:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:01:23 -<==      Total: 4
2019-03-20 20:01:23 -==>  Preparing: select count(*) from elec_log 
2019-03-20 20:01:23 -==> Parameters: 
2019-03-20 20:01:23 -<==      Total: 1
2019-03-20 20:01:23 -耗时 : 16
2019-03-20 20:01:23 -返回值 : com.bootdo.common.utils.PageUtils@7f8c6252
2019-03-20 20:01:24 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-20 20:01:24 -HTTP METHOD : GET
2019-03-20 20:01:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-20 20:01:24 -参数 : []
2019-03-20 20:01:24 -耗时 : 1
2019-03-20 20:01:24 -返回值 : /moneyList/moneyList
2019-03-20 20:01:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-20 20:01:29 -HTTP METHOD : GET
2019-03-20 20:01:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-20 20:01:29 -参数 : []
2019-03-20 20:01:29 -耗时 : 0
2019-03-20 20:01:29 -返回值 : moneyLog/elecLog/add
2019-03-20 20:01:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:01:29 -HTTP METHOD : GET
2019-03-20 20:01:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:01:29 -参数 : [userType]
2019-03-20 20:01:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:01:29 -==> Parameters: userType(String)
2019-03-20 20:01:29 -<==      Total: 2
2019-03-20 20:01:29 -耗时 : 6
2019-03-20 20:01:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:02:35 -请求地址 : http://localhost:8081/index
2019-03-20 20:02:35 -HTTP METHOD : GET
2019-03-20 20:02:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:02:35 -参数 : [{}]
2019-03-20 20:02:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:02:35 -==> Parameters: 1(Long)
2019-03-20 20:02:35 -<==      Total: 46
2019-03-20 20:02:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:02:35 -==> Parameters: 138(Long)
2019-03-20 20:02:35 -<==      Total: 1
2019-03-20 20:02:35 -耗时 : 32
2019-03-20 20:02:35 -返回值 : index_v1
2019-03-20 20:02:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:02:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:02:35.742(Timestamp)
2019-03-20 20:02:35 -<==    Updates: 1
2019-03-20 20:02:35 -请求地址 : http://localhost:8081/main
2019-03-20 20:02:35 -HTTP METHOD : GET
2019-03-20 20:02:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:02:35 -参数 : []
2019-03-20 20:02:35 -耗时 : 0
2019-03-20 20:02:35 -返回值 : main
2019-03-20 20:02:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:02:36 -HTTP METHOD : GET
2019-03-20 20:02:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:02:36 -参数 : []
2019-03-20 20:02:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:02:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:02:36 -<==      Total: 0
2019-03-20 20:02:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:02:36 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:02:36 -<==      Total: 1
2019-03-20 20:02:36 -耗时 : 7
2019-03-20 20:02:36 -返回值 : com.bootdo.common.utils.PageUtils@f352e20
2019-03-20 20:02:36 -请求地址 : http://localhost:8081/main
2019-03-20 20:02:36 -HTTP METHOD : GET
2019-03-20 20:02:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:02:36 -参数 : []
2019-03-20 20:02:36 -耗时 : 1
2019-03-20 20:02:36 -返回值 : main
2019-03-20 20:03:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 20:03:29 -==> Parameters: 1(Long)
2019-03-20 20:03:29 -<==      Total: 90
2019-03-20 20:03:29 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 20:03:29 -HTTP METHOD : GET
2019-03-20 20:03:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 20:03:29 -参数 : []
2019-03-20 20:03:29 -耗时 : 0
2019-03-20 20:03:29 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 20:03:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:03:30 -HTTP METHOD : GET
2019-03-20 20:03:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:03:30 -参数 : [userType]
2019-03-20 20:03:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:03:30 -==> Parameters: userType(String)
2019-03-20 20:03:30 -<==      Total: 2
2019-03-20 20:03:30 -耗时 : 6
2019-03-20 20:03:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:03:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 20:03:30 -HTTP METHOD : GET
2019-03-20 20:03:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 20:03:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 20:03:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 20:03:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:03:30 -<==      Total: 4
2019-03-20 20:03:30 -==>  Preparing: select count(*) from elec_log 
2019-03-20 20:03:30 -==> Parameters: 
2019-03-20 20:03:30 -<==      Total: 1
2019-03-20 20:03:30 -耗时 : 8
2019-03-20 20:03:30 -返回值 : com.bootdo.common.utils.PageUtils@3c28e001
2019-03-20 20:03:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-20 20:03:32 -HTTP METHOD : GET
2019-03-20 20:03:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-20 20:03:32 -参数 : []
2019-03-20 20:03:32 -耗时 : 0
2019-03-20 20:03:32 -返回值 : moneyLog/elecLog/add
2019-03-20 20:03:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:03:32 -HTTP METHOD : GET
2019-03-20 20:03:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:03:32 -参数 : [userType]
2019-03-20 20:03:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:03:32 -==> Parameters: userType(String)
2019-03-20 20:03:32 -<==      Total: 2
2019-03-20 20:03:32 -耗时 : 5
2019-03-20 20:03:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:04:44 -请求地址 : http://localhost:8081/index
2019-03-20 20:04:44 -HTTP METHOD : GET
2019-03-20 20:04:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:04:44 -参数 : [{}]
2019-03-20 20:04:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:04:44 -==> Parameters: 1(Long)
2019-03-20 20:04:44 -<==      Total: 46
2019-03-20 20:04:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:04:44 -==> Parameters: 138(Long)
2019-03-20 20:04:44 -<==      Total: 1
2019-03-20 20:04:44 -耗时 : 21
2019-03-20 20:04:44 -返回值 : index_v1
2019-03-20 20:04:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:04:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:04:44.96(Timestamp)
2019-03-20 20:04:45 -<==    Updates: 1
2019-03-20 20:04:45 -请求地址 : http://localhost:8081/main
2019-03-20 20:04:45 -HTTP METHOD : GET
2019-03-20 20:04:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:04:45 -参数 : []
2019-03-20 20:04:45 -耗时 : 2
2019-03-20 20:04:45 -返回值 : main
2019-03-20 20:04:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:04:45 -HTTP METHOD : GET
2019-03-20 20:04:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:04:45 -参数 : []
2019-03-20 20:04:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:04:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:04:45 -<==      Total: 0
2019-03-20 20:04:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:04:45 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:04:45 -<==      Total: 1
2019-03-20 20:04:45 -耗时 : 11
2019-03-20 20:04:45 -返回值 : com.bootdo.common.utils.PageUtils@67005cf3
2019-03-20 20:04:46 -请求地址 : http://localhost:8081/main
2019-03-20 20:04:46 -HTTP METHOD : GET
2019-03-20 20:04:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:04:46 -参数 : []
2019-03-20 20:04:46 -耗时 : 0
2019-03-20 20:04:46 -返回值 : main
2019-03-20 20:04:48 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 20:04:48 -HTTP METHOD : GET
2019-03-20 20:04:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 20:04:48 -参数 : []
2019-03-20 20:04:48 -耗时 : 1
2019-03-20 20:04:48 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 20:04:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:04:48 -HTTP METHOD : GET
2019-03-20 20:04:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:04:48 -参数 : [userType]
2019-03-20 20:04:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:04:48 -==> Parameters: userType(String)
2019-03-20 20:04:48 -<==      Total: 2
2019-03-20 20:04:48 -耗时 : 13
2019-03-20 20:04:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:04:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 20:04:48 -HTTP METHOD : GET
2019-03-20 20:04:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 20:04:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 20:04:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 20:04:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:04:48 -<==      Total: 4
2019-03-20 20:04:48 -==>  Preparing: select count(*) from elec_log 
2019-03-20 20:04:48 -==> Parameters: 
2019-03-20 20:04:48 -<==      Total: 1
2019-03-20 20:04:48 -耗时 : 9
2019-03-20 20:04:48 -返回值 : com.bootdo.common.utils.PageUtils@7a18c2ff
2019-03-20 20:04:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-20 20:04:50 -HTTP METHOD : GET
2019-03-20 20:04:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-20 20:04:50 -参数 : []
2019-03-20 20:04:50 -耗时 : 1
2019-03-20 20:04:50 -返回值 : moneyLog/elecLog/add
2019-03-20 20:04:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:04:50 -HTTP METHOD : GET
2019-03-20 20:04:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:04:50 -参数 : [userType]
2019-03-20 20:04:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:04:50 -==> Parameters: userType(String)
2019-03-20 20:04:50 -<==      Total: 2
2019-03-20 20:04:50 -耗时 : 5
2019-03-20 20:04:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:04:54 -请求地址 : http://localhost:8081/index
2019-03-20 20:04:54 -HTTP METHOD : GET
2019-03-20 20:04:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:04:54 -参数 : [{}]
2019-03-20 20:04:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:04:54 -==> Parameters: 1(Long)
2019-03-20 20:04:54 -<==      Total: 46
2019-03-20 20:04:54 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:04:54 -==> Parameters: 138(Long)
2019-03-20 20:04:54 -<==      Total: 1
2019-03-20 20:04:54 -耗时 : 25
2019-03-20 20:04:54 -返回值 : index_v1
2019-03-20 20:04:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:04:54 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:04:54.247(Timestamp)
2019-03-20 20:04:54 -<==    Updates: 1
2019-03-20 20:04:54 -请求地址 : http://localhost:8081/main
2019-03-20 20:04:54 -HTTP METHOD : GET
2019-03-20 20:04:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:04:54 -参数 : []
2019-03-20 20:04:54 -耗时 : 1
2019-03-20 20:04:54 -返回值 : main
2019-03-20 20:04:54 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:04:54 -HTTP METHOD : GET
2019-03-20 20:04:54 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:04:54 -参数 : []
2019-03-20 20:04:54 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:04:54 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:04:54 -<==      Total: 0
2019-03-20 20:04:54 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:04:54 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:04:54 -<==      Total: 1
2019-03-20 20:04:54 -耗时 : 10
2019-03-20 20:04:54 -返回值 : com.bootdo.common.utils.PageUtils@492f3f7
2019-03-20 20:04:54 -请求地址 : http://localhost:8081/main
2019-03-20 20:04:54 -HTTP METHOD : GET
2019-03-20 20:04:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:04:54 -参数 : []
2019-03-20 20:04:54 -耗时 : 0
2019-03-20 20:04:54 -返回值 : main
2019-03-20 20:05:01 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 20:05:01 -HTTP METHOD : GET
2019-03-20 20:05:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 20:05:01 -参数 : []
2019-03-20 20:05:01 -耗时 : 1
2019-03-20 20:05:01 -返回值 : elec/elec/elec
2019-03-20 20:05:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:05:02 -HTTP METHOD : GET
2019-03-20 20:05:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:05:02 -参数 : [userType]
2019-03-20 20:05:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:05:02 -==> Parameters: userType(String)
2019-03-20 20:05:02 -<==      Total: 2
2019-03-20 20:05:02 -耗时 : 4
2019-03-20 20:05:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:05:02 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 20:05:02 -HTTP METHOD : GET
2019-03-20 20:05:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 20:05:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@624fbaa3]
2019-03-20 20:05:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 20:05:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:05:02 -<==      Total: 10
2019-03-20 20:05:02 -==>  Preparing: select count(*) from elec 
2019-03-20 20:05:02 -==> Parameters: 
2019-03-20 20:05:02 -<==      Total: 1
2019-03-20 20:05:02 -耗时 : 180
2019-03-20 20:05:02 -返回值 : com.bootdo.common.utils.PageUtils@433d5a92
2019-03-20 20:05:03 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 20:05:03 -HTTP METHOD : GET
2019-03-20 20:05:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 20:05:03 -参数 : []
2019-03-20 20:05:03 -耗时 : 1
2019-03-20 20:05:03 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 20:05:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:05:03 -HTTP METHOD : GET
2019-03-20 20:05:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:05:03 -参数 : [userType]
2019-03-20 20:05:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:05:03 -==> Parameters: userType(String)
2019-03-20 20:05:03 -<==      Total: 2
2019-03-20 20:05:03 -耗时 : 5
2019-03-20 20:05:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:05:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 20:05:03 -HTTP METHOD : GET
2019-03-20 20:05:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 20:05:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 20:05:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 20:05:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:05:03 -<==      Total: 4
2019-03-20 20:05:03 -==>  Preparing: select count(*) from elec_log 
2019-03-20 20:05:03 -==> Parameters: 
2019-03-20 20:05:03 -<==      Total: 1
2019-03-20 20:05:03 -耗时 : 11
2019-03-20 20:05:03 -返回值 : com.bootdo.common.utils.PageUtils@2e6bf96
2019-03-20 20:05:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-20 20:05:05 -HTTP METHOD : GET
2019-03-20 20:05:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-20 20:05:05 -参数 : []
2019-03-20 20:05:05 -耗时 : 1
2019-03-20 20:05:05 -返回值 : moneyLog/elecLog/add
2019-03-20 20:05:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:05:05 -HTTP METHOD : GET
2019-03-20 20:05:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:05:05 -参数 : [userType]
2019-03-20 20:05:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:05:05 -==> Parameters: userType(String)
2019-03-20 20:05:05 -<==      Total: 2
2019-03-20 20:05:05 -耗时 : 8
2019-03-20 20:05:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:06:15 -请求地址 : http://localhost:8081/elec/elec/edit/2
2019-03-20 20:06:15 -HTTP METHOD : GET
2019-03-20 20:06:15 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 20:06:15 -参数 : [2, {}]
2019-03-20 20:06:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 20:06:15 -==> Parameters: 2(Long)
2019-03-20 20:06:15 -<==      Total: 1
2019-03-20 20:06:15 -耗时 : 8
2019-03-20 20:06:15 -返回值 : elec/elec/edit
2019-03-20 20:06:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:06:15 -HTTP METHOD : GET
2019-03-20 20:06:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:06:15 -参数 : [userType]
2019-03-20 20:06:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:06:15 -==> Parameters: userType(String)
2019-03-20 20:06:15 -<==      Total: 2
2019-03-20 20:06:15 -耗时 : 8
2019-03-20 20:06:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:06:15 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:06:15 -HTTP METHOD : GET
2019-03-20 20:06:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:06:15 -参数 : [elecType]
2019-03-20 20:06:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:06:15 -==> Parameters: elecType(String)
2019-03-20 20:06:15 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:06:15 -HTTP METHOD : GET
2019-03-20 20:06:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:06:15 -参数 : [userState]
2019-03-20 20:06:15 -<==      Total: 2
2019-03-20 20:06:15 -耗时 : 5
2019-03-20 20:06:15 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:06:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:06:15 -==> Parameters: userState(String)
2019-03-20 20:06:15 -<==      Total: 2
2019-03-20 20:06:15 -耗时 : 10
2019-03-20 20:06:15 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:06:21 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 20:06:21 -HTTP METHOD : GET
2019-03-20 20:06:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 20:06:21 -参数 : []
2019-03-20 20:06:21 -耗时 : 0
2019-03-20 20:06:21 -返回值 : elec/elec/add
2019-03-20 20:06:22 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:06:22 -HTTP METHOD : GET
2019-03-20 20:06:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:06:22 -参数 : [userState]
2019-03-20 20:06:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:06:22 -HTTP METHOD : GET
2019-03-20 20:06:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:06:22 -参数 : [userType]
2019-03-20 20:06:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:06:22 -==> Parameters: userState(String)
2019-03-20 20:06:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:06:22 -==> Parameters: userType(String)
2019-03-20 20:06:22 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:06:22 -HTTP METHOD : GET
2019-03-20 20:06:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:06:22 -参数 : [elecType]
2019-03-20 20:06:22 -<==      Total: 2
2019-03-20 20:06:22 -<==      Total: 2
2019-03-20 20:06:22 -耗时 : 16
2019-03-20 20:06:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:06:22 -耗时 : 17
2019-03-20 20:06:22 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:06:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:06:22 -==> Parameters: elecType(String)
2019-03-20 20:06:22 -<==      Total: 2
2019-03-20 20:06:22 -耗时 : 20
2019-03-20 20:06:22 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:06:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-20 20:06:45 -HTTP METHOD : GET
2019-03-20 20:06:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-20 20:06:45 -参数 : []
2019-03-20 20:06:45 -耗时 : 0
2019-03-20 20:06:45 -返回值 : moneyLog/elecLog/add
2019-03-20 20:06:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:06:45 -HTTP METHOD : GET
2019-03-20 20:06:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:06:45 -参数 : [userType]
2019-03-20 20:06:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:06:45 -==> Parameters: userType(String)
2019-03-20 20:06:45 -<==      Total: 2
2019-03-20 20:06:45 -耗时 : 63
2019-03-20 20:06:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:07:14 -请求地址 : http://localhost:8081/index
2019-03-20 20:07:14 -HTTP METHOD : GET
2019-03-20 20:07:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:07:14 -参数 : [{}]
2019-03-20 20:07:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:07:14 -==> Parameters: 1(Long)
2019-03-20 20:07:14 -<==      Total: 46
2019-03-20 20:07:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:07:14 -==> Parameters: 138(Long)
2019-03-20 20:07:14 -<==      Total: 1
2019-03-20 20:07:14 -耗时 : 30
2019-03-20 20:07:14 -返回值 : index_v1
2019-03-20 20:07:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:07:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:07:14.65(Timestamp)
2019-03-20 20:07:14 -请求地址 : http://localhost:8081/main
2019-03-20 20:07:14 -HTTP METHOD : GET
2019-03-20 20:07:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:07:14 -参数 : []
2019-03-20 20:07:14 -耗时 : 1
2019-03-20 20:07:14 -返回值 : main
2019-03-20 20:07:14 -<==    Updates: 1
2019-03-20 20:07:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:07:15 -HTTP METHOD : GET
2019-03-20 20:07:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:07:15 -参数 : []
2019-03-20 20:07:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:07:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:07:15 -<==      Total: 0
2019-03-20 20:07:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:07:15 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:07:15 -<==      Total: 1
2019-03-20 20:07:15 -耗时 : 35
2019-03-20 20:07:15 -返回值 : com.bootdo.common.utils.PageUtils@73de29e8
2019-03-20 20:07:15 -请求地址 : http://localhost:8081/main
2019-03-20 20:07:15 -HTTP METHOD : GET
2019-03-20 20:07:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:07:15 -参数 : []
2019-03-20 20:07:15 -耗时 : 1
2019-03-20 20:07:15 -返回值 : main
2019-03-20 20:07:17 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 20:07:17 -HTTP METHOD : GET
2019-03-20 20:07:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 20:07:17 -参数 : []
2019-03-20 20:07:17 -耗时 : 0
2019-03-20 20:07:17 -返回值 : elec/elec/elec
2019-03-20 20:07:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:07:17 -HTTP METHOD : GET
2019-03-20 20:07:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:07:17 -参数 : [userType]
2019-03-20 20:07:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:07:17 -==> Parameters: userType(String)
2019-03-20 20:07:17 -<==      Total: 2
2019-03-20 20:07:17 -耗时 : 4
2019-03-20 20:07:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:07:17 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 20:07:17 -HTTP METHOD : GET
2019-03-20 20:07:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 20:07:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@222e1909]
2019-03-20 20:07:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 20:07:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:07:17 -<==      Total: 10
2019-03-20 20:07:17 -==>  Preparing: select count(*) from elec 
2019-03-20 20:07:17 -==> Parameters: 
2019-03-20 20:07:17 -<==      Total: 1
2019-03-20 20:07:17 -耗时 : 106
2019-03-20 20:07:17 -返回值 : com.bootdo.common.utils.PageUtils@48192f0
2019-03-20 20:07:20 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 20:07:20 -HTTP METHOD : GET
2019-03-20 20:07:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 20:07:20 -参数 : []
2019-03-20 20:07:20 -耗时 : 1
2019-03-20 20:07:20 -返回值 : elec/elec/add
2019-03-20 20:07:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:07:21 -HTTP METHOD : GET
2019-03-20 20:07:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:07:21 -参数 : [userType]
2019-03-20 20:07:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:07:21 -==> Parameters: userType(String)
2019-03-20 20:07:21 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:07:21 -HTTP METHOD : GET
2019-03-20 20:07:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:07:21 -参数 : [elecType]
2019-03-20 20:07:21 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:07:21 -HTTP METHOD : GET
2019-03-20 20:07:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:07:21 -参数 : [userState]
2019-03-20 20:07:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:07:21 -==> Parameters: elecType(String)
2019-03-20 20:07:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:07:21 -==> Parameters: userState(String)
2019-03-20 20:07:21 -<==      Total: 2
2019-03-20 20:07:21 -耗时 : 4
2019-03-20 20:07:21 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:07:21 -<==      Total: 2
2019-03-20 20:07:21 -耗时 : 5
2019-03-20 20:07:21 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:07:21 -<==      Total: 2
2019-03-20 20:07:21 -耗时 : 14
2019-03-20 20:07:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:09:04 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 20:09:04 -HTTP METHOD : GET
2019-03-20 20:09:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 20:09:04 -参数 : []
2019-03-20 20:09:04 -耗时 : 0
2019-03-20 20:09:04 -返回值 : elec/elec/add
2019-03-20 20:09:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:09:05 -HTTP METHOD : GET
2019-03-20 20:09:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:09:05 -参数 : [userType]
2019-03-20 20:09:05 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:09:05 -HTTP METHOD : GET
2019-03-20 20:09:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:09:05 -参数 : [userState]
2019-03-20 20:09:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:09:05 -==> Parameters: userState(String)
2019-03-20 20:09:05 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:09:05 -HTTP METHOD : GET
2019-03-20 20:09:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:09:05 -参数 : [elecType]
2019-03-20 20:09:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:09:05 -<==      Total: 2
2019-03-20 20:09:05 -==> Parameters: userType(String)
2019-03-20 20:09:05 -耗时 : 11
2019-03-20 20:09:05 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:09:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:09:05 -<==      Total: 2
2019-03-20 20:09:05 -==> Parameters: elecType(String)
2019-03-20 20:09:05 -耗时 : 16
2019-03-20 20:09:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:09:05 -<==      Total: 2
2019-03-20 20:09:05 -耗时 : 9
2019-03-20 20:09:05 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:22:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 432]
2019-03-20 20:29:07 -请求地址 : http://localhost:8081/index
2019-03-20 20:29:07 -HTTP METHOD : GET
2019-03-20 20:29:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:29:07 -参数 : [{}]
2019-03-20 20:29:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:29:07 -==> Parameters: 1(Long)
2019-03-20 20:29:07 -<==      Total: 46
2019-03-20 20:29:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:29:07 -==> Parameters: 138(Long)
2019-03-20 20:29:07 -<==      Total: 1
2019-03-20 20:29:07 -耗时 : 29
2019-03-20 20:29:07 -返回值 : index_v1
2019-03-20 20:29:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:29:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:29:07.129(Timestamp)
2019-03-20 20:29:07 -请求地址 : http://localhost:8081/main
2019-03-20 20:29:07 -HTTP METHOD : GET
2019-03-20 20:29:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:29:07 -参数 : []
2019-03-20 20:29:07 -耗时 : 0
2019-03-20 20:29:07 -返回值 : main
2019-03-20 20:29:07 -<==    Updates: 1
2019-03-20 20:29:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:29:07 -HTTP METHOD : GET
2019-03-20 20:29:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:29:07 -参数 : []
2019-03-20 20:29:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:29:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:29:07 -<==      Total: 0
2019-03-20 20:29:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:29:07 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:29:07 -<==      Total: 1
2019-03-20 20:29:07 -耗时 : 8
2019-03-20 20:29:07 -返回值 : com.bootdo.common.utils.PageUtils@7bf3bcc4
2019-03-20 20:29:07 -请求地址 : http://localhost:8081/main
2019-03-20 20:29:07 -HTTP METHOD : GET
2019-03-20 20:29:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:29:07 -参数 : []
2019-03-20 20:29:07 -耗时 : 1
2019-03-20 20:29:07 -返回值 : main
2019-03-20 20:29:14 -请求地址 : http://localhost:8081/index
2019-03-20 20:29:14 -HTTP METHOD : GET
2019-03-20 20:29:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:29:14 -参数 : [{}]
2019-03-20 20:29:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:29:14 -==> Parameters: 1(Long)
2019-03-20 20:29:14 -<==      Total: 46
2019-03-20 20:29:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:29:14 -==> Parameters: 138(Long)
2019-03-20 20:29:14 -<==      Total: 1
2019-03-20 20:29:14 -耗时 : 27
2019-03-20 20:29:14 -返回值 : index_v1
2019-03-20 20:29:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:29:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:29:14.149(Timestamp)
2019-03-20 20:29:14 -请求地址 : http://localhost:8081/main
2019-03-20 20:29:14 -HTTP METHOD : GET
2019-03-20 20:29:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:29:14 -参数 : []
2019-03-20 20:29:14 -耗时 : 1
2019-03-20 20:29:14 -返回值 : main
2019-03-20 20:29:14 -<==    Updates: 1
2019-03-20 20:29:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:29:14 -HTTP METHOD : GET
2019-03-20 20:29:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:29:14 -参数 : []
2019-03-20 20:29:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:29:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:29:14 -<==      Total: 0
2019-03-20 20:29:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:29:14 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:29:14 -<==      Total: 1
2019-03-20 20:29:14 -耗时 : 6
2019-03-20 20:29:14 -返回值 : com.bootdo.common.utils.PageUtils@3437b1e5
2019-03-20 20:29:14 -请求地址 : http://localhost:8081/main
2019-03-20 20:29:14 -HTTP METHOD : GET
2019-03-20 20:29:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:29:14 -参数 : []
2019-03-20 20:29:14 -耗时 : 0
2019-03-20 20:29:14 -返回值 : main
2019-03-20 20:29:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 20:29:31 -==> Parameters: 1(Long)
2019-03-20 20:29:31 -<==      Total: 90
2019-03-20 20:29:31 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 20:29:31 -HTTP METHOD : GET
2019-03-20 20:29:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 20:29:31 -参数 : []
2019-03-20 20:29:31 -耗时 : 2
2019-03-20 20:29:31 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 20:29:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:29:31 -HTTP METHOD : GET
2019-03-20 20:29:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:29:31 -参数 : [userType]
2019-03-20 20:29:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:29:31 -==> Parameters: userType(String)
2019-03-20 20:29:31 -<==      Total: 2
2019-03-20 20:29:31 -耗时 : 3
2019-03-20 20:29:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:29:31 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 20:29:31 -HTTP METHOD : GET
2019-03-20 20:29:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 20:29:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 20:29:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 20:29:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:29:31 -<==      Total: 4
2019-03-20 20:29:31 -==>  Preparing: select count(*) from elec_log 
2019-03-20 20:29:31 -==> Parameters: 
2019-03-20 20:29:31 -<==      Total: 1
2019-03-20 20:29:31 -耗时 : 10
2019-03-20 20:29:31 -返回值 : com.bootdo.common.utils.PageUtils@311ee86c
2019-03-20 20:30:45 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 20:30:45 -HTTP METHOD : GET
2019-03-20 20:30:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 20:30:45 -参数 : []
2019-03-20 20:30:45 -耗时 : 1
2019-03-20 20:30:45 -返回值 : elec/elec/elec
2019-03-20 20:30:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:30:46 -HTTP METHOD : GET
2019-03-20 20:30:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:30:46 -参数 : [userType]
2019-03-20 20:30:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:30:46 -==> Parameters: userType(String)
2019-03-20 20:30:46 -<==      Total: 2
2019-03-20 20:30:46 -耗时 : 5
2019-03-20 20:30:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:30:46 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 20:30:46 -HTTP METHOD : GET
2019-03-20 20:30:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 20:30:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@19f60a34]
2019-03-20 20:30:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 20:30:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:30:46 -<==      Total: 10
2019-03-20 20:30:46 -==>  Preparing: select count(*) from elec 
2019-03-20 20:30:46 -==> Parameters: 
2019-03-20 20:30:46 -<==      Total: 1
2019-03-20 20:30:46 -耗时 : 9
2019-03-20 20:30:46 -返回值 : com.bootdo.common.utils.PageUtils@a93ccda
2019-03-20 20:30:51 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 20:30:51 -HTTP METHOD : GET
2019-03-20 20:30:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 20:30:51 -参数 : [1, {}]
2019-03-20 20:30:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 20:30:51 -==> Parameters: 1(Long)
2019-03-20 20:30:51 -<==      Total: 1
2019-03-20 20:30:51 -耗时 : 5
2019-03-20 20:30:51 -返回值 : elec/elec/edit
2019-03-20 20:30:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:30:51 -HTTP METHOD : GET
2019-03-20 20:30:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:30:51 -参数 : [userType]
2019-03-20 20:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:30:51 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:30:51 -HTTP METHOD : GET
2019-03-20 20:30:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:30:51 -参数 : [userState]
2019-03-20 20:30:51 -==> Parameters: userType(String)
2019-03-20 20:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:30:51 -==> Parameters: userState(String)
2019-03-20 20:30:51 -<==      Total: 2
2019-03-20 20:30:51 -耗时 : 5
2019-03-20 20:30:51 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:30:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:30:51 -HTTP METHOD : GET
2019-03-20 20:30:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:30:51 -参数 : [elecType]
2019-03-20 20:30:51 -<==      Total: 2
2019-03-20 20:30:51 -耗时 : 5
2019-03-20 20:30:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:30:51 -==> Parameters: elecType(String)
2019-03-20 20:30:51 -<==      Total: 2
2019-03-20 20:30:51 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:30:51 -耗时 : 8
2019-03-20 20:30:51 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:31:21 -请求地址 : http://localhost:8081/index
2019-03-20 20:31:21 -HTTP METHOD : GET
2019-03-20 20:31:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:31:21 -参数 : [{}]
2019-03-20 20:31:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:31:21 -==> Parameters: 1(Long)
2019-03-20 20:31:21 -<==      Total: 46
2019-03-20 20:31:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:31:21 -==> Parameters: 138(Long)
2019-03-20 20:31:21 -<==      Total: 1
2019-03-20 20:31:21 -耗时 : 23
2019-03-20 20:31:21 -返回值 : index_v1
2019-03-20 20:31:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:31:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:31:21.089(Timestamp)
2019-03-20 20:31:21 -<==    Updates: 1
2019-03-20 20:31:21 -请求地址 : http://localhost:8081/main
2019-03-20 20:31:21 -HTTP METHOD : GET
2019-03-20 20:31:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:31:21 -参数 : []
2019-03-20 20:31:21 -耗时 : 2
2019-03-20 20:31:21 -返回值 : main
2019-03-20 20:31:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:31:21 -HTTP METHOD : GET
2019-03-20 20:31:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:31:21 -参数 : []
2019-03-20 20:31:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:31:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:31:21 -<==      Total: 0
2019-03-20 20:31:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:31:21 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:31:21 -<==      Total: 1
2019-03-20 20:31:21 -耗时 : 12
2019-03-20 20:31:21 -返回值 : com.bootdo.common.utils.PageUtils@473f48d1
2019-03-20 20:31:21 -请求地址 : http://localhost:8081/main
2019-03-20 20:31:21 -HTTP METHOD : GET
2019-03-20 20:31:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:31:21 -参数 : []
2019-03-20 20:31:21 -耗时 : 1
2019-03-20 20:31:21 -返回值 : main
2019-03-20 20:31:24 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 20:31:24 -HTTP METHOD : GET
2019-03-20 20:31:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 20:31:24 -参数 : []
2019-03-20 20:31:24 -耗时 : 2
2019-03-20 20:31:24 -返回值 : elec/elec/elec
2019-03-20 20:31:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:31:25 -HTTP METHOD : GET
2019-03-20 20:31:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:31:25 -参数 : [userType]
2019-03-20 20:31:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:31:25 -==> Parameters: userType(String)
2019-03-20 20:31:25 -<==      Total: 2
2019-03-20 20:31:25 -耗时 : 5
2019-03-20 20:31:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:31:25 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 20:31:25 -HTTP METHOD : GET
2019-03-20 20:31:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 20:31:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@620d2cb5]
2019-03-20 20:31:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 20:31:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:31:25 -<==      Total: 10
2019-03-20 20:31:25 -==>  Preparing: select count(*) from elec 
2019-03-20 20:31:25 -==> Parameters: 
2019-03-20 20:31:25 -<==      Total: 1
2019-03-20 20:31:25 -耗时 : 11
2019-03-20 20:31:25 -返回值 : com.bootdo.common.utils.PageUtils@79f4f266
2019-03-20 20:31:28 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 20:31:28 -HTTP METHOD : GET
2019-03-20 20:31:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 20:31:28 -参数 : []
2019-03-20 20:31:28 -耗时 : 0
2019-03-20 20:31:28 -返回值 : elec/elec/add
2019-03-20 20:31:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:31:28 -HTTP METHOD : GET
2019-03-20 20:31:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:31:28 -参数 : [userType]
2019-03-20 20:31:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:31:28 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:31:28 -HTTP METHOD : GET
2019-03-20 20:31:28 -==> Parameters: userType(String)
2019-03-20 20:31:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:31:28 -参数 : [userState]
2019-03-20 20:31:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:31:28 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:31:28 -HTTP METHOD : GET
2019-03-20 20:31:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:31:28 -参数 : [elecType]
2019-03-20 20:31:28 -==> Parameters: userState(String)
2019-03-20 20:31:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:31:28 -<==      Total: 2
2019-03-20 20:31:28 -==> Parameters: elecType(String)
2019-03-20 20:31:28 -<==      Total: 2
2019-03-20 20:31:28 -耗时 : 5
2019-03-20 20:31:28 -耗时 : 8
2019-03-20 20:31:28 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:31:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:31:28 -<==      Total: 2
2019-03-20 20:31:28 -耗时 : 14
2019-03-20 20:31:28 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:31:47 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 20:31:47 -HTTP METHOD : GET
2019-03-20 20:31:47 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 20:31:47 -参数 : []
2019-03-20 20:31:47 -耗时 : 0
2019-03-20 20:31:47 -返回值 : elec/elec/add
2019-03-20 20:31:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:31:47 -HTTP METHOD : GET
2019-03-20 20:31:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:31:47 -参数 : [userType]
2019-03-20 20:31:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:31:47 -==> Parameters: userType(String)
2019-03-20 20:31:47 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:31:47 -HTTP METHOD : GET
2019-03-20 20:31:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:31:47 -参数 : [elecType]
2019-03-20 20:31:47 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:31:47 -HTTP METHOD : GET
2019-03-20 20:31:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:31:47 -参数 : [userState]
2019-03-20 20:31:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:31:47 -==> Parameters: elecType(String)
2019-03-20 20:31:47 -<==      Total: 2
2019-03-20 20:31:47 -耗时 : 6
2019-03-20 20:31:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:31:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:31:47 -==> Parameters: userState(String)
2019-03-20 20:31:47 -<==      Total: 2
2019-03-20 20:31:47 -耗时 : 7
2019-03-20 20:31:47 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:31:47 -<==      Total: 2
2019-03-20 20:31:47 -耗时 : 13
2019-03-20 20:31:47 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:34:07 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 20:34:07 -HTTP METHOD : GET
2019-03-20 20:34:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 20:34:07 -参数 : []
2019-03-20 20:34:07 -耗时 : 0
2019-03-20 20:34:07 -返回值 : elec/elec/add
2019-03-20 20:34:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:34:07 -HTTP METHOD : GET
2019-03-20 20:34:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:34:07 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:34:07 -参数 : [userType]
2019-03-20 20:34:07 -HTTP METHOD : GET
2019-03-20 20:34:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:34:07 -参数 : [userState]
2019-03-20 20:34:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:34:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:34:07 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:34:07 -==> Parameters: userType(String)
2019-03-20 20:34:07 -==> Parameters: userState(String)
2019-03-20 20:34:07 -HTTP METHOD : GET
2019-03-20 20:34:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:34:07 -参数 : [elecType]
2019-03-20 20:34:07 -<==      Total: 2
2019-03-20 20:34:07 -耗时 : 7
2019-03-20 20:34:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:34:07 -<==      Total: 2
2019-03-20 20:34:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:34:07 -耗时 : 5
2019-03-20 20:34:07 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:34:07 -==> Parameters: elecType(String)
2019-03-20 20:34:07 -<==      Total: 2
2019-03-20 20:34:07 -耗时 : 8
2019-03-20 20:34:07 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:34:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-20 20:34:24 -HTTP METHOD : GET
2019-03-20 20:34:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-20 20:34:24 -参数 : []
2019-03-20 20:34:24 -耗时 : 1
2019-03-20 20:34:24 -返回值 : system/dept/deptTree
2019-03-20 20:34:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-20 20:34:24 -HTTP METHOD : GET
2019-03-20 20:34:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-20 20:34:24 -参数 : []
2019-03-20 20:34:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-20 20:34:24 -==> Parameters: 
2019-03-20 20:34:24 -<==      Total: 3
2019-03-20 20:34:24 -耗时 : 2
2019-03-20 20:34:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-20 20:35:14 -请求地址 : http://localhost:8081/elec/elec/save
2019-03-20 20:35:14 -HTTP METHOD : POST
2019-03-20 20:35:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.save
2019-03-20 20:35:14 -参数 : [com.bootdo.elec.domain.ElecDO@16997db2]
2019-03-20 20:35:14 -==>  Preparing: insert into elec ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:35:14 -==> Parameters: 4-4444(String), 发发火(String), A(String), 2(String), (String), 1(String), (String), 1(String), 1(BigDecimal), 1(String), 1(String), 1(Integer), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 2019-04(String), 1(Long), 2019-03-20 20:35:14.688(Timestamp), 1(Long), (String)
2019-03-20 20:35:14 -<==    Updates: 1
2019-03-20 20:35:14 -耗时 : 69
2019-03-20 20:35:14 -返回值 : {msg=操作成功, code=0}
2019-03-20 20:35:14 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 20:35:14 -HTTP METHOD : GET
2019-03-20 20:35:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 20:35:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}, com.bootdo.elec.domain.ElecDO@410e0143]
2019-03-20 20:35:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 order by id asc limit ?, ? 
2019-03-20 20:35:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:35:14 -<==      Total: 2
2019-03-20 20:35:14 -==>  Preparing: select count(*) from elec WHERE `elec_sum` < 0 
2019-03-20 20:35:14 -==> Parameters: 
2019-03-20 20:35:14 -<==      Total: 1
2019-03-20 20:35:14 -耗时 : 57
2019-03-20 20:35:14 -返回值 : com.bootdo.common.utils.PageUtils@3d8f32b
2019-03-20 20:35:48 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-20 20:35:48 -HTTP METHOD : GET
2019-03-20 20:35:48 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 20:35:48 -参数 : [1, {}]
2019-03-20 20:35:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 20:35:48 -==> Parameters: 1(Long)
2019-03-20 20:35:48 -<==      Total: 1
2019-03-20 20:35:48 -耗时 : 5
2019-03-20 20:35:48 -返回值 : elec/elec/edit
2019-03-20 20:35:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:35:49 -HTTP METHOD : GET
2019-03-20 20:35:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:35:49 -参数 : [userType]
2019-03-20 20:35:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:35:49 -==> Parameters: userType(String)
2019-03-20 20:35:49 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:35:49 -HTTP METHOD : GET
2019-03-20 20:35:49 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:35:49 -HTTP METHOD : GET
2019-03-20 20:35:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:35:49 -参数 : [elecType]
2019-03-20 20:35:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:35:49 -参数 : [userState]
2019-03-20 20:35:49 -<==      Total: 2
2019-03-20 20:35:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:35:49 -==> Parameters: elecType(String)
2019-03-20 20:35:49 -耗时 : 5
2019-03-20 20:35:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:35:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:35:49 -==> Parameters: userState(String)
2019-03-20 20:35:49 -<==      Total: 2
2019-03-20 20:35:49 -<==      Total: 2
2019-03-20 20:35:49 -耗时 : 9
2019-03-20 20:35:49 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:35:49 -耗时 : 7
2019-03-20 20:35:49 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:35:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:35:54 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-20 20:35:54.689(Timestamp)
2019-03-20 20:35:54 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 20:35:54 -<==    Updates: 1
2019-03-20 20:35:58 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 20:35:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:35:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"](String), null, 2019-03-20 20:35:58.421(Timestamp)
2019-03-20 20:35:58 -<==    Updates: 1
2019-03-20 20:36:21 -请求地址 : http://localhost:8081/index
2019-03-20 20:36:21 -HTTP METHOD : GET
2019-03-20 20:36:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:36:21 -参数 : [{}]
2019-03-20 20:36:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:36:21 -==> Parameters: 1(Long)
2019-03-20 20:36:21 -<==      Total: 46
2019-03-20 20:36:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:36:21 -==> Parameters: 138(Long)
2019-03-20 20:36:21 -<==      Total: 1
2019-03-20 20:36:21 -耗时 : 83
2019-03-20 20:36:21 -返回值 : index_v1
2019-03-20 20:36:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:36:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 83(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:36:21.343(Timestamp)
2019-03-20 20:36:21 -<==    Updates: 1
2019-03-20 20:36:21 -请求地址 : http://localhost:8081/main
2019-03-20 20:36:21 -HTTP METHOD : GET
2019-03-20 20:36:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:36:21 -参数 : []
2019-03-20 20:36:21 -耗时 : 0
2019-03-20 20:36:21 -返回值 : main
2019-03-20 20:36:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:36:21 -HTTP METHOD : GET
2019-03-20 20:36:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:36:21 -参数 : []
2019-03-20 20:36:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:36:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:36:21 -<==      Total: 0
2019-03-20 20:36:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:36:21 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:36:21 -<==      Total: 1
2019-03-20 20:36:21 -耗时 : 19
2019-03-20 20:36:21 -返回值 : com.bootdo.common.utils.PageUtils@7a4196d3
2019-03-20 20:36:21 -请求地址 : http://localhost:8081/main
2019-03-20 20:36:21 -HTTP METHOD : GET
2019-03-20 20:36:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:36:21 -参数 : []
2019-03-20 20:36:21 -耗时 : 1
2019-03-20 20:36:21 -返回值 : main
2019-03-20 20:36:23 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 20:36:23 -HTTP METHOD : GET
2019-03-20 20:36:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 20:36:23 -参数 : []
2019-03-20 20:36:23 -耗时 : 0
2019-03-20 20:36:23 -返回值 : elec/elec/elec
2019-03-20 20:36:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:36:23 -HTTP METHOD : GET
2019-03-20 20:36:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:36:23 -参数 : [userType]
2019-03-20 20:36:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:36:23 -==> Parameters: userType(String)
2019-03-20 20:36:23 -<==      Total: 2
2019-03-20 20:36:23 -耗时 : 5
2019-03-20 20:36:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:36:23 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 20:36:23 -HTTP METHOD : GET
2019-03-20 20:36:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 20:36:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3ec4731b]
2019-03-20 20:36:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 20:36:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:36:23 -<==      Total: 10
2019-03-20 20:36:23 -==>  Preparing: select count(*) from elec 
2019-03-20 20:36:23 -==> Parameters: 
2019-03-20 20:36:23 -<==      Total: 1
2019-03-20 20:36:23 -耗时 : 11
2019-03-20 20:36:23 -返回值 : com.bootdo.common.utils.PageUtils@26854707
2019-03-20 20:38:01 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 20:38:01 -HTTP METHOD : GET
2019-03-20 20:38:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 20:38:01 -参数 : []
2019-03-20 20:38:01 -耗时 : 1
2019-03-20 20:38:01 -返回值 : elec/elec/add
2019-03-20 20:38:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:38:01 -HTTP METHOD : GET
2019-03-20 20:38:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:38:01 -参数 : [userType]
2019-03-20 20:38:01 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:38:01 -HTTP METHOD : GET
2019-03-20 20:38:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:38:01 -参数 : [userState]
2019-03-20 20:38:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:38:01 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:38:01 -HTTP METHOD : GET
2019-03-20 20:38:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:38:01 -参数 : [elecType]
2019-03-20 20:38:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:38:01 -==> Parameters: userState(String)
2019-03-20 20:38:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:38:01 -==> Parameters: elecType(String)
2019-03-20 20:38:01 -==> Parameters: userType(String)
2019-03-20 20:38:01 -<==      Total: 2
2019-03-20 20:38:01 -耗时 : 6
2019-03-20 20:38:01 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:38:01 -<==      Total: 2
2019-03-20 20:38:01 -耗时 : 5
2019-03-20 20:38:01 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:38:01 -<==      Total: 2
2019-03-20 20:38:01 -耗时 : 13
2019-03-20 20:38:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:38:05 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 20:38:05 -HTTP METHOD : GET
2019-03-20 20:38:05 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 20:38:05 -参数 : [{limit=10, offset=10, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@2bc6b664]
2019-03-20 20:38:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 20:38:05 -==> Parameters: 10(Integer), 10(Integer)
2019-03-20 20:38:05 -<==      Total: 3
2019-03-20 20:38:05 -==>  Preparing: select count(*) from elec 
2019-03-20 20:38:05 -==> Parameters: 
2019-03-20 20:38:05 -<==      Total: 1
2019-03-20 20:38:05 -耗时 : 14
2019-03-20 20:38:05 -返回值 : com.bootdo.common.utils.PageUtils@39593f9d
2019-03-20 20:38:12 -请求地址 : http://localhost:8081/elec/elec/edit/13
2019-03-20 20:38:12 -HTTP METHOD : GET
2019-03-20 20:38:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-20 20:38:12 -参数 : [13, {}]
2019-03-20 20:38:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-20 20:38:12 -==> Parameters: 13(Long)
2019-03-20 20:38:12 -<==      Total: 1
2019-03-20 20:38:12 -耗时 : 5
2019-03-20 20:38:12 -返回值 : elec/elec/edit
2019-03-20 20:38:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:38:12 -HTTP METHOD : GET
2019-03-20 20:38:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:38:12 -参数 : [userType]
2019-03-20 20:38:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:38:12 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:38:12 -HTTP METHOD : GET
2019-03-20 20:38:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:38:12 -==> Parameters: userType(String)
2019-03-20 20:38:12 -参数 : [userState]
2019-03-20 20:38:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:38:12 -==> Parameters: userState(String)
2019-03-20 20:38:12 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:38:12 -HTTP METHOD : GET
2019-03-20 20:38:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:38:12 -参数 : [elecType]
2019-03-20 20:38:12 -<==      Total: 2
2019-03-20 20:38:12 -耗时 : 5
2019-03-20 20:38:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:38:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:38:12 -==> Parameters: elecType(String)
2019-03-20 20:38:12 -<==      Total: 2
2019-03-20 20:38:12 -<==      Total: 2
2019-03-20 20:38:12 -耗时 : 15
2019-03-20 20:38:12 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:38:12 -耗时 : 19
2019-03-20 20:38:12 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:38:19 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-04,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-04,1"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-04,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-04,1"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-20 20:38:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:38:19 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elec/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-04,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-04,1"](String), null, 2019-03-20 20:38:19.436(Timestamp)
2019-03-20 20:38:19 -<==    Updates: 1
2019-03-20 20:43:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 20:43:38 -==> Parameters: 1(Long)
2019-03-20 20:43:38 -<==      Total: 90
2019-03-20 20:43:38 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-20 20:43:38 -HTTP METHOD : GET
2019-03-20 20:43:38 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-20 20:43:38 -参数 : []
2019-03-20 20:43:38 -耗时 : 2
2019-03-20 20:43:38 -返回值 : elec/elec/add
2019-03-20 20:43:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 20:43:38 -HTTP METHOD : GET
2019-03-20 20:43:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:43:38 -参数 : [userType]
2019-03-20 20:43:38 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-20 20:43:38 -HTTP METHOD : GET
2019-03-20 20:43:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:43:38 -参数 : [userState]
2019-03-20 20:43:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:43:38 -==> Parameters: userType(String)
2019-03-20 20:43:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:43:38 -==> Parameters: userState(String)
2019-03-20 20:43:38 -<==      Total: 2
2019-03-20 20:43:38 -<==      Total: 2
2019-03-20 20:43:38 -耗时 : 6
2019-03-20 20:43:38 -耗时 : 5
2019-03-20 20:43:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:43:38 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:43:38 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-20 20:43:38 -HTTP METHOD : GET
2019-03-20 20:43:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 20:43:38 -参数 : [elecType]
2019-03-20 20:43:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 20:43:38 -==> Parameters: elecType(String)
2019-03-20 20:43:38 -<==      Total: 2
2019-03-20 20:43:38 -耗时 : 7
2019-03-20 20:43:38 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 20:43:51 -请求地址 : http://localhost:8081/common/long
2019-03-20 20:43:51 -HTTP METHOD : GET
2019-03-20 20:43:51 -CLASS_METHOD : com.bootdo.common.controller.LongController.Long
2019-03-20 20:43:51 -参数 : []
2019-03-20 20:43:51 -耗时 : 1
2019-03-20 20:43:51 -返回值 : common/job/Long
2019-03-20 20:45:46 -请求地址 : http://localhost:8081/sys/online
2019-03-20 20:45:46 -HTTP METHOD : GET
2019-03-20 20:45:46 -CLASS_METHOD : com.bootdo.system.controller.SessionController.online
2019-03-20 20:45:46 -参数 : []
2019-03-20 20:45:46 -耗时 : 25
2019-03-20 20:45:46 -返回值 : system/online/online
2019-03-20 20:45:46 -请求地址 : http://localhost:8081/sys/online/list
2019-03-20 20:45:46 -HTTP METHOD : GET
2019-03-20 20:45:46 -CLASS_METHOD : com.bootdo.system.controller.SessionController.list
2019-03-20 20:45:46 -参数 : []
2019-03-20 20:45:46 -耗时 : 1
2019-03-20 20:45:46 -返回值 : [com.bootdo.system.domain.UserOnline@7c827116]
2019-03-20 20:45:47 -请求地址 : http://localhost:8081/common/log
2019-03-20 20:45:47 -HTTP METHOD : GET
2019-03-20 20:45:47 -CLASS_METHOD : com.bootdo.common.controller.LogController.log
2019-03-20 20:45:47 -参数 : []
2019-03-20 20:45:47 -耗时 : 1
2019-03-20 20:45:47 -返回值 : common/log/log
2019-03-20 20:45:48 -请求地址 : http://localhost:8081/common/log/list
2019-03-20 20:45:48 -HTTP METHOD : GET
2019-03-20 20:45:48 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-20 20:45:48 -参数 : [{limit=10, offset=0, sort=gmt_create, order=desc, operation=, username=}]
2019-03-20 20:45:48 -==>  Preparing: select count(*) from sys_log 
2019-03-20 20:45:48 -==> Parameters: 
2019-03-20 20:45:48 -<==      Total: 1
2019-03-20 20:45:48 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log order by gmt_create desc limit ?, ? 
2019-03-20 20:45:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 20:45:48 -<==      Total: 10
2019-03-20 20:45:48 -耗时 : 490
2019-03-20 20:45:48 -返回值 : PageDO{offset=0, limit=10, total=521, params={}, param='', rows=[LogDO{id=2435, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/elec/elec/update', params='org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-04,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-04,1"]', ip='null', gmtCreate=Wed Mar 20 20:38:19 CST 2019}, LogDO{id=2434, userId=1, username='admin', operation='请求访问主页', time=83, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 20 20:36:21 CST 2019}, LogDO{id=2433, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/elec/elec/update', params='org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]', ip='null', gmtCreate=Wed Mar 20 20:35:58 CST 2019}, LogDO{id=2432, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/elec/elec/update', params='org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'elecDO' on field 'hu': rejected value [2019-02,1]; codes [typeMismatch.elecDO.hu,typeMismatch.hu,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [elecDO.hu,hu]; arguments []; default message [hu]]; default message [Failed to convert property value of type 'java.lang.String[]' to required type 'java.lang.Integer' for property 'hu'; nested exception is java.lang.NumberFormatException: For input string: "2019-02,1"]', ip='null', gmtCreate=Wed Mar 20 20:35:55 CST 2019}, LogDO{id=2431, userId=1, username='admin', operation='请求访问主页', time=23, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 20 20:31:21 CST 2019}, LogDO{id=2430, userId=1, username='admin', operation='请求访问主页', time=27, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 20 20:29:14 CST 2019}, LogDO{id=2429, userId=1, username='admin', operation='请求访问主页', time=29, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 20 20:29:07 CST 2019}, LogDO{id=2428, userId=1, username='admin', operation='请求访问主页', time=31, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 20 20:07:15 CST 2019}, LogDO{id=2427, userId=1, username='admin', operation='请求访问主页', time=26, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 20 20:04:54 CST 2019}, LogDO{id=2426, userId=1, username='admin', operation='请求访问主页', time=21, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 20 20:04:45 CST 2019}]}
2019-03-20 20:51:45 -Validating all active sessions...
2019-03-20 20:51:45 -Finished session validation.  No sessions were stopped.
2019-03-20 20:52:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 11 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 129], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 863]
2019-03-20 20:53:50 -请求地址 : http://localhost:8081/index
2019-03-20 20:53:50 -HTTP METHOD : GET
2019-03-20 20:53:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:53:50 -参数 : [{}]
2019-03-20 20:53:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:53:50 -==> Parameters: 1(Long)
2019-03-20 20:53:50 -<==      Total: 46
2019-03-20 20:53:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:53:50 -==> Parameters: 138(Long)
2019-03-20 20:53:50 -<==      Total: 1
2019-03-20 20:53:50 -耗时 : 33
2019-03-20 20:53:50 -返回值 : index_v1
2019-03-20 20:53:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:53:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:53:50.822(Timestamp)
2019-03-20 20:53:50 -<==    Updates: 1
2019-03-20 20:53:51 -请求地址 : http://localhost:8081/main
2019-03-20 20:53:51 -HTTP METHOD : GET
2019-03-20 20:53:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:53:51 -参数 : []
2019-03-20 20:53:51 -耗时 : 1
2019-03-20 20:53:51 -返回值 : main
2019-03-20 20:53:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:53:51 -HTTP METHOD : GET
2019-03-20 20:53:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:53:51 -参数 : []
2019-03-20 20:53:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:53:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:53:51 -<==      Total: 0
2019-03-20 20:53:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:53:51 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:53:51 -<==      Total: 1
2019-03-20 20:53:51 -耗时 : 54
2019-03-20 20:53:51 -返回值 : com.bootdo.common.utils.PageUtils@79bfd42c
2019-03-20 20:53:51 -请求地址 : http://localhost:8081/main
2019-03-20 20:53:51 -HTTP METHOD : GET
2019-03-20 20:53:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:53:51 -参数 : []
2019-03-20 20:53:51 -耗时 : 1
2019-03-20 20:53:51 -返回值 : main
2019-03-20 20:53:58 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 20:53:58 -==> Parameters: 1(Long)
2019-03-20 20:53:58 -<==      Total: 90
2019-03-20 20:53:58 -请求地址 : http://localhost:8081/charts/countRun
2019-03-20 20:53:58 -HTTP METHOD : GET
2019-03-20 20:53:58 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-20 20:53:58 -参数 : []
2019-03-20 20:53:58 -耗时 : 1
2019-03-20 20:53:58 -返回值 : charts/countRun
2019-03-20 20:55:31 -请求地址 : http://localhost:8081/index
2019-03-20 20:55:31 -HTTP METHOD : GET
2019-03-20 20:55:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:55:31 -参数 : [{}]
2019-03-20 20:55:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:55:31 -==> Parameters: 1(Long)
2019-03-20 20:55:31 -<==      Total: 46
2019-03-20 20:55:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:55:31 -==> Parameters: 138(Long)
2019-03-20 20:55:31 -<==      Total: 1
2019-03-20 20:55:31 -耗时 : 21
2019-03-20 20:55:31 -返回值 : index_v1
2019-03-20 20:55:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:55:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:55:31.066(Timestamp)
2019-03-20 20:55:31 -<==    Updates: 1
2019-03-20 20:55:31 -请求地址 : http://localhost:8081/main
2019-03-20 20:55:31 -HTTP METHOD : GET
2019-03-20 20:55:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:55:31 -参数 : []
2019-03-20 20:55:31 -耗时 : 1
2019-03-20 20:55:31 -返回值 : main
2019-03-20 20:55:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:55:31 -HTTP METHOD : GET
2019-03-20 20:55:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:55:31 -参数 : []
2019-03-20 20:55:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:55:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:55:31 -<==      Total: 0
2019-03-20 20:55:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:55:31 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:55:31 -<==      Total: 1
2019-03-20 20:55:31 -耗时 : 26
2019-03-20 20:55:31 -返回值 : com.bootdo.common.utils.PageUtils@323b620c
2019-03-20 20:55:31 -请求地址 : http://localhost:8081/main
2019-03-20 20:55:31 -HTTP METHOD : GET
2019-03-20 20:55:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:55:31 -参数 : []
2019-03-20 20:55:31 -耗时 : 2
2019-03-20 20:55:31 -返回值 : main
2019-03-20 20:55:34 -请求地址 : http://localhost:8081/charts/countRun
2019-03-20 20:55:34 -HTTP METHOD : GET
2019-03-20 20:55:34 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-20 20:55:34 -参数 : []
2019-03-20 20:55:34 -耗时 : 1
2019-03-20 20:55:34 -返回值 : charts/countRun
2019-03-20 20:56:49 -请求地址 : http://localhost:8081/index
2019-03-20 20:56:49 -HTTP METHOD : GET
2019-03-20 20:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:56:49 -参数 : [{}]
2019-03-20 20:56:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:56:49 -==> Parameters: 1(Long)
2019-03-20 20:56:49 -<==      Total: 46
2019-03-20 20:56:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:56:49 -==> Parameters: 138(Long)
2019-03-20 20:56:49 -<==      Total: 1
2019-03-20 20:56:49 -耗时 : 18
2019-03-20 20:56:49 -返回值 : index_v1
2019-03-20 20:56:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:56:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:56:49.345(Timestamp)
2019-03-20 20:56:49 -<==    Updates: 1
2019-03-20 20:56:49 -请求地址 : http://localhost:8081/main
2019-03-20 20:56:49 -HTTP METHOD : GET
2019-03-20 20:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:56:49 -参数 : []
2019-03-20 20:56:49 -耗时 : 0
2019-03-20 20:56:49 -返回值 : main
2019-03-20 20:56:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:56:49 -HTTP METHOD : GET
2019-03-20 20:56:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:56:49 -参数 : []
2019-03-20 20:56:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:56:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:56:49 -<==      Total: 0
2019-03-20 20:56:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:56:49 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:56:49 -<==      Total: 1
2019-03-20 20:56:49 -耗时 : 7
2019-03-20 20:56:49 -返回值 : com.bootdo.common.utils.PageUtils@1d4dc79
2019-03-20 20:56:49 -请求地址 : http://localhost:8081/main
2019-03-20 20:56:49 -HTTP METHOD : GET
2019-03-20 20:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:56:49 -参数 : []
2019-03-20 20:56:49 -耗时 : 0
2019-03-20 20:56:49 -返回值 : main
2019-03-20 20:56:53 -请求地址 : http://localhost:8081/charts/countRun
2019-03-20 20:56:53 -HTTP METHOD : GET
2019-03-20 20:56:53 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-20 20:56:53 -参数 : []
2019-03-20 20:56:53 -耗时 : 0
2019-03-20 20:56:53 -返回值 : charts/countRun
2019-03-20 20:57:59 -请求地址 : http://localhost:8081/index
2019-03-20 20:57:59 -HTTP METHOD : GET
2019-03-20 20:57:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:57:59 -参数 : [{}]
2019-03-20 20:57:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:57:59 -==> Parameters: 1(Long)
2019-03-20 20:57:59 -<==      Total: 46
2019-03-20 20:57:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:57:59 -==> Parameters: 138(Long)
2019-03-20 20:57:59 -<==      Total: 1
2019-03-20 20:57:59 -耗时 : 31
2019-03-20 20:57:59 -返回值 : index_v1
2019-03-20 20:57:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:57:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:57:59.355(Timestamp)
2019-03-20 20:57:59 -<==    Updates: 1
2019-03-20 20:57:59 -请求地址 : http://localhost:8081/main
2019-03-20 20:57:59 -HTTP METHOD : GET
2019-03-20 20:57:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:57:59 -参数 : []
2019-03-20 20:57:59 -耗时 : 1
2019-03-20 20:57:59 -返回值 : main
2019-03-20 20:57:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:57:59 -HTTP METHOD : GET
2019-03-20 20:57:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:57:59 -参数 : []
2019-03-20 20:57:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:57:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:57:59 -<==      Total: 0
2019-03-20 20:57:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:57:59 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:57:59 -<==      Total: 1
2019-03-20 20:57:59 -耗时 : 9
2019-03-20 20:57:59 -返回值 : com.bootdo.common.utils.PageUtils@5dd385cb
2019-03-20 20:58:00 -请求地址 : http://localhost:8081/main
2019-03-20 20:58:00 -HTTP METHOD : GET
2019-03-20 20:58:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:58:00 -参数 : []
2019-03-20 20:58:00 -耗时 : 1
2019-03-20 20:58:00 -返回值 : main
2019-03-20 20:58:02 -请求地址 : http://localhost:8081/charts/countRun
2019-03-20 20:58:02 -HTTP METHOD : GET
2019-03-20 20:58:02 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-20 20:58:02 -参数 : []
2019-03-20 20:58:02 -耗时 : 2
2019-03-20 20:58:02 -返回值 : charts/countRun
2019-03-20 20:59:46 -请求地址 : http://localhost:8081/index
2019-03-20 20:59:46 -HTTP METHOD : GET
2019-03-20 20:59:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 20:59:46 -参数 : [{}]
2019-03-20 20:59:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 20:59:46 -==> Parameters: 1(Long)
2019-03-20 20:59:46 -<==      Total: 46
2019-03-20 20:59:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 20:59:46 -==> Parameters: 138(Long)
2019-03-20 20:59:46 -<==      Total: 1
2019-03-20 20:59:46 -耗时 : 28
2019-03-20 20:59:46 -返回值 : index_v1
2019-03-20 20:59:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 20:59:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 20:59:46.074(Timestamp)
2019-03-20 20:59:46 -请求地址 : http://localhost:8081/main
2019-03-20 20:59:46 -HTTP METHOD : GET
2019-03-20 20:59:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:59:46 -参数 : []
2019-03-20 20:59:46 -耗时 : 0
2019-03-20 20:59:46 -返回值 : main
2019-03-20 20:59:46 -<==    Updates: 1
2019-03-20 20:59:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 20:59:46 -HTTP METHOD : GET
2019-03-20 20:59:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 20:59:46 -参数 : []
2019-03-20 20:59:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 20:59:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 20:59:46 -<==      Total: 0
2019-03-20 20:59:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 20:59:46 -==> Parameters: 1(Long), 0(String)
2019-03-20 20:59:46 -<==      Total: 1
2019-03-20 20:59:46 -耗时 : 9
2019-03-20 20:59:46 -返回值 : com.bootdo.common.utils.PageUtils@42c06820
2019-03-20 20:59:46 -请求地址 : http://localhost:8081/main
2019-03-20 20:59:46 -HTTP METHOD : GET
2019-03-20 20:59:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 20:59:46 -参数 : []
2019-03-20 20:59:46 -耗时 : 1
2019-03-20 20:59:46 -返回值 : main
2019-03-20 20:59:50 -请求地址 : http://localhost:8081/charts/countRun
2019-03-20 20:59:50 -HTTP METHOD : GET
2019-03-20 20:59:50 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-20 20:59:50 -参数 : []
2019-03-20 20:59:50 -耗时 : 0
2019-03-20 20:59:50 -返回值 : charts/countRun
2019-03-20 21:01:24 -请求地址 : http://localhost:8081/index
2019-03-20 21:01:24 -HTTP METHOD : GET
2019-03-20 21:01:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 21:01:24 -参数 : [{}]
2019-03-20 21:01:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 21:01:24 -==> Parameters: 1(Long)
2019-03-20 21:01:24 -<==      Total: 46
2019-03-20 21:01:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 21:01:24 -==> Parameters: 138(Long)
2019-03-20 21:01:24 -<==      Total: 1
2019-03-20 21:01:24 -耗时 : 22
2019-03-20 21:01:24 -返回值 : index_v1
2019-03-20 21:01:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 21:01:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 21:01:24.542(Timestamp)
2019-03-20 21:01:24 -<==    Updates: 1
2019-03-20 21:01:24 -请求地址 : http://localhost:8081/main
2019-03-20 21:01:24 -HTTP METHOD : GET
2019-03-20 21:01:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:01:24 -参数 : []
2019-03-20 21:01:24 -耗时 : 1
2019-03-20 21:01:24 -返回值 : main
2019-03-20 21:01:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 21:01:25 -HTTP METHOD : GET
2019-03-20 21:01:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 21:01:25 -参数 : []
2019-03-20 21:01:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 21:01:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 21:01:25 -<==      Total: 0
2019-03-20 21:01:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 21:01:25 -==> Parameters: 1(Long), 0(String)
2019-03-20 21:01:25 -<==      Total: 1
2019-03-20 21:01:25 -耗时 : 9
2019-03-20 21:01:25 -返回值 : com.bootdo.common.utils.PageUtils@6a63752c
2019-03-20 21:01:25 -请求地址 : http://localhost:8081/main
2019-03-20 21:01:25 -HTTP METHOD : GET
2019-03-20 21:01:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:01:25 -参数 : []
2019-03-20 21:01:25 -耗时 : 1
2019-03-20 21:01:25 -返回值 : main
2019-03-20 21:01:29 -请求地址 : http://localhost:8081/charts/countRun
2019-03-20 21:01:29 -HTTP METHOD : GET
2019-03-20 21:01:29 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-20 21:01:29 -参数 : []
2019-03-20 21:01:29 -耗时 : 1
2019-03-20 21:01:29 -返回值 : charts/countRun
2019-03-20 21:02:26 -请求地址 : http://localhost:8081/index
2019-03-20 21:02:26 -HTTP METHOD : GET
2019-03-20 21:02:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 21:02:26 -参数 : [{}]
2019-03-20 21:02:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 21:02:26 -==> Parameters: 1(Long)
2019-03-20 21:02:26 -<==      Total: 46
2019-03-20 21:02:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 21:02:26 -==> Parameters: 138(Long)
2019-03-20 21:02:26 -<==      Total: 1
2019-03-20 21:02:26 -耗时 : 22
2019-03-20 21:02:26 -返回值 : index_v1
2019-03-20 21:02:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 21:02:26 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 21:02:26.511(Timestamp)
2019-03-20 21:02:26 -请求地址 : http://localhost:8081/main
2019-03-20 21:02:26 -HTTP METHOD : GET
2019-03-20 21:02:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:02:26 -参数 : []
2019-03-20 21:02:26 -耗时 : 1
2019-03-20 21:02:26 -返回值 : main
2019-03-20 21:02:26 -<==    Updates: 1
2019-03-20 21:02:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 21:02:26 -HTTP METHOD : GET
2019-03-20 21:02:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 21:02:26 -参数 : []
2019-03-20 21:02:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 21:02:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 21:02:26 -<==      Total: 0
2019-03-20 21:02:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 21:02:26 -==> Parameters: 1(Long), 0(String)
2019-03-20 21:02:26 -<==      Total: 1
2019-03-20 21:02:26 -耗时 : 7
2019-03-20 21:02:26 -返回值 : com.bootdo.common.utils.PageUtils@79528f53
2019-03-20 21:02:27 -请求地址 : http://localhost:8081/main
2019-03-20 21:02:27 -HTTP METHOD : GET
2019-03-20 21:02:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:02:27 -参数 : []
2019-03-20 21:02:27 -耗时 : 1
2019-03-20 21:02:27 -返回值 : main
2019-03-20 21:02:30 -请求地址 : http://localhost:8081/charts/countRun
2019-03-20 21:02:30 -HTTP METHOD : GET
2019-03-20 21:02:30 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-20 21:02:30 -参数 : []
2019-03-20 21:02:30 -耗时 : 0
2019-03-20 21:02:30 -返回值 : charts/countRun
2019-03-20 21:03:22 -请求地址 : http://localhost:8081/index
2019-03-20 21:03:22 -HTTP METHOD : GET
2019-03-20 21:03:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 21:03:22 -参数 : [{}]
2019-03-20 21:03:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 21:03:22 -==> Parameters: 1(Long)
2019-03-20 21:03:22 -<==      Total: 46
2019-03-20 21:03:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 21:03:22 -==> Parameters: 138(Long)
2019-03-20 21:03:22 -<==      Total: 1
2019-03-20 21:03:22 -耗时 : 22
2019-03-20 21:03:22 -返回值 : index_v1
2019-03-20 21:03:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 21:03:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 21:03:22.199(Timestamp)
2019-03-20 21:03:22 -请求地址 : http://localhost:8081/main
2019-03-20 21:03:22 -HTTP METHOD : GET
2019-03-20 21:03:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:03:22 -参数 : []
2019-03-20 21:03:22 -耗时 : 3
2019-03-20 21:03:22 -返回值 : main
2019-03-20 21:03:22 -<==    Updates: 1
2019-03-20 21:03:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 21:03:22 -HTTP METHOD : GET
2019-03-20 21:03:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 21:03:22 -参数 : []
2019-03-20 21:03:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 21:03:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 21:03:22 -<==      Total: 0
2019-03-20 21:03:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 21:03:22 -==> Parameters: 1(Long), 0(String)
2019-03-20 21:03:22 -<==      Total: 1
2019-03-20 21:03:22 -耗时 : 10
2019-03-20 21:03:22 -返回值 : com.bootdo.common.utils.PageUtils@20db3ac1
2019-03-20 21:03:22 -请求地址 : http://localhost:8081/main
2019-03-20 21:03:22 -HTTP METHOD : GET
2019-03-20 21:03:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:03:22 -参数 : []
2019-03-20 21:03:22 -耗时 : 0
2019-03-20 21:03:22 -返回值 : main
2019-03-20 21:03:26 -请求地址 : http://localhost:8081/charts/countYY
2019-03-20 21:03:26 -HTTP METHOD : GET
2019-03-20 21:03:26 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-20 21:03:26 -参数 : []
2019-03-20 21:03:26 -耗时 : 1
2019-03-20 21:03:26 -返回值 : charts/countYY
2019-03-20 21:03:28 -请求地址 : http://localhost:8081/charts/countRun
2019-03-20 21:03:28 -HTTP METHOD : GET
2019-03-20 21:03:28 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-20 21:03:28 -参数 : []
2019-03-20 21:03:28 -耗时 : 2
2019-03-20 21:03:28 -返回值 : charts/countRun
2019-03-20 21:05:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 21:05:37 -==> Parameters: 1(Long)
2019-03-20 21:05:37 -<==      Total: 90
2019-03-20 21:05:37 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-20 21:05:37 -HTTP METHOD : GET
2019-03-20 21:05:37 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-20 21:05:37 -参数 : []
2019-03-20 21:05:37 -耗时 : 0
2019-03-20 21:05:37 -返回值 : charts/countOwe
2019-03-20 21:05:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:05:38 -HTTP METHOD : GET
2019-03-20 21:05:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:05:38 -参数 : [userType]
2019-03-20 21:05:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:05:38 -==> Parameters: userType(String)
2019-03-20 21:05:38 -<==      Total: 2
2019-03-20 21:05:38 -耗时 : 6
2019-03-20 21:05:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:05:40 -请求地址 : http://localhost:8081/charts/countMM
2019-03-20 21:05:40 -HTTP METHOD : GET
2019-03-20 21:05:40 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-20 21:05:40 -参数 : []
2019-03-20 21:05:40 -耗时 : 1
2019-03-20 21:05:40 -返回值 : charts/countMM
2019-03-20 21:05:50 -请求地址 : http://localhost:8081/charts/countDD
2019-03-20 21:05:50 -HTTP METHOD : GET
2019-03-20 21:05:50 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-20 21:05:50 -参数 : []
2019-03-20 21:05:50 -耗时 : 1
2019-03-20 21:05:50 -返回值 : charts/countDD
2019-03-20 21:05:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:05:50 -HTTP METHOD : GET
2019-03-20 21:05:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:05:50 -参数 : [userType]
2019-03-20 21:05:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:05:50 -==> Parameters: userType(String)
2019-03-20 21:05:50 -<==      Total: 2
2019-03-20 21:05:50 -耗时 : 5
2019-03-20 21:05:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:15:22 -请求地址 : http://localhost:8081/index
2019-03-20 21:15:22 -HTTP METHOD : GET
2019-03-20 21:15:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 21:15:22 -参数 : [{}]
2019-03-20 21:15:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 21:15:22 -==> Parameters: 1(Long)
2019-03-20 21:15:22 -<==      Total: 46
2019-03-20 21:15:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 21:15:22 -==> Parameters: 138(Long)
2019-03-20 21:15:22 -<==      Total: 1
2019-03-20 21:15:22 -耗时 : 15
2019-03-20 21:15:22 -返回值 : index_v1
2019-03-20 21:15:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 21:15:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 21:15:22.961(Timestamp)
2019-03-20 21:15:23 -<==    Updates: 1
2019-03-20 21:15:23 -请求地址 : http://localhost:8081/main
2019-03-20 21:15:23 -HTTP METHOD : GET
2019-03-20 21:15:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:15:23 -参数 : []
2019-03-20 21:15:23 -耗时 : 1
2019-03-20 21:15:23 -返回值 : main
2019-03-20 21:15:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 21:15:23 -HTTP METHOD : GET
2019-03-20 21:15:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 21:15:23 -参数 : []
2019-03-20 21:15:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 21:15:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 21:15:23 -<==      Total: 0
2019-03-20 21:15:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 21:15:23 -==> Parameters: 1(Long), 0(String)
2019-03-20 21:15:23 -<==      Total: 1
2019-03-20 21:15:23 -耗时 : 6
2019-03-20 21:15:23 -返回值 : com.bootdo.common.utils.PageUtils@1b016c21
2019-03-20 21:15:23 -请求地址 : http://localhost:8081/main
2019-03-20 21:15:23 -HTTP METHOD : GET
2019-03-20 21:15:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:15:23 -参数 : []
2019-03-20 21:15:23 -耗时 : 1
2019-03-20 21:15:23 -返回值 : main
2019-03-20 21:15:34 -请求地址 : http://localhost:8081/charts/countDD
2019-03-20 21:15:34 -HTTP METHOD : GET
2019-03-20 21:15:34 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-20 21:15:34 -参数 : []
2019-03-20 21:15:34 -耗时 : 0
2019-03-20 21:15:34 -返回值 : charts/countDD
2019-03-20 21:15:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:15:34 -HTTP METHOD : GET
2019-03-20 21:15:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:15:34 -参数 : [userType]
2019-03-20 21:15:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:15:34 -==> Parameters: userType(String)
2019-03-20 21:15:34 -<==      Total: 2
2019-03-20 21:15:34 -耗时 : 6
2019-03-20 21:15:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:15:39 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 21:15:39 -==> Parameters: 1(Long)
2019-03-20 21:15:39 -<==      Total: 90
2019-03-20 21:15:39 -请求地址 : http://localhost:8081/charts/countMM
2019-03-20 21:15:39 -HTTP METHOD : GET
2019-03-20 21:15:39 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-20 21:15:39 -参数 : []
2019-03-20 21:15:39 -耗时 : 1
2019-03-20 21:15:39 -返回值 : charts/countMM
2019-03-20 21:15:44 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-20 21:15:44 -HTTP METHOD : GET
2019-03-20 21:15:44 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-20 21:15:44 -参数 : []
2019-03-20 21:15:44 -耗时 : 1
2019-03-20 21:15:44 -返回值 : charts/countOwe
2019-03-20 21:15:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:15:45 -HTTP METHOD : GET
2019-03-20 21:15:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:15:45 -参数 : [userType]
2019-03-20 21:15:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:15:45 -==> Parameters: userType(String)
2019-03-20 21:15:45 -<==      Total: 2
2019-03-20 21:15:45 -耗时 : 4
2019-03-20 21:15:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:15:47 -请求地址 : http://localhost:8081/charts/countRun
2019-03-20 21:15:47 -HTTP METHOD : GET
2019-03-20 21:15:47 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-20 21:15:47 -参数 : []
2019-03-20 21:15:47 -耗时 : 1
2019-03-20 21:15:47 -返回值 : charts/countRun
2019-03-20 21:15:48 -请求地址 : http://localhost:8081/charts/countYY
2019-03-20 21:15:48 -HTTP METHOD : GET
2019-03-20 21:15:48 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-20 21:15:48 -参数 : []
2019-03-20 21:15:48 -耗时 : 1
2019-03-20 21:15:48 -返回值 : charts/countYY
2019-03-20 21:16:06 -请求地址 : http://localhost:8081/index
2019-03-20 21:16:06 -HTTP METHOD : GET
2019-03-20 21:16:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 21:16:06 -参数 : [{}]
2019-03-20 21:16:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 21:16:06 -==> Parameters: 1(Long)
2019-03-20 21:16:06 -<==      Total: 46
2019-03-20 21:16:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 21:16:06 -==> Parameters: 138(Long)
2019-03-20 21:16:06 -<==      Total: 1
2019-03-20 21:16:06 -耗时 : 21
2019-03-20 21:16:06 -返回值 : index_v1
2019-03-20 21:16:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 21:16:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 21:16:06.977(Timestamp)
2019-03-20 21:16:07 -<==    Updates: 1
2019-03-20 21:16:07 -请求地址 : http://localhost:8081/main
2019-03-20 21:16:07 -HTTP METHOD : GET
2019-03-20 21:16:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:16:07 -参数 : []
2019-03-20 21:16:07 -耗时 : 1
2019-03-20 21:16:07 -返回值 : main
2019-03-20 21:16:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 21:16:07 -HTTP METHOD : GET
2019-03-20 21:16:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 21:16:07 -参数 : []
2019-03-20 21:16:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 21:16:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 21:16:07 -<==      Total: 0
2019-03-20 21:16:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 21:16:07 -==> Parameters: 1(Long), 0(String)
2019-03-20 21:16:07 -<==      Total: 1
2019-03-20 21:16:07 -耗时 : 27
2019-03-20 21:16:07 -返回值 : com.bootdo.common.utils.PageUtils@47f2b5cd
2019-03-20 21:16:07 -请求地址 : http://localhost:8081/main
2019-03-20 21:16:07 -HTTP METHOD : GET
2019-03-20 21:16:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:16:07 -参数 : []
2019-03-20 21:16:07 -耗时 : 1
2019-03-20 21:16:07 -返回值 : main
2019-03-20 21:16:10 -请求地址 : http://localhost:8081/charts/countMM
2019-03-20 21:16:10 -HTTP METHOD : GET
2019-03-20 21:16:10 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-20 21:16:10 -参数 : []
2019-03-20 21:16:10 -耗时 : 0
2019-03-20 21:16:10 -返回值 : charts/countMM
2019-03-20 21:16:37 -请求地址 : http://localhost:8081/print/print
2019-03-20 21:16:37 -HTTP METHOD : GET
2019-03-20 21:16:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-20 21:16:37 -参数 : []
2019-03-20 21:16:37 -耗时 : 1
2019-03-20 21:16:37 -返回值 : print/print/print
2019-03-20 21:16:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:16:37 -HTTP METHOD : GET
2019-03-20 21:16:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:16:37 -参数 : [userType]
2019-03-20 21:16:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:16:37 -==> Parameters: userType(String)
2019-03-20 21:16:37 -<==      Total: 2
2019-03-20 21:16:37 -耗时 : 5
2019-03-20 21:16:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:16:37 -请求地址 : http://localhost:8081/print/print/list
2019-03-20 21:16:37 -HTTP METHOD : GET
2019-03-20 21:16:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-20 21:16:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-20 21:16:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-20 21:16:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 21:16:37 -<==      Total: 3
2019-03-20 21:16:37 -==>  Preparing: select count(*) from print 
2019-03-20 21:16:37 -==> Parameters: 
2019-03-20 21:16:37 -<==      Total: 1
2019-03-20 21:16:37 -耗时 : 288
2019-03-20 21:16:37 -返回值 : com.bootdo.common.utils.PageUtils@37ba3cc4
2019-03-20 21:16:40 -请求地址 : http://localhost:8081/print/print/edit/1
2019-03-20 21:16:40 -HTTP METHOD : GET
2019-03-20 21:16:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-03-20 21:16:40 -参数 : [1, {}]
2019-03-20 21:16:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-20 21:16:40 -==> Parameters: 1(Long)
2019-03-20 21:16:40 -<==      Total: 1
2019-03-20 21:16:40 -耗时 : 28
2019-03-20 21:16:40 -返回值 : print/print/edit
2019-03-20 21:16:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:16:40 -HTTP METHOD : GET
2019-03-20 21:16:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:16:40 -参数 : [userType]
2019-03-20 21:16:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:16:40 -==> Parameters: userType(String)
2019-03-20 21:16:40 -<==      Total: 2
2019-03-20 21:16:40 -耗时 : 7
2019-03-20 21:16:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:17:15 -请求地址 : http://localhost:8081/print/print/add
2019-03-20 21:17:15 -HTTP METHOD : GET
2019-03-20 21:17:15 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-20 21:17:15 -参数 : []
2019-03-20 21:17:15 -耗时 : 0
2019-03-20 21:17:15 -返回值 : print/print/add
2019-03-20 21:17:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:17:15 -HTTP METHOD : GET
2019-03-20 21:17:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:17:15 -参数 : [userType]
2019-03-20 21:17:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:17:15 -==> Parameters: userType(String)
2019-03-20 21:17:15 -<==      Total: 2
2019-03-20 21:17:15 -耗时 : 5
2019-03-20 21:17:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:17:25 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-20 21:17:25 -HTTP METHOD : GET
2019-03-20 21:17:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-20 21:17:25 -参数 : [1, {}]
2019-03-20 21:17:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-20 21:17:25 -==> Parameters: 1(Long)
2019-03-20 21:17:25 -<==      Total: 1
2019-03-20 21:17:25 -耗时 : 6
2019-03-20 21:17:25 -返回值 : print/print/printEdit
2019-03-20 21:20:34 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-20 21:20:34 -HTTP METHOD : GET
2019-03-20 21:20:34 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-20 21:20:34 -参数 : []
2019-03-20 21:20:34 -耗时 : 0
2019-03-20 21:20:34 -返回值 : charts/countOwe
2019-03-20 21:20:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:20:34 -HTTP METHOD : GET
2019-03-20 21:20:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:20:34 -参数 : [userType]
2019-03-20 21:20:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:20:34 -==> Parameters: userType(String)
2019-03-20 21:20:34 -<==      Total: 2
2019-03-20 21:20:34 -耗时 : 5
2019-03-20 21:20:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:20:35 -请求地址 : http://localhost:8081/charts/countDD
2019-03-20 21:20:35 -HTTP METHOD : GET
2019-03-20 21:20:35 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-20 21:20:35 -参数 : []
2019-03-20 21:20:35 -耗时 : 1
2019-03-20 21:20:35 -返回值 : charts/countDD
2019-03-20 21:20:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:20:35 -HTTP METHOD : GET
2019-03-20 21:20:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:20:35 -参数 : [userType]
2019-03-20 21:20:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:20:35 -==> Parameters: userType(String)
2019-03-20 21:20:35 -<==      Total: 2
2019-03-20 21:20:35 -耗时 : 4
2019-03-20 21:20:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:20:42 -请求地址 : http://localhost:8081/charts/countYY
2019-03-20 21:20:42 -HTTP METHOD : GET
2019-03-20 21:20:42 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-20 21:20:42 -参数 : []
2019-03-20 21:20:42 -耗时 : 1
2019-03-20 21:20:42 -返回值 : charts/countYY
2019-03-20 21:20:44 -请求地址 : http://localhost:8081/charts/countRun
2019-03-20 21:20:44 -HTTP METHOD : GET
2019-03-20 21:20:44 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-20 21:20:44 -参数 : []
2019-03-20 21:20:44 -耗时 : 1
2019-03-20 21:20:44 -返回值 : charts/countRun
2019-03-20 21:22:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 21 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(21)-CONNECTED(21)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 249], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 41], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1290]
2019-03-20 21:28:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-20 21:28:48 -==> Parameters: 1(Long)
2019-03-20 21:28:48 -<==      Total: 90
2019-03-20 21:28:48 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 21:28:48 -HTTP METHOD : GET
2019-03-20 21:28:48 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 21:28:48 -参数 : []
2019-03-20 21:28:48 -耗时 : 0
2019-03-20 21:28:48 -返回值 : elec/elec/elec
2019-03-20 21:28:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:28:48 -HTTP METHOD : GET
2019-03-20 21:28:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:28:48 -参数 : [userType]
2019-03-20 21:28:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:28:49 -==> Parameters: userType(String)
2019-03-20 21:28:49 -<==      Total: 2
2019-03-20 21:28:49 -耗时 : 4
2019-03-20 21:28:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:28:49 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 21:28:49 -HTTP METHOD : GET
2019-03-20 21:28:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 21:28:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3a772eda]
2019-03-20 21:28:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 21:28:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 21:28:49 -<==      Total: 10
2019-03-20 21:28:49 -==>  Preparing: select count(*) from elec 
2019-03-20 21:28:49 -==> Parameters: 
2019-03-20 21:28:49 -<==      Total: 1
2019-03-20 21:28:49 -耗时 : 12
2019-03-20 21:28:49 -返回值 : com.bootdo.common.utils.PageUtils@3f69f0b9
2019-03-20 21:28:49 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-20 21:28:49 -HTTP METHOD : GET
2019-03-20 21:28:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-20 21:28:49 -参数 : []
2019-03-20 21:28:49 -耗时 : 1
2019-03-20 21:28:49 -返回值 : elec/elecInto/elecInto
2019-03-20 21:28:50 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-20 21:28:50 -HTTP METHOD : GET
2019-03-20 21:28:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-20 21:28:50 -参数 : []
2019-03-20 21:28:50 -耗时 : 1
2019-03-20 21:28:50 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-20 21:28:50 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-20 21:28:50 -HTTP METHOD : GET
2019-03-20 21:28:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-20 21:28:50 -参数 : []
2019-03-20 21:28:50 -耗时 : 0
2019-03-20 21:28:50 -返回值 : elec/elecPrice/elecPrice
2019-03-20 21:28:51 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-20 21:28:51 -HTTP METHOD : GET
2019-03-20 21:28:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-20 21:28:51 -参数 : [{limit=10, offset=0}]
2019-03-20 21:28:51 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-20 21:28:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 21:28:51 -<==      Total: 2
2019-03-20 21:28:51 -==>  Preparing: select count(*) from elec_price 
2019-03-20 21:28:51 -==> Parameters: 
2019-03-20 21:28:51 -<==      Total: 1
2019-03-20 21:28:51 -耗时 : 269
2019-03-20 21:28:51 -返回值 : com.bootdo.common.utils.PageUtils@3ed1c1a1
2019-03-20 21:29:01 -请求地址 : http://localhost:8081/index
2019-03-20 21:29:01 -HTTP METHOD : GET
2019-03-20 21:29:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-20 21:29:01 -参数 : [{}]
2019-03-20 21:29:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-20 21:29:01 -==> Parameters: 1(Long)
2019-03-20 21:29:01 -<==      Total: 46
2019-03-20 21:29:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-20 21:29:01 -==> Parameters: 138(Long)
2019-03-20 21:29:01 -<==      Total: 1
2019-03-20 21:29:01 -耗时 : 32
2019-03-20 21:29:01 -返回值 : index_v1
2019-03-20 21:29:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-20 21:29:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-20 21:29:01.785(Timestamp)
2019-03-20 21:29:01 -请求地址 : http://localhost:8081/main
2019-03-20 21:29:01 -HTTP METHOD : GET
2019-03-20 21:29:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:29:01 -参数 : []
2019-03-20 21:29:01 -耗时 : 0
2019-03-20 21:29:01 -返回值 : main
2019-03-20 21:29:02 -<==    Updates: 1
2019-03-20 21:29:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-20 21:29:02 -HTTP METHOD : GET
2019-03-20 21:29:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-20 21:29:02 -参数 : []
2019-03-20 21:29:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-20 21:29:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-20 21:29:02 -<==      Total: 0
2019-03-20 21:29:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-20 21:29:02 -==> Parameters: 1(Long), 0(String)
2019-03-20 21:29:02 -<==      Total: 1
2019-03-20 21:29:02 -耗时 : 6
2019-03-20 21:29:02 -返回值 : com.bootdo.common.utils.PageUtils@16ce2f84
2019-03-20 21:29:02 -请求地址 : http://localhost:8081/main
2019-03-20 21:29:02 -HTTP METHOD : GET
2019-03-20 21:29:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-20 21:29:02 -参数 : []
2019-03-20 21:29:02 -耗时 : 0
2019-03-20 21:29:02 -返回值 : main
2019-03-20 21:29:07 -请求地址 : http://localhost:8081/elec/elec
2019-03-20 21:29:07 -HTTP METHOD : GET
2019-03-20 21:29:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-20 21:29:07 -参数 : []
2019-03-20 21:29:07 -耗时 : 1
2019-03-20 21:29:07 -返回值 : elec/elec/elec
2019-03-20 21:29:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:29:07 -HTTP METHOD : GET
2019-03-20 21:29:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:29:07 -参数 : [userType]
2019-03-20 21:29:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:29:07 -==> Parameters: userType(String)
2019-03-20 21:29:07 -<==      Total: 2
2019-03-20 21:29:07 -耗时 : 3
2019-03-20 21:29:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:29:07 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-20 21:29:07 -HTTP METHOD : GET
2019-03-20 21:29:07 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-20 21:29:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@7f15437b]
2019-03-20 21:29:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-20 21:29:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 21:29:07 -<==      Total: 10
2019-03-20 21:29:07 -==>  Preparing: select count(*) from elec 
2019-03-20 21:29:07 -==> Parameters: 
2019-03-20 21:29:07 -<==      Total: 1
2019-03-20 21:29:07 -耗时 : 19
2019-03-20 21:29:07 -返回值 : com.bootdo.common.utils.PageUtils@78eea839
2019-03-20 21:29:09 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-20 21:29:09 -HTTP METHOD : GET
2019-03-20 21:29:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-20 21:29:09 -参数 : []
2019-03-20 21:29:09 -耗时 : 0
2019-03-20 21:29:09 -返回值 : elec/elecInto/elecInto
2019-03-20 21:29:10 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-20 21:29:10 -HTTP METHOD : GET
2019-03-20 21:29:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-20 21:29:10 -参数 : []
2019-03-20 21:29:10 -耗时 : 0
2019-03-20 21:29:10 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-20 21:29:10 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-20 21:29:10 -HTTP METHOD : GET
2019-03-20 21:29:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-20 21:29:10 -参数 : []
2019-03-20 21:29:10 -耗时 : 1
2019-03-20 21:29:10 -返回值 : elec/elecPrice/elecPrice
2019-03-20 21:29:11 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-20 21:29:11 -HTTP METHOD : GET
2019-03-20 21:29:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-20 21:29:11 -参数 : [{limit=10, offset=0}]
2019-03-20 21:29:11 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-20 21:29:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 21:29:11 -<==      Total: 2
2019-03-20 21:29:11 -==>  Preparing: select count(*) from elec_price 
2019-03-20 21:29:11 -==> Parameters: 
2019-03-20 21:29:11 -<==      Total: 1
2019-03-20 21:29:11 -耗时 : 10
2019-03-20 21:29:11 -返回值 : com.bootdo.common.utils.PageUtils@2aa5797e
2019-03-20 21:29:16 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-20 21:29:16 -HTTP METHOD : GET
2019-03-20 21:29:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-20 21:29:16 -参数 : []
2019-03-20 21:29:16 -耗时 : 1
2019-03-20 21:29:16 -返回值 : /moneyList/moneyList
2019-03-20 21:29:21 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-20 21:29:21 -HTTP METHOD : GET
2019-03-20 21:29:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-20 21:29:21 -参数 : []
2019-03-20 21:29:21 -耗时 : 0
2019-03-20 21:29:21 -返回值 : /moneyLog/elecLog/elecLog
2019-03-20 21:29:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-20 21:29:21 -HTTP METHOD : GET
2019-03-20 21:29:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-20 21:29:21 -参数 : [userType]
2019-03-20 21:29:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-20 21:29:21 -==> Parameters: userType(String)
2019-03-20 21:29:21 -<==      Total: 2
2019-03-20 21:29:21 -耗时 : 5
2019-03-20 21:29:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-20 21:29:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-20 21:29:21 -HTTP METHOD : GET
2019-03-20 21:29:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-20 21:29:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-20 21:29:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-20 21:29:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-20 21:29:21 -<==      Total: 4
2019-03-20 21:29:21 -==>  Preparing: select count(*) from elec_log 
2019-03-20 21:29:21 -==> Parameters: 
2019-03-20 21:29:21 -<==      Total: 1
2019-03-20 21:29:21 -耗时 : 9
2019-03-20 21:29:21 -返回值 : com.bootdo.common.utils.PageUtils@397d597
2019-03-20 21:51:45 -Validating all active sessions...
2019-03-20 21:51:45 -Finished session validation.  No sessions were stopped.
2019-03-20 21:52:06 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 22 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(22)-CONNECTED(22)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 261], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 43], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1722]
2019-03-20 22:54:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 22 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(22)-CONNECTED(22)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 261], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 43], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 1, completed tasks = 1969]
2019-03-20 22:54:14 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 22 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(22)-CONNECTED(22)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 261], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 43], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 1, completed tasks = 2027]
